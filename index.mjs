var fL = Object.defineProperty;
var tS = (e) => {
  throw TypeError(e);
};
var hL = (e, t, n) => t in e ? fL(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n;
var tn = (e, t, n) => hL(e, typeof t != "symbol" ? t + "" : t, n), rp = (e, t, n) => t.has(e) || tS("Cannot " + n);
var j = (e, t, n) => (rp(e, t, "read from private field"), n ? n.call(e) : t.get(e)), ze = (e, t, n) => t.has(e) ? tS("Cannot add the same private member more than once") : t instanceof WeakSet ? t.add(e) : t.set(e, n), Ce = (e, t, n, r) => (rp(e, t, "write to private field"), r ? r.call(e, n) : t.set(e, n), n), Xe = (e, t, n) => (rp(e, t, "access private method"), n);
var lu = (e, t, n, r) => ({
  set _(o) {
    Ce(e, t, o, n);
  },
  get _() {
    return j(e, t, r);
  }
});
const gE = "https://ai.timelygpt.co.kr", Eo = "https://ai.timelygpt.co.kr/api-back", nS = gE, Qa = class Qa {
  constructor(t) {
    tn(this, "token", "");
    tn(this, "baseURL", nS);
    tn(this, "getToken", () => this.token);
    tn(this, "request", (t, ...n) => async (r) => {
      let o = null;
      const [s, u] = t.split(":"), {
        body: c,
        params: p,
        responseType: f,
        ...b
      } = r ?? {};
      let g = n.length > 0 ? this.interpolateUrl(u, n) : u;
      p && (g = `${g}?${new URLSearchParams(p).toString()}`);
      const T = this.token ? {
        Authorization: `Bearer ${this.token}`
      } : {};
      f && (o = f);
      let y;
      c && !(c instanceof FormData) ? (T["Content-Type"] = "application/json", y = JSON.stringify(c)) : c instanceof FormData && (y = c);
      try {
        const _ = await fetch(`${this.baseURL}${g}`, {
          method: s,
          body: y,
          headers: T,
          ...b
        });
        return o ? await this.handleResponse(
          _,
          o
        ) : await this._checkResponse(_);
      } catch (_) {
        throw _ instanceof Error ? _ : new Error("Failed to fetch posts");
      }
    });
    this.baseURL = (t == null ? void 0 : t.baseURL) || nS, this.token = (t == null ? void 0 : t.token) || this.token;
  }
  interpolateUrl(t, n) {
    let r = 0;
    return t.replace(/{(\w+)}/g, () => {
      if (r >= n.length)
        throw new Error(`Missing parameter at index ${r}`);
      return encodeURIComponent(String(n[r++]));
    });
  }
  static getInstance() {
    return Qa.instance || (Qa.instance = new Qa()), Qa.instance;
  }
  initializeToken(t) {
    this.token = t;
  }
  async _checkResponse(t) {
    const n = t.headers.get("content-type");
    return n != null && n.includes("application/json") ? await t.json() : n != null && n.startsWith("image/") || n != null && n.startsWith("audio/") || n != null && n.startsWith("video/") || n != null && n.includes("application/octet-stream") ? await t.blob() : n != null && n.includes("text/") && !n.includes("event-stream") ? await t.text() : n != null && n.includes("multipart/form-data") ? await t.formData() : t;
  }
  async handleResponse(t, n) {
    return n === "original" ? t : await t[n]();
  }
};
tn(Qa, "instance", null);
let Ab = Qa;
const mE = Ab.getInstance(), Qn = mE.request, yo = mE.getToken, bE = async (e) => {
  const t = e ?? yo(), r = await (await fetch(`${Eo}/users/me`, {
    headers: {
      Authorization: `Bearer ${t}`,
      "Content-Type": "application/json"
    }
  })).json();
  if (!r.success)
    throw new Error("Failed to get user info");
  return r.data;
}, rS = (e) => {
  let t;
  const n = /* @__PURE__ */ new Set(), r = (f, b) => {
    const g = typeof f == "function" ? f(t) : f;
    if (!Object.is(g, t)) {
      const T = t;
      t = b ?? (typeof g != "object" || g === null) ? g : Object.assign({}, t, g), n.forEach((y) => y(t, T));
    }
  }, o = () => t, c = { setState: r, getState: o, getInitialState: () => p, subscribe: (f) => (n.add(f), () => n.delete(f)) }, p = t = e(r, o, c);
  return c;
}, gL = (e) => e ? rS(e) : rS;
var Lu = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function To(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var ap = { exports: {} }, We = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var aS;
function mL() {
  if (aS) return We;
  aS = 1;
  var e = Symbol.for("react.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), r = Symbol.for("react.strict_mode"), o = Symbol.for("react.profiler"), s = Symbol.for("react.provider"), u = Symbol.for("react.context"), c = Symbol.for("react.forward_ref"), p = Symbol.for("react.suspense"), f = Symbol.for("react.memo"), b = Symbol.for("react.lazy"), g = Symbol.iterator;
  function T(H) {
    return H === null || typeof H != "object" ? null : (H = g && H[g] || H["@@iterator"], typeof H == "function" ? H : null);
  }
  var y = { isMounted: function() {
    return !1;
  }, enqueueForceUpdate: function() {
  }, enqueueReplaceState: function() {
  }, enqueueSetState: function() {
  } }, _ = Object.assign, A = {};
  function R(H, W, x) {
    this.props = H, this.context = W, this.refs = A, this.updater = x || y;
  }
  R.prototype.isReactComponent = {}, R.prototype.setState = function(H, W) {
    if (typeof H != "object" && typeof H != "function" && H != null) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
    this.updater.enqueueSetState(this, H, W, "setState");
  }, R.prototype.forceUpdate = function(H) {
    this.updater.enqueueForceUpdate(this, H, "forceUpdate");
  };
  function C() {
  }
  C.prototype = R.prototype;
  function w(H, W, x) {
    this.props = H, this.context = W, this.refs = A, this.updater = x || y;
  }
  var k = w.prototype = new C();
  k.constructor = w, _(k, R.prototype), k.isPureReactComponent = !0;
  var O = Array.isArray, F = Object.prototype.hasOwnProperty, v = { current: null }, B = { key: !0, ref: !0, __self: !0, __source: !0 };
  function Y(H, W, x) {
    var Ee, _e = {}, Te = null, Oe = null;
    if (W != null) for (Ee in W.ref !== void 0 && (Oe = W.ref), W.key !== void 0 && (Te = "" + W.key), W) F.call(W, Ee) && !B.hasOwnProperty(Ee) && (_e[Ee] = W[Ee]);
    var Me = arguments.length - 2;
    if (Me === 1) _e.children = x;
    else if (1 < Me) {
      for (var He = Array(Me), Ze = 0; Ze < Me; Ze++) He[Ze] = arguments[Ze + 2];
      _e.children = He;
    }
    if (H && H.defaultProps) for (Ee in Me = H.defaultProps, Me) _e[Ee] === void 0 && (_e[Ee] = Me[Ee]);
    return { $$typeof: e, type: H, key: Te, ref: Oe, props: _e, _owner: v.current };
  }
  function $(H, W) {
    return { $$typeof: e, type: H.type, key: W, ref: H.ref, props: H.props, _owner: H._owner };
  }
  function M(H) {
    return typeof H == "object" && H !== null && H.$$typeof === e;
  }
  function V(H) {
    var W = { "=": "=0", ":": "=2" };
    return "$" + H.replace(/[=:]/g, function(x) {
      return W[x];
    });
  }
  var ne = /\/+/g;
  function se(H, W) {
    return typeof H == "object" && H !== null && H.key != null ? V("" + H.key) : W.toString(36);
  }
  function de(H, W, x, Ee, _e) {
    var Te = typeof H;
    (Te === "undefined" || Te === "boolean") && (H = null);
    var Oe = !1;
    if (H === null) Oe = !0;
    else switch (Te) {
      case "string":
      case "number":
        Oe = !0;
        break;
      case "object":
        switch (H.$$typeof) {
          case e:
          case t:
            Oe = !0;
        }
    }
    if (Oe) return Oe = H, _e = _e(Oe), H = Ee === "" ? "." + se(Oe, 0) : Ee, O(_e) ? (x = "", H != null && (x = H.replace(ne, "$&/") + "/"), de(_e, W, x, "", function(Ze) {
      return Ze;
    })) : _e != null && (M(_e) && (_e = $(_e, x + (!_e.key || Oe && Oe.key === _e.key ? "" : ("" + _e.key).replace(ne, "$&/") + "/") + H)), W.push(_e)), 1;
    if (Oe = 0, Ee = Ee === "" ? "." : Ee + ":", O(H)) for (var Me = 0; Me < H.length; Me++) {
      Te = H[Me];
      var He = Ee + se(Te, Me);
      Oe += de(Te, W, x, He, _e);
    }
    else if (He = T(H), typeof He == "function") for (H = He.call(H), Me = 0; !(Te = H.next()).done; ) Te = Te.value, He = Ee + se(Te, Me++), Oe += de(Te, W, x, He, _e);
    else if (Te === "object") throw W = String(H), Error("Objects are not valid as a React child (found: " + (W === "[object Object]" ? "object with keys {" + Object.keys(H).join(", ") + "}" : W) + "). If you meant to render a collection of children, use an array instead.");
    return Oe;
  }
  function be(H, W, x) {
    if (H == null) return H;
    var Ee = [], _e = 0;
    return de(H, Ee, "", "", function(Te) {
      return W.call(x, Te, _e++);
    }), Ee;
  }
  function Ne(H) {
    if (H._status === -1) {
      var W = H._result;
      W = W(), W.then(function(x) {
        (H._status === 0 || H._status === -1) && (H._status = 1, H._result = x);
      }, function(x) {
        (H._status === 0 || H._status === -1) && (H._status = 2, H._result = x);
      }), H._status === -1 && (H._status = 0, H._result = W);
    }
    if (H._status === 1) return H._result.default;
    throw H._result;
  }
  var ve = { current: null }, J = { transition: null }, oe = { ReactCurrentDispatcher: ve, ReactCurrentBatchConfig: J, ReactCurrentOwner: v };
  function I() {
    throw Error("act(...) is not supported in production builds of React.");
  }
  return We.Children = { map: be, forEach: function(H, W, x) {
    be(H, function() {
      W.apply(this, arguments);
    }, x);
  }, count: function(H) {
    var W = 0;
    return be(H, function() {
      W++;
    }), W;
  }, toArray: function(H) {
    return be(H, function(W) {
      return W;
    }) || [];
  }, only: function(H) {
    if (!M(H)) throw Error("React.Children.only expected to receive a single React element child.");
    return H;
  } }, We.Component = R, We.Fragment = n, We.Profiler = o, We.PureComponent = w, We.StrictMode = r, We.Suspense = p, We.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = oe, We.act = I, We.cloneElement = function(H, W, x) {
    if (H == null) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + H + ".");
    var Ee = _({}, H.props), _e = H.key, Te = H.ref, Oe = H._owner;
    if (W != null) {
      if (W.ref !== void 0 && (Te = W.ref, Oe = v.current), W.key !== void 0 && (_e = "" + W.key), H.type && H.type.defaultProps) var Me = H.type.defaultProps;
      for (He in W) F.call(W, He) && !B.hasOwnProperty(He) && (Ee[He] = W[He] === void 0 && Me !== void 0 ? Me[He] : W[He]);
    }
    var He = arguments.length - 2;
    if (He === 1) Ee.children = x;
    else if (1 < He) {
      Me = Array(He);
      for (var Ze = 0; Ze < He; Ze++) Me[Ze] = arguments[Ze + 2];
      Ee.children = Me;
    }
    return { $$typeof: e, type: H.type, key: _e, ref: Te, props: Ee, _owner: Oe };
  }, We.createContext = function(H) {
    return H = { $$typeof: u, _currentValue: H, _currentValue2: H, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null }, H.Provider = { $$typeof: s, _context: H }, H.Consumer = H;
  }, We.createElement = Y, We.createFactory = function(H) {
    var W = Y.bind(null, H);
    return W.type = H, W;
  }, We.createRef = function() {
    return { current: null };
  }, We.forwardRef = function(H) {
    return { $$typeof: c, render: H };
  }, We.isValidElement = M, We.lazy = function(H) {
    return { $$typeof: b, _payload: { _status: -1, _result: H }, _init: Ne };
  }, We.memo = function(H, W) {
    return { $$typeof: f, type: H, compare: W === void 0 ? null : W };
  }, We.startTransition = function(H) {
    var W = J.transition;
    J.transition = {};
    try {
      H();
    } finally {
      J.transition = W;
    }
  }, We.unstable_act = I, We.useCallback = function(H, W) {
    return ve.current.useCallback(H, W);
  }, We.useContext = function(H) {
    return ve.current.useContext(H);
  }, We.useDebugValue = function() {
  }, We.useDeferredValue = function(H) {
    return ve.current.useDeferredValue(H);
  }, We.useEffect = function(H, W) {
    return ve.current.useEffect(H, W);
  }, We.useId = function() {
    return ve.current.useId();
  }, We.useImperativeHandle = function(H, W, x) {
    return ve.current.useImperativeHandle(H, W, x);
  }, We.useInsertionEffect = function(H, W) {
    return ve.current.useInsertionEffect(H, W);
  }, We.useLayoutEffect = function(H, W) {
    return ve.current.useLayoutEffect(H, W);
  }, We.useMemo = function(H, W) {
    return ve.current.useMemo(H, W);
  }, We.useReducer = function(H, W, x) {
    return ve.current.useReducer(H, W, x);
  }, We.useRef = function(H) {
    return ve.current.useRef(H);
  }, We.useState = function(H) {
    return ve.current.useState(H);
  }, We.useSyncExternalStore = function(H, W, x) {
    return ve.current.useSyncExternalStore(H, W, x);
  }, We.useTransition = function() {
    return ve.current.useTransition();
  }, We.version = "18.3.1", We;
}
var iS;
function EE() {
  return iS || (iS = 1, ap.exports = mL()), ap.exports;
}
var G = EE();
const ot = /* @__PURE__ */ To(G), bL = (e) => e;
function ZI(e, t = bL) {
  const n = ot.useSyncExternalStore(
    e.subscribe,
    () => t(e.getState()),
    () => t(e.getInitialState())
  );
  return ot.useDebugValue(n), n;
}
const oS = (e) => {
  const t = gL(e), n = (r) => ZI(t, r);
  return Object.assign(n, t), n;
}, yE = (e) => e ? oS(e) : oS, JI = yE()((e) => ({
  userValues: {
    token: "",
    userId: "",
    spaceId: "",
    providerId: "",
    name: ""
  },
  setUserValues: (t) => e((n) => ({ userValues: { ...n.userValues, ...t } }))
})), nn = [];
for (let e = 0; e < 256; ++e)
  nn.push((e + 256).toString(16).slice(1));
function EL(e, t = 0) {
  return (nn[e[t + 0]] + nn[e[t + 1]] + nn[e[t + 2]] + nn[e[t + 3]] + "-" + nn[e[t + 4]] + nn[e[t + 5]] + "-" + nn[e[t + 6]] + nn[e[t + 7]] + "-" + nn[e[t + 8]] + nn[e[t + 9]] + "-" + nn[e[t + 10]] + nn[e[t + 11]] + nn[e[t + 12]] + nn[e[t + 13]] + nn[e[t + 14]] + nn[e[t + 15]]).toLowerCase();
}
let ip;
const yL = new Uint8Array(16);
function TL() {
  if (!ip) {
    if (typeof crypto > "u" || !crypto.getRandomValues)
      throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
    ip = crypto.getRandomValues.bind(crypto);
  }
  return ip(yL);
}
const SL = typeof crypto < "u" && crypto.randomUUID && crypto.randomUUID.bind(crypto), sS = { randomUUID: SL };
function eR(e, t, n) {
  if (sS.randomUUID && !e)
    return sS.randomUUID();
  e = e || {};
  const r = e.random || (e.rng || TL)();
  return r[6] = r[6] & 15 | 64, r[8] = r[8] & 63 | 128, EL(r);
}
const op = Symbol.for(`__PRIVATE_${eR()}__EVENT_BUS__`), _L = !0, Vr = class Vr {
  constructor(t = !1) {
    tn(this, "subscriptions", []);
    // 이벤트 이름에 따른 콜백들을 (id, 콜백) 쌍으로 저장
    tn(this, "events", /* @__PURE__ */ new Map());
    tn(this, "debugMode");
    this.debugMode = _L, this.debugMode && console.log("[EventBus] Initialized");
  }
  static getInstance(t = !1) {
    return Vr.instance || (window[op] ? Vr.instance = window[op] : (Vr.instance = new Vr(t), Object.defineProperty(window, op, {
      value: Vr.instance,
      enumerable: !1,
      configurable: !1,
      writable: !1
    }))), Vr.instance;
  }
  subscribe(t, n, r) {
    var u;
    const o = r || eR();
    this.events.has(t) || this.events.set(t, /* @__PURE__ */ new Map()), (u = this.events.get(t)) == null || u.set(
      o,
      n
    ), this.debugMode && console.log(`[EventBus] Subscribed to: ${t} with id: ${o}`);
    const s = {
      subscriptionId: o,
      unsubscribe: () => {
        this.unsubscribe(t, o);
      }
    };
    return this.subscriptions.push(s), s;
  }
  publish(t, n) {
    var r;
    this.debugMode && console.log(`[EventBus] Publishing: ${t}`, n), (r = this.events.get(t)) == null || r.forEach((o) => {
      try {
        o(n);
      } catch (s) {
        console.error(`[EventBus] Error in ${t} handler:`, s);
      }
    });
  }
  unsubscribe(t, n) {
    var r, o;
    (r = this.events.get(t)) == null || r.delete(n), ((o = this.events.get(t)) == null ? void 0 : o.size) === 0 && this.events.delete(t), this.debugMode && console.log(
      `[EventBus] Unsubscribed from: ${t} with id: ${n}`
    );
  }
  delete(t) {
    this.events.delete(t);
  }
  clear() {
    this.events.clear();
  }
  unsubscribeAll() {
    this.subscriptions.forEach((t) => t.unsubscribe()), this.subscriptions = [];
  }
  getSubscriptions() {
    return this.subscriptions;
  }
  unsubscribeById(t) {
    this.subscriptions = this.subscriptions.filter((n) => n.subscriptionId === t ? (n.unsubscribe(), !1) : !0);
  }
};
tn(Vr, "instance");
let Os = Vr;
const vL = async (e) => {
  const { apiKey: t, ...n } = e, o = await (await fetch(`${Eo}/user/auth/login`, {
    method: "POST",
    body: JSON.stringify(n),
    headers: {
      "x-api-key": t,
      "Content-Type": "application/json"
    }
  })).json();
  if (!o.success)
    throw new Error("Failed to login");
  return o.data;
}, kb = yE()((e) => ({
  config: {
    name: "TimelyChat",
    icons: {
      avatar: "https://timelyaipython.blob.core.windows.net/configs/avatar.svg",
      chatbot: "https://timelyaipython.blob.core.windows.net/configs/chatbot.svg"
    },
    token: ""
  },
  setConfig: (t) => e({ config: t })
})), Ku = (e) => ZI(kb, e);
class tR {
  constructor(t, n, r) {
    tn(this, "element");
    tn(this, "eventBus");
    tn(this, "targetElement");
    tn(this, "optionalConfigs");
    tn(this, "init", async (t) => {
      const n = await bE(t.token);
      JI.setState({
        userValues: {
          token: t.token,
          userId: n.id,
          spaceId: n.spaceId,
          providerId: n.providerId,
          name: n.name
        }
      });
      const r = kb.getState().config;
      kb.setState({
        config: {
          name: t.name ?? r.name,
          icons: t.icons ? { ...r.icons, ...t.icons } : r.icons,
          token: t.token,
          chatbot: t.chatbot ?? r.chatbot
        }
      }), this.elementSetting();
    });
    var o;
    mE.initializeToken(n.token), this.targetElement = t, this.optionalConfigs = r, this.eventBus = Os.getInstance(((o = this.optionalConfigs) == null ? void 0 : o.debug) || !1), this.element = document.createElement("gu-app"), this.init(n);
  }
  elementSetting() {
    var t;
    (t = this.optionalConfigs) != null && t.style ? Object.assign(this.element.style, this.optionalConfigs.style) : this.targetElement.nodeName === "BODY" ? (this.element.style.position = "fixed", this.element.style.top = "0px", this.element.style.left = "0px", this.element.style.zIndex = "9999") : (this.element.style.position = "inherit", this.element.style.width = "100%", this.element.style.height = "100%"), this.targetElement.appendChild(this.element);
  }
  static async getToken(t) {
    return await vL(t);
  }
  toggleMount() {
    this.element.isMounted() ? this.element.unmount() : this.element.mount();
  }
  open() {
    this.element.mount();
  }
  close() {
    this.element.unmount();
  }
  toggleVisibility() {
    this.element.toggleVisibility();
  }
  show() {
    this.element.show();
  }
  hide() {
    this.element.hide();
  }
  send(t, ...n) {
    this.eventBus.publish(
      `user.${t}`,
      n[0]
    );
  }
  on(t, ...n) {
    this.eventBus.subscribe(
      `client.${t}`,
      n[0]
    );
  }
}
var sp = { exports: {} }, fs = {};
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var lS;
function AL() {
  if (lS) return fs;
  lS = 1;
  var e = EE(), t = Symbol.for("react.element"), n = Symbol.for("react.fragment"), r = Object.prototype.hasOwnProperty, o = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, s = { key: !0, ref: !0, __self: !0, __source: !0 };
  function u(c, p, f) {
    var b, g = {}, T = null, y = null;
    f !== void 0 && (T = "" + f), p.key !== void 0 && (T = "" + p.key), p.ref !== void 0 && (y = p.ref);
    for (b in p) r.call(p, b) && !s.hasOwnProperty(b) && (g[b] = p[b]);
    if (c && c.defaultProps) for (b in p = c.defaultProps, p) g[b] === void 0 && (g[b] = p[b]);
    return { $$typeof: t, type: c, key: T, ref: y, props: g, _owner: o.current };
  }
  return fs.Fragment = n, fs.jsx = u, fs.jsxs = u, fs;
}
var uS;
function kL() {
  return uS || (uS = 1, sp.exports = AL()), sp.exports;
}
var L = kL(), Vs = class {
  constructor() {
    this.listeners = /* @__PURE__ */ new Set(), this.subscribe = this.subscribe.bind(this);
  }
  subscribe(e) {
    return this.listeners.add(e), this.onSubscribe(), () => {
      this.listeners.delete(e), this.onUnsubscribe();
    };
  }
  hasListeners() {
    return this.listeners.size > 0;
  }
  onSubscribe() {
  }
  onUnsubscribe() {
  }
}, ui = typeof window > "u" || "Deno" in globalThis;
function Xn() {
}
function CL(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function Cb(e) {
  return typeof e == "number" && e >= 0 && e !== 1 / 0;
}
function nR(e, t) {
  return Math.max(e + (t || 0) - Date.now(), 0);
}
function Wi(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function hr(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function cS(e, t) {
  const {
    type: n = "all",
    exact: r,
    fetchStatus: o,
    predicate: s,
    queryKey: u,
    stale: c
  } = e;
  if (u) {
    if (r) {
      if (t.queryHash !== TE(u, t.options))
        return !1;
    } else if (!Ds(t.queryKey, u))
      return !1;
  }
  if (n !== "all") {
    const p = t.isActive();
    if (n === "active" && !p || n === "inactive" && p)
      return !1;
  }
  return !(typeof c == "boolean" && t.isStale() !== c || o && o !== t.state.fetchStatus || s && !s(t));
}
function dS(e, t) {
  const { exact: n, status: r, predicate: o, mutationKey: s } = e;
  if (s) {
    if (!t.options.mutationKey)
      return !1;
    if (n) {
      if (Ls(t.options.mutationKey) !== Ls(s))
        return !1;
    } else if (!Ds(t.options.mutationKey, s))
      return !1;
  }
  return !(r && t.state.status !== r || o && !o(t));
}
function TE(e, t) {
  return ((t == null ? void 0 : t.queryKeyHashFn) || Ls)(e);
}
function Ls(e) {
  return JSON.stringify(
    e,
    (t, n) => Ib(n) ? Object.keys(n).sort().reduce((r, o) => (r[o] = n[o], r), {}) : n
  );
}
function Ds(e, t) {
  return e === t ? !0 : typeof e != typeof t ? !1 : e && t && typeof e == "object" && typeof t == "object" ? !Object.keys(t).some((n) => !Ds(e[n], t[n])) : !1;
}
function rR(e, t) {
  if (e === t)
    return e;
  const n = pS(e) && pS(t);
  if (n || Ib(e) && Ib(t)) {
    const r = n ? e : Object.keys(e), o = r.length, s = n ? t : Object.keys(t), u = s.length, c = n ? [] : {};
    let p = 0;
    for (let f = 0; f < u; f++) {
      const b = n ? f : s[f];
      (!n && r.includes(b) || n) && e[b] === void 0 && t[b] === void 0 ? (c[b] = void 0, p++) : (c[b] = rR(e[b], t[b]), c[b] === e[b] && e[b] !== void 0 && p++);
    }
    return o === u && p === o ? e : c;
  }
  return t;
}
function wb(e, t) {
  if (!t || Object.keys(e).length !== Object.keys(t).length)
    return !1;
  for (const n in e)
    if (e[n] !== t[n])
      return !1;
  return !0;
}
function pS(e) {
  return Array.isArray(e) && e.length === Object.keys(e).length;
}
function Ib(e) {
  if (!fS(e))
    return !1;
  const t = e.constructor;
  if (t === void 0)
    return !0;
  const n = t.prototype;
  return !(!fS(n) || !n.hasOwnProperty("isPrototypeOf") || Object.getPrototypeOf(e) !== Object.prototype);
}
function fS(e) {
  return Object.prototype.toString.call(e) === "[object Object]";
}
function wL(e) {
  return new Promise((t) => {
    setTimeout(t, e);
  });
}
function Rb(e, t, n) {
  return typeof n.structuralSharing == "function" ? n.structuralSharing(e, t) : n.structuralSharing !== !1 ? rR(e, t) : t;
}
function IL(e, t, n = 0) {
  const r = [...e, t];
  return n && r.length > n ? r.slice(1) : r;
}
function RL(e, t, n = 0) {
  const r = [t, ...e];
  return n && r.length > n ? r.slice(0, -1) : r;
}
var SE = Symbol();
function aR(e, t) {
  return !e.queryFn && (t != null && t.initialPromise) ? () => t.initialPromise : !e.queryFn || e.queryFn === SE ? () => Promise.reject(new Error(`Missing queryFn: '${e.queryHash}'`)) : e.queryFn;
}
var ei, va, Xi, GI, xL = (GI = class extends Vs {
  constructor() {
    super();
    ze(this, ei);
    ze(this, va);
    ze(this, Xi);
    Ce(this, Xi, (t) => {
      if (!ui && window.addEventListener) {
        const n = () => t();
        return window.addEventListener("visibilitychange", n, !1), () => {
          window.removeEventListener("visibilitychange", n);
        };
      }
    });
  }
  onSubscribe() {
    j(this, va) || this.setEventListener(j(this, Xi));
  }
  onUnsubscribe() {
    var t;
    this.hasListeners() || ((t = j(this, va)) == null || t.call(this), Ce(this, va, void 0));
  }
  setEventListener(t) {
    var n;
    Ce(this, Xi, t), (n = j(this, va)) == null || n.call(this), Ce(this, va, t((r) => {
      typeof r == "boolean" ? this.setFocused(r) : this.onFocus();
    }));
  }
  setFocused(t) {
    j(this, ei) !== t && (Ce(this, ei, t), this.onFocus());
  }
  onFocus() {
    const t = this.isFocused();
    this.listeners.forEach((n) => {
      n(t);
    });
  }
  isFocused() {
    var t;
    return typeof j(this, ei) == "boolean" ? j(this, ei) : ((t = globalThis.document) == null ? void 0 : t.visibilityState) !== "hidden";
  }
}, ei = new WeakMap(), va = new WeakMap(), Xi = new WeakMap(), GI), _E = new xL(), Qi, Aa, Zi, qI, NL = (qI = class extends Vs {
  constructor() {
    super();
    ze(this, Qi, !0);
    ze(this, Aa);
    ze(this, Zi);
    Ce(this, Zi, (t) => {
      if (!ui && window.addEventListener) {
        const n = () => t(!0), r = () => t(!1);
        return window.addEventListener("online", n, !1), window.addEventListener("offline", r, !1), () => {
          window.removeEventListener("online", n), window.removeEventListener("offline", r);
        };
      }
    });
  }
  onSubscribe() {
    j(this, Aa) || this.setEventListener(j(this, Zi));
  }
  onUnsubscribe() {
    var t;
    this.hasListeners() || ((t = j(this, Aa)) == null || t.call(this), Ce(this, Aa, void 0));
  }
  setEventListener(t) {
    var n;
    Ce(this, Zi, t), (n = j(this, Aa)) == null || n.call(this), Ce(this, Aa, t(this.setOnline.bind(this)));
  }
  setOnline(t) {
    j(this, Qi) !== t && (Ce(this, Qi, t), this.listeners.forEach((r) => {
      r(t);
    }));
  }
  isOnline() {
    return j(this, Qi);
  }
}, Qi = new WeakMap(), Aa = new WeakMap(), Zi = new WeakMap(), qI), Du = new NL();
function xb() {
  let e, t;
  const n = new Promise((o, s) => {
    e = o, t = s;
  });
  n.status = "pending", n.catch(() => {
  });
  function r(o) {
    Object.assign(n, o), delete n.resolve, delete n.reject;
  }
  return n.resolve = (o) => {
    r({
      status: "fulfilled",
      value: o
    }), e(o);
  }, n.reject = (o) => {
    r({
      status: "rejected",
      reason: o
    }), t(o);
  }, n;
}
function OL(e) {
  return Math.min(1e3 * 2 ** e, 3e4);
}
function iR(e) {
  return (e ?? "online") === "online" ? Du.isOnline() : !0;
}
var oR = class extends Error {
  constructor(e) {
    super("CancelledError"), this.revert = e == null ? void 0 : e.revert, this.silent = e == null ? void 0 : e.silent;
  }
};
function lp(e) {
  return e instanceof oR;
}
function sR(e) {
  let t = !1, n = 0, r = !1, o;
  const s = xb(), u = (A) => {
    var R;
    r || (T(new oR(A)), (R = e.abort) == null || R.call(e));
  }, c = () => {
    t = !0;
  }, p = () => {
    t = !1;
  }, f = () => _E.isFocused() && (e.networkMode === "always" || Du.isOnline()) && e.canRun(), b = () => iR(e.networkMode) && e.canRun(), g = (A) => {
    var R;
    r || (r = !0, (R = e.onSuccess) == null || R.call(e, A), o == null || o(), s.resolve(A));
  }, T = (A) => {
    var R;
    r || (r = !0, (R = e.onError) == null || R.call(e, A), o == null || o(), s.reject(A));
  }, y = () => new Promise((A) => {
    var R;
    o = (C) => {
      (r || f()) && A(C);
    }, (R = e.onPause) == null || R.call(e);
  }).then(() => {
    var A;
    o = void 0, r || (A = e.onContinue) == null || A.call(e);
  }), _ = () => {
    if (r)
      return;
    let A;
    const R = n === 0 ? e.initialPromise : void 0;
    try {
      A = R ?? e.fn();
    } catch (C) {
      A = Promise.reject(C);
    }
    Promise.resolve(A).then(g).catch((C) => {
      var v;
      if (r)
        return;
      const w = e.retry ?? (ui ? 0 : 3), k = e.retryDelay ?? OL, O = typeof k == "function" ? k(n, C) : k, F = w === !0 || typeof w == "number" && n < w || typeof w == "function" && w(n, C);
      if (t || !F) {
        T(C);
        return;
      }
      n++, (v = e.onFail) == null || v.call(e, n, C), wL(O).then(() => f() ? void 0 : y()).then(() => {
        t ? T(C) : _();
      });
    });
  };
  return {
    promise: s,
    cancel: u,
    continue: () => (o == null || o(), s),
    cancelRetry: c,
    continueRetry: p,
    canStart: b,
    start: () => (b() ? _() : y().then(_), s)
  };
}
function LL() {
  let e = [], t = 0, n = (c) => {
    c();
  }, r = (c) => {
    c();
  }, o = (c) => setTimeout(c, 0);
  const s = (c) => {
    t ? e.push(c) : o(() => {
      n(c);
    });
  }, u = () => {
    const c = e;
    e = [], c.length && o(() => {
      r(() => {
        c.forEach((p) => {
          n(p);
        });
      });
    });
  };
  return {
    batch: (c) => {
      let p;
      t++;
      try {
        p = c();
      } finally {
        t--, t || u();
      }
      return p;
    },
    /**
     * All calls to the wrapped function will be batched.
     */
    batchCalls: (c) => (...p) => {
      s(() => {
        c(...p);
      });
    },
    schedule: s,
    /**
     * Use this method to set a custom notify function.
     * This can be used to for example wrap notifications with `React.act` while running tests.
     */
    setNotifyFunction: (c) => {
      n = c;
    },
    /**
     * Use this method to set a custom function to batch notifications together into a single tick.
     * By default React Query will use the batch function provided by ReactDOM or React Native.
     */
    setBatchNotifyFunction: (c) => {
      r = c;
    },
    setScheduler: (c) => {
      o = c;
    }
  };
}
var rn = LL(), ti, jI, lR = (jI = class {
  constructor() {
    ze(this, ti);
  }
  destroy() {
    this.clearGcTimeout();
  }
  scheduleGc() {
    this.clearGcTimeout(), Cb(this.gcTime) && Ce(this, ti, setTimeout(() => {
      this.optionalRemove();
    }, this.gcTime));
  }
  updateGcTime(e) {
    this.gcTime = Math.max(
      this.gcTime || 0,
      e ?? (ui ? 1 / 0 : 5 * 60 * 1e3)
    );
  }
  clearGcTimeout() {
    j(this, ti) && (clearTimeout(j(this, ti)), Ce(this, ti, void 0));
  }
}, ti = new WeakMap(), jI), Ji, eo, Kn, un, zs, ni, pr, qr, VI, DL = (VI = class extends lR {
  constructor(t) {
    super();
    ze(this, pr);
    ze(this, Ji);
    ze(this, eo);
    ze(this, Kn);
    ze(this, un);
    ze(this, zs);
    ze(this, ni);
    Ce(this, ni, !1), Ce(this, zs, t.defaultOptions), this.setOptions(t.options), this.observers = [], Ce(this, Kn, t.cache), this.queryKey = t.queryKey, this.queryHash = t.queryHash, Ce(this, Ji, ML(this.options)), this.state = t.state ?? j(this, Ji), this.scheduleGc();
  }
  get meta() {
    return this.options.meta;
  }
  get promise() {
    var t;
    return (t = j(this, un)) == null ? void 0 : t.promise;
  }
  setOptions(t) {
    this.options = { ...j(this, zs), ...t }, this.updateGcTime(this.options.gcTime);
  }
  optionalRemove() {
    !this.observers.length && this.state.fetchStatus === "idle" && j(this, Kn).remove(this);
  }
  setData(t, n) {
    const r = Rb(this.state.data, t, this.options);
    return Xe(this, pr, qr).call(this, {
      data: r,
      type: "success",
      dataUpdatedAt: n == null ? void 0 : n.updatedAt,
      manual: n == null ? void 0 : n.manual
    }), r;
  }
  setState(t, n) {
    Xe(this, pr, qr).call(this, { type: "setState", state: t, setStateOptions: n });
  }
  cancel(t) {
    var r, o;
    const n = (r = j(this, un)) == null ? void 0 : r.promise;
    return (o = j(this, un)) == null || o.cancel(t), n ? n.then(Xn).catch(Xn) : Promise.resolve();
  }
  destroy() {
    super.destroy(), this.cancel({ silent: !0 });
  }
  reset() {
    this.destroy(), this.setState(j(this, Ji));
  }
  isActive() {
    return this.observers.some(
      (t) => hr(t.options.enabled, this) !== !1
    );
  }
  isDisabled() {
    return this.getObserversCount() > 0 ? !this.isActive() : this.options.queryFn === SE || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;
  }
  isStale() {
    return this.state.isInvalidated ? !0 : this.getObserversCount() > 0 ? this.observers.some(
      (t) => t.getCurrentResult().isStale
    ) : this.state.data === void 0;
  }
  isStaleByTime(t = 0) {
    return this.state.isInvalidated || this.state.data === void 0 || !nR(this.state.dataUpdatedAt, t);
  }
  onFocus() {
    var n;
    const t = this.observers.find((r) => r.shouldFetchOnWindowFocus());
    t == null || t.refetch({ cancelRefetch: !1 }), (n = j(this, un)) == null || n.continue();
  }
  onOnline() {
    var n;
    const t = this.observers.find((r) => r.shouldFetchOnReconnect());
    t == null || t.refetch({ cancelRefetch: !1 }), (n = j(this, un)) == null || n.continue();
  }
  addObserver(t) {
    this.observers.includes(t) || (this.observers.push(t), this.clearGcTimeout(), j(this, Kn).notify({ type: "observerAdded", query: this, observer: t }));
  }
  removeObserver(t) {
    this.observers.includes(t) && (this.observers = this.observers.filter((n) => n !== t), this.observers.length || (j(this, un) && (j(this, ni) ? j(this, un).cancel({ revert: !0 }) : j(this, un).cancelRetry()), this.scheduleGc()), j(this, Kn).notify({ type: "observerRemoved", query: this, observer: t }));
  }
  getObserversCount() {
    return this.observers.length;
  }
  invalidate() {
    this.state.isInvalidated || Xe(this, pr, qr).call(this, { type: "invalidate" });
  }
  fetch(t, n) {
    var p, f, b;
    if (this.state.fetchStatus !== "idle") {
      if (this.state.data !== void 0 && (n != null && n.cancelRefetch))
        this.cancel({ silent: !0 });
      else if (j(this, un))
        return j(this, un).continueRetry(), j(this, un).promise;
    }
    if (t && this.setOptions(t), !this.options.queryFn) {
      const g = this.observers.find((T) => T.options.queryFn);
      g && this.setOptions(g.options);
    }
    const r = new AbortController(), o = (g) => {
      Object.defineProperty(g, "signal", {
        enumerable: !0,
        get: () => (Ce(this, ni, !0), r.signal)
      });
    }, s = () => {
      const g = aR(this.options, n), T = {
        queryKey: this.queryKey,
        meta: this.meta
      };
      return o(T), Ce(this, ni, !1), this.options.persister ? this.options.persister(
        g,
        T,
        this
      ) : g(T);
    }, u = {
      fetchOptions: n,
      options: this.options,
      queryKey: this.queryKey,
      state: this.state,
      fetchFn: s
    };
    o(u), (p = this.options.behavior) == null || p.onFetch(
      u,
      this
    ), Ce(this, eo, this.state), (this.state.fetchStatus === "idle" || this.state.fetchMeta !== ((f = u.fetchOptions) == null ? void 0 : f.meta)) && Xe(this, pr, qr).call(this, { type: "fetch", meta: (b = u.fetchOptions) == null ? void 0 : b.meta });
    const c = (g) => {
      var T, y, _, A;
      lp(g) && g.silent || Xe(this, pr, qr).call(this, {
        type: "error",
        error: g
      }), lp(g) || ((y = (T = j(this, Kn).config).onError) == null || y.call(
        T,
        g,
        this
      ), (A = (_ = j(this, Kn).config).onSettled) == null || A.call(
        _,
        this.state.data,
        g,
        this
      )), this.scheduleGc();
    };
    return Ce(this, un, sR({
      initialPromise: n == null ? void 0 : n.initialPromise,
      fn: u.fetchFn,
      abort: r.abort.bind(r),
      onSuccess: (g) => {
        var T, y, _, A;
        if (g === void 0) {
          c(new Error(`${this.queryHash} data is undefined`));
          return;
        }
        try {
          this.setData(g);
        } catch (R) {
          c(R);
          return;
        }
        (y = (T = j(this, Kn).config).onSuccess) == null || y.call(T, g, this), (A = (_ = j(this, Kn).config).onSettled) == null || A.call(
          _,
          g,
          this.state.error,
          this
        ), this.scheduleGc();
      },
      onError: c,
      onFail: (g, T) => {
        Xe(this, pr, qr).call(this, { type: "failed", failureCount: g, error: T });
      },
      onPause: () => {
        Xe(this, pr, qr).call(this, { type: "pause" });
      },
      onContinue: () => {
        Xe(this, pr, qr).call(this, { type: "continue" });
      },
      retry: u.options.retry,
      retryDelay: u.options.retryDelay,
      networkMode: u.options.networkMode,
      canRun: () => !0
    })), j(this, un).start();
  }
}, Ji = new WeakMap(), eo = new WeakMap(), Kn = new WeakMap(), un = new WeakMap(), zs = new WeakMap(), ni = new WeakMap(), pr = new WeakSet(), qr = function(t) {
  const n = (r) => {
    switch (t.type) {
      case "failed":
        return {
          ...r,
          fetchFailureCount: t.failureCount,
          fetchFailureReason: t.error
        };
      case "pause":
        return {
          ...r,
          fetchStatus: "paused"
        };
      case "continue":
        return {
          ...r,
          fetchStatus: "fetching"
        };
      case "fetch":
        return {
          ...r,
          ...uR(r.data, this.options),
          fetchMeta: t.meta ?? null
        };
      case "success":
        return {
          ...r,
          data: t.data,
          dataUpdateCount: r.dataUpdateCount + 1,
          dataUpdatedAt: t.dataUpdatedAt ?? Date.now(),
          error: null,
          isInvalidated: !1,
          status: "success",
          ...!t.manual && {
            fetchStatus: "idle",
            fetchFailureCount: 0,
            fetchFailureReason: null
          }
        };
      case "error":
        const o = t.error;
        return lp(o) && o.revert && j(this, eo) ? { ...j(this, eo), fetchStatus: "idle" } : {
          ...r,
          error: o,
          errorUpdateCount: r.errorUpdateCount + 1,
          errorUpdatedAt: Date.now(),
          fetchFailureCount: r.fetchFailureCount + 1,
          fetchFailureReason: o,
          fetchStatus: "idle",
          status: "error"
        };
      case "invalidate":
        return {
          ...r,
          isInvalidated: !0
        };
      case "setState":
        return {
          ...r,
          ...t.state
        };
    }
  };
  this.state = n(this.state), rn.batch(() => {
    this.observers.forEach((r) => {
      r.onQueryUpdate();
    }), j(this, Kn).notify({ query: this, type: "updated", action: t });
  });
}, VI);
function uR(e, t) {
  return {
    fetchFailureCount: 0,
    fetchFailureReason: null,
    fetchStatus: iR(t.networkMode) ? "fetching" : "paused",
    ...e === void 0 && {
      error: null,
      status: "pending"
    }
  };
}
function ML(e) {
  const t = typeof e.initialData == "function" ? e.initialData() : e.initialData, n = t !== void 0, r = n ? typeof e.initialDataUpdatedAt == "function" ? e.initialDataUpdatedAt() : e.initialDataUpdatedAt : 0;
  return {
    data: t,
    dataUpdateCount: 0,
    dataUpdatedAt: n ? r ?? Date.now() : 0,
    error: null,
    errorUpdateCount: 0,
    errorUpdatedAt: 0,
    fetchFailureCount: 0,
    fetchFailureReason: null,
    fetchMeta: null,
    isInvalidated: !1,
    status: n ? "success" : "pending",
    fetchStatus: "idle"
  };
}
var Cr, WI, PL = (WI = class extends Vs {
  constructor(t = {}) {
    super();
    ze(this, Cr);
    this.config = t, Ce(this, Cr, /* @__PURE__ */ new Map());
  }
  build(t, n, r) {
    const o = n.queryKey, s = n.queryHash ?? TE(o, n);
    let u = this.get(s);
    return u || (u = new DL({
      cache: this,
      queryKey: o,
      queryHash: s,
      options: t.defaultQueryOptions(n),
      state: r,
      defaultOptions: t.getQueryDefaults(o)
    }), this.add(u)), u;
  }
  add(t) {
    j(this, Cr).has(t.queryHash) || (j(this, Cr).set(t.queryHash, t), this.notify({
      type: "added",
      query: t
    }));
  }
  remove(t) {
    const n = j(this, Cr).get(t.queryHash);
    n && (t.destroy(), n === t && j(this, Cr).delete(t.queryHash), this.notify({ type: "removed", query: t }));
  }
  clear() {
    rn.batch(() => {
      this.getAll().forEach((t) => {
        this.remove(t);
      });
    });
  }
  get(t) {
    return j(this, Cr).get(t);
  }
  getAll() {
    return [...j(this, Cr).values()];
  }
  find(t) {
    const n = { exact: !0, ...t };
    return this.getAll().find(
      (r) => cS(n, r)
    );
  }
  findAll(t = {}) {
    const n = this.getAll();
    return Object.keys(t).length > 0 ? n.filter((r) => cS(t, r)) : n;
  }
  notify(t) {
    rn.batch(() => {
      this.listeners.forEach((n) => {
        n(t);
      });
    });
  }
  onFocus() {
    rn.batch(() => {
      this.getAll().forEach((t) => {
        t.onFocus();
      });
    });
  }
  onOnline() {
    rn.batch(() => {
      this.getAll().forEach((t) => {
        t.onOnline();
      });
    });
  }
}, Cr = new WeakMap(), WI), wr, gn, ri, Ir, ya, YI, FL = (YI = class extends lR {
  constructor(t) {
    super();
    ze(this, Ir);
    ze(this, wr);
    ze(this, gn);
    ze(this, ri);
    this.mutationId = t.mutationId, Ce(this, gn, t.mutationCache), Ce(this, wr, []), this.state = t.state || BL(), this.setOptions(t.options), this.scheduleGc();
  }
  setOptions(t) {
    this.options = t, this.updateGcTime(this.options.gcTime);
  }
  get meta() {
    return this.options.meta;
  }
  addObserver(t) {
    j(this, wr).includes(t) || (j(this, wr).push(t), this.clearGcTimeout(), j(this, gn).notify({
      type: "observerAdded",
      mutation: this,
      observer: t
    }));
  }
  removeObserver(t) {
    Ce(this, wr, j(this, wr).filter((n) => n !== t)), this.scheduleGc(), j(this, gn).notify({
      type: "observerRemoved",
      mutation: this,
      observer: t
    });
  }
  optionalRemove() {
    j(this, wr).length || (this.state.status === "pending" ? this.scheduleGc() : j(this, gn).remove(this));
  }
  continue() {
    var t;
    return ((t = j(this, ri)) == null ? void 0 : t.continue()) ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before
    this.execute(this.state.variables);
  }
  async execute(t) {
    var o, s, u, c, p, f, b, g, T, y, _, A, R, C, w, k, O, F, v, B;
    Ce(this, ri, sR({
      fn: () => this.options.mutationFn ? this.options.mutationFn(t) : Promise.reject(new Error("No mutationFn found")),
      onFail: (Y, $) => {
        Xe(this, Ir, ya).call(this, { type: "failed", failureCount: Y, error: $ });
      },
      onPause: () => {
        Xe(this, Ir, ya).call(this, { type: "pause" });
      },
      onContinue: () => {
        Xe(this, Ir, ya).call(this, { type: "continue" });
      },
      retry: this.options.retry ?? 0,
      retryDelay: this.options.retryDelay,
      networkMode: this.options.networkMode,
      canRun: () => j(this, gn).canRun(this)
    }));
    const n = this.state.status === "pending", r = !j(this, ri).canStart();
    try {
      if (!n) {
        Xe(this, Ir, ya).call(this, { type: "pending", variables: t, isPaused: r }), await ((s = (o = j(this, gn).config).onMutate) == null ? void 0 : s.call(
          o,
          t,
          this
        ));
        const $ = await ((c = (u = this.options).onMutate) == null ? void 0 : c.call(u, t));
        $ !== this.state.context && Xe(this, Ir, ya).call(this, {
          type: "pending",
          context: $,
          variables: t,
          isPaused: r
        });
      }
      const Y = await j(this, ri).start();
      return await ((f = (p = j(this, gn).config).onSuccess) == null ? void 0 : f.call(
        p,
        Y,
        t,
        this.state.context,
        this
      )), await ((g = (b = this.options).onSuccess) == null ? void 0 : g.call(b, Y, t, this.state.context)), await ((y = (T = j(this, gn).config).onSettled) == null ? void 0 : y.call(
        T,
        Y,
        null,
        this.state.variables,
        this.state.context,
        this
      )), await ((A = (_ = this.options).onSettled) == null ? void 0 : A.call(_, Y, null, t, this.state.context)), Xe(this, Ir, ya).call(this, { type: "success", data: Y }), Y;
    } catch (Y) {
      try {
        throw await ((C = (R = j(this, gn).config).onError) == null ? void 0 : C.call(
          R,
          Y,
          t,
          this.state.context,
          this
        )), await ((k = (w = this.options).onError) == null ? void 0 : k.call(
          w,
          Y,
          t,
          this.state.context
        )), await ((F = (O = j(this, gn).config).onSettled) == null ? void 0 : F.call(
          O,
          void 0,
          Y,
          this.state.variables,
          this.state.context,
          this
        )), await ((B = (v = this.options).onSettled) == null ? void 0 : B.call(
          v,
          void 0,
          Y,
          t,
          this.state.context
        )), Y;
      } finally {
        Xe(this, Ir, ya).call(this, { type: "error", error: Y });
      }
    } finally {
      j(this, gn).runNext(this);
    }
  }
}, wr = new WeakMap(), gn = new WeakMap(), ri = new WeakMap(), Ir = new WeakSet(), ya = function(t) {
  const n = (r) => {
    switch (t.type) {
      case "failed":
        return {
          ...r,
          failureCount: t.failureCount,
          failureReason: t.error
        };
      case "pause":
        return {
          ...r,
          isPaused: !0
        };
      case "continue":
        return {
          ...r,
          isPaused: !1
        };
      case "pending":
        return {
          ...r,
          context: t.context,
          data: void 0,
          failureCount: 0,
          failureReason: null,
          error: null,
          isPaused: t.isPaused,
          status: "pending",
          variables: t.variables,
          submittedAt: Date.now()
        };
      case "success":
        return {
          ...r,
          data: t.data,
          failureCount: 0,
          failureReason: null,
          error: null,
          status: "success",
          isPaused: !1
        };
      case "error":
        return {
          ...r,
          data: void 0,
          error: t.error,
          failureCount: r.failureCount + 1,
          failureReason: t.error,
          isPaused: !1,
          status: "error"
        };
    }
  };
  this.state = n(this.state), rn.batch(() => {
    j(this, wr).forEach((r) => {
      r.onMutationUpdate(t);
    }), j(this, gn).notify({
      mutation: this,
      type: "updated",
      action: t
    });
  });
}, YI);
function BL() {
  return {
    context: void 0,
    data: void 0,
    error: null,
    failureCount: 0,
    failureReason: null,
    isPaused: !1,
    status: "idle",
    variables: void 0,
    submittedAt: 0
  };
}
var Wr, fr, Gs, KI, UL = (KI = class extends Vs {
  constructor(t = {}) {
    super();
    ze(this, Wr);
    ze(this, fr);
    ze(this, Gs);
    this.config = t, Ce(this, Wr, /* @__PURE__ */ new Set()), Ce(this, fr, /* @__PURE__ */ new Map()), Ce(this, Gs, 0);
  }
  build(t, n, r) {
    const o = new FL({
      mutationCache: this,
      mutationId: ++lu(this, Gs)._,
      options: t.defaultMutationOptions(n),
      state: r
    });
    return this.add(o), o;
  }
  add(t) {
    j(this, Wr).add(t);
    const n = uu(t);
    if (typeof n == "string") {
      const r = j(this, fr).get(n);
      r ? r.push(t) : j(this, fr).set(n, [t]);
    }
    this.notify({ type: "added", mutation: t });
  }
  remove(t) {
    if (j(this, Wr).delete(t)) {
      const n = uu(t);
      if (typeof n == "string") {
        const r = j(this, fr).get(n);
        if (r)
          if (r.length > 1) {
            const o = r.indexOf(t);
            o !== -1 && r.splice(o, 1);
          } else r[0] === t && j(this, fr).delete(n);
      }
    }
    this.notify({ type: "removed", mutation: t });
  }
  canRun(t) {
    const n = uu(t);
    if (typeof n == "string") {
      const r = j(this, fr).get(n), o = r == null ? void 0 : r.find(
        (s) => s.state.status === "pending"
      );
      return !o || o === t;
    } else
      return !0;
  }
  runNext(t) {
    var r;
    const n = uu(t);
    if (typeof n == "string") {
      const o = (r = j(this, fr).get(n)) == null ? void 0 : r.find((s) => s !== t && s.state.isPaused);
      return (o == null ? void 0 : o.continue()) ?? Promise.resolve();
    } else
      return Promise.resolve();
  }
  clear() {
    rn.batch(() => {
      j(this, Wr).forEach((t) => {
        this.notify({ type: "removed", mutation: t });
      }), j(this, Wr).clear(), j(this, fr).clear();
    });
  }
  getAll() {
    return Array.from(j(this, Wr));
  }
  find(t) {
    const n = { exact: !0, ...t };
    return this.getAll().find(
      (r) => dS(n, r)
    );
  }
  findAll(t = {}) {
    return this.getAll().filter((n) => dS(t, n));
  }
  notify(t) {
    rn.batch(() => {
      this.listeners.forEach((n) => {
        n(t);
      });
    });
  }
  resumePausedMutations() {
    const t = this.getAll().filter((n) => n.state.isPaused);
    return rn.batch(
      () => Promise.all(
        t.map((n) => n.continue().catch(Xn))
      )
    );
  }
}, Wr = new WeakMap(), fr = new WeakMap(), Gs = new WeakMap(), KI);
function uu(e) {
  var t;
  return (t = e.options.scope) == null ? void 0 : t.id;
}
function Mu(e) {
  return {
    onFetch: (t, n) => {
      var b, g, T, y, _;
      const r = t.options, o = (T = (g = (b = t.fetchOptions) == null ? void 0 : b.meta) == null ? void 0 : g.fetchMore) == null ? void 0 : T.direction, s = ((y = t.state.data) == null ? void 0 : y.pages) || [], u = ((_ = t.state.data) == null ? void 0 : _.pageParams) || [];
      let c = { pages: [], pageParams: [] }, p = 0;
      const f = async () => {
        let A = !1;
        const R = (k) => {
          Object.defineProperty(k, "signal", {
            enumerable: !0,
            get: () => (t.signal.aborted ? A = !0 : t.signal.addEventListener("abort", () => {
              A = !0;
            }), t.signal)
          });
        }, C = aR(t.options, t.fetchOptions), w = async (k, O, F) => {
          if (A)
            return Promise.reject();
          if (O == null && k.pages.length)
            return Promise.resolve(k);
          const v = {
            queryKey: t.queryKey,
            pageParam: O,
            direction: F ? "backward" : "forward",
            meta: t.options.meta
          };
          R(v);
          const B = await C(
            v
          ), { maxPages: Y } = t.options, $ = F ? RL : IL;
          return {
            pages: $(k.pages, B, Y),
            pageParams: $(k.pageParams, O, Y)
          };
        };
        if (o && s.length) {
          const k = o === "backward", O = k ? cR : Nb, F = {
            pages: s,
            pageParams: u
          }, v = O(r, F);
          c = await w(F, v, k);
        } else {
          const k = e ?? s.length;
          do {
            const O = p === 0 ? u[0] ?? r.initialPageParam : Nb(r, c);
            if (p > 0 && O == null)
              break;
            c = await w(c, O), p++;
          } while (p < k);
        }
        return c;
      };
      t.options.persister ? t.fetchFn = () => {
        var A, R;
        return (R = (A = t.options).persister) == null ? void 0 : R.call(
          A,
          f,
          {
            queryKey: t.queryKey,
            meta: t.options.meta,
            signal: t.signal
          },
          n
        );
      } : t.fetchFn = f;
    }
  };
}
function Nb(e, { pages: t, pageParams: n }) {
  const r = t.length - 1;
  return t.length > 0 ? e.getNextPageParam(
    t[r],
    t,
    n[r],
    n
  ) : void 0;
}
function cR(e, { pages: t, pageParams: n }) {
  var r;
  return t.length > 0 ? (r = e.getPreviousPageParam) == null ? void 0 : r.call(e, t[0], t, n[0], n) : void 0;
}
function HL(e, t) {
  return t ? Nb(e, t) != null : !1;
}
function $L(e, t) {
  return !t || !e.getPreviousPageParam ? !1 : cR(e, t) != null;
}
var At, ka, Ca, to, no, wa, ro, ao, XI, zL = (XI = class {
  constructor(e = {}) {
    ze(this, At);
    ze(this, ka);
    ze(this, Ca);
    ze(this, to);
    ze(this, no);
    ze(this, wa);
    ze(this, ro);
    ze(this, ao);
    Ce(this, At, e.queryCache || new PL()), Ce(this, ka, e.mutationCache || new UL()), Ce(this, Ca, e.defaultOptions || {}), Ce(this, to, /* @__PURE__ */ new Map()), Ce(this, no, /* @__PURE__ */ new Map()), Ce(this, wa, 0);
  }
  mount() {
    lu(this, wa)._++, j(this, wa) === 1 && (Ce(this, ro, _E.subscribe(async (e) => {
      e && (await this.resumePausedMutations(), j(this, At).onFocus());
    })), Ce(this, ao, Du.subscribe(async (e) => {
      e && (await this.resumePausedMutations(), j(this, At).onOnline());
    })));
  }
  unmount() {
    var e, t;
    lu(this, wa)._--, j(this, wa) === 0 && ((e = j(this, ro)) == null || e.call(this), Ce(this, ro, void 0), (t = j(this, ao)) == null || t.call(this), Ce(this, ao, void 0));
  }
  isFetching(e) {
    return j(this, At).findAll({ ...e, fetchStatus: "fetching" }).length;
  }
  isMutating(e) {
    return j(this, ka).findAll({ ...e, status: "pending" }).length;
  }
  getQueryData(e) {
    var n;
    const t = this.defaultQueryOptions({ queryKey: e });
    return (n = j(this, At).get(t.queryHash)) == null ? void 0 : n.state.data;
  }
  ensureQueryData(e) {
    const t = this.defaultQueryOptions(e), n = j(this, At).build(this, t), r = n.state.data;
    return r === void 0 ? this.fetchQuery(e) : (e.revalidateIfStale && n.isStaleByTime(Wi(t.staleTime, n)) && this.prefetchQuery(t), Promise.resolve(r));
  }
  getQueriesData(e) {
    return j(this, At).findAll(e).map(({ queryKey: t, state: n }) => {
      const r = n.data;
      return [t, r];
    });
  }
  setQueryData(e, t, n) {
    const r = this.defaultQueryOptions({ queryKey: e }), o = j(this, At).get(
      r.queryHash
    ), s = o == null ? void 0 : o.state.data, u = CL(t, s);
    if (u !== void 0)
      return j(this, At).build(this, r).setData(u, { ...n, manual: !0 });
  }
  setQueriesData(e, t, n) {
    return rn.batch(
      () => j(this, At).findAll(e).map(({ queryKey: r }) => [
        r,
        this.setQueryData(r, t, n)
      ])
    );
  }
  getQueryState(e) {
    var n;
    const t = this.defaultQueryOptions({ queryKey: e });
    return (n = j(this, At).get(
      t.queryHash
    )) == null ? void 0 : n.state;
  }
  removeQueries(e) {
    const t = j(this, At);
    rn.batch(() => {
      t.findAll(e).forEach((n) => {
        t.remove(n);
      });
    });
  }
  resetQueries(e, t) {
    const n = j(this, At), r = {
      type: "active",
      ...e
    };
    return rn.batch(() => (n.findAll(e).forEach((o) => {
      o.reset();
    }), this.refetchQueries(r, t)));
  }
  cancelQueries(e, t = {}) {
    const n = { revert: !0, ...t }, r = rn.batch(
      () => j(this, At).findAll(e).map((o) => o.cancel(n))
    );
    return Promise.all(r).then(Xn).catch(Xn);
  }
  invalidateQueries(e, t = {}) {
    return rn.batch(() => {
      if (j(this, At).findAll(e).forEach((r) => {
        r.invalidate();
      }), (e == null ? void 0 : e.refetchType) === "none")
        return Promise.resolve();
      const n = {
        ...e,
        type: (e == null ? void 0 : e.refetchType) ?? (e == null ? void 0 : e.type) ?? "active"
      };
      return this.refetchQueries(n, t);
    });
  }
  refetchQueries(e, t = {}) {
    const n = {
      ...t,
      cancelRefetch: t.cancelRefetch ?? !0
    }, r = rn.batch(
      () => j(this, At).findAll(e).filter((o) => !o.isDisabled()).map((o) => {
        let s = o.fetch(void 0, n);
        return n.throwOnError || (s = s.catch(Xn)), o.state.fetchStatus === "paused" ? Promise.resolve() : s;
      })
    );
    return Promise.all(r).then(Xn);
  }
  fetchQuery(e) {
    const t = this.defaultQueryOptions(e);
    t.retry === void 0 && (t.retry = !1);
    const n = j(this, At).build(this, t);
    return n.isStaleByTime(
      Wi(t.staleTime, n)
    ) ? n.fetch(t) : Promise.resolve(n.state.data);
  }
  prefetchQuery(e) {
    return this.fetchQuery(e).then(Xn).catch(Xn);
  }
  fetchInfiniteQuery(e) {
    return e.behavior = Mu(e.pages), this.fetchQuery(e);
  }
  prefetchInfiniteQuery(e) {
    return this.fetchInfiniteQuery(e).then(Xn).catch(Xn);
  }
  ensureInfiniteQueryData(e) {
    return e.behavior = Mu(e.pages), this.ensureQueryData(e);
  }
  resumePausedMutations() {
    return Du.isOnline() ? j(this, ka).resumePausedMutations() : Promise.resolve();
  }
  getQueryCache() {
    return j(this, At);
  }
  getMutationCache() {
    return j(this, ka);
  }
  getDefaultOptions() {
    return j(this, Ca);
  }
  setDefaultOptions(e) {
    Ce(this, Ca, e);
  }
  setQueryDefaults(e, t) {
    j(this, to).set(Ls(e), {
      queryKey: e,
      defaultOptions: t
    });
  }
  getQueryDefaults(e) {
    const t = [...j(this, to).values()], n = {};
    return t.forEach((r) => {
      Ds(e, r.queryKey) && Object.assign(n, r.defaultOptions);
    }), n;
  }
  setMutationDefaults(e, t) {
    j(this, no).set(Ls(e), {
      mutationKey: e,
      defaultOptions: t
    });
  }
  getMutationDefaults(e) {
    const t = [...j(this, no).values()];
    let n = {};
    return t.forEach((r) => {
      Ds(e, r.mutationKey) && (n = { ...n, ...r.defaultOptions });
    }), n;
  }
  defaultQueryOptions(e) {
    if (e._defaulted)
      return e;
    const t = {
      ...j(this, Ca).queries,
      ...this.getQueryDefaults(e.queryKey),
      ...e,
      _defaulted: !0
    };
    return t.queryHash || (t.queryHash = TE(
      t.queryKey,
      t
    )), t.refetchOnReconnect === void 0 && (t.refetchOnReconnect = t.networkMode !== "always"), t.throwOnError === void 0 && (t.throwOnError = !!t.suspense), !t.networkMode && t.persister && (t.networkMode = "offlineFirst"), t.queryFn === SE && (t.enabled = !1), t;
  }
  defaultMutationOptions(e) {
    return e != null && e._defaulted ? e : {
      ...j(this, Ca).mutations,
      ...(e == null ? void 0 : e.mutationKey) && this.getMutationDefaults(e.mutationKey),
      ...e,
      _defaulted: !0
    };
  }
  clear() {
    j(this, At).clear(), j(this, ka).clear();
  }
}, At = new WeakMap(), ka = new WeakMap(), Ca = new WeakMap(), to = new WeakMap(), no = new WeakMap(), wa = new WeakMap(), ro = new WeakMap(), ao = new WeakMap(), XI), xn, Qe, qs, mn, ai, io, Ia, Rr, js, oo, so, ii, oi, Ra, lo, at, Es, Ob, Lb, Db, Mb, Pb, Fb, Bb, pR, QI, dR = (QI = class extends Vs {
  constructor(t, n) {
    super();
    ze(this, at);
    ze(this, xn);
    ze(this, Qe);
    ze(this, qs);
    ze(this, mn);
    ze(this, ai);
    ze(this, io);
    ze(this, Ia);
    ze(this, Rr);
    ze(this, js);
    ze(this, oo);
    // This property keeps track of the last query with defined data.
    // It will be used to pass the previous data and query to the placeholder function between renders.
    ze(this, so);
    ze(this, ii);
    ze(this, oi);
    ze(this, Ra);
    ze(this, lo, /* @__PURE__ */ new Set());
    this.options = n, Ce(this, xn, t), Ce(this, Rr, null), Ce(this, Ia, xb()), this.options.experimental_prefetchInRender || j(this, Ia).reject(
      new Error("experimental_prefetchInRender feature flag is not enabled")
    ), this.bindMethods(), this.setOptions(n);
  }
  bindMethods() {
    this.refetch = this.refetch.bind(this);
  }
  onSubscribe() {
    this.listeners.size === 1 && (j(this, Qe).addObserver(this), hS(j(this, Qe), this.options) ? Xe(this, at, Es).call(this) : this.updateResult(), Xe(this, at, Mb).call(this));
  }
  onUnsubscribe() {
    this.hasListeners() || this.destroy();
  }
  shouldFetchOnReconnect() {
    return Ub(
      j(this, Qe),
      this.options,
      this.options.refetchOnReconnect
    );
  }
  shouldFetchOnWindowFocus() {
    return Ub(
      j(this, Qe),
      this.options,
      this.options.refetchOnWindowFocus
    );
  }
  destroy() {
    this.listeners = /* @__PURE__ */ new Set(), Xe(this, at, Pb).call(this), Xe(this, at, Fb).call(this), j(this, Qe).removeObserver(this);
  }
  setOptions(t, n) {
    const r = this.options, o = j(this, Qe);
    if (this.options = j(this, xn).defaultQueryOptions(t), this.options.enabled !== void 0 && typeof this.options.enabled != "boolean" && typeof this.options.enabled != "function" && typeof hr(this.options.enabled, j(this, Qe)) != "boolean")
      throw new Error(
        "Expected enabled to be a boolean or a callback that returns a boolean"
      );
    Xe(this, at, Bb).call(this), j(this, Qe).setOptions(this.options), r._defaulted && !wb(this.options, r) && j(this, xn).getQueryCache().notify({
      type: "observerOptionsUpdated",
      query: j(this, Qe),
      observer: this
    });
    const s = this.hasListeners();
    s && gS(
      j(this, Qe),
      o,
      this.options,
      r
    ) && Xe(this, at, Es).call(this), this.updateResult(n), s && (j(this, Qe) !== o || hr(this.options.enabled, j(this, Qe)) !== hr(r.enabled, j(this, Qe)) || Wi(this.options.staleTime, j(this, Qe)) !== Wi(r.staleTime, j(this, Qe))) && Xe(this, at, Ob).call(this);
    const u = Xe(this, at, Lb).call(this);
    s && (j(this, Qe) !== o || hr(this.options.enabled, j(this, Qe)) !== hr(r.enabled, j(this, Qe)) || u !== j(this, Ra)) && Xe(this, at, Db).call(this, u);
  }
  getOptimisticResult(t) {
    const n = j(this, xn).getQueryCache().build(j(this, xn), t), r = this.createResult(n, t);
    return qL(this, r) && (Ce(this, mn, r), Ce(this, io, this.options), Ce(this, ai, j(this, Qe).state)), r;
  }
  getCurrentResult() {
    return j(this, mn);
  }
  trackResult(t, n) {
    const r = {};
    return Object.keys(t).forEach((o) => {
      Object.defineProperty(r, o, {
        configurable: !1,
        enumerable: !0,
        get: () => (this.trackProp(o), n == null || n(o), t[o])
      });
    }), r;
  }
  trackProp(t) {
    j(this, lo).add(t);
  }
  getCurrentQuery() {
    return j(this, Qe);
  }
  refetch({ ...t } = {}) {
    return this.fetch({
      ...t
    });
  }
  fetchOptimistic(t) {
    const n = j(this, xn).defaultQueryOptions(t), r = j(this, xn).getQueryCache().build(j(this, xn), n);
    return r.fetch().then(() => this.createResult(r, n));
  }
  fetch(t) {
    return Xe(this, at, Es).call(this, {
      ...t,
      cancelRefetch: t.cancelRefetch ?? !0
    }).then(() => (this.updateResult(), j(this, mn)));
  }
  createResult(t, n) {
    var Y;
    const r = j(this, Qe), o = this.options, s = j(this, mn), u = j(this, ai), c = j(this, io), f = t !== r ? t.state : j(this, qs), { state: b } = t;
    let g = { ...b }, T = !1, y;
    if (n._optimisticResults) {
      const $ = this.hasListeners(), M = !$ && hS(t, n), V = $ && gS(t, r, n, o);
      (M || V) && (g = {
        ...g,
        ...uR(b.data, t.options)
      }), n._optimisticResults === "isRestoring" && (g.fetchStatus = "idle");
    }
    let { error: _, errorUpdatedAt: A, status: R } = g;
    if (n.select && g.data !== void 0)
      if (s && g.data === (u == null ? void 0 : u.data) && n.select === j(this, js))
        y = j(this, oo);
      else
        try {
          Ce(this, js, n.select), y = n.select(g.data), y = Rb(s == null ? void 0 : s.data, y, n), Ce(this, oo, y), Ce(this, Rr, null);
        } catch ($) {
          Ce(this, Rr, $);
        }
    else
      y = g.data;
    if (n.placeholderData !== void 0 && y === void 0 && R === "pending") {
      let $;
      if (s != null && s.isPlaceholderData && n.placeholderData === (c == null ? void 0 : c.placeholderData))
        $ = s.data;
      else if ($ = typeof n.placeholderData == "function" ? n.placeholderData(
        (Y = j(this, so)) == null ? void 0 : Y.state.data,
        j(this, so)
      ) : n.placeholderData, n.select && $ !== void 0)
        try {
          $ = n.select($), Ce(this, Rr, null);
        } catch (M) {
          Ce(this, Rr, M);
        }
      $ !== void 0 && (R = "success", y = Rb(
        s == null ? void 0 : s.data,
        $,
        n
      ), T = !0);
    }
    j(this, Rr) && (_ = j(this, Rr), y = j(this, oo), A = Date.now(), R = "error");
    const C = g.fetchStatus === "fetching", w = R === "pending", k = R === "error", O = w && C, F = y !== void 0, B = {
      status: R,
      fetchStatus: g.fetchStatus,
      isPending: w,
      isSuccess: R === "success",
      isError: k,
      isInitialLoading: O,
      isLoading: O,
      data: y,
      dataUpdatedAt: g.dataUpdatedAt,
      error: _,
      errorUpdatedAt: A,
      failureCount: g.fetchFailureCount,
      failureReason: g.fetchFailureReason,
      errorUpdateCount: g.errorUpdateCount,
      isFetched: g.dataUpdateCount > 0 || g.errorUpdateCount > 0,
      isFetchedAfterMount: g.dataUpdateCount > f.dataUpdateCount || g.errorUpdateCount > f.errorUpdateCount,
      isFetching: C,
      isRefetching: C && !w,
      isLoadingError: k && !F,
      isPaused: g.fetchStatus === "paused",
      isPlaceholderData: T,
      isRefetchError: k && F,
      isStale: vE(t, n),
      refetch: this.refetch,
      promise: j(this, Ia)
    };
    if (this.options.experimental_prefetchInRender) {
      const $ = (ne) => {
        B.status === "error" ? ne.reject(B.error) : B.data !== void 0 && ne.resolve(B.data);
      }, M = () => {
        const ne = Ce(this, Ia, B.promise = xb());
        $(ne);
      }, V = j(this, Ia);
      switch (V.status) {
        case "pending":
          t.queryHash === r.queryHash && $(V);
          break;
        case "fulfilled":
          (B.status === "error" || B.data !== V.value) && M();
          break;
        case "rejected":
          (B.status !== "error" || B.error !== V.reason) && M();
          break;
      }
    }
    return B;
  }
  updateResult(t) {
    const n = j(this, mn), r = this.createResult(j(this, Qe), this.options);
    if (Ce(this, ai, j(this, Qe).state), Ce(this, io, this.options), j(this, ai).data !== void 0 && Ce(this, so, j(this, Qe)), wb(r, n))
      return;
    Ce(this, mn, r);
    const o = {}, s = () => {
      if (!n)
        return !0;
      const { notifyOnChangeProps: u } = this.options, c = typeof u == "function" ? u() : u;
      if (c === "all" || !c && !j(this, lo).size)
        return !0;
      const p = new Set(
        c ?? j(this, lo)
      );
      return this.options.throwOnError && p.add("error"), Object.keys(j(this, mn)).some((f) => {
        const b = f;
        return j(this, mn)[b] !== n[b] && p.has(b);
      });
    };
    (t == null ? void 0 : t.listeners) !== !1 && s() && (o.listeners = !0), Xe(this, at, pR).call(this, { ...o, ...t });
  }
  onQueryUpdate() {
    this.updateResult(), this.hasListeners() && Xe(this, at, Mb).call(this);
  }
}, xn = new WeakMap(), Qe = new WeakMap(), qs = new WeakMap(), mn = new WeakMap(), ai = new WeakMap(), io = new WeakMap(), Ia = new WeakMap(), Rr = new WeakMap(), js = new WeakMap(), oo = new WeakMap(), so = new WeakMap(), ii = new WeakMap(), oi = new WeakMap(), Ra = new WeakMap(), lo = new WeakMap(), at = new WeakSet(), Es = function(t) {
  Xe(this, at, Bb).call(this);
  let n = j(this, Qe).fetch(
    this.options,
    t
  );
  return t != null && t.throwOnError || (n = n.catch(Xn)), n;
}, Ob = function() {
  Xe(this, at, Pb).call(this);
  const t = Wi(
    this.options.staleTime,
    j(this, Qe)
  );
  if (ui || j(this, mn).isStale || !Cb(t))
    return;
  const r = nR(j(this, mn).dataUpdatedAt, t) + 1;
  Ce(this, ii, setTimeout(() => {
    j(this, mn).isStale || this.updateResult();
  }, r));
}, Lb = function() {
  return (typeof this.options.refetchInterval == "function" ? this.options.refetchInterval(j(this, Qe)) : this.options.refetchInterval) ?? !1;
}, Db = function(t) {
  Xe(this, at, Fb).call(this), Ce(this, Ra, t), !(ui || hr(this.options.enabled, j(this, Qe)) === !1 || !Cb(j(this, Ra)) || j(this, Ra) === 0) && Ce(this, oi, setInterval(() => {
    (this.options.refetchIntervalInBackground || _E.isFocused()) && Xe(this, at, Es).call(this);
  }, j(this, Ra)));
}, Mb = function() {
  Xe(this, at, Ob).call(this), Xe(this, at, Db).call(this, Xe(this, at, Lb).call(this));
}, Pb = function() {
  j(this, ii) && (clearTimeout(j(this, ii)), Ce(this, ii, void 0));
}, Fb = function() {
  j(this, oi) && (clearInterval(j(this, oi)), Ce(this, oi, void 0));
}, Bb = function() {
  const t = j(this, xn).getQueryCache().build(j(this, xn), this.options);
  if (t === j(this, Qe))
    return;
  const n = j(this, Qe);
  Ce(this, Qe, t), Ce(this, qs, t.state), this.hasListeners() && (n == null || n.removeObserver(this), t.addObserver(this));
}, pR = function(t) {
  rn.batch(() => {
    t.listeners && this.listeners.forEach((n) => {
      n(j(this, mn));
    }), j(this, xn).getQueryCache().notify({
      query: j(this, Qe),
      type: "observerResultsUpdated"
    });
  });
}, QI);
function GL(e, t) {
  return hr(t.enabled, e) !== !1 && e.state.data === void 0 && !(e.state.status === "error" && t.retryOnMount === !1);
}
function hS(e, t) {
  return GL(e, t) || e.state.data !== void 0 && Ub(e, t, t.refetchOnMount);
}
function Ub(e, t, n) {
  if (hr(t.enabled, e) !== !1) {
    const r = typeof n == "function" ? n(e) : n;
    return r === "always" || r !== !1 && vE(e, t);
  }
  return !1;
}
function gS(e, t, n, r) {
  return (e !== t || hr(r.enabled, e) === !1) && (!n.suspense || e.state.status !== "error") && vE(e, n);
}
function vE(e, t) {
  return hr(t.enabled, e) !== !1 && e.isStaleByTime(Wi(t.staleTime, e));
}
function qL(e, t) {
  return !wb(e.getCurrentResult(), t);
}
var jL = class extends dR {
  constructor(e, t) {
    super(e, t);
  }
  bindMethods() {
    super.bindMethods(), this.fetchNextPage = this.fetchNextPage.bind(this), this.fetchPreviousPage = this.fetchPreviousPage.bind(this);
  }
  setOptions(e, t) {
    super.setOptions(
      {
        ...e,
        behavior: Mu()
      },
      t
    );
  }
  getOptimisticResult(e) {
    return e.behavior = Mu(), super.getOptimisticResult(e);
  }
  fetchNextPage(e) {
    return this.fetch({
      ...e,
      meta: {
        fetchMore: { direction: "forward" }
      }
    });
  }
  fetchPreviousPage(e) {
    return this.fetch({
      ...e,
      meta: {
        fetchMore: { direction: "backward" }
      }
    });
  }
  createResult(e, t) {
    var _, A;
    const { state: n } = e, r = super.createResult(e, t), { isFetching: o, isRefetching: s, isError: u, isRefetchError: c } = r, p = (A = (_ = n.fetchMeta) == null ? void 0 : _.fetchMore) == null ? void 0 : A.direction, f = u && p === "forward", b = o && p === "forward", g = u && p === "backward", T = o && p === "backward";
    return {
      ...r,
      fetchNextPage: this.fetchNextPage,
      fetchPreviousPage: this.fetchPreviousPage,
      hasNextPage: HL(t, n.data),
      hasPreviousPage: $L(t, n.data),
      isFetchNextPageError: f,
      isFetchingNextPage: b,
      isFetchPreviousPageError: g,
      isFetchingPreviousPage: T,
      isRefetchError: c && !f && !g,
      isRefetching: s && !b && !T
    };
  }
}, fR = G.createContext(
  void 0
), VL = (e) => {
  const t = G.useContext(fR);
  if (!t)
    throw new Error("No QueryClient set, use QueryClientProvider to set one");
  return t;
}, WL = ({
  client: e,
  children: t
}) => (G.useEffect(() => (e.mount(), () => {
  e.unmount();
}), [e]), /* @__PURE__ */ L.jsx(fR.Provider, { value: e, children: t })), hR = G.createContext(!1), YL = () => G.useContext(hR);
hR.Provider;
function KL() {
  let e = !1;
  return {
    clearReset: () => {
      e = !1;
    },
    reset: () => {
      e = !0;
    },
    isReset: () => e
  };
}
var XL = G.createContext(KL()), QL = () => G.useContext(XL);
function ZL(e, t) {
  return typeof e == "function" ? e(...t) : !!e;
}
function mS() {
}
var JL = (e, t) => {
  (e.suspense || e.throwOnError || e.experimental_prefetchInRender) && (t.isReset() || (e.retryOnMount = !1));
}, eD = (e) => {
  G.useEffect(() => {
    e.clearReset();
  }, [e]);
}, tD = ({
  result: e,
  errorResetBoundary: t,
  throwOnError: n,
  query: r
}) => e.isError && !t.isReset() && !e.isFetching && r && ZL(n, [e.error, r]), nD = (e) => {
  const t = e.staleTime;
  e.suspense && (e.staleTime = typeof t == "function" ? (...n) => Math.max(t(...n), 1e3) : Math.max(t ?? 1e3, 1e3), typeof e.gcTime == "number" && (e.gcTime = Math.max(e.gcTime, 1e3)));
}, rD = (e, t) => e.isLoading && e.isFetching && !t, aD = (e, t) => (e == null ? void 0 : e.suspense) && t.isPending, bS = (e, t, n) => t.fetchOptimistic(e).catch(() => {
  n.clearReset();
});
function gR(e, t, n) {
  var g, T, y, _, A;
  const r = VL(), o = YL(), s = QL(), u = r.defaultQueryOptions(e);
  (T = (g = r.getDefaultOptions().queries) == null ? void 0 : g._experimental_beforeQuery) == null || T.call(
    g,
    u
  ), u._optimisticResults = o ? "isRestoring" : "optimistic", nD(u), JL(u, s), eD(s);
  const c = !r.getQueryCache().get(u.queryHash), [p] = G.useState(
    () => new t(
      r,
      u
    )
  ), f = p.getOptimisticResult(u), b = !o && e.subscribed !== !1;
  if (G.useSyncExternalStore(
    G.useCallback(
      (R) => {
        const C = b ? p.subscribe(rn.batchCalls(R)) : mS;
        return p.updateResult(), C;
      },
      [p, b]
    ),
    () => p.getCurrentResult(),
    () => p.getCurrentResult()
  ), G.useEffect(() => {
    p.setOptions(u, { listeners: !1 });
  }, [u, p]), aD(u, f))
    throw bS(u, p, s);
  if (tD({
    result: f,
    errorResetBoundary: s,
    throwOnError: u.throwOnError,
    query: r.getQueryCache().get(u.queryHash)
  }))
    throw f.error;
  if ((_ = (y = r.getDefaultOptions().queries) == null ? void 0 : y._experimental_afterQuery) == null || _.call(
    y,
    u,
    f
  ), u.experimental_prefetchInRender && !ui && rD(f, o)) {
    const R = c ? (
      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted
      bS(u, p, s)
    ) : (
      // subscribe to the "cache promise" so that we can finalize the currentThenable once data comes in
      (A = r.getQueryCache().get(u.queryHash)) == null ? void 0 : A.promise
    );
    R == null || R.catch(mS).finally(() => {
      p.updateResult();
    });
  }
  return u.notifyOnChangeProps ? f : p.trackResult(f);
}
function Su(e, t) {
  return gR(e, dR);
}
function iD(e, t) {
  return gR(
    e,
    jL
  );
}
var cu = {}, up = { exports: {} }, wn = {}, cp = { exports: {} }, dp = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var ES;
function oD() {
  return ES || (ES = 1, function(e) {
    function t(J, oe) {
      var I = J.length;
      J.push(oe);
      e: for (; 0 < I; ) {
        var H = I - 1 >>> 1, W = J[H];
        if (0 < o(W, oe)) J[H] = oe, J[I] = W, I = H;
        else break e;
      }
    }
    function n(J) {
      return J.length === 0 ? null : J[0];
    }
    function r(J) {
      if (J.length === 0) return null;
      var oe = J[0], I = J.pop();
      if (I !== oe) {
        J[0] = I;
        e: for (var H = 0, W = J.length, x = W >>> 1; H < x; ) {
          var Ee = 2 * (H + 1) - 1, _e = J[Ee], Te = Ee + 1, Oe = J[Te];
          if (0 > o(_e, I)) Te < W && 0 > o(Oe, _e) ? (J[H] = Oe, J[Te] = I, H = Te) : (J[H] = _e, J[Ee] = I, H = Ee);
          else if (Te < W && 0 > o(Oe, I)) J[H] = Oe, J[Te] = I, H = Te;
          else break e;
        }
      }
      return oe;
    }
    function o(J, oe) {
      var I = J.sortIndex - oe.sortIndex;
      return I !== 0 ? I : J.id - oe.id;
    }
    if (typeof performance == "object" && typeof performance.now == "function") {
      var s = performance;
      e.unstable_now = function() {
        return s.now();
      };
    } else {
      var u = Date, c = u.now();
      e.unstable_now = function() {
        return u.now() - c;
      };
    }
    var p = [], f = [], b = 1, g = null, T = 3, y = !1, _ = !1, A = !1, R = typeof setTimeout == "function" ? setTimeout : null, C = typeof clearTimeout == "function" ? clearTimeout : null, w = typeof setImmediate < "u" ? setImmediate : null;
    typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
    function k(J) {
      for (var oe = n(f); oe !== null; ) {
        if (oe.callback === null) r(f);
        else if (oe.startTime <= J) r(f), oe.sortIndex = oe.expirationTime, t(p, oe);
        else break;
        oe = n(f);
      }
    }
    function O(J) {
      if (A = !1, k(J), !_) if (n(p) !== null) _ = !0, Ne(F);
      else {
        var oe = n(f);
        oe !== null && ve(O, oe.startTime - J);
      }
    }
    function F(J, oe) {
      _ = !1, A && (A = !1, C(Y), Y = -1), y = !0;
      var I = T;
      try {
        for (k(oe), g = n(p); g !== null && (!(g.expirationTime > oe) || J && !V()); ) {
          var H = g.callback;
          if (typeof H == "function") {
            g.callback = null, T = g.priorityLevel;
            var W = H(g.expirationTime <= oe);
            oe = e.unstable_now(), typeof W == "function" ? g.callback = W : g === n(p) && r(p), k(oe);
          } else r(p);
          g = n(p);
        }
        if (g !== null) var x = !0;
        else {
          var Ee = n(f);
          Ee !== null && ve(O, Ee.startTime - oe), x = !1;
        }
        return x;
      } finally {
        g = null, T = I, y = !1;
      }
    }
    var v = !1, B = null, Y = -1, $ = 5, M = -1;
    function V() {
      return !(e.unstable_now() - M < $);
    }
    function ne() {
      if (B !== null) {
        var J = e.unstable_now();
        M = J;
        var oe = !0;
        try {
          oe = B(!0, J);
        } finally {
          oe ? se() : (v = !1, B = null);
        }
      } else v = !1;
    }
    var se;
    if (typeof w == "function") se = function() {
      w(ne);
    };
    else if (typeof MessageChannel < "u") {
      var de = new MessageChannel(), be = de.port2;
      de.port1.onmessage = ne, se = function() {
        be.postMessage(null);
      };
    } else se = function() {
      R(ne, 0);
    };
    function Ne(J) {
      B = J, v || (v = !0, se());
    }
    function ve(J, oe) {
      Y = R(function() {
        J(e.unstable_now());
      }, oe);
    }
    e.unstable_IdlePriority = 5, e.unstable_ImmediatePriority = 1, e.unstable_LowPriority = 4, e.unstable_NormalPriority = 3, e.unstable_Profiling = null, e.unstable_UserBlockingPriority = 2, e.unstable_cancelCallback = function(J) {
      J.callback = null;
    }, e.unstable_continueExecution = function() {
      _ || y || (_ = !0, Ne(F));
    }, e.unstable_forceFrameRate = function(J) {
      0 > J || 125 < J ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : $ = 0 < J ? Math.floor(1e3 / J) : 5;
    }, e.unstable_getCurrentPriorityLevel = function() {
      return T;
    }, e.unstable_getFirstCallbackNode = function() {
      return n(p);
    }, e.unstable_next = function(J) {
      switch (T) {
        case 1:
        case 2:
        case 3:
          var oe = 3;
          break;
        default:
          oe = T;
      }
      var I = T;
      T = oe;
      try {
        return J();
      } finally {
        T = I;
      }
    }, e.unstable_pauseExecution = function() {
    }, e.unstable_requestPaint = function() {
    }, e.unstable_runWithPriority = function(J, oe) {
      switch (J) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          J = 3;
      }
      var I = T;
      T = J;
      try {
        return oe();
      } finally {
        T = I;
      }
    }, e.unstable_scheduleCallback = function(J, oe, I) {
      var H = e.unstable_now();
      switch (typeof I == "object" && I !== null ? (I = I.delay, I = typeof I == "number" && 0 < I ? H + I : H) : I = H, J) {
        case 1:
          var W = -1;
          break;
        case 2:
          W = 250;
          break;
        case 5:
          W = 1073741823;
          break;
        case 4:
          W = 1e4;
          break;
        default:
          W = 5e3;
      }
      return W = I + W, J = { id: b++, callback: oe, priorityLevel: J, startTime: I, expirationTime: W, sortIndex: -1 }, I > H ? (J.sortIndex = I, t(f, J), n(p) === null && J === n(f) && (A ? (C(Y), Y = -1) : A = !0, ve(O, I - H))) : (J.sortIndex = W, t(p, J), _ || y || (_ = !0, Ne(F))), J;
    }, e.unstable_shouldYield = V, e.unstable_wrapCallback = function(J) {
      var oe = T;
      return function() {
        var I = T;
        T = oe;
        try {
          return J.apply(this, arguments);
        } finally {
          T = I;
        }
      };
    };
  }(dp)), dp;
}
var yS;
function sD() {
  return yS || (yS = 1, cp.exports = oD()), cp.exports;
}
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var TS;
function lD() {
  if (TS) return wn;
  TS = 1;
  var e = EE(), t = sD();
  function n(a) {
    for (var i = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, l = 1; l < arguments.length; l++) i += "&args[]=" + encodeURIComponent(arguments[l]);
    return "Minified React error #" + a + "; visit " + i + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
  }
  var r = /* @__PURE__ */ new Set(), o = {};
  function s(a, i) {
    u(a, i), u(a + "Capture", i);
  }
  function u(a, i) {
    for (o[a] = i, a = 0; a < i.length; a++) r.add(i[a]);
  }
  var c = !(typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u"), p = Object.prototype.hasOwnProperty, f = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, b = {}, g = {};
  function T(a) {
    return p.call(g, a) ? !0 : p.call(b, a) ? !1 : f.test(a) ? g[a] = !0 : (b[a] = !0, !1);
  }
  function y(a, i, l, d) {
    if (l !== null && l.type === 0) return !1;
    switch (typeof i) {
      case "function":
      case "symbol":
        return !0;
      case "boolean":
        return d ? !1 : l !== null ? !l.acceptsBooleans : (a = a.toLowerCase().slice(0, 5), a !== "data-" && a !== "aria-");
      default:
        return !1;
    }
  }
  function _(a, i, l, d) {
    if (i === null || typeof i > "u" || y(a, i, l, d)) return !0;
    if (d) return !1;
    if (l !== null) switch (l.type) {
      case 3:
        return !i;
      case 4:
        return i === !1;
      case 5:
        return isNaN(i);
      case 6:
        return isNaN(i) || 1 > i;
    }
    return !1;
  }
  function A(a, i, l, d, m, E, S) {
    this.acceptsBooleans = i === 2 || i === 3 || i === 4, this.attributeName = d, this.attributeNamespace = m, this.mustUseProperty = l, this.propertyName = a, this.type = i, this.sanitizeURL = E, this.removeEmptyString = S;
  }
  var R = {};
  "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a) {
    R[a] = new A(a, 0, !1, a, null, !1, !1);
  }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a) {
    var i = a[0];
    R[i] = new A(i, 1, !1, a[1], null, !1, !1);
  }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a) {
    R[a] = new A(a, 2, !1, a.toLowerCase(), null, !1, !1);
  }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a) {
    R[a] = new A(a, 2, !1, a, null, !1, !1);
  }), "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a) {
    R[a] = new A(a, 3, !1, a.toLowerCase(), null, !1, !1);
  }), ["checked", "multiple", "muted", "selected"].forEach(function(a) {
    R[a] = new A(a, 3, !0, a, null, !1, !1);
  }), ["capture", "download"].forEach(function(a) {
    R[a] = new A(a, 4, !1, a, null, !1, !1);
  }), ["cols", "rows", "size", "span"].forEach(function(a) {
    R[a] = new A(a, 6, !1, a, null, !1, !1);
  }), ["rowSpan", "start"].forEach(function(a) {
    R[a] = new A(a, 5, !1, a.toLowerCase(), null, !1, !1);
  });
  var C = /[\-:]([a-z])/g;
  function w(a) {
    return a[1].toUpperCase();
  }
  "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a) {
    var i = a.replace(
      C,
      w
    );
    R[i] = new A(i, 1, !1, a, null, !1, !1);
  }), "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a) {
    var i = a.replace(C, w);
    R[i] = new A(i, 1, !1, a, "http://www.w3.org/1999/xlink", !1, !1);
  }), ["xml:base", "xml:lang", "xml:space"].forEach(function(a) {
    var i = a.replace(C, w);
    R[i] = new A(i, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1, !1);
  }), ["tabIndex", "crossOrigin"].forEach(function(a) {
    R[a] = new A(a, 1, !1, a.toLowerCase(), null, !1, !1);
  }), R.xlinkHref = new A("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1), ["src", "href", "action", "formAction"].forEach(function(a) {
    R[a] = new A(a, 1, !1, a.toLowerCase(), null, !0, !0);
  });
  function k(a, i, l, d) {
    var m = R.hasOwnProperty(i) ? R[i] : null;
    (m !== null ? m.type !== 0 : d || !(2 < i.length) || i[0] !== "o" && i[0] !== "O" || i[1] !== "n" && i[1] !== "N") && (_(i, l, m, d) && (l = null), d || m === null ? T(i) && (l === null ? a.removeAttribute(i) : a.setAttribute(i, "" + l)) : m.mustUseProperty ? a[m.propertyName] = l === null ? m.type === 3 ? !1 : "" : l : (i = m.attributeName, d = m.attributeNamespace, l === null ? a.removeAttribute(i) : (m = m.type, l = m === 3 || m === 4 && l === !0 ? "" : "" + l, d ? a.setAttributeNS(d, i, l) : a.setAttribute(i, l))));
  }
  var O = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, F = Symbol.for("react.element"), v = Symbol.for("react.portal"), B = Symbol.for("react.fragment"), Y = Symbol.for("react.strict_mode"), $ = Symbol.for("react.profiler"), M = Symbol.for("react.provider"), V = Symbol.for("react.context"), ne = Symbol.for("react.forward_ref"), se = Symbol.for("react.suspense"), de = Symbol.for("react.suspense_list"), be = Symbol.for("react.memo"), Ne = Symbol.for("react.lazy"), ve = Symbol.for("react.offscreen"), J = Symbol.iterator;
  function oe(a) {
    return a === null || typeof a != "object" ? null : (a = J && a[J] || a["@@iterator"], typeof a == "function" ? a : null);
  }
  var I = Object.assign, H;
  function W(a) {
    if (H === void 0) try {
      throw Error();
    } catch (l) {
      var i = l.stack.trim().match(/\n( *(at )?)/);
      H = i && i[1] || "";
    }
    return `
` + H + a;
  }
  var x = !1;
  function Ee(a, i) {
    if (!a || x) return "";
    x = !0;
    var l = Error.prepareStackTrace;
    Error.prepareStackTrace = void 0;
    try {
      if (i) if (i = function() {
        throw Error();
      }, Object.defineProperty(i.prototype, "props", { set: function() {
        throw Error();
      } }), typeof Reflect == "object" && Reflect.construct) {
        try {
          Reflect.construct(i, []);
        } catch (ee) {
          var d = ee;
        }
        Reflect.construct(a, [], i);
      } else {
        try {
          i.call();
        } catch (ee) {
          d = ee;
        }
        a.call(i.prototype);
      }
      else {
        try {
          throw Error();
        } catch (ee) {
          d = ee;
        }
        a();
      }
    } catch (ee) {
      if (ee && d && typeof ee.stack == "string") {
        for (var m = ee.stack.split(`
`), E = d.stack.split(`
`), S = m.length - 1, P = E.length - 1; 1 <= S && 0 <= P && m[S] !== E[P]; ) P--;
        for (; 1 <= S && 0 <= P; S--, P--) if (m[S] !== E[P]) {
          if (S !== 1 || P !== 1)
            do
              if (S--, P--, 0 > P || m[S] !== E[P]) {
                var z = `
` + m[S].replace(" at new ", " at ");
                return a.displayName && z.includes("<anonymous>") && (z = z.replace("<anonymous>", a.displayName)), z;
              }
            while (1 <= S && 0 <= P);
          break;
        }
      }
    } finally {
      x = !1, Error.prepareStackTrace = l;
    }
    return (a = a ? a.displayName || a.name : "") ? W(a) : "";
  }
  function _e(a) {
    switch (a.tag) {
      case 5:
        return W(a.type);
      case 16:
        return W("Lazy");
      case 13:
        return W("Suspense");
      case 19:
        return W("SuspenseList");
      case 0:
      case 2:
      case 15:
        return a = Ee(a.type, !1), a;
      case 11:
        return a = Ee(a.type.render, !1), a;
      case 1:
        return a = Ee(a.type, !0), a;
      default:
        return "";
    }
  }
  function Te(a) {
    if (a == null) return null;
    if (typeof a == "function") return a.displayName || a.name || null;
    if (typeof a == "string") return a;
    switch (a) {
      case B:
        return "Fragment";
      case v:
        return "Portal";
      case $:
        return "Profiler";
      case Y:
        return "StrictMode";
      case se:
        return "Suspense";
      case de:
        return "SuspenseList";
    }
    if (typeof a == "object") switch (a.$$typeof) {
      case V:
        return (a.displayName || "Context") + ".Consumer";
      case M:
        return (a._context.displayName || "Context") + ".Provider";
      case ne:
        var i = a.render;
        return a = a.displayName, a || (a = i.displayName || i.name || "", a = a !== "" ? "ForwardRef(" + a + ")" : "ForwardRef"), a;
      case be:
        return i = a.displayName || null, i !== null ? i : Te(a.type) || "Memo";
      case Ne:
        i = a._payload, a = a._init;
        try {
          return Te(a(i));
        } catch {
        }
    }
    return null;
  }
  function Oe(a) {
    var i = a.type;
    switch (a.tag) {
      case 24:
        return "Cache";
      case 9:
        return (i.displayName || "Context") + ".Consumer";
      case 10:
        return (i._context.displayName || "Context") + ".Provider";
      case 18:
        return "DehydratedFragment";
      case 11:
        return a = i.render, a = a.displayName || a.name || "", i.displayName || (a !== "" ? "ForwardRef(" + a + ")" : "ForwardRef");
      case 7:
        return "Fragment";
      case 5:
        return i;
      case 4:
        return "Portal";
      case 3:
        return "Root";
      case 6:
        return "Text";
      case 16:
        return Te(i);
      case 8:
        return i === Y ? "StrictMode" : "Mode";
      case 22:
        return "Offscreen";
      case 12:
        return "Profiler";
      case 21:
        return "Scope";
      case 13:
        return "Suspense";
      case 19:
        return "SuspenseList";
      case 25:
        return "TracingMarker";
      case 1:
      case 0:
      case 17:
      case 2:
      case 14:
      case 15:
        if (typeof i == "function") return i.displayName || i.name || null;
        if (typeof i == "string") return i;
    }
    return null;
  }
  function Me(a) {
    switch (typeof a) {
      case "boolean":
      case "number":
      case "string":
      case "undefined":
        return a;
      case "object":
        return a;
      default:
        return "";
    }
  }
  function He(a) {
    var i = a.type;
    return (a = a.nodeName) && a.toLowerCase() === "input" && (i === "checkbox" || i === "radio");
  }
  function Ze(a) {
    var i = He(a) ? "checked" : "value", l = Object.getOwnPropertyDescriptor(a.constructor.prototype, i), d = "" + a[i];
    if (!a.hasOwnProperty(i) && typeof l < "u" && typeof l.get == "function" && typeof l.set == "function") {
      var m = l.get, E = l.set;
      return Object.defineProperty(a, i, { configurable: !0, get: function() {
        return m.call(this);
      }, set: function(S) {
        d = "" + S, E.call(this, S);
      } }), Object.defineProperty(a, i, { enumerable: l.enumerable }), { getValue: function() {
        return d;
      }, setValue: function(S) {
        d = "" + S;
      }, stopTracking: function() {
        a._valueTracker = null, delete a[i];
      } };
    }
  }
  function gt(a) {
    a._valueTracker || (a._valueTracker = Ze(a));
  }
  function kt(a) {
    if (!a) return !1;
    var i = a._valueTracker;
    if (!i) return !0;
    var l = i.getValue(), d = "";
    return a && (d = He(a) ? a.checked ? "true" : "false" : a.value), a = d, a !== l ? (i.setValue(a), !0) : !1;
  }
  function zt(a) {
    if (a = a || (typeof document < "u" ? document : void 0), typeof a > "u") return null;
    try {
      return a.activeElement || a.body;
    } catch {
      return a.body;
    }
  }
  function Dr(a, i) {
    var l = i.checked;
    return I({}, i, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: l ?? a._wrapperState.initialChecked });
  }
  function nr(a, i) {
    var l = i.defaultValue == null ? "" : i.defaultValue, d = i.checked != null ? i.checked : i.defaultChecked;
    l = Me(i.value != null ? i.value : l), a._wrapperState = { initialChecked: d, initialValue: l, controlled: i.type === "checkbox" || i.type === "radio" ? i.checked != null : i.value != null };
  }
  function Gt(a, i) {
    i = i.checked, i != null && k(a, "checked", i, !1);
  }
  function rr(a, i) {
    Gt(a, i);
    var l = Me(i.value), d = i.type;
    if (l != null) d === "number" ? (l === 0 && a.value === "" || a.value != l) && (a.value = "" + l) : a.value !== "" + l && (a.value = "" + l);
    else if (d === "submit" || d === "reset") {
      a.removeAttribute("value");
      return;
    }
    i.hasOwnProperty("value") ? ar(a, i.type, l) : i.hasOwnProperty("defaultValue") && ar(a, i.type, Me(i.defaultValue)), i.checked == null && i.defaultChecked != null && (a.defaultChecked = !!i.defaultChecked);
  }
  function yn(a, i, l) {
    if (i.hasOwnProperty("value") || i.hasOwnProperty("defaultValue")) {
      var d = i.type;
      if (!(d !== "submit" && d !== "reset" || i.value !== void 0 && i.value !== null)) return;
      i = "" + a._wrapperState.initialValue, l || i === a.value || (a.value = i), a.defaultValue = i;
    }
    l = a.name, l !== "" && (a.name = ""), a.defaultChecked = !!a._wrapperState.initialChecked, l !== "" && (a.name = l);
  }
  function ar(a, i, l) {
    (i !== "number" || zt(a.ownerDocument) !== a) && (l == null ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + l && (a.defaultValue = "" + l));
  }
  var qt = Array.isArray;
  function Tn(a, i, l, d) {
    if (a = a.options, i) {
      i = {};
      for (var m = 0; m < l.length; m++) i["$" + l[m]] = !0;
      for (l = 0; l < a.length; l++) m = i.hasOwnProperty("$" + a[l].value), a[l].selected !== m && (a[l].selected = m), m && d && (a[l].defaultSelected = !0);
    } else {
      for (l = "" + Me(l), i = null, m = 0; m < a.length; m++) {
        if (a[m].value === l) {
          a[m].selected = !0, d && (a[m].defaultSelected = !0);
          return;
        }
        i !== null || a[m].disabled || (i = a[m]);
      }
      i !== null && (i.selected = !0);
    }
  }
  function Sn(a, i) {
    if (i.dangerouslySetInnerHTML != null) throw Error(n(91));
    return I({}, i, { value: void 0, defaultValue: void 0, children: "" + a._wrapperState.initialValue });
  }
  function re(a, i) {
    var l = i.value;
    if (l == null) {
      if (l = i.children, i = i.defaultValue, l != null) {
        if (i != null) throw Error(n(92));
        if (qt(l)) {
          if (1 < l.length) throw Error(n(93));
          l = l[0];
        }
        i = l;
      }
      i == null && (i = ""), l = i;
    }
    a._wrapperState = { initialValue: Me(l) };
  }
  function Le(a, i) {
    var l = Me(i.value), d = Me(i.defaultValue);
    l != null && (l = "" + l, l !== a.value && (a.value = l), i.defaultValue == null && a.defaultValue !== l && (a.defaultValue = l)), d != null && (a.defaultValue = "" + d);
  }
  function Pe(a) {
    var i = a.textContent;
    i === a._wrapperState.initialValue && i !== "" && i !== null && (a.value = i);
  }
  function Z(a) {
    switch (a) {
      case "svg":
        return "http://www.w3.org/2000/svg";
      case "math":
        return "http://www.w3.org/1998/Math/MathML";
      default:
        return "http://www.w3.org/1999/xhtml";
    }
  }
  function ae(a, i) {
    return a == null || a === "http://www.w3.org/1999/xhtml" ? Z(i) : a === "http://www.w3.org/2000/svg" && i === "foreignObject" ? "http://www.w3.org/1999/xhtml" : a;
  }
  var ye, De = function(a) {
    return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(i, l, d, m) {
      MSApp.execUnsafeLocalFunction(function() {
        return a(i, l, d, m);
      });
    } : a;
  }(function(a, i) {
    if (a.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in a) a.innerHTML = i;
    else {
      for (ye = ye || document.createElement("div"), ye.innerHTML = "<svg>" + i.valueOf().toString() + "</svg>", i = ye.firstChild; a.firstChild; ) a.removeChild(a.firstChild);
      for (; i.firstChild; ) a.appendChild(i.firstChild);
    }
  });
  function Ge(a, i) {
    if (i) {
      var l = a.firstChild;
      if (l && l === a.lastChild && l.nodeType === 3) {
        l.nodeValue = i;
        return;
      }
    }
    a.textContent = i;
  }
  var Je = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0
  }, Ft = ["Webkit", "ms", "Moz", "O"];
  Object.keys(Je).forEach(function(a) {
    Ft.forEach(function(i) {
      i = i + a.charAt(0).toUpperCase() + a.substring(1), Je[i] = Je[a];
    });
  });
  function Nt(a, i, l) {
    return i == null || typeof i == "boolean" || i === "" ? "" : l || typeof i != "number" || i === 0 || Je.hasOwnProperty(a) && Je[a] ? ("" + i).trim() : i + "px";
  }
  function Ot(a, i) {
    a = a.style;
    for (var l in i) if (i.hasOwnProperty(l)) {
      var d = l.indexOf("--") === 0, m = Nt(l, i[l], d);
      l === "float" && (l = "cssFloat"), d ? a.setProperty(l, m) : a[l] = m;
    }
  }
  var Bt = I({ menuitem: !0 }, { area: !0, base: !0, br: !0, col: !0, embed: !0, hr: !0, img: !0, input: !0, keygen: !0, link: !0, meta: !0, param: !0, source: !0, track: !0, wbr: !0 });
  function Ct(a, i) {
    if (i) {
      if (Bt[a] && (i.children != null || i.dangerouslySetInnerHTML != null)) throw Error(n(137, a));
      if (i.dangerouslySetInnerHTML != null) {
        if (i.children != null) throw Error(n(60));
        if (typeof i.dangerouslySetInnerHTML != "object" || !("__html" in i.dangerouslySetInnerHTML)) throw Error(n(61));
      }
      if (i.style != null && typeof i.style != "object") throw Error(n(62));
    }
  }
  function jt(a, i) {
    if (a.indexOf("-") === -1) return typeof i.is == "string";
    switch (a) {
      case "annotation-xml":
      case "color-profile":
      case "font-face":
      case "font-face-src":
      case "font-face-uri":
      case "font-face-format":
      case "font-face-name":
      case "missing-glyph":
        return !1;
      default:
        return !0;
    }
  }
  var _t = null;
  function dt(a) {
    return a = a.target || a.srcElement || window, a.correspondingUseElement && (a = a.correspondingUseElement), a.nodeType === 3 ? a.parentNode : a;
  }
  var Et = null, zn = null, Zr = null;
  function Io(a) {
    if (a = Zo(a)) {
      if (typeof Et != "function") throw Error(n(280));
      var i = a.stateNode;
      i && (i = vl(i), Et(a.stateNode, a.type, i));
    }
  }
  function Ro(a) {
    zn ? Zr ? Zr.push(a) : Zr = [a] : zn = a;
  }
  function xo() {
    if (zn) {
      var a = zn, i = Zr;
      if (Zr = zn = null, Io(a), i) for (a = 0; a < i.length; a++) Io(i[a]);
    }
  }
  function bi(a, i) {
    return a(i);
  }
  function _1() {
  }
  var Tc = !1;
  function v1(a, i, l) {
    if (Tc) return a(i, l);
    Tc = !0;
    try {
      return bi(a, i, l);
    } finally {
      Tc = !1, (zn !== null || Zr !== null) && (_1(), xo());
    }
  }
  function No(a, i) {
    var l = a.stateNode;
    if (l === null) return null;
    var d = vl(l);
    if (d === null) return null;
    l = d[i];
    e: switch (i) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
      case "onMouseEnter":
        (d = !d.disabled) || (a = a.type, d = !(a === "button" || a === "input" || a === "select" || a === "textarea")), a = !d;
        break e;
      default:
        a = !1;
    }
    if (a) return null;
    if (l && typeof l != "function") throw Error(n(231, i, typeof l));
    return l;
  }
  var Sc = !1;
  if (c) try {
    var Oo = {};
    Object.defineProperty(Oo, "passive", { get: function() {
      Sc = !0;
    } }), window.addEventListener("test", Oo, Oo), window.removeEventListener("test", Oo, Oo);
  } catch {
    Sc = !1;
  }
  function y2(a, i, l, d, m, E, S, P, z) {
    var ee = Array.prototype.slice.call(arguments, 3);
    try {
      i.apply(l, ee);
    } catch (ce) {
      this.onError(ce);
    }
  }
  var Lo = !1, tl = null, nl = !1, _c = null, T2 = { onError: function(a) {
    Lo = !0, tl = a;
  } };
  function S2(a, i, l, d, m, E, S, P, z) {
    Lo = !1, tl = null, y2.apply(T2, arguments);
  }
  function _2(a, i, l, d, m, E, S, P, z) {
    if (S2.apply(this, arguments), Lo) {
      if (Lo) {
        var ee = tl;
        Lo = !1, tl = null;
      } else throw Error(n(198));
      nl || (nl = !0, _c = ee);
    }
  }
  function Pa(a) {
    var i = a, l = a;
    if (a.alternate) for (; i.return; ) i = i.return;
    else {
      a = i;
      do
        i = a, i.flags & 4098 && (l = i.return), a = i.return;
      while (a);
    }
    return i.tag === 3 ? l : null;
  }
  function A1(a) {
    if (a.tag === 13) {
      var i = a.memoizedState;
      if (i === null && (a = a.alternate, a !== null && (i = a.memoizedState)), i !== null) return i.dehydrated;
    }
    return null;
  }
  function k1(a) {
    if (Pa(a) !== a) throw Error(n(188));
  }
  function v2(a) {
    var i = a.alternate;
    if (!i) {
      if (i = Pa(a), i === null) throw Error(n(188));
      return i !== a ? null : a;
    }
    for (var l = a, d = i; ; ) {
      var m = l.return;
      if (m === null) break;
      var E = m.alternate;
      if (E === null) {
        if (d = m.return, d !== null) {
          l = d;
          continue;
        }
        break;
      }
      if (m.child === E.child) {
        for (E = m.child; E; ) {
          if (E === l) return k1(m), a;
          if (E === d) return k1(m), i;
          E = E.sibling;
        }
        throw Error(n(188));
      }
      if (l.return !== d.return) l = m, d = E;
      else {
        for (var S = !1, P = m.child; P; ) {
          if (P === l) {
            S = !0, l = m, d = E;
            break;
          }
          if (P === d) {
            S = !0, d = m, l = E;
            break;
          }
          P = P.sibling;
        }
        if (!S) {
          for (P = E.child; P; ) {
            if (P === l) {
              S = !0, l = E, d = m;
              break;
            }
            if (P === d) {
              S = !0, d = E, l = m;
              break;
            }
            P = P.sibling;
          }
          if (!S) throw Error(n(189));
        }
      }
      if (l.alternate !== d) throw Error(n(190));
    }
    if (l.tag !== 3) throw Error(n(188));
    return l.stateNode.current === l ? a : i;
  }
  function C1(a) {
    return a = v2(a), a !== null ? w1(a) : null;
  }
  function w1(a) {
    if (a.tag === 5 || a.tag === 6) return a;
    for (a = a.child; a !== null; ) {
      var i = w1(a);
      if (i !== null) return i;
      a = a.sibling;
    }
    return null;
  }
  var I1 = t.unstable_scheduleCallback, R1 = t.unstable_cancelCallback, A2 = t.unstable_shouldYield, k2 = t.unstable_requestPaint, wt = t.unstable_now, C2 = t.unstable_getCurrentPriorityLevel, vc = t.unstable_ImmediatePriority, x1 = t.unstable_UserBlockingPriority, rl = t.unstable_NormalPriority, w2 = t.unstable_LowPriority, N1 = t.unstable_IdlePriority, al = null, Tr = null;
  function I2(a) {
    if (Tr && typeof Tr.onCommitFiberRoot == "function") try {
      Tr.onCommitFiberRoot(al, a, void 0, (a.current.flags & 128) === 128);
    } catch {
    }
  }
  var ir = Math.clz32 ? Math.clz32 : N2, R2 = Math.log, x2 = Math.LN2;
  function N2(a) {
    return a >>>= 0, a === 0 ? 32 : 31 - (R2(a) / x2 | 0) | 0;
  }
  var il = 64, ol = 4194304;
  function Do(a) {
    switch (a & -a) {
      case 1:
        return 1;
      case 2:
        return 2;
      case 4:
        return 4;
      case 8:
        return 8;
      case 16:
        return 16;
      case 32:
        return 32;
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return a & 4194240;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return a & 130023424;
      case 134217728:
        return 134217728;
      case 268435456:
        return 268435456;
      case 536870912:
        return 536870912;
      case 1073741824:
        return 1073741824;
      default:
        return a;
    }
  }
  function sl(a, i) {
    var l = a.pendingLanes;
    if (l === 0) return 0;
    var d = 0, m = a.suspendedLanes, E = a.pingedLanes, S = l & 268435455;
    if (S !== 0) {
      var P = S & ~m;
      P !== 0 ? d = Do(P) : (E &= S, E !== 0 && (d = Do(E)));
    } else S = l & ~m, S !== 0 ? d = Do(S) : E !== 0 && (d = Do(E));
    if (d === 0) return 0;
    if (i !== 0 && i !== d && !(i & m) && (m = d & -d, E = i & -i, m >= E || m === 16 && (E & 4194240) !== 0)) return i;
    if (d & 4 && (d |= l & 16), i = a.entangledLanes, i !== 0) for (a = a.entanglements, i &= d; 0 < i; ) l = 31 - ir(i), m = 1 << l, d |= a[l], i &= ~m;
    return d;
  }
  function O2(a, i) {
    switch (a) {
      case 1:
      case 2:
      case 4:
        return i + 250;
      case 8:
      case 16:
      case 32:
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return i + 5e3;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return -1;
      case 134217728:
      case 268435456:
      case 536870912:
      case 1073741824:
        return -1;
      default:
        return -1;
    }
  }
  function L2(a, i) {
    for (var l = a.suspendedLanes, d = a.pingedLanes, m = a.expirationTimes, E = a.pendingLanes; 0 < E; ) {
      var S = 31 - ir(E), P = 1 << S, z = m[S];
      z === -1 ? (!(P & l) || P & d) && (m[S] = O2(P, i)) : z <= i && (a.expiredLanes |= P), E &= ~P;
    }
  }
  function Ac(a) {
    return a = a.pendingLanes & -1073741825, a !== 0 ? a : a & 1073741824 ? 1073741824 : 0;
  }
  function O1() {
    var a = il;
    return il <<= 1, !(il & 4194240) && (il = 64), a;
  }
  function kc(a) {
    for (var i = [], l = 0; 31 > l; l++) i.push(a);
    return i;
  }
  function Mo(a, i, l) {
    a.pendingLanes |= i, i !== 536870912 && (a.suspendedLanes = 0, a.pingedLanes = 0), a = a.eventTimes, i = 31 - ir(i), a[i] = l;
  }
  function D2(a, i) {
    var l = a.pendingLanes & ~i;
    a.pendingLanes = i, a.suspendedLanes = 0, a.pingedLanes = 0, a.expiredLanes &= i, a.mutableReadLanes &= i, a.entangledLanes &= i, i = a.entanglements;
    var d = a.eventTimes;
    for (a = a.expirationTimes; 0 < l; ) {
      var m = 31 - ir(l), E = 1 << m;
      i[m] = 0, d[m] = -1, a[m] = -1, l &= ~E;
    }
  }
  function Cc(a, i) {
    var l = a.entangledLanes |= i;
    for (a = a.entanglements; l; ) {
      var d = 31 - ir(l), m = 1 << d;
      m & i | a[d] & i && (a[d] |= i), l &= ~m;
    }
  }
  var it = 0;
  function L1(a) {
    return a &= -a, 1 < a ? 4 < a ? a & 268435455 ? 16 : 536870912 : 4 : 1;
  }
  var D1, wc, M1, P1, F1, Ic = !1, ll = [], Jr = null, ea = null, ta = null, Po = /* @__PURE__ */ new Map(), Fo = /* @__PURE__ */ new Map(), na = [], M2 = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
  function B1(a, i) {
    switch (a) {
      case "focusin":
      case "focusout":
        Jr = null;
        break;
      case "dragenter":
      case "dragleave":
        ea = null;
        break;
      case "mouseover":
      case "mouseout":
        ta = null;
        break;
      case "pointerover":
      case "pointerout":
        Po.delete(i.pointerId);
        break;
      case "gotpointercapture":
      case "lostpointercapture":
        Fo.delete(i.pointerId);
    }
  }
  function Bo(a, i, l, d, m, E) {
    return a === null || a.nativeEvent !== E ? (a = { blockedOn: i, domEventName: l, eventSystemFlags: d, nativeEvent: E, targetContainers: [m] }, i !== null && (i = Zo(i), i !== null && wc(i)), a) : (a.eventSystemFlags |= d, i = a.targetContainers, m !== null && i.indexOf(m) === -1 && i.push(m), a);
  }
  function P2(a, i, l, d, m) {
    switch (i) {
      case "focusin":
        return Jr = Bo(Jr, a, i, l, d, m), !0;
      case "dragenter":
        return ea = Bo(ea, a, i, l, d, m), !0;
      case "mouseover":
        return ta = Bo(ta, a, i, l, d, m), !0;
      case "pointerover":
        var E = m.pointerId;
        return Po.set(E, Bo(Po.get(E) || null, a, i, l, d, m)), !0;
      case "gotpointercapture":
        return E = m.pointerId, Fo.set(E, Bo(Fo.get(E) || null, a, i, l, d, m)), !0;
    }
    return !1;
  }
  function U1(a) {
    var i = Fa(a.target);
    if (i !== null) {
      var l = Pa(i);
      if (l !== null) {
        if (i = l.tag, i === 13) {
          if (i = A1(l), i !== null) {
            a.blockedOn = i, F1(a.priority, function() {
              M1(l);
            });
            return;
          }
        } else if (i === 3 && l.stateNode.current.memoizedState.isDehydrated) {
          a.blockedOn = l.tag === 3 ? l.stateNode.containerInfo : null;
          return;
        }
      }
    }
    a.blockedOn = null;
  }
  function ul(a) {
    if (a.blockedOn !== null) return !1;
    for (var i = a.targetContainers; 0 < i.length; ) {
      var l = xc(a.domEventName, a.eventSystemFlags, i[0], a.nativeEvent);
      if (l === null) {
        l = a.nativeEvent;
        var d = new l.constructor(l.type, l);
        _t = d, l.target.dispatchEvent(d), _t = null;
      } else return i = Zo(l), i !== null && wc(i), a.blockedOn = l, !1;
      i.shift();
    }
    return !0;
  }
  function H1(a, i, l) {
    ul(a) && l.delete(i);
  }
  function F2() {
    Ic = !1, Jr !== null && ul(Jr) && (Jr = null), ea !== null && ul(ea) && (ea = null), ta !== null && ul(ta) && (ta = null), Po.forEach(H1), Fo.forEach(H1);
  }
  function Uo(a, i) {
    a.blockedOn === i && (a.blockedOn = null, Ic || (Ic = !0, t.unstable_scheduleCallback(t.unstable_NormalPriority, F2)));
  }
  function Ho(a) {
    function i(m) {
      return Uo(m, a);
    }
    if (0 < ll.length) {
      Uo(ll[0], a);
      for (var l = 1; l < ll.length; l++) {
        var d = ll[l];
        d.blockedOn === a && (d.blockedOn = null);
      }
    }
    for (Jr !== null && Uo(Jr, a), ea !== null && Uo(ea, a), ta !== null && Uo(ta, a), Po.forEach(i), Fo.forEach(i), l = 0; l < na.length; l++) d = na[l], d.blockedOn === a && (d.blockedOn = null);
    for (; 0 < na.length && (l = na[0], l.blockedOn === null); ) U1(l), l.blockedOn === null && na.shift();
  }
  var Ei = O.ReactCurrentBatchConfig, cl = !0;
  function B2(a, i, l, d) {
    var m = it, E = Ei.transition;
    Ei.transition = null;
    try {
      it = 1, Rc(a, i, l, d);
    } finally {
      it = m, Ei.transition = E;
    }
  }
  function U2(a, i, l, d) {
    var m = it, E = Ei.transition;
    Ei.transition = null;
    try {
      it = 4, Rc(a, i, l, d);
    } finally {
      it = m, Ei.transition = E;
    }
  }
  function Rc(a, i, l, d) {
    if (cl) {
      var m = xc(a, i, l, d);
      if (m === null) Wc(a, i, d, dl, l), B1(a, d);
      else if (P2(m, a, i, l, d)) d.stopPropagation();
      else if (B1(a, d), i & 4 && -1 < M2.indexOf(a)) {
        for (; m !== null; ) {
          var E = Zo(m);
          if (E !== null && D1(E), E = xc(a, i, l, d), E === null && Wc(a, i, d, dl, l), E === m) break;
          m = E;
        }
        m !== null && d.stopPropagation();
      } else Wc(a, i, d, null, l);
    }
  }
  var dl = null;
  function xc(a, i, l, d) {
    if (dl = null, a = dt(d), a = Fa(a), a !== null) if (i = Pa(a), i === null) a = null;
    else if (l = i.tag, l === 13) {
      if (a = A1(i), a !== null) return a;
      a = null;
    } else if (l === 3) {
      if (i.stateNode.current.memoizedState.isDehydrated) return i.tag === 3 ? i.stateNode.containerInfo : null;
      a = null;
    } else i !== a && (a = null);
    return dl = a, null;
  }
  function $1(a) {
    switch (a) {
      case "cancel":
      case "click":
      case "close":
      case "contextmenu":
      case "copy":
      case "cut":
      case "auxclick":
      case "dblclick":
      case "dragend":
      case "dragstart":
      case "drop":
      case "focusin":
      case "focusout":
      case "input":
      case "invalid":
      case "keydown":
      case "keypress":
      case "keyup":
      case "mousedown":
      case "mouseup":
      case "paste":
      case "pause":
      case "play":
      case "pointercancel":
      case "pointerdown":
      case "pointerup":
      case "ratechange":
      case "reset":
      case "resize":
      case "seeked":
      case "submit":
      case "touchcancel":
      case "touchend":
      case "touchstart":
      case "volumechange":
      case "change":
      case "selectionchange":
      case "textInput":
      case "compositionstart":
      case "compositionend":
      case "compositionupdate":
      case "beforeblur":
      case "afterblur":
      case "beforeinput":
      case "blur":
      case "fullscreenchange":
      case "focus":
      case "hashchange":
      case "popstate":
      case "select":
      case "selectstart":
        return 1;
      case "drag":
      case "dragenter":
      case "dragexit":
      case "dragleave":
      case "dragover":
      case "mousemove":
      case "mouseout":
      case "mouseover":
      case "pointermove":
      case "pointerout":
      case "pointerover":
      case "scroll":
      case "toggle":
      case "touchmove":
      case "wheel":
      case "mouseenter":
      case "mouseleave":
      case "pointerenter":
      case "pointerleave":
        return 4;
      case "message":
        switch (C2()) {
          case vc:
            return 1;
          case x1:
            return 4;
          case rl:
          case w2:
            return 16;
          case N1:
            return 536870912;
          default:
            return 16;
        }
      default:
        return 16;
    }
  }
  var ra = null, Nc = null, pl = null;
  function z1() {
    if (pl) return pl;
    var a, i = Nc, l = i.length, d, m = "value" in ra ? ra.value : ra.textContent, E = m.length;
    for (a = 0; a < l && i[a] === m[a]; a++) ;
    var S = l - a;
    for (d = 1; d <= S && i[l - d] === m[E - d]; d++) ;
    return pl = m.slice(a, 1 < d ? 1 - d : void 0);
  }
  function fl(a) {
    var i = a.keyCode;
    return "charCode" in a ? (a = a.charCode, a === 0 && i === 13 && (a = 13)) : a = i, a === 10 && (a = 13), 32 <= a || a === 13 ? a : 0;
  }
  function hl() {
    return !0;
  }
  function G1() {
    return !1;
  }
  function Dn(a) {
    function i(l, d, m, E, S) {
      this._reactName = l, this._targetInst = m, this.type = d, this.nativeEvent = E, this.target = S, this.currentTarget = null;
      for (var P in a) a.hasOwnProperty(P) && (l = a[P], this[P] = l ? l(E) : E[P]);
      return this.isDefaultPrevented = (E.defaultPrevented != null ? E.defaultPrevented : E.returnValue === !1) ? hl : G1, this.isPropagationStopped = G1, this;
    }
    return I(i.prototype, { preventDefault: function() {
      this.defaultPrevented = !0;
      var l = this.nativeEvent;
      l && (l.preventDefault ? l.preventDefault() : typeof l.returnValue != "unknown" && (l.returnValue = !1), this.isDefaultPrevented = hl);
    }, stopPropagation: function() {
      var l = this.nativeEvent;
      l && (l.stopPropagation ? l.stopPropagation() : typeof l.cancelBubble != "unknown" && (l.cancelBubble = !0), this.isPropagationStopped = hl);
    }, persist: function() {
    }, isPersistent: hl }), i;
  }
  var yi = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(a) {
    return a.timeStamp || Date.now();
  }, defaultPrevented: 0, isTrusted: 0 }, Oc = Dn(yi), $o = I({}, yi, { view: 0, detail: 0 }), H2 = Dn($o), Lc, Dc, zo, gl = I({}, $o, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: Pc, button: 0, buttons: 0, relatedTarget: function(a) {
    return a.relatedTarget === void 0 ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget;
  }, movementX: function(a) {
    return "movementX" in a ? a.movementX : (a !== zo && (zo && a.type === "mousemove" ? (Lc = a.screenX - zo.screenX, Dc = a.screenY - zo.screenY) : Dc = Lc = 0, zo = a), Lc);
  }, movementY: function(a) {
    return "movementY" in a ? a.movementY : Dc;
  } }), q1 = Dn(gl), $2 = I({}, gl, { dataTransfer: 0 }), z2 = Dn($2), G2 = I({}, $o, { relatedTarget: 0 }), Mc = Dn(G2), q2 = I({}, yi, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), j2 = Dn(q2), V2 = I({}, yi, { clipboardData: function(a) {
    return "clipboardData" in a ? a.clipboardData : window.clipboardData;
  } }), W2 = Dn(V2), Y2 = I({}, yi, { data: 0 }), j1 = Dn(Y2), K2 = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified"
  }, X2 = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta"
  }, Q2 = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
  function Z2(a) {
    var i = this.nativeEvent;
    return i.getModifierState ? i.getModifierState(a) : (a = Q2[a]) ? !!i[a] : !1;
  }
  function Pc() {
    return Z2;
  }
  var J2 = I({}, $o, { key: function(a) {
    if (a.key) {
      var i = K2[a.key] || a.key;
      if (i !== "Unidentified") return i;
    }
    return a.type === "keypress" ? (a = fl(a), a === 13 ? "Enter" : String.fromCharCode(a)) : a.type === "keydown" || a.type === "keyup" ? X2[a.keyCode] || "Unidentified" : "";
  }, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: Pc, charCode: function(a) {
    return a.type === "keypress" ? fl(a) : 0;
  }, keyCode: function(a) {
    return a.type === "keydown" || a.type === "keyup" ? a.keyCode : 0;
  }, which: function(a) {
    return a.type === "keypress" ? fl(a) : a.type === "keydown" || a.type === "keyup" ? a.keyCode : 0;
  } }), eO = Dn(J2), tO = I({}, gl, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), V1 = Dn(tO), nO = I({}, $o, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: Pc }), rO = Dn(nO), aO = I({}, yi, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), iO = Dn(aO), oO = I({}, gl, {
    deltaX: function(a) {
      return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
    },
    deltaY: function(a) {
      return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
    },
    deltaZ: 0,
    deltaMode: 0
  }), sO = Dn(oO), lO = [9, 13, 27, 32], Fc = c && "CompositionEvent" in window, Go = null;
  c && "documentMode" in document && (Go = document.documentMode);
  var uO = c && "TextEvent" in window && !Go, W1 = c && (!Fc || Go && 8 < Go && 11 >= Go), Y1 = " ", K1 = !1;
  function X1(a, i) {
    switch (a) {
      case "keyup":
        return lO.indexOf(i.keyCode) !== -1;
      case "keydown":
        return i.keyCode !== 229;
      case "keypress":
      case "mousedown":
      case "focusout":
        return !0;
      default:
        return !1;
    }
  }
  function Q1(a) {
    return a = a.detail, typeof a == "object" && "data" in a ? a.data : null;
  }
  var Ti = !1;
  function cO(a, i) {
    switch (a) {
      case "compositionend":
        return Q1(i);
      case "keypress":
        return i.which !== 32 ? null : (K1 = !0, Y1);
      case "textInput":
        return a = i.data, a === Y1 && K1 ? null : a;
      default:
        return null;
    }
  }
  function dO(a, i) {
    if (Ti) return a === "compositionend" || !Fc && X1(a, i) ? (a = z1(), pl = Nc = ra = null, Ti = !1, a) : null;
    switch (a) {
      case "paste":
        return null;
      case "keypress":
        if (!(i.ctrlKey || i.altKey || i.metaKey) || i.ctrlKey && i.altKey) {
          if (i.char && 1 < i.char.length) return i.char;
          if (i.which) return String.fromCharCode(i.which);
        }
        return null;
      case "compositionend":
        return W1 && i.locale !== "ko" ? null : i.data;
      default:
        return null;
    }
  }
  var pO = { color: !0, date: !0, datetime: !0, "datetime-local": !0, email: !0, month: !0, number: !0, password: !0, range: !0, search: !0, tel: !0, text: !0, time: !0, url: !0, week: !0 };
  function Z1(a) {
    var i = a && a.nodeName && a.nodeName.toLowerCase();
    return i === "input" ? !!pO[a.type] : i === "textarea";
  }
  function J1(a, i, l, d) {
    Ro(d), i = Tl(i, "onChange"), 0 < i.length && (l = new Oc("onChange", "change", null, l, d), a.push({ event: l, listeners: i }));
  }
  var qo = null, jo = null;
  function fO(a) {
    by(a, 0);
  }
  function ml(a) {
    var i = ki(a);
    if (kt(i)) return a;
  }
  function hO(a, i) {
    if (a === "change") return i;
  }
  var ey = !1;
  if (c) {
    var Bc;
    if (c) {
      var Uc = "oninput" in document;
      if (!Uc) {
        var ty = document.createElement("div");
        ty.setAttribute("oninput", "return;"), Uc = typeof ty.oninput == "function";
      }
      Bc = Uc;
    } else Bc = !1;
    ey = Bc && (!document.documentMode || 9 < document.documentMode);
  }
  function ny() {
    qo && (qo.detachEvent("onpropertychange", ry), jo = qo = null);
  }
  function ry(a) {
    if (a.propertyName === "value" && ml(jo)) {
      var i = [];
      J1(i, jo, a, dt(a)), v1(fO, i);
    }
  }
  function gO(a, i, l) {
    a === "focusin" ? (ny(), qo = i, jo = l, qo.attachEvent("onpropertychange", ry)) : a === "focusout" && ny();
  }
  function mO(a) {
    if (a === "selectionchange" || a === "keyup" || a === "keydown") return ml(jo);
  }
  function bO(a, i) {
    if (a === "click") return ml(i);
  }
  function EO(a, i) {
    if (a === "input" || a === "change") return ml(i);
  }
  function yO(a, i) {
    return a === i && (a !== 0 || 1 / a === 1 / i) || a !== a && i !== i;
  }
  var or = typeof Object.is == "function" ? Object.is : yO;
  function Vo(a, i) {
    if (or(a, i)) return !0;
    if (typeof a != "object" || a === null || typeof i != "object" || i === null) return !1;
    var l = Object.keys(a), d = Object.keys(i);
    if (l.length !== d.length) return !1;
    for (d = 0; d < l.length; d++) {
      var m = l[d];
      if (!p.call(i, m) || !or(a[m], i[m])) return !1;
    }
    return !0;
  }
  function ay(a) {
    for (; a && a.firstChild; ) a = a.firstChild;
    return a;
  }
  function iy(a, i) {
    var l = ay(a);
    a = 0;
    for (var d; l; ) {
      if (l.nodeType === 3) {
        if (d = a + l.textContent.length, a <= i && d >= i) return { node: l, offset: i - a };
        a = d;
      }
      e: {
        for (; l; ) {
          if (l.nextSibling) {
            l = l.nextSibling;
            break e;
          }
          l = l.parentNode;
        }
        l = void 0;
      }
      l = ay(l);
    }
  }
  function oy(a, i) {
    return a && i ? a === i ? !0 : a && a.nodeType === 3 ? !1 : i && i.nodeType === 3 ? oy(a, i.parentNode) : "contains" in a ? a.contains(i) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(i) & 16) : !1 : !1;
  }
  function sy() {
    for (var a = window, i = zt(); i instanceof a.HTMLIFrameElement; ) {
      try {
        var l = typeof i.contentWindow.location.href == "string";
      } catch {
        l = !1;
      }
      if (l) a = i.contentWindow;
      else break;
      i = zt(a.document);
    }
    return i;
  }
  function Hc(a) {
    var i = a && a.nodeName && a.nodeName.toLowerCase();
    return i && (i === "input" && (a.type === "text" || a.type === "search" || a.type === "tel" || a.type === "url" || a.type === "password") || i === "textarea" || a.contentEditable === "true");
  }
  function TO(a) {
    var i = sy(), l = a.focusedElem, d = a.selectionRange;
    if (i !== l && l && l.ownerDocument && oy(l.ownerDocument.documentElement, l)) {
      if (d !== null && Hc(l)) {
        if (i = d.start, a = d.end, a === void 0 && (a = i), "selectionStart" in l) l.selectionStart = i, l.selectionEnd = Math.min(a, l.value.length);
        else if (a = (i = l.ownerDocument || document) && i.defaultView || window, a.getSelection) {
          a = a.getSelection();
          var m = l.textContent.length, E = Math.min(d.start, m);
          d = d.end === void 0 ? E : Math.min(d.end, m), !a.extend && E > d && (m = d, d = E, E = m), m = iy(l, E);
          var S = iy(
            l,
            d
          );
          m && S && (a.rangeCount !== 1 || a.anchorNode !== m.node || a.anchorOffset !== m.offset || a.focusNode !== S.node || a.focusOffset !== S.offset) && (i = i.createRange(), i.setStart(m.node, m.offset), a.removeAllRanges(), E > d ? (a.addRange(i), a.extend(S.node, S.offset)) : (i.setEnd(S.node, S.offset), a.addRange(i)));
        }
      }
      for (i = [], a = l; a = a.parentNode; ) a.nodeType === 1 && i.push({ element: a, left: a.scrollLeft, top: a.scrollTop });
      for (typeof l.focus == "function" && l.focus(), l = 0; l < i.length; l++) a = i[l], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;
    }
  }
  var SO = c && "documentMode" in document && 11 >= document.documentMode, Si = null, $c = null, Wo = null, zc = !1;
  function ly(a, i, l) {
    var d = l.window === l ? l.document : l.nodeType === 9 ? l : l.ownerDocument;
    zc || Si == null || Si !== zt(d) || (d = Si, "selectionStart" in d && Hc(d) ? d = { start: d.selectionStart, end: d.selectionEnd } : (d = (d.ownerDocument && d.ownerDocument.defaultView || window).getSelection(), d = { anchorNode: d.anchorNode, anchorOffset: d.anchorOffset, focusNode: d.focusNode, focusOffset: d.focusOffset }), Wo && Vo(Wo, d) || (Wo = d, d = Tl($c, "onSelect"), 0 < d.length && (i = new Oc("onSelect", "select", null, i, l), a.push({ event: i, listeners: d }), i.target = Si)));
  }
  function bl(a, i) {
    var l = {};
    return l[a.toLowerCase()] = i.toLowerCase(), l["Webkit" + a] = "webkit" + i, l["Moz" + a] = "moz" + i, l;
  }
  var _i = { animationend: bl("Animation", "AnimationEnd"), animationiteration: bl("Animation", "AnimationIteration"), animationstart: bl("Animation", "AnimationStart"), transitionend: bl("Transition", "TransitionEnd") }, Gc = {}, uy = {};
  c && (uy = document.createElement("div").style, "AnimationEvent" in window || (delete _i.animationend.animation, delete _i.animationiteration.animation, delete _i.animationstart.animation), "TransitionEvent" in window || delete _i.transitionend.transition);
  function El(a) {
    if (Gc[a]) return Gc[a];
    if (!_i[a]) return a;
    var i = _i[a], l;
    for (l in i) if (i.hasOwnProperty(l) && l in uy) return Gc[a] = i[l];
    return a;
  }
  var cy = El("animationend"), dy = El("animationiteration"), py = El("animationstart"), fy = El("transitionend"), hy = /* @__PURE__ */ new Map(), gy = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
  function aa(a, i) {
    hy.set(a, i), s(i, [a]);
  }
  for (var qc = 0; qc < gy.length; qc++) {
    var jc = gy[qc], _O = jc.toLowerCase(), vO = jc[0].toUpperCase() + jc.slice(1);
    aa(_O, "on" + vO);
  }
  aa(cy, "onAnimationEnd"), aa(dy, "onAnimationIteration"), aa(py, "onAnimationStart"), aa("dblclick", "onDoubleClick"), aa("focusin", "onFocus"), aa("focusout", "onBlur"), aa(fy, "onTransitionEnd"), u("onMouseEnter", ["mouseout", "mouseover"]), u("onMouseLeave", ["mouseout", "mouseover"]), u("onPointerEnter", ["pointerout", "pointerover"]), u("onPointerLeave", ["pointerout", "pointerover"]), s("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" ")), s("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")), s("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), s("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" ")), s("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" ")), s("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
  var Yo = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), AO = new Set("cancel close invalid load scroll toggle".split(" ").concat(Yo));
  function my(a, i, l) {
    var d = a.type || "unknown-event";
    a.currentTarget = l, _2(d, i, void 0, a), a.currentTarget = null;
  }
  function by(a, i) {
    i = (i & 4) !== 0;
    for (var l = 0; l < a.length; l++) {
      var d = a[l], m = d.event;
      d = d.listeners;
      e: {
        var E = void 0;
        if (i) for (var S = d.length - 1; 0 <= S; S--) {
          var P = d[S], z = P.instance, ee = P.currentTarget;
          if (P = P.listener, z !== E && m.isPropagationStopped()) break e;
          my(m, P, ee), E = z;
        }
        else for (S = 0; S < d.length; S++) {
          if (P = d[S], z = P.instance, ee = P.currentTarget, P = P.listener, z !== E && m.isPropagationStopped()) break e;
          my(m, P, ee), E = z;
        }
      }
    }
    if (nl) throw a = _c, nl = !1, _c = null, a;
  }
  function pt(a, i) {
    var l = i[Jc];
    l === void 0 && (l = i[Jc] = /* @__PURE__ */ new Set());
    var d = a + "__bubble";
    l.has(d) || (Ey(i, a, 2, !1), l.add(d));
  }
  function Vc(a, i, l) {
    var d = 0;
    i && (d |= 4), Ey(l, a, d, i);
  }
  var yl = "_reactListening" + Math.random().toString(36).slice(2);
  function Ko(a) {
    if (!a[yl]) {
      a[yl] = !0, r.forEach(function(l) {
        l !== "selectionchange" && (AO.has(l) || Vc(l, !1, a), Vc(l, !0, a));
      });
      var i = a.nodeType === 9 ? a : a.ownerDocument;
      i === null || i[yl] || (i[yl] = !0, Vc("selectionchange", !1, i));
    }
  }
  function Ey(a, i, l, d) {
    switch ($1(i)) {
      case 1:
        var m = B2;
        break;
      case 4:
        m = U2;
        break;
      default:
        m = Rc;
    }
    l = m.bind(null, i, l, a), m = void 0, !Sc || i !== "touchstart" && i !== "touchmove" && i !== "wheel" || (m = !0), d ? m !== void 0 ? a.addEventListener(i, l, { capture: !0, passive: m }) : a.addEventListener(i, l, !0) : m !== void 0 ? a.addEventListener(i, l, { passive: m }) : a.addEventListener(i, l, !1);
  }
  function Wc(a, i, l, d, m) {
    var E = d;
    if (!(i & 1) && !(i & 2) && d !== null) e: for (; ; ) {
      if (d === null) return;
      var S = d.tag;
      if (S === 3 || S === 4) {
        var P = d.stateNode.containerInfo;
        if (P === m || P.nodeType === 8 && P.parentNode === m) break;
        if (S === 4) for (S = d.return; S !== null; ) {
          var z = S.tag;
          if ((z === 3 || z === 4) && (z = S.stateNode.containerInfo, z === m || z.nodeType === 8 && z.parentNode === m)) return;
          S = S.return;
        }
        for (; P !== null; ) {
          if (S = Fa(P), S === null) return;
          if (z = S.tag, z === 5 || z === 6) {
            d = E = S;
            continue e;
          }
          P = P.parentNode;
        }
      }
      d = d.return;
    }
    v1(function() {
      var ee = E, ce = dt(l), pe = [];
      e: {
        var le = hy.get(a);
        if (le !== void 0) {
          var Ae = Oc, we = a;
          switch (a) {
            case "keypress":
              if (fl(l) === 0) break e;
            case "keydown":
            case "keyup":
              Ae = eO;
              break;
            case "focusin":
              we = "focus", Ae = Mc;
              break;
            case "focusout":
              we = "blur", Ae = Mc;
              break;
            case "beforeblur":
            case "afterblur":
              Ae = Mc;
              break;
            case "click":
              if (l.button === 2) break e;
            case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            case "mouseout":
            case "mouseover":
            case "contextmenu":
              Ae = q1;
              break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
              Ae = z2;
              break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
              Ae = rO;
              break;
            case cy:
            case dy:
            case py:
              Ae = j2;
              break;
            case fy:
              Ae = iO;
              break;
            case "scroll":
              Ae = H2;
              break;
            case "wheel":
              Ae = sO;
              break;
            case "copy":
            case "cut":
            case "paste":
              Ae = W2;
              break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
              Ae = V1;
          }
          var Ie = (i & 4) !== 0, It = !Ie && a === "scroll", K = Ie ? le !== null ? le + "Capture" : null : le;
          Ie = [];
          for (var q = ee, Q; q !== null; ) {
            Q = q;
            var me = Q.stateNode;
            if (Q.tag === 5 && me !== null && (Q = me, K !== null && (me = No(q, K), me != null && Ie.push(Xo(q, me, Q)))), It) break;
            q = q.return;
          }
          0 < Ie.length && (le = new Ae(le, we, null, l, ce), pe.push({ event: le, listeners: Ie }));
        }
      }
      if (!(i & 7)) {
        e: {
          if (le = a === "mouseover" || a === "pointerover", Ae = a === "mouseout" || a === "pointerout", le && l !== _t && (we = l.relatedTarget || l.fromElement) && (Fa(we) || we[Mr])) break e;
          if ((Ae || le) && (le = ce.window === ce ? ce : (le = ce.ownerDocument) ? le.defaultView || le.parentWindow : window, Ae ? (we = l.relatedTarget || l.toElement, Ae = ee, we = we ? Fa(we) : null, we !== null && (It = Pa(we), we !== It || we.tag !== 5 && we.tag !== 6) && (we = null)) : (Ae = null, we = ee), Ae !== we)) {
            if (Ie = q1, me = "onMouseLeave", K = "onMouseEnter", q = "mouse", (a === "pointerout" || a === "pointerover") && (Ie = V1, me = "onPointerLeave", K = "onPointerEnter", q = "pointer"), It = Ae == null ? le : ki(Ae), Q = we == null ? le : ki(we), le = new Ie(me, q + "leave", Ae, l, ce), le.target = It, le.relatedTarget = Q, me = null, Fa(ce) === ee && (Ie = new Ie(K, q + "enter", we, l, ce), Ie.target = Q, Ie.relatedTarget = It, me = Ie), It = me, Ae && we) t: {
              for (Ie = Ae, K = we, q = 0, Q = Ie; Q; Q = vi(Q)) q++;
              for (Q = 0, me = K; me; me = vi(me)) Q++;
              for (; 0 < q - Q; ) Ie = vi(Ie), q--;
              for (; 0 < Q - q; ) K = vi(K), Q--;
              for (; q--; ) {
                if (Ie === K || K !== null && Ie === K.alternate) break t;
                Ie = vi(Ie), K = vi(K);
              }
              Ie = null;
            }
            else Ie = null;
            Ae !== null && yy(pe, le, Ae, Ie, !1), we !== null && It !== null && yy(pe, It, we, Ie, !0);
          }
        }
        e: {
          if (le = ee ? ki(ee) : window, Ae = le.nodeName && le.nodeName.toLowerCase(), Ae === "select" || Ae === "input" && le.type === "file") var xe = hO;
          else if (Z1(le)) if (ey) xe = EO;
          else {
            xe = mO;
            var Fe = gO;
          }
          else (Ae = le.nodeName) && Ae.toLowerCase() === "input" && (le.type === "checkbox" || le.type === "radio") && (xe = bO);
          if (xe && (xe = xe(a, ee))) {
            J1(pe, xe, l, ce);
            break e;
          }
          Fe && Fe(a, le, ee), a === "focusout" && (Fe = le._wrapperState) && Fe.controlled && le.type === "number" && ar(le, "number", le.value);
        }
        switch (Fe = ee ? ki(ee) : window, a) {
          case "focusin":
            (Z1(Fe) || Fe.contentEditable === "true") && (Si = Fe, $c = ee, Wo = null);
            break;
          case "focusout":
            Wo = $c = Si = null;
            break;
          case "mousedown":
            zc = !0;
            break;
          case "contextmenu":
          case "mouseup":
          case "dragend":
            zc = !1, ly(pe, l, ce);
            break;
          case "selectionchange":
            if (SO) break;
          case "keydown":
          case "keyup":
            ly(pe, l, ce);
        }
        var Be;
        if (Fc) e: {
          switch (a) {
            case "compositionstart":
              var $e = "onCompositionStart";
              break e;
            case "compositionend":
              $e = "onCompositionEnd";
              break e;
            case "compositionupdate":
              $e = "onCompositionUpdate";
              break e;
          }
          $e = void 0;
        }
        else Ti ? X1(a, l) && ($e = "onCompositionEnd") : a === "keydown" && l.keyCode === 229 && ($e = "onCompositionStart");
        $e && (W1 && l.locale !== "ko" && (Ti || $e !== "onCompositionStart" ? $e === "onCompositionEnd" && Ti && (Be = z1()) : (ra = ce, Nc = "value" in ra ? ra.value : ra.textContent, Ti = !0)), Fe = Tl(ee, $e), 0 < Fe.length && ($e = new j1($e, a, null, l, ce), pe.push({ event: $e, listeners: Fe }), Be ? $e.data = Be : (Be = Q1(l), Be !== null && ($e.data = Be)))), (Be = uO ? cO(a, l) : dO(a, l)) && (ee = Tl(ee, "onBeforeInput"), 0 < ee.length && (ce = new j1("onBeforeInput", "beforeinput", null, l, ce), pe.push({ event: ce, listeners: ee }), ce.data = Be));
      }
      by(pe, i);
    });
  }
  function Xo(a, i, l) {
    return { instance: a, listener: i, currentTarget: l };
  }
  function Tl(a, i) {
    for (var l = i + "Capture", d = []; a !== null; ) {
      var m = a, E = m.stateNode;
      m.tag === 5 && E !== null && (m = E, E = No(a, l), E != null && d.unshift(Xo(a, E, m)), E = No(a, i), E != null && d.push(Xo(a, E, m))), a = a.return;
    }
    return d;
  }
  function vi(a) {
    if (a === null) return null;
    do
      a = a.return;
    while (a && a.tag !== 5);
    return a || null;
  }
  function yy(a, i, l, d, m) {
    for (var E = i._reactName, S = []; l !== null && l !== d; ) {
      var P = l, z = P.alternate, ee = P.stateNode;
      if (z !== null && z === d) break;
      P.tag === 5 && ee !== null && (P = ee, m ? (z = No(l, E), z != null && S.unshift(Xo(l, z, P))) : m || (z = No(l, E), z != null && S.push(Xo(l, z, P)))), l = l.return;
    }
    S.length !== 0 && a.push({ event: i, listeners: S });
  }
  var kO = /\r\n?/g, CO = /\u0000|\uFFFD/g;
  function Ty(a) {
    return (typeof a == "string" ? a : "" + a).replace(kO, `
`).replace(CO, "");
  }
  function Sl(a, i, l) {
    if (i = Ty(i), Ty(a) !== i && l) throw Error(n(425));
  }
  function _l() {
  }
  var Yc = null, Kc = null;
  function Xc(a, i) {
    return a === "textarea" || a === "noscript" || typeof i.children == "string" || typeof i.children == "number" || typeof i.dangerouslySetInnerHTML == "object" && i.dangerouslySetInnerHTML !== null && i.dangerouslySetInnerHTML.__html != null;
  }
  var Qc = typeof setTimeout == "function" ? setTimeout : void 0, wO = typeof clearTimeout == "function" ? clearTimeout : void 0, Sy = typeof Promise == "function" ? Promise : void 0, IO = typeof queueMicrotask == "function" ? queueMicrotask : typeof Sy < "u" ? function(a) {
    return Sy.resolve(null).then(a).catch(RO);
  } : Qc;
  function RO(a) {
    setTimeout(function() {
      throw a;
    });
  }
  function Zc(a, i) {
    var l = i, d = 0;
    do {
      var m = l.nextSibling;
      if (a.removeChild(l), m && m.nodeType === 8) if (l = m.data, l === "/$") {
        if (d === 0) {
          a.removeChild(m), Ho(i);
          return;
        }
        d--;
      } else l !== "$" && l !== "$?" && l !== "$!" || d++;
      l = m;
    } while (l);
    Ho(i);
  }
  function ia(a) {
    for (; a != null; a = a.nextSibling) {
      var i = a.nodeType;
      if (i === 1 || i === 3) break;
      if (i === 8) {
        if (i = a.data, i === "$" || i === "$!" || i === "$?") break;
        if (i === "/$") return null;
      }
    }
    return a;
  }
  function _y(a) {
    a = a.previousSibling;
    for (var i = 0; a; ) {
      if (a.nodeType === 8) {
        var l = a.data;
        if (l === "$" || l === "$!" || l === "$?") {
          if (i === 0) return a;
          i--;
        } else l === "/$" && i++;
      }
      a = a.previousSibling;
    }
    return null;
  }
  var Ai = Math.random().toString(36).slice(2), Sr = "__reactFiber$" + Ai, Qo = "__reactProps$" + Ai, Mr = "__reactContainer$" + Ai, Jc = "__reactEvents$" + Ai, xO = "__reactListeners$" + Ai, NO = "__reactHandles$" + Ai;
  function Fa(a) {
    var i = a[Sr];
    if (i) return i;
    for (var l = a.parentNode; l; ) {
      if (i = l[Mr] || l[Sr]) {
        if (l = i.alternate, i.child !== null || l !== null && l.child !== null) for (a = _y(a); a !== null; ) {
          if (l = a[Sr]) return l;
          a = _y(a);
        }
        return i;
      }
      a = l, l = a.parentNode;
    }
    return null;
  }
  function Zo(a) {
    return a = a[Sr] || a[Mr], !a || a.tag !== 5 && a.tag !== 6 && a.tag !== 13 && a.tag !== 3 ? null : a;
  }
  function ki(a) {
    if (a.tag === 5 || a.tag === 6) return a.stateNode;
    throw Error(n(33));
  }
  function vl(a) {
    return a[Qo] || null;
  }
  var ed = [], Ci = -1;
  function oa(a) {
    return { current: a };
  }
  function ft(a) {
    0 > Ci || (a.current = ed[Ci], ed[Ci] = null, Ci--);
  }
  function lt(a, i) {
    Ci++, ed[Ci] = a.current, a.current = i;
  }
  var sa = {}, an = oa(sa), _n = oa(!1), Ba = sa;
  function wi(a, i) {
    var l = a.type.contextTypes;
    if (!l) return sa;
    var d = a.stateNode;
    if (d && d.__reactInternalMemoizedUnmaskedChildContext === i) return d.__reactInternalMemoizedMaskedChildContext;
    var m = {}, E;
    for (E in l) m[E] = i[E];
    return d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = i, a.__reactInternalMemoizedMaskedChildContext = m), m;
  }
  function vn(a) {
    return a = a.childContextTypes, a != null;
  }
  function Al() {
    ft(_n), ft(an);
  }
  function vy(a, i, l) {
    if (an.current !== sa) throw Error(n(168));
    lt(an, i), lt(_n, l);
  }
  function Ay(a, i, l) {
    var d = a.stateNode;
    if (i = i.childContextTypes, typeof d.getChildContext != "function") return l;
    d = d.getChildContext();
    for (var m in d) if (!(m in i)) throw Error(n(108, Oe(a) || "Unknown", m));
    return I({}, l, d);
  }
  function kl(a) {
    return a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || sa, Ba = an.current, lt(an, a), lt(_n, _n.current), !0;
  }
  function ky(a, i, l) {
    var d = a.stateNode;
    if (!d) throw Error(n(169));
    l ? (a = Ay(a, i, Ba), d.__reactInternalMemoizedMergedChildContext = a, ft(_n), ft(an), lt(an, a)) : ft(_n), lt(_n, l);
  }
  var Pr = null, Cl = !1, td = !1;
  function Cy(a) {
    Pr === null ? Pr = [a] : Pr.push(a);
  }
  function OO(a) {
    Cl = !0, Cy(a);
  }
  function la() {
    if (!td && Pr !== null) {
      td = !0;
      var a = 0, i = it;
      try {
        var l = Pr;
        for (it = 1; a < l.length; a++) {
          var d = l[a];
          do
            d = d(!0);
          while (d !== null);
        }
        Pr = null, Cl = !1;
      } catch (m) {
        throw Pr !== null && (Pr = Pr.slice(a + 1)), I1(vc, la), m;
      } finally {
        it = i, td = !1;
      }
    }
    return null;
  }
  var Ii = [], Ri = 0, wl = null, Il = 0, Gn = [], qn = 0, Ua = null, Fr = 1, Br = "";
  function Ha(a, i) {
    Ii[Ri++] = Il, Ii[Ri++] = wl, wl = a, Il = i;
  }
  function wy(a, i, l) {
    Gn[qn++] = Fr, Gn[qn++] = Br, Gn[qn++] = Ua, Ua = a;
    var d = Fr;
    a = Br;
    var m = 32 - ir(d) - 1;
    d &= ~(1 << m), l += 1;
    var E = 32 - ir(i) + m;
    if (30 < E) {
      var S = m - m % 5;
      E = (d & (1 << S) - 1).toString(32), d >>= S, m -= S, Fr = 1 << 32 - ir(i) + m | l << m | d, Br = E + a;
    } else Fr = 1 << E | l << m | d, Br = a;
  }
  function nd(a) {
    a.return !== null && (Ha(a, 1), wy(a, 1, 0));
  }
  function rd(a) {
    for (; a === wl; ) wl = Ii[--Ri], Ii[Ri] = null, Il = Ii[--Ri], Ii[Ri] = null;
    for (; a === Ua; ) Ua = Gn[--qn], Gn[qn] = null, Br = Gn[--qn], Gn[qn] = null, Fr = Gn[--qn], Gn[qn] = null;
  }
  var Mn = null, Pn = null, mt = !1, sr = null;
  function Iy(a, i) {
    var l = Yn(5, null, null, 0);
    l.elementType = "DELETED", l.stateNode = i, l.return = a, i = a.deletions, i === null ? (a.deletions = [l], a.flags |= 16) : i.push(l);
  }
  function Ry(a, i) {
    switch (a.tag) {
      case 5:
        var l = a.type;
        return i = i.nodeType !== 1 || l.toLowerCase() !== i.nodeName.toLowerCase() ? null : i, i !== null ? (a.stateNode = i, Mn = a, Pn = ia(i.firstChild), !0) : !1;
      case 6:
        return i = a.pendingProps === "" || i.nodeType !== 3 ? null : i, i !== null ? (a.stateNode = i, Mn = a, Pn = null, !0) : !1;
      case 13:
        return i = i.nodeType !== 8 ? null : i, i !== null ? (l = Ua !== null ? { id: Fr, overflow: Br } : null, a.memoizedState = { dehydrated: i, treeContext: l, retryLane: 1073741824 }, l = Yn(18, null, null, 0), l.stateNode = i, l.return = a, a.child = l, Mn = a, Pn = null, !0) : !1;
      default:
        return !1;
    }
  }
  function ad(a) {
    return (a.mode & 1) !== 0 && (a.flags & 128) === 0;
  }
  function id(a) {
    if (mt) {
      var i = Pn;
      if (i) {
        var l = i;
        if (!Ry(a, i)) {
          if (ad(a)) throw Error(n(418));
          i = ia(l.nextSibling);
          var d = Mn;
          i && Ry(a, i) ? Iy(d, l) : (a.flags = a.flags & -4097 | 2, mt = !1, Mn = a);
        }
      } else {
        if (ad(a)) throw Error(n(418));
        a.flags = a.flags & -4097 | 2, mt = !1, Mn = a;
      }
    }
  }
  function xy(a) {
    for (a = a.return; a !== null && a.tag !== 5 && a.tag !== 3 && a.tag !== 13; ) a = a.return;
    Mn = a;
  }
  function Rl(a) {
    if (a !== Mn) return !1;
    if (!mt) return xy(a), mt = !0, !1;
    var i;
    if ((i = a.tag !== 3) && !(i = a.tag !== 5) && (i = a.type, i = i !== "head" && i !== "body" && !Xc(a.type, a.memoizedProps)), i && (i = Pn)) {
      if (ad(a)) throw Ny(), Error(n(418));
      for (; i; ) Iy(a, i), i = ia(i.nextSibling);
    }
    if (xy(a), a.tag === 13) {
      if (a = a.memoizedState, a = a !== null ? a.dehydrated : null, !a) throw Error(n(317));
      e: {
        for (a = a.nextSibling, i = 0; a; ) {
          if (a.nodeType === 8) {
            var l = a.data;
            if (l === "/$") {
              if (i === 0) {
                Pn = ia(a.nextSibling);
                break e;
              }
              i--;
            } else l !== "$" && l !== "$!" && l !== "$?" || i++;
          }
          a = a.nextSibling;
        }
        Pn = null;
      }
    } else Pn = Mn ? ia(a.stateNode.nextSibling) : null;
    return !0;
  }
  function Ny() {
    for (var a = Pn; a; ) a = ia(a.nextSibling);
  }
  function xi() {
    Pn = Mn = null, mt = !1;
  }
  function od(a) {
    sr === null ? sr = [a] : sr.push(a);
  }
  var LO = O.ReactCurrentBatchConfig;
  function Jo(a, i, l) {
    if (a = l.ref, a !== null && typeof a != "function" && typeof a != "object") {
      if (l._owner) {
        if (l = l._owner, l) {
          if (l.tag !== 1) throw Error(n(309));
          var d = l.stateNode;
        }
        if (!d) throw Error(n(147, a));
        var m = d, E = "" + a;
        return i !== null && i.ref !== null && typeof i.ref == "function" && i.ref._stringRef === E ? i.ref : (i = function(S) {
          var P = m.refs;
          S === null ? delete P[E] : P[E] = S;
        }, i._stringRef = E, i);
      }
      if (typeof a != "string") throw Error(n(284));
      if (!l._owner) throw Error(n(290, a));
    }
    return a;
  }
  function xl(a, i) {
    throw a = Object.prototype.toString.call(i), Error(n(31, a === "[object Object]" ? "object with keys {" + Object.keys(i).join(", ") + "}" : a));
  }
  function Oy(a) {
    var i = a._init;
    return i(a._payload);
  }
  function Ly(a) {
    function i(K, q) {
      if (a) {
        var Q = K.deletions;
        Q === null ? (K.deletions = [q], K.flags |= 16) : Q.push(q);
      }
    }
    function l(K, q) {
      if (!a) return null;
      for (; q !== null; ) i(K, q), q = q.sibling;
      return null;
    }
    function d(K, q) {
      for (K = /* @__PURE__ */ new Map(); q !== null; ) q.key !== null ? K.set(q.key, q) : K.set(q.index, q), q = q.sibling;
      return K;
    }
    function m(K, q) {
      return K = ma(K, q), K.index = 0, K.sibling = null, K;
    }
    function E(K, q, Q) {
      return K.index = Q, a ? (Q = K.alternate, Q !== null ? (Q = Q.index, Q < q ? (K.flags |= 2, q) : Q) : (K.flags |= 2, q)) : (K.flags |= 1048576, q);
    }
    function S(K) {
      return a && K.alternate === null && (K.flags |= 2), K;
    }
    function P(K, q, Q, me) {
      return q === null || q.tag !== 6 ? (q = Qd(Q, K.mode, me), q.return = K, q) : (q = m(q, Q), q.return = K, q);
    }
    function z(K, q, Q, me) {
      var xe = Q.type;
      return xe === B ? ce(K, q, Q.props.children, me, Q.key) : q !== null && (q.elementType === xe || typeof xe == "object" && xe !== null && xe.$$typeof === Ne && Oy(xe) === q.type) ? (me = m(q, Q.props), me.ref = Jo(K, q, Q), me.return = K, me) : (me = eu(Q.type, Q.key, Q.props, null, K.mode, me), me.ref = Jo(K, q, Q), me.return = K, me);
    }
    function ee(K, q, Q, me) {
      return q === null || q.tag !== 4 || q.stateNode.containerInfo !== Q.containerInfo || q.stateNode.implementation !== Q.implementation ? (q = Zd(Q, K.mode, me), q.return = K, q) : (q = m(q, Q.children || []), q.return = K, q);
    }
    function ce(K, q, Q, me, xe) {
      return q === null || q.tag !== 7 ? (q = Ya(Q, K.mode, me, xe), q.return = K, q) : (q = m(q, Q), q.return = K, q);
    }
    function pe(K, q, Q) {
      if (typeof q == "string" && q !== "" || typeof q == "number") return q = Qd("" + q, K.mode, Q), q.return = K, q;
      if (typeof q == "object" && q !== null) {
        switch (q.$$typeof) {
          case F:
            return Q = eu(q.type, q.key, q.props, null, K.mode, Q), Q.ref = Jo(K, null, q), Q.return = K, Q;
          case v:
            return q = Zd(q, K.mode, Q), q.return = K, q;
          case Ne:
            var me = q._init;
            return pe(K, me(q._payload), Q);
        }
        if (qt(q) || oe(q)) return q = Ya(q, K.mode, Q, null), q.return = K, q;
        xl(K, q);
      }
      return null;
    }
    function le(K, q, Q, me) {
      var xe = q !== null ? q.key : null;
      if (typeof Q == "string" && Q !== "" || typeof Q == "number") return xe !== null ? null : P(K, q, "" + Q, me);
      if (typeof Q == "object" && Q !== null) {
        switch (Q.$$typeof) {
          case F:
            return Q.key === xe ? z(K, q, Q, me) : null;
          case v:
            return Q.key === xe ? ee(K, q, Q, me) : null;
          case Ne:
            return xe = Q._init, le(
              K,
              q,
              xe(Q._payload),
              me
            );
        }
        if (qt(Q) || oe(Q)) return xe !== null ? null : ce(K, q, Q, me, null);
        xl(K, Q);
      }
      return null;
    }
    function Ae(K, q, Q, me, xe) {
      if (typeof me == "string" && me !== "" || typeof me == "number") return K = K.get(Q) || null, P(q, K, "" + me, xe);
      if (typeof me == "object" && me !== null) {
        switch (me.$$typeof) {
          case F:
            return K = K.get(me.key === null ? Q : me.key) || null, z(q, K, me, xe);
          case v:
            return K = K.get(me.key === null ? Q : me.key) || null, ee(q, K, me, xe);
          case Ne:
            var Fe = me._init;
            return Ae(K, q, Q, Fe(me._payload), xe);
        }
        if (qt(me) || oe(me)) return K = K.get(Q) || null, ce(q, K, me, xe, null);
        xl(q, me);
      }
      return null;
    }
    function we(K, q, Q, me) {
      for (var xe = null, Fe = null, Be = q, $e = q = 0, Yt = null; Be !== null && $e < Q.length; $e++) {
        Be.index > $e ? (Yt = Be, Be = null) : Yt = Be.sibling;
        var nt = le(K, Be, Q[$e], me);
        if (nt === null) {
          Be === null && (Be = Yt);
          break;
        }
        a && Be && nt.alternate === null && i(K, Be), q = E(nt, q, $e), Fe === null ? xe = nt : Fe.sibling = nt, Fe = nt, Be = Yt;
      }
      if ($e === Q.length) return l(K, Be), mt && Ha(K, $e), xe;
      if (Be === null) {
        for (; $e < Q.length; $e++) Be = pe(K, Q[$e], me), Be !== null && (q = E(Be, q, $e), Fe === null ? xe = Be : Fe.sibling = Be, Fe = Be);
        return mt && Ha(K, $e), xe;
      }
      for (Be = d(K, Be); $e < Q.length; $e++) Yt = Ae(Be, K, $e, Q[$e], me), Yt !== null && (a && Yt.alternate !== null && Be.delete(Yt.key === null ? $e : Yt.key), q = E(Yt, q, $e), Fe === null ? xe = Yt : Fe.sibling = Yt, Fe = Yt);
      return a && Be.forEach(function(ba) {
        return i(K, ba);
      }), mt && Ha(K, $e), xe;
    }
    function Ie(K, q, Q, me) {
      var xe = oe(Q);
      if (typeof xe != "function") throw Error(n(150));
      if (Q = xe.call(Q), Q == null) throw Error(n(151));
      for (var Fe = xe = null, Be = q, $e = q = 0, Yt = null, nt = Q.next(); Be !== null && !nt.done; $e++, nt = Q.next()) {
        Be.index > $e ? (Yt = Be, Be = null) : Yt = Be.sibling;
        var ba = le(K, Be, nt.value, me);
        if (ba === null) {
          Be === null && (Be = Yt);
          break;
        }
        a && Be && ba.alternate === null && i(K, Be), q = E(ba, q, $e), Fe === null ? xe = ba : Fe.sibling = ba, Fe = ba, Be = Yt;
      }
      if (nt.done) return l(
        K,
        Be
      ), mt && Ha(K, $e), xe;
      if (Be === null) {
        for (; !nt.done; $e++, nt = Q.next()) nt = pe(K, nt.value, me), nt !== null && (q = E(nt, q, $e), Fe === null ? xe = nt : Fe.sibling = nt, Fe = nt);
        return mt && Ha(K, $e), xe;
      }
      for (Be = d(K, Be); !nt.done; $e++, nt = Q.next()) nt = Ae(Be, K, $e, nt.value, me), nt !== null && (a && nt.alternate !== null && Be.delete(nt.key === null ? $e : nt.key), q = E(nt, q, $e), Fe === null ? xe = nt : Fe.sibling = nt, Fe = nt);
      return a && Be.forEach(function(pL) {
        return i(K, pL);
      }), mt && Ha(K, $e), xe;
    }
    function It(K, q, Q, me) {
      if (typeof Q == "object" && Q !== null && Q.type === B && Q.key === null && (Q = Q.props.children), typeof Q == "object" && Q !== null) {
        switch (Q.$$typeof) {
          case F:
            e: {
              for (var xe = Q.key, Fe = q; Fe !== null; ) {
                if (Fe.key === xe) {
                  if (xe = Q.type, xe === B) {
                    if (Fe.tag === 7) {
                      l(K, Fe.sibling), q = m(Fe, Q.props.children), q.return = K, K = q;
                      break e;
                    }
                  } else if (Fe.elementType === xe || typeof xe == "object" && xe !== null && xe.$$typeof === Ne && Oy(xe) === Fe.type) {
                    l(K, Fe.sibling), q = m(Fe, Q.props), q.ref = Jo(K, Fe, Q), q.return = K, K = q;
                    break e;
                  }
                  l(K, Fe);
                  break;
                } else i(K, Fe);
                Fe = Fe.sibling;
              }
              Q.type === B ? (q = Ya(Q.props.children, K.mode, me, Q.key), q.return = K, K = q) : (me = eu(Q.type, Q.key, Q.props, null, K.mode, me), me.ref = Jo(K, q, Q), me.return = K, K = me);
            }
            return S(K);
          case v:
            e: {
              for (Fe = Q.key; q !== null; ) {
                if (q.key === Fe) if (q.tag === 4 && q.stateNode.containerInfo === Q.containerInfo && q.stateNode.implementation === Q.implementation) {
                  l(K, q.sibling), q = m(q, Q.children || []), q.return = K, K = q;
                  break e;
                } else {
                  l(K, q);
                  break;
                }
                else i(K, q);
                q = q.sibling;
              }
              q = Zd(Q, K.mode, me), q.return = K, K = q;
            }
            return S(K);
          case Ne:
            return Fe = Q._init, It(K, q, Fe(Q._payload), me);
        }
        if (qt(Q)) return we(K, q, Q, me);
        if (oe(Q)) return Ie(K, q, Q, me);
        xl(K, Q);
      }
      return typeof Q == "string" && Q !== "" || typeof Q == "number" ? (Q = "" + Q, q !== null && q.tag === 6 ? (l(K, q.sibling), q = m(q, Q), q.return = K, K = q) : (l(K, q), q = Qd(Q, K.mode, me), q.return = K, K = q), S(K)) : l(K, q);
    }
    return It;
  }
  var Ni = Ly(!0), Dy = Ly(!1), Nl = oa(null), Ol = null, Oi = null, sd = null;
  function ld() {
    sd = Oi = Ol = null;
  }
  function ud(a) {
    var i = Nl.current;
    ft(Nl), a._currentValue = i;
  }
  function cd(a, i, l) {
    for (; a !== null; ) {
      var d = a.alternate;
      if ((a.childLanes & i) !== i ? (a.childLanes |= i, d !== null && (d.childLanes |= i)) : d !== null && (d.childLanes & i) !== i && (d.childLanes |= i), a === l) break;
      a = a.return;
    }
  }
  function Li(a, i) {
    Ol = a, sd = Oi = null, a = a.dependencies, a !== null && a.firstContext !== null && (a.lanes & i && (An = !0), a.firstContext = null);
  }
  function jn(a) {
    var i = a._currentValue;
    if (sd !== a) if (a = { context: a, memoizedValue: i, next: null }, Oi === null) {
      if (Ol === null) throw Error(n(308));
      Oi = a, Ol.dependencies = { lanes: 0, firstContext: a };
    } else Oi = Oi.next = a;
    return i;
  }
  var $a = null;
  function dd(a) {
    $a === null ? $a = [a] : $a.push(a);
  }
  function My(a, i, l, d) {
    var m = i.interleaved;
    return m === null ? (l.next = l, dd(i)) : (l.next = m.next, m.next = l), i.interleaved = l, Ur(a, d);
  }
  function Ur(a, i) {
    a.lanes |= i;
    var l = a.alternate;
    for (l !== null && (l.lanes |= i), l = a, a = a.return; a !== null; ) a.childLanes |= i, l = a.alternate, l !== null && (l.childLanes |= i), l = a, a = a.return;
    return l.tag === 3 ? l.stateNode : null;
  }
  var ua = !1;
  function pd(a) {
    a.updateQueue = { baseState: a.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
  }
  function Py(a, i) {
    a = a.updateQueue, i.updateQueue === a && (i.updateQueue = { baseState: a.baseState, firstBaseUpdate: a.firstBaseUpdate, lastBaseUpdate: a.lastBaseUpdate, shared: a.shared, effects: a.effects });
  }
  function Hr(a, i) {
    return { eventTime: a, lane: i, tag: 0, payload: null, callback: null, next: null };
  }
  function ca(a, i, l) {
    var d = a.updateQueue;
    if (d === null) return null;
    if (d = d.shared, tt & 2) {
      var m = d.pending;
      return m === null ? i.next = i : (i.next = m.next, m.next = i), d.pending = i, Ur(a, l);
    }
    return m = d.interleaved, m === null ? (i.next = i, dd(d)) : (i.next = m.next, m.next = i), d.interleaved = i, Ur(a, l);
  }
  function Ll(a, i, l) {
    if (i = i.updateQueue, i !== null && (i = i.shared, (l & 4194240) !== 0)) {
      var d = i.lanes;
      d &= a.pendingLanes, l |= d, i.lanes = l, Cc(a, l);
    }
  }
  function Fy(a, i) {
    var l = a.updateQueue, d = a.alternate;
    if (d !== null && (d = d.updateQueue, l === d)) {
      var m = null, E = null;
      if (l = l.firstBaseUpdate, l !== null) {
        do {
          var S = { eventTime: l.eventTime, lane: l.lane, tag: l.tag, payload: l.payload, callback: l.callback, next: null };
          E === null ? m = E = S : E = E.next = S, l = l.next;
        } while (l !== null);
        E === null ? m = E = i : E = E.next = i;
      } else m = E = i;
      l = { baseState: d.baseState, firstBaseUpdate: m, lastBaseUpdate: E, shared: d.shared, effects: d.effects }, a.updateQueue = l;
      return;
    }
    a = l.lastBaseUpdate, a === null ? l.firstBaseUpdate = i : a.next = i, l.lastBaseUpdate = i;
  }
  function Dl(a, i, l, d) {
    var m = a.updateQueue;
    ua = !1;
    var E = m.firstBaseUpdate, S = m.lastBaseUpdate, P = m.shared.pending;
    if (P !== null) {
      m.shared.pending = null;
      var z = P, ee = z.next;
      z.next = null, S === null ? E = ee : S.next = ee, S = z;
      var ce = a.alternate;
      ce !== null && (ce = ce.updateQueue, P = ce.lastBaseUpdate, P !== S && (P === null ? ce.firstBaseUpdate = ee : P.next = ee, ce.lastBaseUpdate = z));
    }
    if (E !== null) {
      var pe = m.baseState;
      S = 0, ce = ee = z = null, P = E;
      do {
        var le = P.lane, Ae = P.eventTime;
        if ((d & le) === le) {
          ce !== null && (ce = ce.next = {
            eventTime: Ae,
            lane: 0,
            tag: P.tag,
            payload: P.payload,
            callback: P.callback,
            next: null
          });
          e: {
            var we = a, Ie = P;
            switch (le = i, Ae = l, Ie.tag) {
              case 1:
                if (we = Ie.payload, typeof we == "function") {
                  pe = we.call(Ae, pe, le);
                  break e;
                }
                pe = we;
                break e;
              case 3:
                we.flags = we.flags & -65537 | 128;
              case 0:
                if (we = Ie.payload, le = typeof we == "function" ? we.call(Ae, pe, le) : we, le == null) break e;
                pe = I({}, pe, le);
                break e;
              case 2:
                ua = !0;
            }
          }
          P.callback !== null && P.lane !== 0 && (a.flags |= 64, le = m.effects, le === null ? m.effects = [P] : le.push(P));
        } else Ae = { eventTime: Ae, lane: le, tag: P.tag, payload: P.payload, callback: P.callback, next: null }, ce === null ? (ee = ce = Ae, z = pe) : ce = ce.next = Ae, S |= le;
        if (P = P.next, P === null) {
          if (P = m.shared.pending, P === null) break;
          le = P, P = le.next, le.next = null, m.lastBaseUpdate = le, m.shared.pending = null;
        }
      } while (!0);
      if (ce === null && (z = pe), m.baseState = z, m.firstBaseUpdate = ee, m.lastBaseUpdate = ce, i = m.shared.interleaved, i !== null) {
        m = i;
        do
          S |= m.lane, m = m.next;
        while (m !== i);
      } else E === null && (m.shared.lanes = 0);
      qa |= S, a.lanes = S, a.memoizedState = pe;
    }
  }
  function By(a, i, l) {
    if (a = i.effects, i.effects = null, a !== null) for (i = 0; i < a.length; i++) {
      var d = a[i], m = d.callback;
      if (m !== null) {
        if (d.callback = null, d = l, typeof m != "function") throw Error(n(191, m));
        m.call(d);
      }
    }
  }
  var es = {}, _r = oa(es), ts = oa(es), ns = oa(es);
  function za(a) {
    if (a === es) throw Error(n(174));
    return a;
  }
  function fd(a, i) {
    switch (lt(ns, i), lt(ts, a), lt(_r, es), a = i.nodeType, a) {
      case 9:
      case 11:
        i = (i = i.documentElement) ? i.namespaceURI : ae(null, "");
        break;
      default:
        a = a === 8 ? i.parentNode : i, i = a.namespaceURI || null, a = a.tagName, i = ae(i, a);
    }
    ft(_r), lt(_r, i);
  }
  function Di() {
    ft(_r), ft(ts), ft(ns);
  }
  function Uy(a) {
    za(ns.current);
    var i = za(_r.current), l = ae(i, a.type);
    i !== l && (lt(ts, a), lt(_r, l));
  }
  function hd(a) {
    ts.current === a && (ft(_r), ft(ts));
  }
  var yt = oa(0);
  function Ml(a) {
    for (var i = a; i !== null; ) {
      if (i.tag === 13) {
        var l = i.memoizedState;
        if (l !== null && (l = l.dehydrated, l === null || l.data === "$?" || l.data === "$!")) return i;
      } else if (i.tag === 19 && i.memoizedProps.revealOrder !== void 0) {
        if (i.flags & 128) return i;
      } else if (i.child !== null) {
        i.child.return = i, i = i.child;
        continue;
      }
      if (i === a) break;
      for (; i.sibling === null; ) {
        if (i.return === null || i.return === a) return null;
        i = i.return;
      }
      i.sibling.return = i.return, i = i.sibling;
    }
    return null;
  }
  var gd = [];
  function md() {
    for (var a = 0; a < gd.length; a++) gd[a]._workInProgressVersionPrimary = null;
    gd.length = 0;
  }
  var Pl = O.ReactCurrentDispatcher, bd = O.ReactCurrentBatchConfig, Ga = 0, Tt = null, Ut = null, Vt = null, Fl = !1, rs = !1, as = 0, DO = 0;
  function on() {
    throw Error(n(321));
  }
  function Ed(a, i) {
    if (i === null) return !1;
    for (var l = 0; l < i.length && l < a.length; l++) if (!or(a[l], i[l])) return !1;
    return !0;
  }
  function yd(a, i, l, d, m, E) {
    if (Ga = E, Tt = i, i.memoizedState = null, i.updateQueue = null, i.lanes = 0, Pl.current = a === null || a.memoizedState === null ? BO : UO, a = l(d, m), rs) {
      E = 0;
      do {
        if (rs = !1, as = 0, 25 <= E) throw Error(n(301));
        E += 1, Vt = Ut = null, i.updateQueue = null, Pl.current = HO, a = l(d, m);
      } while (rs);
    }
    if (Pl.current = Hl, i = Ut !== null && Ut.next !== null, Ga = 0, Vt = Ut = Tt = null, Fl = !1, i) throw Error(n(300));
    return a;
  }
  function Td() {
    var a = as !== 0;
    return as = 0, a;
  }
  function vr() {
    var a = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
    return Vt === null ? Tt.memoizedState = Vt = a : Vt = Vt.next = a, Vt;
  }
  function Vn() {
    if (Ut === null) {
      var a = Tt.alternate;
      a = a !== null ? a.memoizedState : null;
    } else a = Ut.next;
    var i = Vt === null ? Tt.memoizedState : Vt.next;
    if (i !== null) Vt = i, Ut = a;
    else {
      if (a === null) throw Error(n(310));
      Ut = a, a = { memoizedState: Ut.memoizedState, baseState: Ut.baseState, baseQueue: Ut.baseQueue, queue: Ut.queue, next: null }, Vt === null ? Tt.memoizedState = Vt = a : Vt = Vt.next = a;
    }
    return Vt;
  }
  function is(a, i) {
    return typeof i == "function" ? i(a) : i;
  }
  function Sd(a) {
    var i = Vn(), l = i.queue;
    if (l === null) throw Error(n(311));
    l.lastRenderedReducer = a;
    var d = Ut, m = d.baseQueue, E = l.pending;
    if (E !== null) {
      if (m !== null) {
        var S = m.next;
        m.next = E.next, E.next = S;
      }
      d.baseQueue = m = E, l.pending = null;
    }
    if (m !== null) {
      E = m.next, d = d.baseState;
      var P = S = null, z = null, ee = E;
      do {
        var ce = ee.lane;
        if ((Ga & ce) === ce) z !== null && (z = z.next = { lane: 0, action: ee.action, hasEagerState: ee.hasEagerState, eagerState: ee.eagerState, next: null }), d = ee.hasEagerState ? ee.eagerState : a(d, ee.action);
        else {
          var pe = {
            lane: ce,
            action: ee.action,
            hasEagerState: ee.hasEagerState,
            eagerState: ee.eagerState,
            next: null
          };
          z === null ? (P = z = pe, S = d) : z = z.next = pe, Tt.lanes |= ce, qa |= ce;
        }
        ee = ee.next;
      } while (ee !== null && ee !== E);
      z === null ? S = d : z.next = P, or(d, i.memoizedState) || (An = !0), i.memoizedState = d, i.baseState = S, i.baseQueue = z, l.lastRenderedState = d;
    }
    if (a = l.interleaved, a !== null) {
      m = a;
      do
        E = m.lane, Tt.lanes |= E, qa |= E, m = m.next;
      while (m !== a);
    } else m === null && (l.lanes = 0);
    return [i.memoizedState, l.dispatch];
  }
  function _d(a) {
    var i = Vn(), l = i.queue;
    if (l === null) throw Error(n(311));
    l.lastRenderedReducer = a;
    var d = l.dispatch, m = l.pending, E = i.memoizedState;
    if (m !== null) {
      l.pending = null;
      var S = m = m.next;
      do
        E = a(E, S.action), S = S.next;
      while (S !== m);
      or(E, i.memoizedState) || (An = !0), i.memoizedState = E, i.baseQueue === null && (i.baseState = E), l.lastRenderedState = E;
    }
    return [E, d];
  }
  function Hy() {
  }
  function $y(a, i) {
    var l = Tt, d = Vn(), m = i(), E = !or(d.memoizedState, m);
    if (E && (d.memoizedState = m, An = !0), d = d.queue, vd(qy.bind(null, l, d, a), [a]), d.getSnapshot !== i || E || Vt !== null && Vt.memoizedState.tag & 1) {
      if (l.flags |= 2048, os(9, Gy.bind(null, l, d, m, i), void 0, null), Wt === null) throw Error(n(349));
      Ga & 30 || zy(l, i, m);
    }
    return m;
  }
  function zy(a, i, l) {
    a.flags |= 16384, a = { getSnapshot: i, value: l }, i = Tt.updateQueue, i === null ? (i = { lastEffect: null, stores: null }, Tt.updateQueue = i, i.stores = [a]) : (l = i.stores, l === null ? i.stores = [a] : l.push(a));
  }
  function Gy(a, i, l, d) {
    i.value = l, i.getSnapshot = d, jy(i) && Vy(a);
  }
  function qy(a, i, l) {
    return l(function() {
      jy(i) && Vy(a);
    });
  }
  function jy(a) {
    var i = a.getSnapshot;
    a = a.value;
    try {
      var l = i();
      return !or(a, l);
    } catch {
      return !0;
    }
  }
  function Vy(a) {
    var i = Ur(a, 1);
    i !== null && dr(i, a, 1, -1);
  }
  function Wy(a) {
    var i = vr();
    return typeof a == "function" && (a = a()), i.memoizedState = i.baseState = a, a = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: is, lastRenderedState: a }, i.queue = a, a = a.dispatch = FO.bind(null, Tt, a), [i.memoizedState, a];
  }
  function os(a, i, l, d) {
    return a = { tag: a, create: i, destroy: l, deps: d, next: null }, i = Tt.updateQueue, i === null ? (i = { lastEffect: null, stores: null }, Tt.updateQueue = i, i.lastEffect = a.next = a) : (l = i.lastEffect, l === null ? i.lastEffect = a.next = a : (d = l.next, l.next = a, a.next = d, i.lastEffect = a)), a;
  }
  function Yy() {
    return Vn().memoizedState;
  }
  function Bl(a, i, l, d) {
    var m = vr();
    Tt.flags |= a, m.memoizedState = os(1 | i, l, void 0, d === void 0 ? null : d);
  }
  function Ul(a, i, l, d) {
    var m = Vn();
    d = d === void 0 ? null : d;
    var E = void 0;
    if (Ut !== null) {
      var S = Ut.memoizedState;
      if (E = S.destroy, d !== null && Ed(d, S.deps)) {
        m.memoizedState = os(i, l, E, d);
        return;
      }
    }
    Tt.flags |= a, m.memoizedState = os(1 | i, l, E, d);
  }
  function Ky(a, i) {
    return Bl(8390656, 8, a, i);
  }
  function vd(a, i) {
    return Ul(2048, 8, a, i);
  }
  function Xy(a, i) {
    return Ul(4, 2, a, i);
  }
  function Qy(a, i) {
    return Ul(4, 4, a, i);
  }
  function Zy(a, i) {
    if (typeof i == "function") return a = a(), i(a), function() {
      i(null);
    };
    if (i != null) return a = a(), i.current = a, function() {
      i.current = null;
    };
  }
  function Jy(a, i, l) {
    return l = l != null ? l.concat([a]) : null, Ul(4, 4, Zy.bind(null, i, a), l);
  }
  function Ad() {
  }
  function eT(a, i) {
    var l = Vn();
    i = i === void 0 ? null : i;
    var d = l.memoizedState;
    return d !== null && i !== null && Ed(i, d[1]) ? d[0] : (l.memoizedState = [a, i], a);
  }
  function tT(a, i) {
    var l = Vn();
    i = i === void 0 ? null : i;
    var d = l.memoizedState;
    return d !== null && i !== null && Ed(i, d[1]) ? d[0] : (a = a(), l.memoizedState = [a, i], a);
  }
  function nT(a, i, l) {
    return Ga & 21 ? (or(l, i) || (l = O1(), Tt.lanes |= l, qa |= l, a.baseState = !0), i) : (a.baseState && (a.baseState = !1, An = !0), a.memoizedState = l);
  }
  function MO(a, i) {
    var l = it;
    it = l !== 0 && 4 > l ? l : 4, a(!0);
    var d = bd.transition;
    bd.transition = {};
    try {
      a(!1), i();
    } finally {
      it = l, bd.transition = d;
    }
  }
  function rT() {
    return Vn().memoizedState;
  }
  function PO(a, i, l) {
    var d = ha(a);
    if (l = { lane: d, action: l, hasEagerState: !1, eagerState: null, next: null }, aT(a)) iT(i, l);
    else if (l = My(a, i, l, d), l !== null) {
      var m = hn();
      dr(l, a, d, m), oT(l, i, d);
    }
  }
  function FO(a, i, l) {
    var d = ha(a), m = { lane: d, action: l, hasEagerState: !1, eagerState: null, next: null };
    if (aT(a)) iT(i, m);
    else {
      var E = a.alternate;
      if (a.lanes === 0 && (E === null || E.lanes === 0) && (E = i.lastRenderedReducer, E !== null)) try {
        var S = i.lastRenderedState, P = E(S, l);
        if (m.hasEagerState = !0, m.eagerState = P, or(P, S)) {
          var z = i.interleaved;
          z === null ? (m.next = m, dd(i)) : (m.next = z.next, z.next = m), i.interleaved = m;
          return;
        }
      } catch {
      } finally {
      }
      l = My(a, i, m, d), l !== null && (m = hn(), dr(l, a, d, m), oT(l, i, d));
    }
  }
  function aT(a) {
    var i = a.alternate;
    return a === Tt || i !== null && i === Tt;
  }
  function iT(a, i) {
    rs = Fl = !0;
    var l = a.pending;
    l === null ? i.next = i : (i.next = l.next, l.next = i), a.pending = i;
  }
  function oT(a, i, l) {
    if (l & 4194240) {
      var d = i.lanes;
      d &= a.pendingLanes, l |= d, i.lanes = l, Cc(a, l);
    }
  }
  var Hl = { readContext: jn, useCallback: on, useContext: on, useEffect: on, useImperativeHandle: on, useInsertionEffect: on, useLayoutEffect: on, useMemo: on, useReducer: on, useRef: on, useState: on, useDebugValue: on, useDeferredValue: on, useTransition: on, useMutableSource: on, useSyncExternalStore: on, useId: on, unstable_isNewReconciler: !1 }, BO = { readContext: jn, useCallback: function(a, i) {
    return vr().memoizedState = [a, i === void 0 ? null : i], a;
  }, useContext: jn, useEffect: Ky, useImperativeHandle: function(a, i, l) {
    return l = l != null ? l.concat([a]) : null, Bl(
      4194308,
      4,
      Zy.bind(null, i, a),
      l
    );
  }, useLayoutEffect: function(a, i) {
    return Bl(4194308, 4, a, i);
  }, useInsertionEffect: function(a, i) {
    return Bl(4, 2, a, i);
  }, useMemo: function(a, i) {
    var l = vr();
    return i = i === void 0 ? null : i, a = a(), l.memoizedState = [a, i], a;
  }, useReducer: function(a, i, l) {
    var d = vr();
    return i = l !== void 0 ? l(i) : i, d.memoizedState = d.baseState = i, a = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: a, lastRenderedState: i }, d.queue = a, a = a.dispatch = PO.bind(null, Tt, a), [d.memoizedState, a];
  }, useRef: function(a) {
    var i = vr();
    return a = { current: a }, i.memoizedState = a;
  }, useState: Wy, useDebugValue: Ad, useDeferredValue: function(a) {
    return vr().memoizedState = a;
  }, useTransition: function() {
    var a = Wy(!1), i = a[0];
    return a = MO.bind(null, a[1]), vr().memoizedState = a, [i, a];
  }, useMutableSource: function() {
  }, useSyncExternalStore: function(a, i, l) {
    var d = Tt, m = vr();
    if (mt) {
      if (l === void 0) throw Error(n(407));
      l = l();
    } else {
      if (l = i(), Wt === null) throw Error(n(349));
      Ga & 30 || zy(d, i, l);
    }
    m.memoizedState = l;
    var E = { value: l, getSnapshot: i };
    return m.queue = E, Ky(qy.bind(
      null,
      d,
      E,
      a
    ), [a]), d.flags |= 2048, os(9, Gy.bind(null, d, E, l, i), void 0, null), l;
  }, useId: function() {
    var a = vr(), i = Wt.identifierPrefix;
    if (mt) {
      var l = Br, d = Fr;
      l = (d & ~(1 << 32 - ir(d) - 1)).toString(32) + l, i = ":" + i + "R" + l, l = as++, 0 < l && (i += "H" + l.toString(32)), i += ":";
    } else l = DO++, i = ":" + i + "r" + l.toString(32) + ":";
    return a.memoizedState = i;
  }, unstable_isNewReconciler: !1 }, UO = {
    readContext: jn,
    useCallback: eT,
    useContext: jn,
    useEffect: vd,
    useImperativeHandle: Jy,
    useInsertionEffect: Xy,
    useLayoutEffect: Qy,
    useMemo: tT,
    useReducer: Sd,
    useRef: Yy,
    useState: function() {
      return Sd(is);
    },
    useDebugValue: Ad,
    useDeferredValue: function(a) {
      var i = Vn();
      return nT(i, Ut.memoizedState, a);
    },
    useTransition: function() {
      var a = Sd(is)[0], i = Vn().memoizedState;
      return [a, i];
    },
    useMutableSource: Hy,
    useSyncExternalStore: $y,
    useId: rT,
    unstable_isNewReconciler: !1
  }, HO = { readContext: jn, useCallback: eT, useContext: jn, useEffect: vd, useImperativeHandle: Jy, useInsertionEffect: Xy, useLayoutEffect: Qy, useMemo: tT, useReducer: _d, useRef: Yy, useState: function() {
    return _d(is);
  }, useDebugValue: Ad, useDeferredValue: function(a) {
    var i = Vn();
    return Ut === null ? i.memoizedState = a : nT(i, Ut.memoizedState, a);
  }, useTransition: function() {
    var a = _d(is)[0], i = Vn().memoizedState;
    return [a, i];
  }, useMutableSource: Hy, useSyncExternalStore: $y, useId: rT, unstable_isNewReconciler: !1 };
  function lr(a, i) {
    if (a && a.defaultProps) {
      i = I({}, i), a = a.defaultProps;
      for (var l in a) i[l] === void 0 && (i[l] = a[l]);
      return i;
    }
    return i;
  }
  function kd(a, i, l, d) {
    i = a.memoizedState, l = l(d, i), l = l == null ? i : I({}, i, l), a.memoizedState = l, a.lanes === 0 && (a.updateQueue.baseState = l);
  }
  var $l = { isMounted: function(a) {
    return (a = a._reactInternals) ? Pa(a) === a : !1;
  }, enqueueSetState: function(a, i, l) {
    a = a._reactInternals;
    var d = hn(), m = ha(a), E = Hr(d, m);
    E.payload = i, l != null && (E.callback = l), i = ca(a, E, m), i !== null && (dr(i, a, m, d), Ll(i, a, m));
  }, enqueueReplaceState: function(a, i, l) {
    a = a._reactInternals;
    var d = hn(), m = ha(a), E = Hr(d, m);
    E.tag = 1, E.payload = i, l != null && (E.callback = l), i = ca(a, E, m), i !== null && (dr(i, a, m, d), Ll(i, a, m));
  }, enqueueForceUpdate: function(a, i) {
    a = a._reactInternals;
    var l = hn(), d = ha(a), m = Hr(l, d);
    m.tag = 2, i != null && (m.callback = i), i = ca(a, m, d), i !== null && (dr(i, a, d, l), Ll(i, a, d));
  } };
  function sT(a, i, l, d, m, E, S) {
    return a = a.stateNode, typeof a.shouldComponentUpdate == "function" ? a.shouldComponentUpdate(d, E, S) : i.prototype && i.prototype.isPureReactComponent ? !Vo(l, d) || !Vo(m, E) : !0;
  }
  function lT(a, i, l) {
    var d = !1, m = sa, E = i.contextType;
    return typeof E == "object" && E !== null ? E = jn(E) : (m = vn(i) ? Ba : an.current, d = i.contextTypes, E = (d = d != null) ? wi(a, m) : sa), i = new i(l, E), a.memoizedState = i.state !== null && i.state !== void 0 ? i.state : null, i.updater = $l, a.stateNode = i, i._reactInternals = a, d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = m, a.__reactInternalMemoizedMaskedChildContext = E), i;
  }
  function uT(a, i, l, d) {
    a = i.state, typeof i.componentWillReceiveProps == "function" && i.componentWillReceiveProps(l, d), typeof i.UNSAFE_componentWillReceiveProps == "function" && i.UNSAFE_componentWillReceiveProps(l, d), i.state !== a && $l.enqueueReplaceState(i, i.state, null);
  }
  function Cd(a, i, l, d) {
    var m = a.stateNode;
    m.props = l, m.state = a.memoizedState, m.refs = {}, pd(a);
    var E = i.contextType;
    typeof E == "object" && E !== null ? m.context = jn(E) : (E = vn(i) ? Ba : an.current, m.context = wi(a, E)), m.state = a.memoizedState, E = i.getDerivedStateFromProps, typeof E == "function" && (kd(a, i, E, l), m.state = a.memoizedState), typeof i.getDerivedStateFromProps == "function" || typeof m.getSnapshotBeforeUpdate == "function" || typeof m.UNSAFE_componentWillMount != "function" && typeof m.componentWillMount != "function" || (i = m.state, typeof m.componentWillMount == "function" && m.componentWillMount(), typeof m.UNSAFE_componentWillMount == "function" && m.UNSAFE_componentWillMount(), i !== m.state && $l.enqueueReplaceState(m, m.state, null), Dl(a, l, m, d), m.state = a.memoizedState), typeof m.componentDidMount == "function" && (a.flags |= 4194308);
  }
  function Mi(a, i) {
    try {
      var l = "", d = i;
      do
        l += _e(d), d = d.return;
      while (d);
      var m = l;
    } catch (E) {
      m = `
Error generating stack: ` + E.message + `
` + E.stack;
    }
    return { value: a, source: i, stack: m, digest: null };
  }
  function wd(a, i, l) {
    return { value: a, source: null, stack: l ?? null, digest: i ?? null };
  }
  function Id(a, i) {
    try {
      console.error(i.value);
    } catch (l) {
      setTimeout(function() {
        throw l;
      });
    }
  }
  var $O = typeof WeakMap == "function" ? WeakMap : Map;
  function cT(a, i, l) {
    l = Hr(-1, l), l.tag = 3, l.payload = { element: null };
    var d = i.value;
    return l.callback = function() {
      Yl || (Yl = !0, Gd = d), Id(a, i);
    }, l;
  }
  function dT(a, i, l) {
    l = Hr(-1, l), l.tag = 3;
    var d = a.type.getDerivedStateFromError;
    if (typeof d == "function") {
      var m = i.value;
      l.payload = function() {
        return d(m);
      }, l.callback = function() {
        Id(a, i);
      };
    }
    var E = a.stateNode;
    return E !== null && typeof E.componentDidCatch == "function" && (l.callback = function() {
      Id(a, i), typeof d != "function" && (pa === null ? pa = /* @__PURE__ */ new Set([this]) : pa.add(this));
      var S = i.stack;
      this.componentDidCatch(i.value, { componentStack: S !== null ? S : "" });
    }), l;
  }
  function pT(a, i, l) {
    var d = a.pingCache;
    if (d === null) {
      d = a.pingCache = new $O();
      var m = /* @__PURE__ */ new Set();
      d.set(i, m);
    } else m = d.get(i), m === void 0 && (m = /* @__PURE__ */ new Set(), d.set(i, m));
    m.has(l) || (m.add(l), a = tL.bind(null, a, i, l), i.then(a, a));
  }
  function fT(a) {
    do {
      var i;
      if ((i = a.tag === 13) && (i = a.memoizedState, i = i !== null ? i.dehydrated !== null : !0), i) return a;
      a = a.return;
    } while (a !== null);
    return null;
  }
  function hT(a, i, l, d, m) {
    return a.mode & 1 ? (a.flags |= 65536, a.lanes = m, a) : (a === i ? a.flags |= 65536 : (a.flags |= 128, l.flags |= 131072, l.flags &= -52805, l.tag === 1 && (l.alternate === null ? l.tag = 17 : (i = Hr(-1, 1), i.tag = 2, ca(l, i, 1))), l.lanes |= 1), a);
  }
  var zO = O.ReactCurrentOwner, An = !1;
  function fn(a, i, l, d) {
    i.child = a === null ? Dy(i, null, l, d) : Ni(i, a.child, l, d);
  }
  function gT(a, i, l, d, m) {
    l = l.render;
    var E = i.ref;
    return Li(i, m), d = yd(a, i, l, d, E, m), l = Td(), a !== null && !An ? (i.updateQueue = a.updateQueue, i.flags &= -2053, a.lanes &= ~m, $r(a, i, m)) : (mt && l && nd(i), i.flags |= 1, fn(a, i, d, m), i.child);
  }
  function mT(a, i, l, d, m) {
    if (a === null) {
      var E = l.type;
      return typeof E == "function" && !Xd(E) && E.defaultProps === void 0 && l.compare === null && l.defaultProps === void 0 ? (i.tag = 15, i.type = E, bT(a, i, E, d, m)) : (a = eu(l.type, null, d, i, i.mode, m), a.ref = i.ref, a.return = i, i.child = a);
    }
    if (E = a.child, !(a.lanes & m)) {
      var S = E.memoizedProps;
      if (l = l.compare, l = l !== null ? l : Vo, l(S, d) && a.ref === i.ref) return $r(a, i, m);
    }
    return i.flags |= 1, a = ma(E, d), a.ref = i.ref, a.return = i, i.child = a;
  }
  function bT(a, i, l, d, m) {
    if (a !== null) {
      var E = a.memoizedProps;
      if (Vo(E, d) && a.ref === i.ref) if (An = !1, i.pendingProps = d = E, (a.lanes & m) !== 0) a.flags & 131072 && (An = !0);
      else return i.lanes = a.lanes, $r(a, i, m);
    }
    return Rd(a, i, l, d, m);
  }
  function ET(a, i, l) {
    var d = i.pendingProps, m = d.children, E = a !== null ? a.memoizedState : null;
    if (d.mode === "hidden") if (!(i.mode & 1)) i.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, lt(Fi, Fn), Fn |= l;
    else {
      if (!(l & 1073741824)) return a = E !== null ? E.baseLanes | l : l, i.lanes = i.childLanes = 1073741824, i.memoizedState = { baseLanes: a, cachePool: null, transitions: null }, i.updateQueue = null, lt(Fi, Fn), Fn |= a, null;
      i.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, d = E !== null ? E.baseLanes : l, lt(Fi, Fn), Fn |= d;
    }
    else E !== null ? (d = E.baseLanes | l, i.memoizedState = null) : d = l, lt(Fi, Fn), Fn |= d;
    return fn(a, i, m, l), i.child;
  }
  function yT(a, i) {
    var l = i.ref;
    (a === null && l !== null || a !== null && a.ref !== l) && (i.flags |= 512, i.flags |= 2097152);
  }
  function Rd(a, i, l, d, m) {
    var E = vn(l) ? Ba : an.current;
    return E = wi(i, E), Li(i, m), l = yd(a, i, l, d, E, m), d = Td(), a !== null && !An ? (i.updateQueue = a.updateQueue, i.flags &= -2053, a.lanes &= ~m, $r(a, i, m)) : (mt && d && nd(i), i.flags |= 1, fn(a, i, l, m), i.child);
  }
  function TT(a, i, l, d, m) {
    if (vn(l)) {
      var E = !0;
      kl(i);
    } else E = !1;
    if (Li(i, m), i.stateNode === null) Gl(a, i), lT(i, l, d), Cd(i, l, d, m), d = !0;
    else if (a === null) {
      var S = i.stateNode, P = i.memoizedProps;
      S.props = P;
      var z = S.context, ee = l.contextType;
      typeof ee == "object" && ee !== null ? ee = jn(ee) : (ee = vn(l) ? Ba : an.current, ee = wi(i, ee));
      var ce = l.getDerivedStateFromProps, pe = typeof ce == "function" || typeof S.getSnapshotBeforeUpdate == "function";
      pe || typeof S.UNSAFE_componentWillReceiveProps != "function" && typeof S.componentWillReceiveProps != "function" || (P !== d || z !== ee) && uT(i, S, d, ee), ua = !1;
      var le = i.memoizedState;
      S.state = le, Dl(i, d, S, m), z = i.memoizedState, P !== d || le !== z || _n.current || ua ? (typeof ce == "function" && (kd(i, l, ce, d), z = i.memoizedState), (P = ua || sT(i, l, P, d, le, z, ee)) ? (pe || typeof S.UNSAFE_componentWillMount != "function" && typeof S.componentWillMount != "function" || (typeof S.componentWillMount == "function" && S.componentWillMount(), typeof S.UNSAFE_componentWillMount == "function" && S.UNSAFE_componentWillMount()), typeof S.componentDidMount == "function" && (i.flags |= 4194308)) : (typeof S.componentDidMount == "function" && (i.flags |= 4194308), i.memoizedProps = d, i.memoizedState = z), S.props = d, S.state = z, S.context = ee, d = P) : (typeof S.componentDidMount == "function" && (i.flags |= 4194308), d = !1);
    } else {
      S = i.stateNode, Py(a, i), P = i.memoizedProps, ee = i.type === i.elementType ? P : lr(i.type, P), S.props = ee, pe = i.pendingProps, le = S.context, z = l.contextType, typeof z == "object" && z !== null ? z = jn(z) : (z = vn(l) ? Ba : an.current, z = wi(i, z));
      var Ae = l.getDerivedStateFromProps;
      (ce = typeof Ae == "function" || typeof S.getSnapshotBeforeUpdate == "function") || typeof S.UNSAFE_componentWillReceiveProps != "function" && typeof S.componentWillReceiveProps != "function" || (P !== pe || le !== z) && uT(i, S, d, z), ua = !1, le = i.memoizedState, S.state = le, Dl(i, d, S, m);
      var we = i.memoizedState;
      P !== pe || le !== we || _n.current || ua ? (typeof Ae == "function" && (kd(i, l, Ae, d), we = i.memoizedState), (ee = ua || sT(i, l, ee, d, le, we, z) || !1) ? (ce || typeof S.UNSAFE_componentWillUpdate != "function" && typeof S.componentWillUpdate != "function" || (typeof S.componentWillUpdate == "function" && S.componentWillUpdate(d, we, z), typeof S.UNSAFE_componentWillUpdate == "function" && S.UNSAFE_componentWillUpdate(d, we, z)), typeof S.componentDidUpdate == "function" && (i.flags |= 4), typeof S.getSnapshotBeforeUpdate == "function" && (i.flags |= 1024)) : (typeof S.componentDidUpdate != "function" || P === a.memoizedProps && le === a.memoizedState || (i.flags |= 4), typeof S.getSnapshotBeforeUpdate != "function" || P === a.memoizedProps && le === a.memoizedState || (i.flags |= 1024), i.memoizedProps = d, i.memoizedState = we), S.props = d, S.state = we, S.context = z, d = ee) : (typeof S.componentDidUpdate != "function" || P === a.memoizedProps && le === a.memoizedState || (i.flags |= 4), typeof S.getSnapshotBeforeUpdate != "function" || P === a.memoizedProps && le === a.memoizedState || (i.flags |= 1024), d = !1);
    }
    return xd(a, i, l, d, E, m);
  }
  function xd(a, i, l, d, m, E) {
    yT(a, i);
    var S = (i.flags & 128) !== 0;
    if (!d && !S) return m && ky(i, l, !1), $r(a, i, E);
    d = i.stateNode, zO.current = i;
    var P = S && typeof l.getDerivedStateFromError != "function" ? null : d.render();
    return i.flags |= 1, a !== null && S ? (i.child = Ni(i, a.child, null, E), i.child = Ni(i, null, P, E)) : fn(a, i, P, E), i.memoizedState = d.state, m && ky(i, l, !0), i.child;
  }
  function ST(a) {
    var i = a.stateNode;
    i.pendingContext ? vy(a, i.pendingContext, i.pendingContext !== i.context) : i.context && vy(a, i.context, !1), fd(a, i.containerInfo);
  }
  function _T(a, i, l, d, m) {
    return xi(), od(m), i.flags |= 256, fn(a, i, l, d), i.child;
  }
  var Nd = { dehydrated: null, treeContext: null, retryLane: 0 };
  function Od(a) {
    return { baseLanes: a, cachePool: null, transitions: null };
  }
  function vT(a, i, l) {
    var d = i.pendingProps, m = yt.current, E = !1, S = (i.flags & 128) !== 0, P;
    if ((P = S) || (P = a !== null && a.memoizedState === null ? !1 : (m & 2) !== 0), P ? (E = !0, i.flags &= -129) : (a === null || a.memoizedState !== null) && (m |= 1), lt(yt, m & 1), a === null)
      return id(i), a = i.memoizedState, a !== null && (a = a.dehydrated, a !== null) ? (i.mode & 1 ? a.data === "$!" ? i.lanes = 8 : i.lanes = 1073741824 : i.lanes = 1, null) : (S = d.children, a = d.fallback, E ? (d = i.mode, E = i.child, S = { mode: "hidden", children: S }, !(d & 1) && E !== null ? (E.childLanes = 0, E.pendingProps = S) : E = tu(S, d, 0, null), a = Ya(a, d, l, null), E.return = i, a.return = i, E.sibling = a, i.child = E, i.child.memoizedState = Od(l), i.memoizedState = Nd, a) : Ld(i, S));
    if (m = a.memoizedState, m !== null && (P = m.dehydrated, P !== null)) return GO(a, i, S, d, P, m, l);
    if (E) {
      E = d.fallback, S = i.mode, m = a.child, P = m.sibling;
      var z = { mode: "hidden", children: d.children };
      return !(S & 1) && i.child !== m ? (d = i.child, d.childLanes = 0, d.pendingProps = z, i.deletions = null) : (d = ma(m, z), d.subtreeFlags = m.subtreeFlags & 14680064), P !== null ? E = ma(P, E) : (E = Ya(E, S, l, null), E.flags |= 2), E.return = i, d.return = i, d.sibling = E, i.child = d, d = E, E = i.child, S = a.child.memoizedState, S = S === null ? Od(l) : { baseLanes: S.baseLanes | l, cachePool: null, transitions: S.transitions }, E.memoizedState = S, E.childLanes = a.childLanes & ~l, i.memoizedState = Nd, d;
    }
    return E = a.child, a = E.sibling, d = ma(E, { mode: "visible", children: d.children }), !(i.mode & 1) && (d.lanes = l), d.return = i, d.sibling = null, a !== null && (l = i.deletions, l === null ? (i.deletions = [a], i.flags |= 16) : l.push(a)), i.child = d, i.memoizedState = null, d;
  }
  function Ld(a, i) {
    return i = tu({ mode: "visible", children: i }, a.mode, 0, null), i.return = a, a.child = i;
  }
  function zl(a, i, l, d) {
    return d !== null && od(d), Ni(i, a.child, null, l), a = Ld(i, i.pendingProps.children), a.flags |= 2, i.memoizedState = null, a;
  }
  function GO(a, i, l, d, m, E, S) {
    if (l)
      return i.flags & 256 ? (i.flags &= -257, d = wd(Error(n(422))), zl(a, i, S, d)) : i.memoizedState !== null ? (i.child = a.child, i.flags |= 128, null) : (E = d.fallback, m = i.mode, d = tu({ mode: "visible", children: d.children }, m, 0, null), E = Ya(E, m, S, null), E.flags |= 2, d.return = i, E.return = i, d.sibling = E, i.child = d, i.mode & 1 && Ni(i, a.child, null, S), i.child.memoizedState = Od(S), i.memoizedState = Nd, E);
    if (!(i.mode & 1)) return zl(a, i, S, null);
    if (m.data === "$!") {
      if (d = m.nextSibling && m.nextSibling.dataset, d) var P = d.dgst;
      return d = P, E = Error(n(419)), d = wd(E, d, void 0), zl(a, i, S, d);
    }
    if (P = (S & a.childLanes) !== 0, An || P) {
      if (d = Wt, d !== null) {
        switch (S & -S) {
          case 4:
            m = 2;
            break;
          case 16:
            m = 8;
            break;
          case 64:
          case 128:
          case 256:
          case 512:
          case 1024:
          case 2048:
          case 4096:
          case 8192:
          case 16384:
          case 32768:
          case 65536:
          case 131072:
          case 262144:
          case 524288:
          case 1048576:
          case 2097152:
          case 4194304:
          case 8388608:
          case 16777216:
          case 33554432:
          case 67108864:
            m = 32;
            break;
          case 536870912:
            m = 268435456;
            break;
          default:
            m = 0;
        }
        m = m & (d.suspendedLanes | S) ? 0 : m, m !== 0 && m !== E.retryLane && (E.retryLane = m, Ur(a, m), dr(d, a, m, -1));
      }
      return Kd(), d = wd(Error(n(421))), zl(a, i, S, d);
    }
    return m.data === "$?" ? (i.flags |= 128, i.child = a.child, i = nL.bind(null, a), m._reactRetry = i, null) : (a = E.treeContext, Pn = ia(m.nextSibling), Mn = i, mt = !0, sr = null, a !== null && (Gn[qn++] = Fr, Gn[qn++] = Br, Gn[qn++] = Ua, Fr = a.id, Br = a.overflow, Ua = i), i = Ld(i, d.children), i.flags |= 4096, i);
  }
  function AT(a, i, l) {
    a.lanes |= i;
    var d = a.alternate;
    d !== null && (d.lanes |= i), cd(a.return, i, l);
  }
  function Dd(a, i, l, d, m) {
    var E = a.memoizedState;
    E === null ? a.memoizedState = { isBackwards: i, rendering: null, renderingStartTime: 0, last: d, tail: l, tailMode: m } : (E.isBackwards = i, E.rendering = null, E.renderingStartTime = 0, E.last = d, E.tail = l, E.tailMode = m);
  }
  function kT(a, i, l) {
    var d = i.pendingProps, m = d.revealOrder, E = d.tail;
    if (fn(a, i, d.children, l), d = yt.current, d & 2) d = d & 1 | 2, i.flags |= 128;
    else {
      if (a !== null && a.flags & 128) e: for (a = i.child; a !== null; ) {
        if (a.tag === 13) a.memoizedState !== null && AT(a, l, i);
        else if (a.tag === 19) AT(a, l, i);
        else if (a.child !== null) {
          a.child.return = a, a = a.child;
          continue;
        }
        if (a === i) break e;
        for (; a.sibling === null; ) {
          if (a.return === null || a.return === i) break e;
          a = a.return;
        }
        a.sibling.return = a.return, a = a.sibling;
      }
      d &= 1;
    }
    if (lt(yt, d), !(i.mode & 1)) i.memoizedState = null;
    else switch (m) {
      case "forwards":
        for (l = i.child, m = null; l !== null; ) a = l.alternate, a !== null && Ml(a) === null && (m = l), l = l.sibling;
        l = m, l === null ? (m = i.child, i.child = null) : (m = l.sibling, l.sibling = null), Dd(i, !1, m, l, E);
        break;
      case "backwards":
        for (l = null, m = i.child, i.child = null; m !== null; ) {
          if (a = m.alternate, a !== null && Ml(a) === null) {
            i.child = m;
            break;
          }
          a = m.sibling, m.sibling = l, l = m, m = a;
        }
        Dd(i, !0, l, null, E);
        break;
      case "together":
        Dd(i, !1, null, null, void 0);
        break;
      default:
        i.memoizedState = null;
    }
    return i.child;
  }
  function Gl(a, i) {
    !(i.mode & 1) && a !== null && (a.alternate = null, i.alternate = null, i.flags |= 2);
  }
  function $r(a, i, l) {
    if (a !== null && (i.dependencies = a.dependencies), qa |= i.lanes, !(l & i.childLanes)) return null;
    if (a !== null && i.child !== a.child) throw Error(n(153));
    if (i.child !== null) {
      for (a = i.child, l = ma(a, a.pendingProps), i.child = l, l.return = i; a.sibling !== null; ) a = a.sibling, l = l.sibling = ma(a, a.pendingProps), l.return = i;
      l.sibling = null;
    }
    return i.child;
  }
  function qO(a, i, l) {
    switch (i.tag) {
      case 3:
        ST(i), xi();
        break;
      case 5:
        Uy(i);
        break;
      case 1:
        vn(i.type) && kl(i);
        break;
      case 4:
        fd(i, i.stateNode.containerInfo);
        break;
      case 10:
        var d = i.type._context, m = i.memoizedProps.value;
        lt(Nl, d._currentValue), d._currentValue = m;
        break;
      case 13:
        if (d = i.memoizedState, d !== null)
          return d.dehydrated !== null ? (lt(yt, yt.current & 1), i.flags |= 128, null) : l & i.child.childLanes ? vT(a, i, l) : (lt(yt, yt.current & 1), a = $r(a, i, l), a !== null ? a.sibling : null);
        lt(yt, yt.current & 1);
        break;
      case 19:
        if (d = (l & i.childLanes) !== 0, a.flags & 128) {
          if (d) return kT(a, i, l);
          i.flags |= 128;
        }
        if (m = i.memoizedState, m !== null && (m.rendering = null, m.tail = null, m.lastEffect = null), lt(yt, yt.current), d) break;
        return null;
      case 22:
      case 23:
        return i.lanes = 0, ET(a, i, l);
    }
    return $r(a, i, l);
  }
  var CT, Md, wT, IT;
  CT = function(a, i) {
    for (var l = i.child; l !== null; ) {
      if (l.tag === 5 || l.tag === 6) a.appendChild(l.stateNode);
      else if (l.tag !== 4 && l.child !== null) {
        l.child.return = l, l = l.child;
        continue;
      }
      if (l === i) break;
      for (; l.sibling === null; ) {
        if (l.return === null || l.return === i) return;
        l = l.return;
      }
      l.sibling.return = l.return, l = l.sibling;
    }
  }, Md = function() {
  }, wT = function(a, i, l, d) {
    var m = a.memoizedProps;
    if (m !== d) {
      a = i.stateNode, za(_r.current);
      var E = null;
      switch (l) {
        case "input":
          m = Dr(a, m), d = Dr(a, d), E = [];
          break;
        case "select":
          m = I({}, m, { value: void 0 }), d = I({}, d, { value: void 0 }), E = [];
          break;
        case "textarea":
          m = Sn(a, m), d = Sn(a, d), E = [];
          break;
        default:
          typeof m.onClick != "function" && typeof d.onClick == "function" && (a.onclick = _l);
      }
      Ct(l, d);
      var S;
      l = null;
      for (ee in m) if (!d.hasOwnProperty(ee) && m.hasOwnProperty(ee) && m[ee] != null) if (ee === "style") {
        var P = m[ee];
        for (S in P) P.hasOwnProperty(S) && (l || (l = {}), l[S] = "");
      } else ee !== "dangerouslySetInnerHTML" && ee !== "children" && ee !== "suppressContentEditableWarning" && ee !== "suppressHydrationWarning" && ee !== "autoFocus" && (o.hasOwnProperty(ee) ? E || (E = []) : (E = E || []).push(ee, null));
      for (ee in d) {
        var z = d[ee];
        if (P = m != null ? m[ee] : void 0, d.hasOwnProperty(ee) && z !== P && (z != null || P != null)) if (ee === "style") if (P) {
          for (S in P) !P.hasOwnProperty(S) || z && z.hasOwnProperty(S) || (l || (l = {}), l[S] = "");
          for (S in z) z.hasOwnProperty(S) && P[S] !== z[S] && (l || (l = {}), l[S] = z[S]);
        } else l || (E || (E = []), E.push(
          ee,
          l
        )), l = z;
        else ee === "dangerouslySetInnerHTML" ? (z = z ? z.__html : void 0, P = P ? P.__html : void 0, z != null && P !== z && (E = E || []).push(ee, z)) : ee === "children" ? typeof z != "string" && typeof z != "number" || (E = E || []).push(ee, "" + z) : ee !== "suppressContentEditableWarning" && ee !== "suppressHydrationWarning" && (o.hasOwnProperty(ee) ? (z != null && ee === "onScroll" && pt("scroll", a), E || P === z || (E = [])) : (E = E || []).push(ee, z));
      }
      l && (E = E || []).push("style", l);
      var ee = E;
      (i.updateQueue = ee) && (i.flags |= 4);
    }
  }, IT = function(a, i, l, d) {
    l !== d && (i.flags |= 4);
  };
  function ss(a, i) {
    if (!mt) switch (a.tailMode) {
      case "hidden":
        i = a.tail;
        for (var l = null; i !== null; ) i.alternate !== null && (l = i), i = i.sibling;
        l === null ? a.tail = null : l.sibling = null;
        break;
      case "collapsed":
        l = a.tail;
        for (var d = null; l !== null; ) l.alternate !== null && (d = l), l = l.sibling;
        d === null ? i || a.tail === null ? a.tail = null : a.tail.sibling = null : d.sibling = null;
    }
  }
  function sn(a) {
    var i = a.alternate !== null && a.alternate.child === a.child, l = 0, d = 0;
    if (i) for (var m = a.child; m !== null; ) l |= m.lanes | m.childLanes, d |= m.subtreeFlags & 14680064, d |= m.flags & 14680064, m.return = a, m = m.sibling;
    else for (m = a.child; m !== null; ) l |= m.lanes | m.childLanes, d |= m.subtreeFlags, d |= m.flags, m.return = a, m = m.sibling;
    return a.subtreeFlags |= d, a.childLanes = l, i;
  }
  function jO(a, i, l) {
    var d = i.pendingProps;
    switch (rd(i), i.tag) {
      case 2:
      case 16:
      case 15:
      case 0:
      case 11:
      case 7:
      case 8:
      case 12:
      case 9:
      case 14:
        return sn(i), null;
      case 1:
        return vn(i.type) && Al(), sn(i), null;
      case 3:
        return d = i.stateNode, Di(), ft(_n), ft(an), md(), d.pendingContext && (d.context = d.pendingContext, d.pendingContext = null), (a === null || a.child === null) && (Rl(i) ? i.flags |= 4 : a === null || a.memoizedState.isDehydrated && !(i.flags & 256) || (i.flags |= 1024, sr !== null && (Vd(sr), sr = null))), Md(a, i), sn(i), null;
      case 5:
        hd(i);
        var m = za(ns.current);
        if (l = i.type, a !== null && i.stateNode != null) wT(a, i, l, d, m), a.ref !== i.ref && (i.flags |= 512, i.flags |= 2097152);
        else {
          if (!d) {
            if (i.stateNode === null) throw Error(n(166));
            return sn(i), null;
          }
          if (a = za(_r.current), Rl(i)) {
            d = i.stateNode, l = i.type;
            var E = i.memoizedProps;
            switch (d[Sr] = i, d[Qo] = E, a = (i.mode & 1) !== 0, l) {
              case "dialog":
                pt("cancel", d), pt("close", d);
                break;
              case "iframe":
              case "object":
              case "embed":
                pt("load", d);
                break;
              case "video":
              case "audio":
                for (m = 0; m < Yo.length; m++) pt(Yo[m], d);
                break;
              case "source":
                pt("error", d);
                break;
              case "img":
              case "image":
              case "link":
                pt(
                  "error",
                  d
                ), pt("load", d);
                break;
              case "details":
                pt("toggle", d);
                break;
              case "input":
                nr(d, E), pt("invalid", d);
                break;
              case "select":
                d._wrapperState = { wasMultiple: !!E.multiple }, pt("invalid", d);
                break;
              case "textarea":
                re(d, E), pt("invalid", d);
            }
            Ct(l, E), m = null;
            for (var S in E) if (E.hasOwnProperty(S)) {
              var P = E[S];
              S === "children" ? typeof P == "string" ? d.textContent !== P && (E.suppressHydrationWarning !== !0 && Sl(d.textContent, P, a), m = ["children", P]) : typeof P == "number" && d.textContent !== "" + P && (E.suppressHydrationWarning !== !0 && Sl(
                d.textContent,
                P,
                a
              ), m = ["children", "" + P]) : o.hasOwnProperty(S) && P != null && S === "onScroll" && pt("scroll", d);
            }
            switch (l) {
              case "input":
                gt(d), yn(d, E, !0);
                break;
              case "textarea":
                gt(d), Pe(d);
                break;
              case "select":
              case "option":
                break;
              default:
                typeof E.onClick == "function" && (d.onclick = _l);
            }
            d = m, i.updateQueue = d, d !== null && (i.flags |= 4);
          } else {
            S = m.nodeType === 9 ? m : m.ownerDocument, a === "http://www.w3.org/1999/xhtml" && (a = Z(l)), a === "http://www.w3.org/1999/xhtml" ? l === "script" ? (a = S.createElement("div"), a.innerHTML = "<script><\/script>", a = a.removeChild(a.firstChild)) : typeof d.is == "string" ? a = S.createElement(l, { is: d.is }) : (a = S.createElement(l), l === "select" && (S = a, d.multiple ? S.multiple = !0 : d.size && (S.size = d.size))) : a = S.createElementNS(a, l), a[Sr] = i, a[Qo] = d, CT(a, i, !1, !1), i.stateNode = a;
            e: {
              switch (S = jt(l, d), l) {
                case "dialog":
                  pt("cancel", a), pt("close", a), m = d;
                  break;
                case "iframe":
                case "object":
                case "embed":
                  pt("load", a), m = d;
                  break;
                case "video":
                case "audio":
                  for (m = 0; m < Yo.length; m++) pt(Yo[m], a);
                  m = d;
                  break;
                case "source":
                  pt("error", a), m = d;
                  break;
                case "img":
                case "image":
                case "link":
                  pt(
                    "error",
                    a
                  ), pt("load", a), m = d;
                  break;
                case "details":
                  pt("toggle", a), m = d;
                  break;
                case "input":
                  nr(a, d), m = Dr(a, d), pt("invalid", a);
                  break;
                case "option":
                  m = d;
                  break;
                case "select":
                  a._wrapperState = { wasMultiple: !!d.multiple }, m = I({}, d, { value: void 0 }), pt("invalid", a);
                  break;
                case "textarea":
                  re(a, d), m = Sn(a, d), pt("invalid", a);
                  break;
                default:
                  m = d;
              }
              Ct(l, m), P = m;
              for (E in P) if (P.hasOwnProperty(E)) {
                var z = P[E];
                E === "style" ? Ot(a, z) : E === "dangerouslySetInnerHTML" ? (z = z ? z.__html : void 0, z != null && De(a, z)) : E === "children" ? typeof z == "string" ? (l !== "textarea" || z !== "") && Ge(a, z) : typeof z == "number" && Ge(a, "" + z) : E !== "suppressContentEditableWarning" && E !== "suppressHydrationWarning" && E !== "autoFocus" && (o.hasOwnProperty(E) ? z != null && E === "onScroll" && pt("scroll", a) : z != null && k(a, E, z, S));
              }
              switch (l) {
                case "input":
                  gt(a), yn(a, d, !1);
                  break;
                case "textarea":
                  gt(a), Pe(a);
                  break;
                case "option":
                  d.value != null && a.setAttribute("value", "" + Me(d.value));
                  break;
                case "select":
                  a.multiple = !!d.multiple, E = d.value, E != null ? Tn(a, !!d.multiple, E, !1) : d.defaultValue != null && Tn(
                    a,
                    !!d.multiple,
                    d.defaultValue,
                    !0
                  );
                  break;
                default:
                  typeof m.onClick == "function" && (a.onclick = _l);
              }
              switch (l) {
                case "button":
                case "input":
                case "select":
                case "textarea":
                  d = !!d.autoFocus;
                  break e;
                case "img":
                  d = !0;
                  break e;
                default:
                  d = !1;
              }
            }
            d && (i.flags |= 4);
          }
          i.ref !== null && (i.flags |= 512, i.flags |= 2097152);
        }
        return sn(i), null;
      case 6:
        if (a && i.stateNode != null) IT(a, i, a.memoizedProps, d);
        else {
          if (typeof d != "string" && i.stateNode === null) throw Error(n(166));
          if (l = za(ns.current), za(_r.current), Rl(i)) {
            if (d = i.stateNode, l = i.memoizedProps, d[Sr] = i, (E = d.nodeValue !== l) && (a = Mn, a !== null)) switch (a.tag) {
              case 3:
                Sl(d.nodeValue, l, (a.mode & 1) !== 0);
                break;
              case 5:
                a.memoizedProps.suppressHydrationWarning !== !0 && Sl(d.nodeValue, l, (a.mode & 1) !== 0);
            }
            E && (i.flags |= 4);
          } else d = (l.nodeType === 9 ? l : l.ownerDocument).createTextNode(d), d[Sr] = i, i.stateNode = d;
        }
        return sn(i), null;
      case 13:
        if (ft(yt), d = i.memoizedState, a === null || a.memoizedState !== null && a.memoizedState.dehydrated !== null) {
          if (mt && Pn !== null && i.mode & 1 && !(i.flags & 128)) Ny(), xi(), i.flags |= 98560, E = !1;
          else if (E = Rl(i), d !== null && d.dehydrated !== null) {
            if (a === null) {
              if (!E) throw Error(n(318));
              if (E = i.memoizedState, E = E !== null ? E.dehydrated : null, !E) throw Error(n(317));
              E[Sr] = i;
            } else xi(), !(i.flags & 128) && (i.memoizedState = null), i.flags |= 4;
            sn(i), E = !1;
          } else sr !== null && (Vd(sr), sr = null), E = !0;
          if (!E) return i.flags & 65536 ? i : null;
        }
        return i.flags & 128 ? (i.lanes = l, i) : (d = d !== null, d !== (a !== null && a.memoizedState !== null) && d && (i.child.flags |= 8192, i.mode & 1 && (a === null || yt.current & 1 ? Ht === 0 && (Ht = 3) : Kd())), i.updateQueue !== null && (i.flags |= 4), sn(i), null);
      case 4:
        return Di(), Md(a, i), a === null && Ko(i.stateNode.containerInfo), sn(i), null;
      case 10:
        return ud(i.type._context), sn(i), null;
      case 17:
        return vn(i.type) && Al(), sn(i), null;
      case 19:
        if (ft(yt), E = i.memoizedState, E === null) return sn(i), null;
        if (d = (i.flags & 128) !== 0, S = E.rendering, S === null) if (d) ss(E, !1);
        else {
          if (Ht !== 0 || a !== null && a.flags & 128) for (a = i.child; a !== null; ) {
            if (S = Ml(a), S !== null) {
              for (i.flags |= 128, ss(E, !1), d = S.updateQueue, d !== null && (i.updateQueue = d, i.flags |= 4), i.subtreeFlags = 0, d = l, l = i.child; l !== null; ) E = l, a = d, E.flags &= 14680066, S = E.alternate, S === null ? (E.childLanes = 0, E.lanes = a, E.child = null, E.subtreeFlags = 0, E.memoizedProps = null, E.memoizedState = null, E.updateQueue = null, E.dependencies = null, E.stateNode = null) : (E.childLanes = S.childLanes, E.lanes = S.lanes, E.child = S.child, E.subtreeFlags = 0, E.deletions = null, E.memoizedProps = S.memoizedProps, E.memoizedState = S.memoizedState, E.updateQueue = S.updateQueue, E.type = S.type, a = S.dependencies, E.dependencies = a === null ? null : { lanes: a.lanes, firstContext: a.firstContext }), l = l.sibling;
              return lt(yt, yt.current & 1 | 2), i.child;
            }
            a = a.sibling;
          }
          E.tail !== null && wt() > Bi && (i.flags |= 128, d = !0, ss(E, !1), i.lanes = 4194304);
        }
        else {
          if (!d) if (a = Ml(S), a !== null) {
            if (i.flags |= 128, d = !0, l = a.updateQueue, l !== null && (i.updateQueue = l, i.flags |= 4), ss(E, !0), E.tail === null && E.tailMode === "hidden" && !S.alternate && !mt) return sn(i), null;
          } else 2 * wt() - E.renderingStartTime > Bi && l !== 1073741824 && (i.flags |= 128, d = !0, ss(E, !1), i.lanes = 4194304);
          E.isBackwards ? (S.sibling = i.child, i.child = S) : (l = E.last, l !== null ? l.sibling = S : i.child = S, E.last = S);
        }
        return E.tail !== null ? (i = E.tail, E.rendering = i, E.tail = i.sibling, E.renderingStartTime = wt(), i.sibling = null, l = yt.current, lt(yt, d ? l & 1 | 2 : l & 1), i) : (sn(i), null);
      case 22:
      case 23:
        return Yd(), d = i.memoizedState !== null, a !== null && a.memoizedState !== null !== d && (i.flags |= 8192), d && i.mode & 1 ? Fn & 1073741824 && (sn(i), i.subtreeFlags & 6 && (i.flags |= 8192)) : sn(i), null;
      case 24:
        return null;
      case 25:
        return null;
    }
    throw Error(n(156, i.tag));
  }
  function VO(a, i) {
    switch (rd(i), i.tag) {
      case 1:
        return vn(i.type) && Al(), a = i.flags, a & 65536 ? (i.flags = a & -65537 | 128, i) : null;
      case 3:
        return Di(), ft(_n), ft(an), md(), a = i.flags, a & 65536 && !(a & 128) ? (i.flags = a & -65537 | 128, i) : null;
      case 5:
        return hd(i), null;
      case 13:
        if (ft(yt), a = i.memoizedState, a !== null && a.dehydrated !== null) {
          if (i.alternate === null) throw Error(n(340));
          xi();
        }
        return a = i.flags, a & 65536 ? (i.flags = a & -65537 | 128, i) : null;
      case 19:
        return ft(yt), null;
      case 4:
        return Di(), null;
      case 10:
        return ud(i.type._context), null;
      case 22:
      case 23:
        return Yd(), null;
      case 24:
        return null;
      default:
        return null;
    }
  }
  var ql = !1, ln = !1, WO = typeof WeakSet == "function" ? WeakSet : Set, ke = null;
  function Pi(a, i) {
    var l = a.ref;
    if (l !== null) if (typeof l == "function") try {
      l(null);
    } catch (d) {
      vt(a, i, d);
    }
    else l.current = null;
  }
  function Pd(a, i, l) {
    try {
      l();
    } catch (d) {
      vt(a, i, d);
    }
  }
  var RT = !1;
  function YO(a, i) {
    if (Yc = cl, a = sy(), Hc(a)) {
      if ("selectionStart" in a) var l = { start: a.selectionStart, end: a.selectionEnd };
      else e: {
        l = (l = a.ownerDocument) && l.defaultView || window;
        var d = l.getSelection && l.getSelection();
        if (d && d.rangeCount !== 0) {
          l = d.anchorNode;
          var m = d.anchorOffset, E = d.focusNode;
          d = d.focusOffset;
          try {
            l.nodeType, E.nodeType;
          } catch {
            l = null;
            break e;
          }
          var S = 0, P = -1, z = -1, ee = 0, ce = 0, pe = a, le = null;
          t: for (; ; ) {
            for (var Ae; pe !== l || m !== 0 && pe.nodeType !== 3 || (P = S + m), pe !== E || d !== 0 && pe.nodeType !== 3 || (z = S + d), pe.nodeType === 3 && (S += pe.nodeValue.length), (Ae = pe.firstChild) !== null; )
              le = pe, pe = Ae;
            for (; ; ) {
              if (pe === a) break t;
              if (le === l && ++ee === m && (P = S), le === E && ++ce === d && (z = S), (Ae = pe.nextSibling) !== null) break;
              pe = le, le = pe.parentNode;
            }
            pe = Ae;
          }
          l = P === -1 || z === -1 ? null : { start: P, end: z };
        } else l = null;
      }
      l = l || { start: 0, end: 0 };
    } else l = null;
    for (Kc = { focusedElem: a, selectionRange: l }, cl = !1, ke = i; ke !== null; ) if (i = ke, a = i.child, (i.subtreeFlags & 1028) !== 0 && a !== null) a.return = i, ke = a;
    else for (; ke !== null; ) {
      i = ke;
      try {
        var we = i.alternate;
        if (i.flags & 1024) switch (i.tag) {
          case 0:
          case 11:
          case 15:
            break;
          case 1:
            if (we !== null) {
              var Ie = we.memoizedProps, It = we.memoizedState, K = i.stateNode, q = K.getSnapshotBeforeUpdate(i.elementType === i.type ? Ie : lr(i.type, Ie), It);
              K.__reactInternalSnapshotBeforeUpdate = q;
            }
            break;
          case 3:
            var Q = i.stateNode.containerInfo;
            Q.nodeType === 1 ? Q.textContent = "" : Q.nodeType === 9 && Q.documentElement && Q.removeChild(Q.documentElement);
            break;
          case 5:
          case 6:
          case 4:
          case 17:
            break;
          default:
            throw Error(n(163));
        }
      } catch (me) {
        vt(i, i.return, me);
      }
      if (a = i.sibling, a !== null) {
        a.return = i.return, ke = a;
        break;
      }
      ke = i.return;
    }
    return we = RT, RT = !1, we;
  }
  function ls(a, i, l) {
    var d = i.updateQueue;
    if (d = d !== null ? d.lastEffect : null, d !== null) {
      var m = d = d.next;
      do {
        if ((m.tag & a) === a) {
          var E = m.destroy;
          m.destroy = void 0, E !== void 0 && Pd(i, l, E);
        }
        m = m.next;
      } while (m !== d);
    }
  }
  function jl(a, i) {
    if (i = i.updateQueue, i = i !== null ? i.lastEffect : null, i !== null) {
      var l = i = i.next;
      do {
        if ((l.tag & a) === a) {
          var d = l.create;
          l.destroy = d();
        }
        l = l.next;
      } while (l !== i);
    }
  }
  function Fd(a) {
    var i = a.ref;
    if (i !== null) {
      var l = a.stateNode;
      switch (a.tag) {
        case 5:
          a = l;
          break;
        default:
          a = l;
      }
      typeof i == "function" ? i(a) : i.current = a;
    }
  }
  function xT(a) {
    var i = a.alternate;
    i !== null && (a.alternate = null, xT(i)), a.child = null, a.deletions = null, a.sibling = null, a.tag === 5 && (i = a.stateNode, i !== null && (delete i[Sr], delete i[Qo], delete i[Jc], delete i[xO], delete i[NO])), a.stateNode = null, a.return = null, a.dependencies = null, a.memoizedProps = null, a.memoizedState = null, a.pendingProps = null, a.stateNode = null, a.updateQueue = null;
  }
  function NT(a) {
    return a.tag === 5 || a.tag === 3 || a.tag === 4;
  }
  function OT(a) {
    e: for (; ; ) {
      for (; a.sibling === null; ) {
        if (a.return === null || NT(a.return)) return null;
        a = a.return;
      }
      for (a.sibling.return = a.return, a = a.sibling; a.tag !== 5 && a.tag !== 6 && a.tag !== 18; ) {
        if (a.flags & 2 || a.child === null || a.tag === 4) continue e;
        a.child.return = a, a = a.child;
      }
      if (!(a.flags & 2)) return a.stateNode;
    }
  }
  function Bd(a, i, l) {
    var d = a.tag;
    if (d === 5 || d === 6) a = a.stateNode, i ? l.nodeType === 8 ? l.parentNode.insertBefore(a, i) : l.insertBefore(a, i) : (l.nodeType === 8 ? (i = l.parentNode, i.insertBefore(a, l)) : (i = l, i.appendChild(a)), l = l._reactRootContainer, l != null || i.onclick !== null || (i.onclick = _l));
    else if (d !== 4 && (a = a.child, a !== null)) for (Bd(a, i, l), a = a.sibling; a !== null; ) Bd(a, i, l), a = a.sibling;
  }
  function Ud(a, i, l) {
    var d = a.tag;
    if (d === 5 || d === 6) a = a.stateNode, i ? l.insertBefore(a, i) : l.appendChild(a);
    else if (d !== 4 && (a = a.child, a !== null)) for (Ud(a, i, l), a = a.sibling; a !== null; ) Ud(a, i, l), a = a.sibling;
  }
  var Jt = null, ur = !1;
  function da(a, i, l) {
    for (l = l.child; l !== null; ) LT(a, i, l), l = l.sibling;
  }
  function LT(a, i, l) {
    if (Tr && typeof Tr.onCommitFiberUnmount == "function") try {
      Tr.onCommitFiberUnmount(al, l);
    } catch {
    }
    switch (l.tag) {
      case 5:
        ln || Pi(l, i);
      case 6:
        var d = Jt, m = ur;
        Jt = null, da(a, i, l), Jt = d, ur = m, Jt !== null && (ur ? (a = Jt, l = l.stateNode, a.nodeType === 8 ? a.parentNode.removeChild(l) : a.removeChild(l)) : Jt.removeChild(l.stateNode));
        break;
      case 18:
        Jt !== null && (ur ? (a = Jt, l = l.stateNode, a.nodeType === 8 ? Zc(a.parentNode, l) : a.nodeType === 1 && Zc(a, l), Ho(a)) : Zc(Jt, l.stateNode));
        break;
      case 4:
        d = Jt, m = ur, Jt = l.stateNode.containerInfo, ur = !0, da(a, i, l), Jt = d, ur = m;
        break;
      case 0:
      case 11:
      case 14:
      case 15:
        if (!ln && (d = l.updateQueue, d !== null && (d = d.lastEffect, d !== null))) {
          m = d = d.next;
          do {
            var E = m, S = E.destroy;
            E = E.tag, S !== void 0 && (E & 2 || E & 4) && Pd(l, i, S), m = m.next;
          } while (m !== d);
        }
        da(a, i, l);
        break;
      case 1:
        if (!ln && (Pi(l, i), d = l.stateNode, typeof d.componentWillUnmount == "function")) try {
          d.props = l.memoizedProps, d.state = l.memoizedState, d.componentWillUnmount();
        } catch (P) {
          vt(l, i, P);
        }
        da(a, i, l);
        break;
      case 21:
        da(a, i, l);
        break;
      case 22:
        l.mode & 1 ? (ln = (d = ln) || l.memoizedState !== null, da(a, i, l), ln = d) : da(a, i, l);
        break;
      default:
        da(a, i, l);
    }
  }
  function DT(a) {
    var i = a.updateQueue;
    if (i !== null) {
      a.updateQueue = null;
      var l = a.stateNode;
      l === null && (l = a.stateNode = new WO()), i.forEach(function(d) {
        var m = rL.bind(null, a, d);
        l.has(d) || (l.add(d), d.then(m, m));
      });
    }
  }
  function cr(a, i) {
    var l = i.deletions;
    if (l !== null) for (var d = 0; d < l.length; d++) {
      var m = l[d];
      try {
        var E = a, S = i, P = S;
        e: for (; P !== null; ) {
          switch (P.tag) {
            case 5:
              Jt = P.stateNode, ur = !1;
              break e;
            case 3:
              Jt = P.stateNode.containerInfo, ur = !0;
              break e;
            case 4:
              Jt = P.stateNode.containerInfo, ur = !0;
              break e;
          }
          P = P.return;
        }
        if (Jt === null) throw Error(n(160));
        LT(E, S, m), Jt = null, ur = !1;
        var z = m.alternate;
        z !== null && (z.return = null), m.return = null;
      } catch (ee) {
        vt(m, i, ee);
      }
    }
    if (i.subtreeFlags & 12854) for (i = i.child; i !== null; ) MT(i, a), i = i.sibling;
  }
  function MT(a, i) {
    var l = a.alternate, d = a.flags;
    switch (a.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        if (cr(i, a), Ar(a), d & 4) {
          try {
            ls(3, a, a.return), jl(3, a);
          } catch (Ie) {
            vt(a, a.return, Ie);
          }
          try {
            ls(5, a, a.return);
          } catch (Ie) {
            vt(a, a.return, Ie);
          }
        }
        break;
      case 1:
        cr(i, a), Ar(a), d & 512 && l !== null && Pi(l, l.return);
        break;
      case 5:
        if (cr(i, a), Ar(a), d & 512 && l !== null && Pi(l, l.return), a.flags & 32) {
          var m = a.stateNode;
          try {
            Ge(m, "");
          } catch (Ie) {
            vt(a, a.return, Ie);
          }
        }
        if (d & 4 && (m = a.stateNode, m != null)) {
          var E = a.memoizedProps, S = l !== null ? l.memoizedProps : E, P = a.type, z = a.updateQueue;
          if (a.updateQueue = null, z !== null) try {
            P === "input" && E.type === "radio" && E.name != null && Gt(m, E), jt(P, S);
            var ee = jt(P, E);
            for (S = 0; S < z.length; S += 2) {
              var ce = z[S], pe = z[S + 1];
              ce === "style" ? Ot(m, pe) : ce === "dangerouslySetInnerHTML" ? De(m, pe) : ce === "children" ? Ge(m, pe) : k(m, ce, pe, ee);
            }
            switch (P) {
              case "input":
                rr(m, E);
                break;
              case "textarea":
                Le(m, E);
                break;
              case "select":
                var le = m._wrapperState.wasMultiple;
                m._wrapperState.wasMultiple = !!E.multiple;
                var Ae = E.value;
                Ae != null ? Tn(m, !!E.multiple, Ae, !1) : le !== !!E.multiple && (E.defaultValue != null ? Tn(
                  m,
                  !!E.multiple,
                  E.defaultValue,
                  !0
                ) : Tn(m, !!E.multiple, E.multiple ? [] : "", !1));
            }
            m[Qo] = E;
          } catch (Ie) {
            vt(a, a.return, Ie);
          }
        }
        break;
      case 6:
        if (cr(i, a), Ar(a), d & 4) {
          if (a.stateNode === null) throw Error(n(162));
          m = a.stateNode, E = a.memoizedProps;
          try {
            m.nodeValue = E;
          } catch (Ie) {
            vt(a, a.return, Ie);
          }
        }
        break;
      case 3:
        if (cr(i, a), Ar(a), d & 4 && l !== null && l.memoizedState.isDehydrated) try {
          Ho(i.containerInfo);
        } catch (Ie) {
          vt(a, a.return, Ie);
        }
        break;
      case 4:
        cr(i, a), Ar(a);
        break;
      case 13:
        cr(i, a), Ar(a), m = a.child, m.flags & 8192 && (E = m.memoizedState !== null, m.stateNode.isHidden = E, !E || m.alternate !== null && m.alternate.memoizedState !== null || (zd = wt())), d & 4 && DT(a);
        break;
      case 22:
        if (ce = l !== null && l.memoizedState !== null, a.mode & 1 ? (ln = (ee = ln) || ce, cr(i, a), ln = ee) : cr(i, a), Ar(a), d & 8192) {
          if (ee = a.memoizedState !== null, (a.stateNode.isHidden = ee) && !ce && a.mode & 1) for (ke = a, ce = a.child; ce !== null; ) {
            for (pe = ke = ce; ke !== null; ) {
              switch (le = ke, Ae = le.child, le.tag) {
                case 0:
                case 11:
                case 14:
                case 15:
                  ls(4, le, le.return);
                  break;
                case 1:
                  Pi(le, le.return);
                  var we = le.stateNode;
                  if (typeof we.componentWillUnmount == "function") {
                    d = le, l = le.return;
                    try {
                      i = d, we.props = i.memoizedProps, we.state = i.memoizedState, we.componentWillUnmount();
                    } catch (Ie) {
                      vt(d, l, Ie);
                    }
                  }
                  break;
                case 5:
                  Pi(le, le.return);
                  break;
                case 22:
                  if (le.memoizedState !== null) {
                    BT(pe);
                    continue;
                  }
              }
              Ae !== null ? (Ae.return = le, ke = Ae) : BT(pe);
            }
            ce = ce.sibling;
          }
          e: for (ce = null, pe = a; ; ) {
            if (pe.tag === 5) {
              if (ce === null) {
                ce = pe;
                try {
                  m = pe.stateNode, ee ? (E = m.style, typeof E.setProperty == "function" ? E.setProperty("display", "none", "important") : E.display = "none") : (P = pe.stateNode, z = pe.memoizedProps.style, S = z != null && z.hasOwnProperty("display") ? z.display : null, P.style.display = Nt("display", S));
                } catch (Ie) {
                  vt(a, a.return, Ie);
                }
              }
            } else if (pe.tag === 6) {
              if (ce === null) try {
                pe.stateNode.nodeValue = ee ? "" : pe.memoizedProps;
              } catch (Ie) {
                vt(a, a.return, Ie);
              }
            } else if ((pe.tag !== 22 && pe.tag !== 23 || pe.memoizedState === null || pe === a) && pe.child !== null) {
              pe.child.return = pe, pe = pe.child;
              continue;
            }
            if (pe === a) break e;
            for (; pe.sibling === null; ) {
              if (pe.return === null || pe.return === a) break e;
              ce === pe && (ce = null), pe = pe.return;
            }
            ce === pe && (ce = null), pe.sibling.return = pe.return, pe = pe.sibling;
          }
        }
        break;
      case 19:
        cr(i, a), Ar(a), d & 4 && DT(a);
        break;
      case 21:
        break;
      default:
        cr(
          i,
          a
        ), Ar(a);
    }
  }
  function Ar(a) {
    var i = a.flags;
    if (i & 2) {
      try {
        e: {
          for (var l = a.return; l !== null; ) {
            if (NT(l)) {
              var d = l;
              break e;
            }
            l = l.return;
          }
          throw Error(n(160));
        }
        switch (d.tag) {
          case 5:
            var m = d.stateNode;
            d.flags & 32 && (Ge(m, ""), d.flags &= -33);
            var E = OT(a);
            Ud(a, E, m);
            break;
          case 3:
          case 4:
            var S = d.stateNode.containerInfo, P = OT(a);
            Bd(a, P, S);
            break;
          default:
            throw Error(n(161));
        }
      } catch (z) {
        vt(a, a.return, z);
      }
      a.flags &= -3;
    }
    i & 4096 && (a.flags &= -4097);
  }
  function KO(a, i, l) {
    ke = a, PT(a);
  }
  function PT(a, i, l) {
    for (var d = (a.mode & 1) !== 0; ke !== null; ) {
      var m = ke, E = m.child;
      if (m.tag === 22 && d) {
        var S = m.memoizedState !== null || ql;
        if (!S) {
          var P = m.alternate, z = P !== null && P.memoizedState !== null || ln;
          P = ql;
          var ee = ln;
          if (ql = S, (ln = z) && !ee) for (ke = m; ke !== null; ) S = ke, z = S.child, S.tag === 22 && S.memoizedState !== null ? UT(m) : z !== null ? (z.return = S, ke = z) : UT(m);
          for (; E !== null; ) ke = E, PT(E), E = E.sibling;
          ke = m, ql = P, ln = ee;
        }
        FT(a);
      } else m.subtreeFlags & 8772 && E !== null ? (E.return = m, ke = E) : FT(a);
    }
  }
  function FT(a) {
    for (; ke !== null; ) {
      var i = ke;
      if (i.flags & 8772) {
        var l = i.alternate;
        try {
          if (i.flags & 8772) switch (i.tag) {
            case 0:
            case 11:
            case 15:
              ln || jl(5, i);
              break;
            case 1:
              var d = i.stateNode;
              if (i.flags & 4 && !ln) if (l === null) d.componentDidMount();
              else {
                var m = i.elementType === i.type ? l.memoizedProps : lr(i.type, l.memoizedProps);
                d.componentDidUpdate(m, l.memoizedState, d.__reactInternalSnapshotBeforeUpdate);
              }
              var E = i.updateQueue;
              E !== null && By(i, E, d);
              break;
            case 3:
              var S = i.updateQueue;
              if (S !== null) {
                if (l = null, i.child !== null) switch (i.child.tag) {
                  case 5:
                    l = i.child.stateNode;
                    break;
                  case 1:
                    l = i.child.stateNode;
                }
                By(i, S, l);
              }
              break;
            case 5:
              var P = i.stateNode;
              if (l === null && i.flags & 4) {
                l = P;
                var z = i.memoizedProps;
                switch (i.type) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    z.autoFocus && l.focus();
                    break;
                  case "img":
                    z.src && (l.src = z.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (i.memoizedState === null) {
                var ee = i.alternate;
                if (ee !== null) {
                  var ce = ee.memoizedState;
                  if (ce !== null) {
                    var pe = ce.dehydrated;
                    pe !== null && Ho(pe);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(n(163));
          }
          ln || i.flags & 512 && Fd(i);
        } catch (le) {
          vt(i, i.return, le);
        }
      }
      if (i === a) {
        ke = null;
        break;
      }
      if (l = i.sibling, l !== null) {
        l.return = i.return, ke = l;
        break;
      }
      ke = i.return;
    }
  }
  function BT(a) {
    for (; ke !== null; ) {
      var i = ke;
      if (i === a) {
        ke = null;
        break;
      }
      var l = i.sibling;
      if (l !== null) {
        l.return = i.return, ke = l;
        break;
      }
      ke = i.return;
    }
  }
  function UT(a) {
    for (; ke !== null; ) {
      var i = ke;
      try {
        switch (i.tag) {
          case 0:
          case 11:
          case 15:
            var l = i.return;
            try {
              jl(4, i);
            } catch (z) {
              vt(i, l, z);
            }
            break;
          case 1:
            var d = i.stateNode;
            if (typeof d.componentDidMount == "function") {
              var m = i.return;
              try {
                d.componentDidMount();
              } catch (z) {
                vt(i, m, z);
              }
            }
            var E = i.return;
            try {
              Fd(i);
            } catch (z) {
              vt(i, E, z);
            }
            break;
          case 5:
            var S = i.return;
            try {
              Fd(i);
            } catch (z) {
              vt(i, S, z);
            }
        }
      } catch (z) {
        vt(i, i.return, z);
      }
      if (i === a) {
        ke = null;
        break;
      }
      var P = i.sibling;
      if (P !== null) {
        P.return = i.return, ke = P;
        break;
      }
      ke = i.return;
    }
  }
  var XO = Math.ceil, Vl = O.ReactCurrentDispatcher, Hd = O.ReactCurrentOwner, Wn = O.ReactCurrentBatchConfig, tt = 0, Wt = null, Lt = null, en = 0, Fn = 0, Fi = oa(0), Ht = 0, us = null, qa = 0, Wl = 0, $d = 0, cs = null, kn = null, zd = 0, Bi = 1 / 0, zr = null, Yl = !1, Gd = null, pa = null, Kl = !1, fa = null, Xl = 0, ds = 0, qd = null, Ql = -1, Zl = 0;
  function hn() {
    return tt & 6 ? wt() : Ql !== -1 ? Ql : Ql = wt();
  }
  function ha(a) {
    return a.mode & 1 ? tt & 2 && en !== 0 ? en & -en : LO.transition !== null ? (Zl === 0 && (Zl = O1()), Zl) : (a = it, a !== 0 || (a = window.event, a = a === void 0 ? 16 : $1(a.type)), a) : 1;
  }
  function dr(a, i, l, d) {
    if (50 < ds) throw ds = 0, qd = null, Error(n(185));
    Mo(a, l, d), (!(tt & 2) || a !== Wt) && (a === Wt && (!(tt & 2) && (Wl |= l), Ht === 4 && ga(a, en)), Cn(a, d), l === 1 && tt === 0 && !(i.mode & 1) && (Bi = wt() + 500, Cl && la()));
  }
  function Cn(a, i) {
    var l = a.callbackNode;
    L2(a, i);
    var d = sl(a, a === Wt ? en : 0);
    if (d === 0) l !== null && R1(l), a.callbackNode = null, a.callbackPriority = 0;
    else if (i = d & -d, a.callbackPriority !== i) {
      if (l != null && R1(l), i === 1) a.tag === 0 ? OO($T.bind(null, a)) : Cy($T.bind(null, a)), IO(function() {
        !(tt & 6) && la();
      }), l = null;
      else {
        switch (L1(d)) {
          case 1:
            l = vc;
            break;
          case 4:
            l = x1;
            break;
          case 16:
            l = rl;
            break;
          case 536870912:
            l = N1;
            break;
          default:
            l = rl;
        }
        l = KT(l, HT.bind(null, a));
      }
      a.callbackPriority = i, a.callbackNode = l;
    }
  }
  function HT(a, i) {
    if (Ql = -1, Zl = 0, tt & 6) throw Error(n(327));
    var l = a.callbackNode;
    if (Ui() && a.callbackNode !== l) return null;
    var d = sl(a, a === Wt ? en : 0);
    if (d === 0) return null;
    if (d & 30 || d & a.expiredLanes || i) i = Jl(a, d);
    else {
      i = d;
      var m = tt;
      tt |= 2;
      var E = GT();
      (Wt !== a || en !== i) && (zr = null, Bi = wt() + 500, Va(a, i));
      do
        try {
          JO();
          break;
        } catch (P) {
          zT(a, P);
        }
      while (!0);
      ld(), Vl.current = E, tt = m, Lt !== null ? i = 0 : (Wt = null, en = 0, i = Ht);
    }
    if (i !== 0) {
      if (i === 2 && (m = Ac(a), m !== 0 && (d = m, i = jd(a, m))), i === 1) throw l = us, Va(a, 0), ga(a, d), Cn(a, wt()), l;
      if (i === 6) ga(a, d);
      else {
        if (m = a.current.alternate, !(d & 30) && !QO(m) && (i = Jl(a, d), i === 2 && (E = Ac(a), E !== 0 && (d = E, i = jd(a, E))), i === 1)) throw l = us, Va(a, 0), ga(a, d), Cn(a, wt()), l;
        switch (a.finishedWork = m, a.finishedLanes = d, i) {
          case 0:
          case 1:
            throw Error(n(345));
          case 2:
            Wa(a, kn, zr);
            break;
          case 3:
            if (ga(a, d), (d & 130023424) === d && (i = zd + 500 - wt(), 10 < i)) {
              if (sl(a, 0) !== 0) break;
              if (m = a.suspendedLanes, (m & d) !== d) {
                hn(), a.pingedLanes |= a.suspendedLanes & m;
                break;
              }
              a.timeoutHandle = Qc(Wa.bind(null, a, kn, zr), i);
              break;
            }
            Wa(a, kn, zr);
            break;
          case 4:
            if (ga(a, d), (d & 4194240) === d) break;
            for (i = a.eventTimes, m = -1; 0 < d; ) {
              var S = 31 - ir(d);
              E = 1 << S, S = i[S], S > m && (m = S), d &= ~E;
            }
            if (d = m, d = wt() - d, d = (120 > d ? 120 : 480 > d ? 480 : 1080 > d ? 1080 : 1920 > d ? 1920 : 3e3 > d ? 3e3 : 4320 > d ? 4320 : 1960 * XO(d / 1960)) - d, 10 < d) {
              a.timeoutHandle = Qc(Wa.bind(null, a, kn, zr), d);
              break;
            }
            Wa(a, kn, zr);
            break;
          case 5:
            Wa(a, kn, zr);
            break;
          default:
            throw Error(n(329));
        }
      }
    }
    return Cn(a, wt()), a.callbackNode === l ? HT.bind(null, a) : null;
  }
  function jd(a, i) {
    var l = cs;
    return a.current.memoizedState.isDehydrated && (Va(a, i).flags |= 256), a = Jl(a, i), a !== 2 && (i = kn, kn = l, i !== null && Vd(i)), a;
  }
  function Vd(a) {
    kn === null ? kn = a : kn.push.apply(kn, a);
  }
  function QO(a) {
    for (var i = a; ; ) {
      if (i.flags & 16384) {
        var l = i.updateQueue;
        if (l !== null && (l = l.stores, l !== null)) for (var d = 0; d < l.length; d++) {
          var m = l[d], E = m.getSnapshot;
          m = m.value;
          try {
            if (!or(E(), m)) return !1;
          } catch {
            return !1;
          }
        }
      }
      if (l = i.child, i.subtreeFlags & 16384 && l !== null) l.return = i, i = l;
      else {
        if (i === a) break;
        for (; i.sibling === null; ) {
          if (i.return === null || i.return === a) return !0;
          i = i.return;
        }
        i.sibling.return = i.return, i = i.sibling;
      }
    }
    return !0;
  }
  function ga(a, i) {
    for (i &= ~$d, i &= ~Wl, a.suspendedLanes |= i, a.pingedLanes &= ~i, a = a.expirationTimes; 0 < i; ) {
      var l = 31 - ir(i), d = 1 << l;
      a[l] = -1, i &= ~d;
    }
  }
  function $T(a) {
    if (tt & 6) throw Error(n(327));
    Ui();
    var i = sl(a, 0);
    if (!(i & 1)) return Cn(a, wt()), null;
    var l = Jl(a, i);
    if (a.tag !== 0 && l === 2) {
      var d = Ac(a);
      d !== 0 && (i = d, l = jd(a, d));
    }
    if (l === 1) throw l = us, Va(a, 0), ga(a, i), Cn(a, wt()), l;
    if (l === 6) throw Error(n(345));
    return a.finishedWork = a.current.alternate, a.finishedLanes = i, Wa(a, kn, zr), Cn(a, wt()), null;
  }
  function Wd(a, i) {
    var l = tt;
    tt |= 1;
    try {
      return a(i);
    } finally {
      tt = l, tt === 0 && (Bi = wt() + 500, Cl && la());
    }
  }
  function ja(a) {
    fa !== null && fa.tag === 0 && !(tt & 6) && Ui();
    var i = tt;
    tt |= 1;
    var l = Wn.transition, d = it;
    try {
      if (Wn.transition = null, it = 1, a) return a();
    } finally {
      it = d, Wn.transition = l, tt = i, !(tt & 6) && la();
    }
  }
  function Yd() {
    Fn = Fi.current, ft(Fi);
  }
  function Va(a, i) {
    a.finishedWork = null, a.finishedLanes = 0;
    var l = a.timeoutHandle;
    if (l !== -1 && (a.timeoutHandle = -1, wO(l)), Lt !== null) for (l = Lt.return; l !== null; ) {
      var d = l;
      switch (rd(d), d.tag) {
        case 1:
          d = d.type.childContextTypes, d != null && Al();
          break;
        case 3:
          Di(), ft(_n), ft(an), md();
          break;
        case 5:
          hd(d);
          break;
        case 4:
          Di();
          break;
        case 13:
          ft(yt);
          break;
        case 19:
          ft(yt);
          break;
        case 10:
          ud(d.type._context);
          break;
        case 22:
        case 23:
          Yd();
      }
      l = l.return;
    }
    if (Wt = a, Lt = a = ma(a.current, null), en = Fn = i, Ht = 0, us = null, $d = Wl = qa = 0, kn = cs = null, $a !== null) {
      for (i = 0; i < $a.length; i++) if (l = $a[i], d = l.interleaved, d !== null) {
        l.interleaved = null;
        var m = d.next, E = l.pending;
        if (E !== null) {
          var S = E.next;
          E.next = m, d.next = S;
        }
        l.pending = d;
      }
      $a = null;
    }
    return a;
  }
  function zT(a, i) {
    do {
      var l = Lt;
      try {
        if (ld(), Pl.current = Hl, Fl) {
          for (var d = Tt.memoizedState; d !== null; ) {
            var m = d.queue;
            m !== null && (m.pending = null), d = d.next;
          }
          Fl = !1;
        }
        if (Ga = 0, Vt = Ut = Tt = null, rs = !1, as = 0, Hd.current = null, l === null || l.return === null) {
          Ht = 1, us = i, Lt = null;
          break;
        }
        e: {
          var E = a, S = l.return, P = l, z = i;
          if (i = en, P.flags |= 32768, z !== null && typeof z == "object" && typeof z.then == "function") {
            var ee = z, ce = P, pe = ce.tag;
            if (!(ce.mode & 1) && (pe === 0 || pe === 11 || pe === 15)) {
              var le = ce.alternate;
              le ? (ce.updateQueue = le.updateQueue, ce.memoizedState = le.memoizedState, ce.lanes = le.lanes) : (ce.updateQueue = null, ce.memoizedState = null);
            }
            var Ae = fT(S);
            if (Ae !== null) {
              Ae.flags &= -257, hT(Ae, S, P, E, i), Ae.mode & 1 && pT(E, ee, i), i = Ae, z = ee;
              var we = i.updateQueue;
              if (we === null) {
                var Ie = /* @__PURE__ */ new Set();
                Ie.add(z), i.updateQueue = Ie;
              } else we.add(z);
              break e;
            } else {
              if (!(i & 1)) {
                pT(E, ee, i), Kd();
                break e;
              }
              z = Error(n(426));
            }
          } else if (mt && P.mode & 1) {
            var It = fT(S);
            if (It !== null) {
              !(It.flags & 65536) && (It.flags |= 256), hT(It, S, P, E, i), od(Mi(z, P));
              break e;
            }
          }
          E = z = Mi(z, P), Ht !== 4 && (Ht = 2), cs === null ? cs = [E] : cs.push(E), E = S;
          do {
            switch (E.tag) {
              case 3:
                E.flags |= 65536, i &= -i, E.lanes |= i;
                var K = cT(E, z, i);
                Fy(E, K);
                break e;
              case 1:
                P = z;
                var q = E.type, Q = E.stateNode;
                if (!(E.flags & 128) && (typeof q.getDerivedStateFromError == "function" || Q !== null && typeof Q.componentDidCatch == "function" && (pa === null || !pa.has(Q)))) {
                  E.flags |= 65536, i &= -i, E.lanes |= i;
                  var me = dT(E, P, i);
                  Fy(E, me);
                  break e;
                }
            }
            E = E.return;
          } while (E !== null);
        }
        jT(l);
      } catch (xe) {
        i = xe, Lt === l && l !== null && (Lt = l = l.return);
        continue;
      }
      break;
    } while (!0);
  }
  function GT() {
    var a = Vl.current;
    return Vl.current = Hl, a === null ? Hl : a;
  }
  function Kd() {
    (Ht === 0 || Ht === 3 || Ht === 2) && (Ht = 4), Wt === null || !(qa & 268435455) && !(Wl & 268435455) || ga(Wt, en);
  }
  function Jl(a, i) {
    var l = tt;
    tt |= 2;
    var d = GT();
    (Wt !== a || en !== i) && (zr = null, Va(a, i));
    do
      try {
        ZO();
        break;
      } catch (m) {
        zT(a, m);
      }
    while (!0);
    if (ld(), tt = l, Vl.current = d, Lt !== null) throw Error(n(261));
    return Wt = null, en = 0, Ht;
  }
  function ZO() {
    for (; Lt !== null; ) qT(Lt);
  }
  function JO() {
    for (; Lt !== null && !A2(); ) qT(Lt);
  }
  function qT(a) {
    var i = YT(a.alternate, a, Fn);
    a.memoizedProps = a.pendingProps, i === null ? jT(a) : Lt = i, Hd.current = null;
  }
  function jT(a) {
    var i = a;
    do {
      var l = i.alternate;
      if (a = i.return, i.flags & 32768) {
        if (l = VO(l, i), l !== null) {
          l.flags &= 32767, Lt = l;
          return;
        }
        if (a !== null) a.flags |= 32768, a.subtreeFlags = 0, a.deletions = null;
        else {
          Ht = 6, Lt = null;
          return;
        }
      } else if (l = jO(l, i, Fn), l !== null) {
        Lt = l;
        return;
      }
      if (i = i.sibling, i !== null) {
        Lt = i;
        return;
      }
      Lt = i = a;
    } while (i !== null);
    Ht === 0 && (Ht = 5);
  }
  function Wa(a, i, l) {
    var d = it, m = Wn.transition;
    try {
      Wn.transition = null, it = 1, eL(a, i, l, d);
    } finally {
      Wn.transition = m, it = d;
    }
    return null;
  }
  function eL(a, i, l, d) {
    do
      Ui();
    while (fa !== null);
    if (tt & 6) throw Error(n(327));
    l = a.finishedWork;
    var m = a.finishedLanes;
    if (l === null) return null;
    if (a.finishedWork = null, a.finishedLanes = 0, l === a.current) throw Error(n(177));
    a.callbackNode = null, a.callbackPriority = 0;
    var E = l.lanes | l.childLanes;
    if (D2(a, E), a === Wt && (Lt = Wt = null, en = 0), !(l.subtreeFlags & 2064) && !(l.flags & 2064) || Kl || (Kl = !0, KT(rl, function() {
      return Ui(), null;
    })), E = (l.flags & 15990) !== 0, l.subtreeFlags & 15990 || E) {
      E = Wn.transition, Wn.transition = null;
      var S = it;
      it = 1;
      var P = tt;
      tt |= 4, Hd.current = null, YO(a, l), MT(l, a), TO(Kc), cl = !!Yc, Kc = Yc = null, a.current = l, KO(l), k2(), tt = P, it = S, Wn.transition = E;
    } else a.current = l;
    if (Kl && (Kl = !1, fa = a, Xl = m), E = a.pendingLanes, E === 0 && (pa = null), I2(l.stateNode), Cn(a, wt()), i !== null) for (d = a.onRecoverableError, l = 0; l < i.length; l++) m = i[l], d(m.value, { componentStack: m.stack, digest: m.digest });
    if (Yl) throw Yl = !1, a = Gd, Gd = null, a;
    return Xl & 1 && a.tag !== 0 && Ui(), E = a.pendingLanes, E & 1 ? a === qd ? ds++ : (ds = 0, qd = a) : ds = 0, la(), null;
  }
  function Ui() {
    if (fa !== null) {
      var a = L1(Xl), i = Wn.transition, l = it;
      try {
        if (Wn.transition = null, it = 16 > a ? 16 : a, fa === null) var d = !1;
        else {
          if (a = fa, fa = null, Xl = 0, tt & 6) throw Error(n(331));
          var m = tt;
          for (tt |= 4, ke = a.current; ke !== null; ) {
            var E = ke, S = E.child;
            if (ke.flags & 16) {
              var P = E.deletions;
              if (P !== null) {
                for (var z = 0; z < P.length; z++) {
                  var ee = P[z];
                  for (ke = ee; ke !== null; ) {
                    var ce = ke;
                    switch (ce.tag) {
                      case 0:
                      case 11:
                      case 15:
                        ls(8, ce, E);
                    }
                    var pe = ce.child;
                    if (pe !== null) pe.return = ce, ke = pe;
                    else for (; ke !== null; ) {
                      ce = ke;
                      var le = ce.sibling, Ae = ce.return;
                      if (xT(ce), ce === ee) {
                        ke = null;
                        break;
                      }
                      if (le !== null) {
                        le.return = Ae, ke = le;
                        break;
                      }
                      ke = Ae;
                    }
                  }
                }
                var we = E.alternate;
                if (we !== null) {
                  var Ie = we.child;
                  if (Ie !== null) {
                    we.child = null;
                    do {
                      var It = Ie.sibling;
                      Ie.sibling = null, Ie = It;
                    } while (Ie !== null);
                  }
                }
                ke = E;
              }
            }
            if (E.subtreeFlags & 2064 && S !== null) S.return = E, ke = S;
            else e: for (; ke !== null; ) {
              if (E = ke, E.flags & 2048) switch (E.tag) {
                case 0:
                case 11:
                case 15:
                  ls(9, E, E.return);
              }
              var K = E.sibling;
              if (K !== null) {
                K.return = E.return, ke = K;
                break e;
              }
              ke = E.return;
            }
          }
          var q = a.current;
          for (ke = q; ke !== null; ) {
            S = ke;
            var Q = S.child;
            if (S.subtreeFlags & 2064 && Q !== null) Q.return = S, ke = Q;
            else e: for (S = q; ke !== null; ) {
              if (P = ke, P.flags & 2048) try {
                switch (P.tag) {
                  case 0:
                  case 11:
                  case 15:
                    jl(9, P);
                }
              } catch (xe) {
                vt(P, P.return, xe);
              }
              if (P === S) {
                ke = null;
                break e;
              }
              var me = P.sibling;
              if (me !== null) {
                me.return = P.return, ke = me;
                break e;
              }
              ke = P.return;
            }
          }
          if (tt = m, la(), Tr && typeof Tr.onPostCommitFiberRoot == "function") try {
            Tr.onPostCommitFiberRoot(al, a);
          } catch {
          }
          d = !0;
        }
        return d;
      } finally {
        it = l, Wn.transition = i;
      }
    }
    return !1;
  }
  function VT(a, i, l) {
    i = Mi(l, i), i = cT(a, i, 1), a = ca(a, i, 1), i = hn(), a !== null && (Mo(a, 1, i), Cn(a, i));
  }
  function vt(a, i, l) {
    if (a.tag === 3) VT(a, a, l);
    else for (; i !== null; ) {
      if (i.tag === 3) {
        VT(i, a, l);
        break;
      } else if (i.tag === 1) {
        var d = i.stateNode;
        if (typeof i.type.getDerivedStateFromError == "function" || typeof d.componentDidCatch == "function" && (pa === null || !pa.has(d))) {
          a = Mi(l, a), a = dT(i, a, 1), i = ca(i, a, 1), a = hn(), i !== null && (Mo(i, 1, a), Cn(i, a));
          break;
        }
      }
      i = i.return;
    }
  }
  function tL(a, i, l) {
    var d = a.pingCache;
    d !== null && d.delete(i), i = hn(), a.pingedLanes |= a.suspendedLanes & l, Wt === a && (en & l) === l && (Ht === 4 || Ht === 3 && (en & 130023424) === en && 500 > wt() - zd ? Va(a, 0) : $d |= l), Cn(a, i);
  }
  function WT(a, i) {
    i === 0 && (a.mode & 1 ? (i = ol, ol <<= 1, !(ol & 130023424) && (ol = 4194304)) : i = 1);
    var l = hn();
    a = Ur(a, i), a !== null && (Mo(a, i, l), Cn(a, l));
  }
  function nL(a) {
    var i = a.memoizedState, l = 0;
    i !== null && (l = i.retryLane), WT(a, l);
  }
  function rL(a, i) {
    var l = 0;
    switch (a.tag) {
      case 13:
        var d = a.stateNode, m = a.memoizedState;
        m !== null && (l = m.retryLane);
        break;
      case 19:
        d = a.stateNode;
        break;
      default:
        throw Error(n(314));
    }
    d !== null && d.delete(i), WT(a, l);
  }
  var YT;
  YT = function(a, i, l) {
    if (a !== null) if (a.memoizedProps !== i.pendingProps || _n.current) An = !0;
    else {
      if (!(a.lanes & l) && !(i.flags & 128)) return An = !1, qO(a, i, l);
      An = !!(a.flags & 131072);
    }
    else An = !1, mt && i.flags & 1048576 && wy(i, Il, i.index);
    switch (i.lanes = 0, i.tag) {
      case 2:
        var d = i.type;
        Gl(a, i), a = i.pendingProps;
        var m = wi(i, an.current);
        Li(i, l), m = yd(null, i, d, a, m, l);
        var E = Td();
        return i.flags |= 1, typeof m == "object" && m !== null && typeof m.render == "function" && m.$$typeof === void 0 ? (i.tag = 1, i.memoizedState = null, i.updateQueue = null, vn(d) ? (E = !0, kl(i)) : E = !1, i.memoizedState = m.state !== null && m.state !== void 0 ? m.state : null, pd(i), m.updater = $l, i.stateNode = m, m._reactInternals = i, Cd(i, d, a, l), i = xd(null, i, d, !0, E, l)) : (i.tag = 0, mt && E && nd(i), fn(null, i, m, l), i = i.child), i;
      case 16:
        d = i.elementType;
        e: {
          switch (Gl(a, i), a = i.pendingProps, m = d._init, d = m(d._payload), i.type = d, m = i.tag = iL(d), a = lr(d, a), m) {
            case 0:
              i = Rd(null, i, d, a, l);
              break e;
            case 1:
              i = TT(null, i, d, a, l);
              break e;
            case 11:
              i = gT(null, i, d, a, l);
              break e;
            case 14:
              i = mT(null, i, d, lr(d.type, a), l);
              break e;
          }
          throw Error(n(
            306,
            d,
            ""
          ));
        }
        return i;
      case 0:
        return d = i.type, m = i.pendingProps, m = i.elementType === d ? m : lr(d, m), Rd(a, i, d, m, l);
      case 1:
        return d = i.type, m = i.pendingProps, m = i.elementType === d ? m : lr(d, m), TT(a, i, d, m, l);
      case 3:
        e: {
          if (ST(i), a === null) throw Error(n(387));
          d = i.pendingProps, E = i.memoizedState, m = E.element, Py(a, i), Dl(i, d, null, l);
          var S = i.memoizedState;
          if (d = S.element, E.isDehydrated) if (E = { element: d, isDehydrated: !1, cache: S.cache, pendingSuspenseBoundaries: S.pendingSuspenseBoundaries, transitions: S.transitions }, i.updateQueue.baseState = E, i.memoizedState = E, i.flags & 256) {
            m = Mi(Error(n(423)), i), i = _T(a, i, d, l, m);
            break e;
          } else if (d !== m) {
            m = Mi(Error(n(424)), i), i = _T(a, i, d, l, m);
            break e;
          } else for (Pn = ia(i.stateNode.containerInfo.firstChild), Mn = i, mt = !0, sr = null, l = Dy(i, null, d, l), i.child = l; l; ) l.flags = l.flags & -3 | 4096, l = l.sibling;
          else {
            if (xi(), d === m) {
              i = $r(a, i, l);
              break e;
            }
            fn(a, i, d, l);
          }
          i = i.child;
        }
        return i;
      case 5:
        return Uy(i), a === null && id(i), d = i.type, m = i.pendingProps, E = a !== null ? a.memoizedProps : null, S = m.children, Xc(d, m) ? S = null : E !== null && Xc(d, E) && (i.flags |= 32), yT(a, i), fn(a, i, S, l), i.child;
      case 6:
        return a === null && id(i), null;
      case 13:
        return vT(a, i, l);
      case 4:
        return fd(i, i.stateNode.containerInfo), d = i.pendingProps, a === null ? i.child = Ni(i, null, d, l) : fn(a, i, d, l), i.child;
      case 11:
        return d = i.type, m = i.pendingProps, m = i.elementType === d ? m : lr(d, m), gT(a, i, d, m, l);
      case 7:
        return fn(a, i, i.pendingProps, l), i.child;
      case 8:
        return fn(a, i, i.pendingProps.children, l), i.child;
      case 12:
        return fn(a, i, i.pendingProps.children, l), i.child;
      case 10:
        e: {
          if (d = i.type._context, m = i.pendingProps, E = i.memoizedProps, S = m.value, lt(Nl, d._currentValue), d._currentValue = S, E !== null) if (or(E.value, S)) {
            if (E.children === m.children && !_n.current) {
              i = $r(a, i, l);
              break e;
            }
          } else for (E = i.child, E !== null && (E.return = i); E !== null; ) {
            var P = E.dependencies;
            if (P !== null) {
              S = E.child;
              for (var z = P.firstContext; z !== null; ) {
                if (z.context === d) {
                  if (E.tag === 1) {
                    z = Hr(-1, l & -l), z.tag = 2;
                    var ee = E.updateQueue;
                    if (ee !== null) {
                      ee = ee.shared;
                      var ce = ee.pending;
                      ce === null ? z.next = z : (z.next = ce.next, ce.next = z), ee.pending = z;
                    }
                  }
                  E.lanes |= l, z = E.alternate, z !== null && (z.lanes |= l), cd(
                    E.return,
                    l,
                    i
                  ), P.lanes |= l;
                  break;
                }
                z = z.next;
              }
            } else if (E.tag === 10) S = E.type === i.type ? null : E.child;
            else if (E.tag === 18) {
              if (S = E.return, S === null) throw Error(n(341));
              S.lanes |= l, P = S.alternate, P !== null && (P.lanes |= l), cd(S, l, i), S = E.sibling;
            } else S = E.child;
            if (S !== null) S.return = E;
            else for (S = E; S !== null; ) {
              if (S === i) {
                S = null;
                break;
              }
              if (E = S.sibling, E !== null) {
                E.return = S.return, S = E;
                break;
              }
              S = S.return;
            }
            E = S;
          }
          fn(a, i, m.children, l), i = i.child;
        }
        return i;
      case 9:
        return m = i.type, d = i.pendingProps.children, Li(i, l), m = jn(m), d = d(m), i.flags |= 1, fn(a, i, d, l), i.child;
      case 14:
        return d = i.type, m = lr(d, i.pendingProps), m = lr(d.type, m), mT(a, i, d, m, l);
      case 15:
        return bT(a, i, i.type, i.pendingProps, l);
      case 17:
        return d = i.type, m = i.pendingProps, m = i.elementType === d ? m : lr(d, m), Gl(a, i), i.tag = 1, vn(d) ? (a = !0, kl(i)) : a = !1, Li(i, l), lT(i, d, m), Cd(i, d, m, l), xd(null, i, d, !0, a, l);
      case 19:
        return kT(a, i, l);
      case 22:
        return ET(a, i, l);
    }
    throw Error(n(156, i.tag));
  };
  function KT(a, i) {
    return I1(a, i);
  }
  function aL(a, i, l, d) {
    this.tag = a, this.key = l, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = i, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = d, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null;
  }
  function Yn(a, i, l, d) {
    return new aL(a, i, l, d);
  }
  function Xd(a) {
    return a = a.prototype, !(!a || !a.isReactComponent);
  }
  function iL(a) {
    if (typeof a == "function") return Xd(a) ? 1 : 0;
    if (a != null) {
      if (a = a.$$typeof, a === ne) return 11;
      if (a === be) return 14;
    }
    return 2;
  }
  function ma(a, i) {
    var l = a.alternate;
    return l === null ? (l = Yn(a.tag, i, a.key, a.mode), l.elementType = a.elementType, l.type = a.type, l.stateNode = a.stateNode, l.alternate = a, a.alternate = l) : (l.pendingProps = i, l.type = a.type, l.flags = 0, l.subtreeFlags = 0, l.deletions = null), l.flags = a.flags & 14680064, l.childLanes = a.childLanes, l.lanes = a.lanes, l.child = a.child, l.memoizedProps = a.memoizedProps, l.memoizedState = a.memoizedState, l.updateQueue = a.updateQueue, i = a.dependencies, l.dependencies = i === null ? null : { lanes: i.lanes, firstContext: i.firstContext }, l.sibling = a.sibling, l.index = a.index, l.ref = a.ref, l;
  }
  function eu(a, i, l, d, m, E) {
    var S = 2;
    if (d = a, typeof a == "function") Xd(a) && (S = 1);
    else if (typeof a == "string") S = 5;
    else e: switch (a) {
      case B:
        return Ya(l.children, m, E, i);
      case Y:
        S = 8, m |= 8;
        break;
      case $:
        return a = Yn(12, l, i, m | 2), a.elementType = $, a.lanes = E, a;
      case se:
        return a = Yn(13, l, i, m), a.elementType = se, a.lanes = E, a;
      case de:
        return a = Yn(19, l, i, m), a.elementType = de, a.lanes = E, a;
      case ve:
        return tu(l, m, E, i);
      default:
        if (typeof a == "object" && a !== null) switch (a.$$typeof) {
          case M:
            S = 10;
            break e;
          case V:
            S = 9;
            break e;
          case ne:
            S = 11;
            break e;
          case be:
            S = 14;
            break e;
          case Ne:
            S = 16, d = null;
            break e;
        }
        throw Error(n(130, a == null ? a : typeof a, ""));
    }
    return i = Yn(S, l, i, m), i.elementType = a, i.type = d, i.lanes = E, i;
  }
  function Ya(a, i, l, d) {
    return a = Yn(7, a, d, i), a.lanes = l, a;
  }
  function tu(a, i, l, d) {
    return a = Yn(22, a, d, i), a.elementType = ve, a.lanes = l, a.stateNode = { isHidden: !1 }, a;
  }
  function Qd(a, i, l) {
    return a = Yn(6, a, null, i), a.lanes = l, a;
  }
  function Zd(a, i, l) {
    return i = Yn(4, a.children !== null ? a.children : [], a.key, i), i.lanes = l, i.stateNode = { containerInfo: a.containerInfo, pendingChildren: null, implementation: a.implementation }, i;
  }
  function oL(a, i, l, d, m) {
    this.tag = i, this.containerInfo = a, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = -1, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = kc(0), this.expirationTimes = kc(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = kc(0), this.identifierPrefix = d, this.onRecoverableError = m, this.mutableSourceEagerHydrationData = null;
  }
  function Jd(a, i, l, d, m, E, S, P, z) {
    return a = new oL(a, i, l, P, z), i === 1 ? (i = 1, E === !0 && (i |= 8)) : i = 0, E = Yn(3, null, null, i), a.current = E, E.stateNode = a, E.memoizedState = { element: d, isDehydrated: l, cache: null, transitions: null, pendingSuspenseBoundaries: null }, pd(E), a;
  }
  function sL(a, i, l) {
    var d = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
    return { $$typeof: v, key: d == null ? null : "" + d, children: a, containerInfo: i, implementation: l };
  }
  function XT(a) {
    if (!a) return sa;
    a = a._reactInternals;
    e: {
      if (Pa(a) !== a || a.tag !== 1) throw Error(n(170));
      var i = a;
      do {
        switch (i.tag) {
          case 3:
            i = i.stateNode.context;
            break e;
          case 1:
            if (vn(i.type)) {
              i = i.stateNode.__reactInternalMemoizedMergedChildContext;
              break e;
            }
        }
        i = i.return;
      } while (i !== null);
      throw Error(n(171));
    }
    if (a.tag === 1) {
      var l = a.type;
      if (vn(l)) return Ay(a, l, i);
    }
    return i;
  }
  function QT(a, i, l, d, m, E, S, P, z) {
    return a = Jd(l, d, !0, a, m, E, S, P, z), a.context = XT(null), l = a.current, d = hn(), m = ha(l), E = Hr(d, m), E.callback = i ?? null, ca(l, E, m), a.current.lanes = m, Mo(a, m, d), Cn(a, d), a;
  }
  function nu(a, i, l, d) {
    var m = i.current, E = hn(), S = ha(m);
    return l = XT(l), i.context === null ? i.context = l : i.pendingContext = l, i = Hr(E, S), i.payload = { element: a }, d = d === void 0 ? null : d, d !== null && (i.callback = d), a = ca(m, i, S), a !== null && (dr(a, m, S, E), Ll(a, m, S)), S;
  }
  function ru(a) {
    if (a = a.current, !a.child) return null;
    switch (a.child.tag) {
      case 5:
        return a.child.stateNode;
      default:
        return a.child.stateNode;
    }
  }
  function ZT(a, i) {
    if (a = a.memoizedState, a !== null && a.dehydrated !== null) {
      var l = a.retryLane;
      a.retryLane = l !== 0 && l < i ? l : i;
    }
  }
  function ep(a, i) {
    ZT(a, i), (a = a.alternate) && ZT(a, i);
  }
  function lL() {
    return null;
  }
  var JT = typeof reportError == "function" ? reportError : function(a) {
    console.error(a);
  };
  function tp(a) {
    this._internalRoot = a;
  }
  au.prototype.render = tp.prototype.render = function(a) {
    var i = this._internalRoot;
    if (i === null) throw Error(n(409));
    nu(a, i, null, null);
  }, au.prototype.unmount = tp.prototype.unmount = function() {
    var a = this._internalRoot;
    if (a !== null) {
      this._internalRoot = null;
      var i = a.containerInfo;
      ja(function() {
        nu(null, a, null, null);
      }), i[Mr] = null;
    }
  };
  function au(a) {
    this._internalRoot = a;
  }
  au.prototype.unstable_scheduleHydration = function(a) {
    if (a) {
      var i = P1();
      a = { blockedOn: null, target: a, priority: i };
      for (var l = 0; l < na.length && i !== 0 && i < na[l].priority; l++) ;
      na.splice(l, 0, a), l === 0 && U1(a);
    }
  };
  function np(a) {
    return !(!a || a.nodeType !== 1 && a.nodeType !== 9 && a.nodeType !== 11);
  }
  function iu(a) {
    return !(!a || a.nodeType !== 1 && a.nodeType !== 9 && a.nodeType !== 11 && (a.nodeType !== 8 || a.nodeValue !== " react-mount-point-unstable "));
  }
  function eS() {
  }
  function uL(a, i, l, d, m) {
    if (m) {
      if (typeof d == "function") {
        var E = d;
        d = function() {
          var ee = ru(S);
          E.call(ee);
        };
      }
      var S = QT(i, d, a, 0, null, !1, !1, "", eS);
      return a._reactRootContainer = S, a[Mr] = S.current, Ko(a.nodeType === 8 ? a.parentNode : a), ja(), S;
    }
    for (; m = a.lastChild; ) a.removeChild(m);
    if (typeof d == "function") {
      var P = d;
      d = function() {
        var ee = ru(z);
        P.call(ee);
      };
    }
    var z = Jd(a, 0, !1, null, null, !1, !1, "", eS);
    return a._reactRootContainer = z, a[Mr] = z.current, Ko(a.nodeType === 8 ? a.parentNode : a), ja(function() {
      nu(i, z, l, d);
    }), z;
  }
  function ou(a, i, l, d, m) {
    var E = l._reactRootContainer;
    if (E) {
      var S = E;
      if (typeof m == "function") {
        var P = m;
        m = function() {
          var z = ru(S);
          P.call(z);
        };
      }
      nu(i, S, a, m);
    } else S = uL(l, i, a, m, d);
    return ru(S);
  }
  D1 = function(a) {
    switch (a.tag) {
      case 3:
        var i = a.stateNode;
        if (i.current.memoizedState.isDehydrated) {
          var l = Do(i.pendingLanes);
          l !== 0 && (Cc(i, l | 1), Cn(i, wt()), !(tt & 6) && (Bi = wt() + 500, la()));
        }
        break;
      case 13:
        ja(function() {
          var d = Ur(a, 1);
          if (d !== null) {
            var m = hn();
            dr(d, a, 1, m);
          }
        }), ep(a, 1);
    }
  }, wc = function(a) {
    if (a.tag === 13) {
      var i = Ur(a, 134217728);
      if (i !== null) {
        var l = hn();
        dr(i, a, 134217728, l);
      }
      ep(a, 134217728);
    }
  }, M1 = function(a) {
    if (a.tag === 13) {
      var i = ha(a), l = Ur(a, i);
      if (l !== null) {
        var d = hn();
        dr(l, a, i, d);
      }
      ep(a, i);
    }
  }, P1 = function() {
    return it;
  }, F1 = function(a, i) {
    var l = it;
    try {
      return it = a, i();
    } finally {
      it = l;
    }
  }, Et = function(a, i, l) {
    switch (i) {
      case "input":
        if (rr(a, l), i = l.name, l.type === "radio" && i != null) {
          for (l = a; l.parentNode; ) l = l.parentNode;
          for (l = l.querySelectorAll("input[name=" + JSON.stringify("" + i) + '][type="radio"]'), i = 0; i < l.length; i++) {
            var d = l[i];
            if (d !== a && d.form === a.form) {
              var m = vl(d);
              if (!m) throw Error(n(90));
              kt(d), rr(d, m);
            }
          }
        }
        break;
      case "textarea":
        Le(a, l);
        break;
      case "select":
        i = l.value, i != null && Tn(a, !!l.multiple, i, !1);
    }
  }, bi = Wd, _1 = ja;
  var cL = { usingClientEntryPoint: !1, Events: [Zo, ki, vl, Ro, xo, Wd] }, ps = { findFiberByHostInstance: Fa, bundleType: 0, version: "18.3.1", rendererPackageName: "react-dom" }, dL = { bundleType: ps.bundleType, version: ps.version, rendererPackageName: ps.rendererPackageName, rendererConfig: ps.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: O.ReactCurrentDispatcher, findHostInstanceByFiber: function(a) {
    return a = C1(a), a === null ? null : a.stateNode;
  }, findFiberByHostInstance: ps.findFiberByHostInstance || lL, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.3.1-next-f1338f8080-20240426" };
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
    var su = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (!su.isDisabled && su.supportsFiber) try {
      al = su.inject(dL), Tr = su;
    } catch {
    }
  }
  return wn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = cL, wn.createPortal = function(a, i) {
    var l = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
    if (!np(i)) throw Error(n(200));
    return sL(a, i, null, l);
  }, wn.createRoot = function(a, i) {
    if (!np(a)) throw Error(n(299));
    var l = !1, d = "", m = JT;
    return i != null && (i.unstable_strictMode === !0 && (l = !0), i.identifierPrefix !== void 0 && (d = i.identifierPrefix), i.onRecoverableError !== void 0 && (m = i.onRecoverableError)), i = Jd(a, 1, !1, null, null, l, !1, d, m), a[Mr] = i.current, Ko(a.nodeType === 8 ? a.parentNode : a), new tp(i);
  }, wn.findDOMNode = function(a) {
    if (a == null) return null;
    if (a.nodeType === 1) return a;
    var i = a._reactInternals;
    if (i === void 0)
      throw typeof a.render == "function" ? Error(n(188)) : (a = Object.keys(a).join(","), Error(n(268, a)));
    return a = C1(i), a = a === null ? null : a.stateNode, a;
  }, wn.flushSync = function(a) {
    return ja(a);
  }, wn.hydrate = function(a, i, l) {
    if (!iu(i)) throw Error(n(200));
    return ou(null, a, i, !0, l);
  }, wn.hydrateRoot = function(a, i, l) {
    if (!np(a)) throw Error(n(405));
    var d = l != null && l.hydratedSources || null, m = !1, E = "", S = JT;
    if (l != null && (l.unstable_strictMode === !0 && (m = !0), l.identifierPrefix !== void 0 && (E = l.identifierPrefix), l.onRecoverableError !== void 0 && (S = l.onRecoverableError)), i = QT(i, null, a, 1, l ?? null, m, !1, E, S), a[Mr] = i.current, Ko(a), d) for (a = 0; a < d.length; a++) l = d[a], m = l._getVersion, m = m(l._source), i.mutableSourceEagerHydrationData == null ? i.mutableSourceEagerHydrationData = [l, m] : i.mutableSourceEagerHydrationData.push(
      l,
      m
    );
    return new au(i);
  }, wn.render = function(a, i, l) {
    if (!iu(i)) throw Error(n(200));
    return ou(null, a, i, !1, l);
  }, wn.unmountComponentAtNode = function(a) {
    if (!iu(a)) throw Error(n(40));
    return a._reactRootContainer ? (ja(function() {
      ou(null, null, a, !1, function() {
        a._reactRootContainer = null, a[Mr] = null;
      });
    }), !0) : !1;
  }, wn.unstable_batchedUpdates = Wd, wn.unstable_renderSubtreeIntoContainer = function(a, i, l, d) {
    if (!iu(l)) throw Error(n(200));
    if (a == null || a._reactInternals === void 0) throw Error(n(38));
    return ou(a, i, l, !1, d);
  }, wn.version = "18.3.1-next-f1338f8080-20240426", wn;
}
var SS;
function uD() {
  if (SS) return up.exports;
  SS = 1;
  function e() {
    if (!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function"))
      try {
        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e);
      } catch (t) {
        console.error(t);
      }
  }
  return e(), up.exports = lD(), up.exports;
}
var _S;
function cD() {
  if (_S) return cu;
  _S = 1;
  var e = uD();
  return cu.createRoot = e.createRoot, cu.hydrateRoot = e.hydrateRoot, cu;
}
var dD = cD();
const pD = /* @__PURE__ */ To(dD);
var Zt = function() {
  return Zt = Object.assign || function(t) {
    for (var n, r = 1, o = arguments.length; r < o; r++) {
      n = arguments[r];
      for (var s in n) Object.prototype.hasOwnProperty.call(n, s) && (t[s] = n[s]);
    }
    return t;
  }, Zt.apply(this, arguments);
};
function uo(e, t, n) {
  if (n || arguments.length === 2) for (var r = 0, o = t.length, s; r < o; r++)
    (s || !(r in t)) && (s || (s = Array.prototype.slice.call(t, 0, r)), s[r] = t[r]);
  return e.concat(s || Array.prototype.slice.call(t));
}
var pp, vS;
function fD() {
  return vS || (vS = 1, pp = function(t, n, r, o) {
    var s = r ? r.call(o, t, n) : void 0;
    if (s !== void 0)
      return !!s;
    if (t === n)
      return !0;
    if (typeof t != "object" || !t || typeof n != "object" || !n)
      return !1;
    var u = Object.keys(t), c = Object.keys(n);
    if (u.length !== c.length)
      return !1;
    for (var p = Object.prototype.hasOwnProperty.bind(n), f = 0; f < u.length; f++) {
      var b = u[f];
      if (!p(b))
        return !1;
      var g = t[b], T = n[b];
      if (s = r ? r.call(o, g, T, b) : void 0, s === !1 || s === void 0 && g !== T)
        return !1;
    }
    return !0;
  }), pp;
}
var hD = fD();
const gD = /* @__PURE__ */ To(hD);
var ht = "-ms-", Ss = "-moz-", rt = "-webkit-", mR = "comm", Xu = "rule", AE = "decl", mD = "@import", bR = "@keyframes", bD = "@layer", ER = Math.abs, kE = String.fromCharCode, Hb = Object.assign;
function ED(e, t) {
  return Xt(e, 0) ^ 45 ? (((t << 2 ^ Xt(e, 0)) << 2 ^ Xt(e, 1)) << 2 ^ Xt(e, 2)) << 2 ^ Xt(e, 3) : 0;
}
function yR(e) {
  return e.trim();
}
function jr(e, t) {
  return (e = t.exec(e)) ? e[0] : e;
}
function Ve(e, t, n) {
  return e.replace(t, n);
}
function _u(e, t, n) {
  return e.indexOf(t, n);
}
function Xt(e, t) {
  return e.charCodeAt(t) | 0;
}
function co(e, t, n) {
  return e.slice(t, n);
}
function xr(e) {
  return e.length;
}
function TR(e) {
  return e.length;
}
function ys(e, t) {
  return t.push(e), e;
}
function yD(e, t) {
  return e.map(t).join("");
}
function AS(e, t) {
  return e.filter(function(n) {
    return !jr(n, t);
  });
}
var Qu = 1, po = 1, SR = 0, er = 0, Pt = 0, So = "";
function Zu(e, t, n, r, o, s, u, c) {
  return { value: e, root: t, parent: n, type: r, props: o, children: s, line: Qu, column: po, length: u, return: "", siblings: c };
}
function Ta(e, t) {
  return Hb(Zu("", null, null, "", null, null, 0, e.siblings), e, { length: -e.length }, t);
}
function Hi(e) {
  for (; e.root; )
    e = Ta(e.root, { children: [e] });
  ys(e, e.siblings);
}
function TD() {
  return Pt;
}
function SD() {
  return Pt = er > 0 ? Xt(So, --er) : 0, po--, Pt === 10 && (po = 1, Qu--), Pt;
}
function mr() {
  return Pt = er < SR ? Xt(So, er++) : 0, po++, Pt === 10 && (po = 1, Qu++), Pt;
}
function si() {
  return Xt(So, er);
}
function vu() {
  return er;
}
function Ju(e, t) {
  return co(So, e, t);
}
function $b(e) {
  switch (e) {
    // \0 \t \n \r \s whitespace token
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    // ! + , / > @ ~ isolate token
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    // ; { } breakpoint token
    case 59:
    case 123:
    case 125:
      return 4;
    // : accompanied token
    case 58:
      return 3;
    // " ' ( [ opening delimit token
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    // ) ] closing delimit token
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function _D(e) {
  return Qu = po = 1, SR = xr(So = e), er = 0, [];
}
function vD(e) {
  return So = "", e;
}
function fp(e) {
  return yR(Ju(er - 1, zb(e === 91 ? e + 2 : e === 40 ? e + 1 : e)));
}
function AD(e) {
  for (; (Pt = si()) && Pt < 33; )
    mr();
  return $b(e) > 2 || $b(Pt) > 3 ? "" : " ";
}
function kD(e, t) {
  for (; --t && mr() && !(Pt < 48 || Pt > 102 || Pt > 57 && Pt < 65 || Pt > 70 && Pt < 97); )
    ;
  return Ju(e, vu() + (t < 6 && si() == 32 && mr() == 32));
}
function zb(e) {
  for (; mr(); )
    switch (Pt) {
      // ] ) " '
      case e:
        return er;
      // " '
      case 34:
      case 39:
        e !== 34 && e !== 39 && zb(Pt);
        break;
      // (
      case 40:
        e === 41 && zb(e);
        break;
      // \
      case 92:
        mr();
        break;
    }
  return er;
}
function CD(e, t) {
  for (; mr() && e + Pt !== 57; )
    if (e + Pt === 84 && si() === 47)
      break;
  return "/*" + Ju(t, er - 1) + "*" + kE(e === 47 ? e : mr());
}
function wD(e) {
  for (; !$b(si()); )
    mr();
  return Ju(e, er);
}
function ID(e) {
  return vD(Au("", null, null, null, [""], e = _D(e), 0, [0], e));
}
function Au(e, t, n, r, o, s, u, c, p) {
  for (var f = 0, b = 0, g = u, T = 0, y = 0, _ = 0, A = 1, R = 1, C = 1, w = 0, k = "", O = o, F = s, v = r, B = k; R; )
    switch (_ = w, w = mr()) {
      // (
      case 40:
        if (_ != 108 && Xt(B, g - 1) == 58) {
          _u(B += Ve(fp(w), "&", "&\f"), "&\f", ER(f ? c[f - 1] : 0)) != -1 && (C = -1);
          break;
        }
      // " ' [
      case 34:
      case 39:
      case 91:
        B += fp(w);
        break;
      // \t \n \r \s
      case 9:
      case 10:
      case 13:
      case 32:
        B += AD(_);
        break;
      // \
      case 92:
        B += kD(vu() - 1, 7);
        continue;
      // /
      case 47:
        switch (si()) {
          case 42:
          case 47:
            ys(RD(CD(mr(), vu()), t, n, p), p);
            break;
          default:
            B += "/";
        }
        break;
      // {
      case 123 * A:
        c[f++] = xr(B) * C;
      // } ; \0
      case 125 * A:
      case 59:
      case 0:
        switch (w) {
          // \0 }
          case 0:
          case 125:
            R = 0;
          // ;
          case 59 + b:
            C == -1 && (B = Ve(B, /\f/g, "")), y > 0 && xr(B) - g && ys(y > 32 ? CS(B + ";", r, n, g - 1, p) : CS(Ve(B, " ", "") + ";", r, n, g - 2, p), p);
            break;
          // @ ;
          case 59:
            B += ";";
          // { rule/at-rule
          default:
            if (ys(v = kS(B, t, n, f, b, o, c, k, O = [], F = [], g, s), s), w === 123)
              if (b === 0)
                Au(B, t, v, v, O, s, g, c, F);
              else
                switch (T === 99 && Xt(B, 3) === 110 ? 100 : T) {
                  // d l m s
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    Au(e, v, v, r && ys(kS(e, v, v, 0, 0, o, c, k, o, O = [], g, F), F), o, F, g, c, r ? O : F);
                    break;
                  default:
                    Au(B, v, v, v, [""], F, 0, c, F);
                }
        }
        f = b = y = 0, A = C = 1, k = B = "", g = u;
        break;
      // :
      case 58:
        g = 1 + xr(B), y = _;
      default:
        if (A < 1) {
          if (w == 123)
            --A;
          else if (w == 125 && A++ == 0 && SD() == 125)
            continue;
        }
        switch (B += kE(w), w * A) {
          // &
          case 38:
            C = b > 0 ? 1 : (B += "\f", -1);
            break;
          // ,
          case 44:
            c[f++] = (xr(B) - 1) * C, C = 1;
            break;
          // @
          case 64:
            si() === 45 && (B += fp(mr())), T = si(), b = g = xr(k = B += wD(vu())), w++;
            break;
          // -
          case 45:
            _ === 45 && xr(B) == 2 && (A = 0);
        }
    }
  return s;
}
function kS(e, t, n, r, o, s, u, c, p, f, b, g) {
  for (var T = o - 1, y = o === 0 ? s : [""], _ = TR(y), A = 0, R = 0, C = 0; A < r; ++A)
    for (var w = 0, k = co(e, T + 1, T = ER(R = u[A])), O = e; w < _; ++w)
      (O = yR(R > 0 ? y[w] + " " + k : Ve(k, /&\f/g, y[w]))) && (p[C++] = O);
  return Zu(e, t, n, o === 0 ? Xu : c, p, f, b, g);
}
function RD(e, t, n, r) {
  return Zu(e, t, n, mR, kE(TD()), co(e, 2, -2), 0, r);
}
function CS(e, t, n, r, o) {
  return Zu(e, t, n, AE, co(e, 0, r), co(e, r + 1, -1), r, o);
}
function _R(e, t, n) {
  switch (ED(e, t)) {
    // color-adjust
    case 5103:
      return rt + "print-" + e + e;
    // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return rt + e + e;
    // tab-size
    case 4789:
      return Ss + e + e;
    // appearance, user-select, transform, hyphens, text-size-adjust
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return rt + e + Ss + e + ht + e + e;
    // writing-mode
    case 5936:
      switch (Xt(e, t + 11)) {
        // vertical-l(r)
        case 114:
          return rt + e + ht + Ve(e, /[svh]\w+-[tblr]{2}/, "tb") + e;
        // vertical-r(l)
        case 108:
          return rt + e + ht + Ve(e, /[svh]\w+-[tblr]{2}/, "tb-rl") + e;
        // horizontal(-)tb
        case 45:
          return rt + e + ht + Ve(e, /[svh]\w+-[tblr]{2}/, "lr") + e;
      }
    // flex, flex-direction, scroll-snap-type, writing-mode
    case 6828:
    case 4268:
    case 2903:
      return rt + e + ht + e + e;
    // order
    case 6165:
      return rt + e + ht + "flex-" + e + e;
    // align-items
    case 5187:
      return rt + e + Ve(e, /(\w+).+(:[^]+)/, rt + "box-$1$2" + ht + "flex-$1$2") + e;
    // align-self
    case 5443:
      return rt + e + ht + "flex-item-" + Ve(e, /flex-|-self/g, "") + (jr(e, /flex-|baseline/) ? "" : ht + "grid-row-" + Ve(e, /flex-|-self/g, "")) + e;
    // align-content
    case 4675:
      return rt + e + ht + "flex-line-pack" + Ve(e, /align-content|flex-|-self/g, "") + e;
    // flex-shrink
    case 5548:
      return rt + e + ht + Ve(e, "shrink", "negative") + e;
    // flex-basis
    case 5292:
      return rt + e + ht + Ve(e, "basis", "preferred-size") + e;
    // flex-grow
    case 6060:
      return rt + "box-" + Ve(e, "-grow", "") + rt + e + ht + Ve(e, "grow", "positive") + e;
    // transition
    case 4554:
      return rt + Ve(e, /([^-])(transform)/g, "$1" + rt + "$2") + e;
    // cursor
    case 6187:
      return Ve(Ve(Ve(e, /(zoom-|grab)/, rt + "$1"), /(image-set)/, rt + "$1"), e, "") + e;
    // background, background-image
    case 5495:
    case 3959:
      return Ve(e, /(image-set\([^]*)/, rt + "$1$`$1");
    // justify-content
    case 4968:
      return Ve(Ve(e, /(.+:)(flex-)?(.*)/, rt + "box-pack:$3" + ht + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + rt + e + e;
    // justify-self
    case 4200:
      if (!jr(e, /flex-|baseline/)) return ht + "grid-column-align" + co(e, t) + e;
      break;
    // grid-template-(columns|rows)
    case 2592:
    case 3360:
      return ht + Ve(e, "template-", "") + e;
    // grid-(row|column)-start
    case 4384:
    case 3616:
      return n && n.some(function(r, o) {
        return t = o, jr(r.props, /grid-\w+-end/);
      }) ? ~_u(e + (n = n[t].value), "span", 0) ? e : ht + Ve(e, "-start", "") + e + ht + "grid-row-span:" + (~_u(n, "span", 0) ? jr(n, /\d+/) : +jr(n, /\d+/) - +jr(e, /\d+/)) + ";" : ht + Ve(e, "-start", "") + e;
    // grid-(row|column)-end
    case 4896:
    case 4128:
      return n && n.some(function(r) {
        return jr(r.props, /grid-\w+-start/);
      }) ? e : ht + Ve(Ve(e, "-end", "-span"), "span ", "") + e;
    // (margin|padding)-inline-(start|end)
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return Ve(e, /(.+)-inline(.+)/, rt + "$1$2") + e;
    // (min|max)?(width|height|inline-size|block-size)
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (xr(e) - 1 - t > 6)
        switch (Xt(e, t + 1)) {
          // (m)ax-content, (m)in-content
          case 109:
            if (Xt(e, t + 4) !== 45)
              break;
          // (f)ill-available, (f)it-content
          case 102:
            return Ve(e, /(.+:)(.+)-([^]+)/, "$1" + rt + "$2-$3$1" + Ss + (Xt(e, t + 3) == 108 ? "$3" : "$2-$3")) + e;
          // (s)tretch
          case 115:
            return ~_u(e, "stretch", 0) ? _R(Ve(e, "stretch", "fill-available"), t, n) + e : e;
        }
      break;
    // grid-(column|row)
    case 5152:
    case 5920:
      return Ve(e, /(.+?):(\d+)(\s*\/\s*(span)?\s*(\d+))?(.*)/, function(r, o, s, u, c, p, f) {
        return ht + o + ":" + s + f + (u ? ht + o + "-span:" + (c ? p : +p - +s) + f : "") + e;
      });
    // position: sticky
    case 4949:
      if (Xt(e, t + 6) === 121)
        return Ve(e, ":", ":" + rt) + e;
      break;
    // display: (flex|inline-flex|grid|inline-grid)
    case 6444:
      switch (Xt(e, Xt(e, 14) === 45 ? 18 : 11)) {
        // (inline-)?fle(x)
        case 120:
          return Ve(e, /(.+:)([^;\s!]+)(;|(\s+)?!.+)?/, "$1" + rt + (Xt(e, 14) === 45 ? "inline-" : "") + "box$3$1" + rt + "$2$3$1" + ht + "$2box$3") + e;
        // (inline-)?gri(d)
        case 100:
          return Ve(e, ":", ":" + ht) + e;
      }
      break;
    // scroll-margin, scroll-margin-(top|right|bottom|left)
    case 5719:
    case 2647:
    case 2135:
    case 3927:
    case 2391:
      return Ve(e, "scroll-", "scroll-snap-") + e;
  }
  return e;
}
function Pu(e, t) {
  for (var n = "", r = 0; r < e.length; r++)
    n += t(e[r], r, e, t) || "";
  return n;
}
function xD(e, t, n, r) {
  switch (e.type) {
    case bD:
      if (e.children.length) break;
    case mD:
    case AE:
      return e.return = e.return || e.value;
    case mR:
      return "";
    case bR:
      return e.return = e.value + "{" + Pu(e.children, r) + "}";
    case Xu:
      if (!xr(e.value = e.props.join(","))) return "";
  }
  return xr(n = Pu(e.children, r)) ? e.return = e.value + "{" + n + "}" : "";
}
function ND(e) {
  var t = TR(e);
  return function(n, r, o, s) {
    for (var u = "", c = 0; c < t; c++)
      u += e[c](n, r, o, s) || "";
    return u;
  };
}
function OD(e) {
  return function(t) {
    t.root || (t = t.return) && e(t);
  };
}
function LD(e, t, n, r) {
  if (e.length > -1 && !e.return)
    switch (e.type) {
      case AE:
        e.return = _R(e.value, e.length, n);
        return;
      case bR:
        return Pu([Ta(e, { value: Ve(e.value, "@", "@" + rt) })], r);
      case Xu:
        if (e.length)
          return yD(n = e.props, function(o) {
            switch (jr(o, r = /(::plac\w+|:read-\w+)/)) {
              // :read-(only|write)
              case ":read-only":
              case ":read-write":
                Hi(Ta(e, { props: [Ve(o, /:(read-\w+)/, ":" + Ss + "$1")] })), Hi(Ta(e, { props: [o] })), Hb(e, { props: AS(n, r) });
                break;
              // :placeholder
              case "::placeholder":
                Hi(Ta(e, { props: [Ve(o, /:(plac\w+)/, ":" + rt + "input-$1")] })), Hi(Ta(e, { props: [Ve(o, /:(plac\w+)/, ":" + Ss + "$1")] })), Hi(Ta(e, { props: [Ve(o, /:(plac\w+)/, ht + "input-$1")] })), Hi(Ta(e, { props: [o] })), Hb(e, { props: AS(n, r) });
                break;
            }
            return "";
          });
    }
}
var DD = {
  animationIterationCount: 1,
  aspectRatio: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
}, Hn = {}, fo = typeof process < "u" && Hn !== void 0 && (Hn.REACT_APP_SC_ATTR || Hn.SC_ATTR) || "data-styled", vR = "active", AR = "data-styled-version", ec = "6.1.13", CE = `/*!sc*/
`, Fu = typeof window < "u" && "HTMLElement" in window, MD = !!(typeof SC_DISABLE_SPEEDY == "boolean" ? SC_DISABLE_SPEEDY : typeof process < "u" && Hn !== void 0 && Hn.REACT_APP_SC_DISABLE_SPEEDY !== void 0 && Hn.REACT_APP_SC_DISABLE_SPEEDY !== "" ? Hn.REACT_APP_SC_DISABLE_SPEEDY !== "false" && Hn.REACT_APP_SC_DISABLE_SPEEDY : typeof process < "u" && Hn !== void 0 && Hn.SC_DISABLE_SPEEDY !== void 0 && Hn.SC_DISABLE_SPEEDY !== "" && Hn.SC_DISABLE_SPEEDY !== "false" && Hn.SC_DISABLE_SPEEDY), PD = {}, tc = Object.freeze([]), ho = Object.freeze({});
function kR(e, t, n) {
  return n === void 0 && (n = ho), e.theme !== n.theme && e.theme || t || n.theme;
}
var CR = /* @__PURE__ */ new Set(["a", "abbr", "address", "area", "article", "aside", "audio", "b", "base", "bdi", "bdo", "big", "blockquote", "body", "br", "button", "canvas", "caption", "cite", "code", "col", "colgroup", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "div", "dl", "dt", "em", "embed", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "header", "hgroup", "hr", "html", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "legend", "li", "link", "main", "map", "mark", "menu", "menuitem", "meta", "meter", "nav", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "script", "section", "select", "small", "source", "span", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "time", "tr", "track", "u", "ul", "use", "var", "video", "wbr", "circle", "clipPath", "defs", "ellipse", "foreignObject", "g", "image", "line", "linearGradient", "marker", "mask", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "stop", "svg", "text", "tspan"]), FD = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g, BD = /(^-|-$)/g;
function wS(e) {
  return e.replace(FD, "-").replace(BD, "");
}
var UD = /(a)(d)/gi, du = 52, IS = function(e) {
  return String.fromCharCode(e + (e > 25 ? 39 : 97));
};
function Gb(e) {
  var t, n = "";
  for (t = Math.abs(e); t > du; t = t / du | 0) n = IS(t % du) + n;
  return (IS(t % du) + n).replace(UD, "$1-$2");
}
var hp, wR = 5381, qi = function(e, t) {
  for (var n = t.length; n; ) e = 33 * e ^ t.charCodeAt(--n);
  return e;
}, IR = function(e) {
  return qi(wR, e);
};
function wE(e) {
  return Gb(IR(e) >>> 0);
}
function HD(e) {
  return e.displayName || e.name || "Component";
}
function gp(e) {
  return typeof e == "string" && !0;
}
var RR = typeof Symbol == "function" && Symbol.for, xR = RR ? Symbol.for("react.memo") : 60115, $D = RR ? Symbol.for("react.forward_ref") : 60112, zD = { childContextTypes: !0, contextType: !0, contextTypes: !0, defaultProps: !0, displayName: !0, getDefaultProps: !0, getDerivedStateFromError: !0, getDerivedStateFromProps: !0, mixins: !0, propTypes: !0, type: !0 }, GD = { name: !0, length: !0, prototype: !0, caller: !0, callee: !0, arguments: !0, arity: !0 }, NR = { $$typeof: !0, compare: !0, defaultProps: !0, displayName: !0, propTypes: !0, type: !0 }, qD = ((hp = {})[$D] = { $$typeof: !0, render: !0, defaultProps: !0, displayName: !0, propTypes: !0 }, hp[xR] = NR, hp);
function RS(e) {
  return ("type" in (t = e) && t.type.$$typeof) === xR ? NR : "$$typeof" in e ? qD[e.$$typeof] : zD;
  var t;
}
var jD = Object.defineProperty, VD = Object.getOwnPropertyNames, xS = Object.getOwnPropertySymbols, WD = Object.getOwnPropertyDescriptor, YD = Object.getPrototypeOf, NS = Object.prototype;
function OR(e, t, n) {
  if (typeof t != "string") {
    if (NS) {
      var r = YD(t);
      r && r !== NS && OR(e, r, n);
    }
    var o = VD(t);
    xS && (o = o.concat(xS(t)));
    for (var s = RS(e), u = RS(t), c = 0; c < o.length; ++c) {
      var p = o[c];
      if (!(p in GD || n && n[p] || u && p in u || s && p in s)) {
        var f = WD(t, p);
        try {
          jD(e, p, f);
        } catch {
        }
      }
    }
  }
  return e;
}
function ci(e) {
  return typeof e == "function";
}
function IE(e) {
  return typeof e == "object" && "styledComponentId" in e;
}
function Za(e, t) {
  return e && t ? "".concat(e, " ").concat(t) : e || t || "";
}
function Bu(e, t) {
  if (e.length === 0) return "";
  for (var n = e[0], r = 1; r < e.length; r++) n += e[r];
  return n;
}
function Ms(e) {
  return e !== null && typeof e == "object" && e.constructor.name === Object.name && !("props" in e && e.$$typeof);
}
function qb(e, t, n) {
  if (n === void 0 && (n = !1), !n && !Ms(e) && !Array.isArray(e)) return t;
  if (Array.isArray(t)) for (var r = 0; r < t.length; r++) e[r] = qb(e[r], t[r]);
  else if (Ms(t)) for (var r in t) e[r] = qb(e[r], t[r]);
  return e;
}
function RE(e, t) {
  Object.defineProperty(e, "toString", { value: t });
}
function di(e) {
  for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
  return new Error("An error occurred. See https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#".concat(e, " for more information.").concat(t.length > 0 ? " Args: ".concat(t.join(", ")) : ""));
}
var KD = function() {
  function e(t) {
    this.groupSizes = new Uint32Array(512), this.length = 512, this.tag = t;
  }
  return e.prototype.indexOfGroup = function(t) {
    for (var n = 0, r = 0; r < t; r++) n += this.groupSizes[r];
    return n;
  }, e.prototype.insertRules = function(t, n) {
    if (t >= this.groupSizes.length) {
      for (var r = this.groupSizes, o = r.length, s = o; t >= s; ) if ((s <<= 1) < 0) throw di(16, "".concat(t));
      this.groupSizes = new Uint32Array(s), this.groupSizes.set(r), this.length = s;
      for (var u = o; u < s; u++) this.groupSizes[u] = 0;
    }
    for (var c = this.indexOfGroup(t + 1), p = (u = 0, n.length); u < p; u++) this.tag.insertRule(c, n[u]) && (this.groupSizes[t]++, c++);
  }, e.prototype.clearGroup = function(t) {
    if (t < this.length) {
      var n = this.groupSizes[t], r = this.indexOfGroup(t), o = r + n;
      this.groupSizes[t] = 0;
      for (var s = r; s < o; s++) this.tag.deleteRule(r);
    }
  }, e.prototype.getGroup = function(t) {
    var n = "";
    if (t >= this.length || this.groupSizes[t] === 0) return n;
    for (var r = this.groupSizes[t], o = this.indexOfGroup(t), s = o + r, u = o; u < s; u++) n += "".concat(this.tag.getRule(u)).concat(CE);
    return n;
  }, e;
}(), ku = /* @__PURE__ */ new Map(), Uu = /* @__PURE__ */ new Map(), Cu = 1, pu = function(e) {
  if (ku.has(e)) return ku.get(e);
  for (; Uu.has(Cu); ) Cu++;
  var t = Cu++;
  return ku.set(e, t), Uu.set(t, e), t;
}, XD = function(e, t) {
  Cu = t + 1, ku.set(e, t), Uu.set(t, e);
}, QD = "style[".concat(fo, "][").concat(AR, '="').concat(ec, '"]'), ZD = new RegExp("^".concat(fo, '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)')), JD = function(e, t, n) {
  for (var r, o = n.split(","), s = 0, u = o.length; s < u; s++) (r = o[s]) && e.registerName(t, r);
}, e3 = function(e, t) {
  for (var n, r = ((n = t.textContent) !== null && n !== void 0 ? n : "").split(CE), o = [], s = 0, u = r.length; s < u; s++) {
    var c = r[s].trim();
    if (c) {
      var p = c.match(ZD);
      if (p) {
        var f = 0 | parseInt(p[1], 10), b = p[2];
        f !== 0 && (XD(b, f), JD(e, b, p[3]), e.getTag().insertRules(f, o)), o.length = 0;
      } else o.push(c);
    }
  }
}, OS = function(e) {
  for (var t = document.querySelectorAll(QD), n = 0, r = t.length; n < r; n++) {
    var o = t[n];
    o && o.getAttribute(fo) !== vR && (e3(e, o), o.parentNode && o.parentNode.removeChild(o));
  }
};
function t3() {
  return typeof __webpack_nonce__ < "u" ? __webpack_nonce__ : null;
}
var LR = function(e) {
  var t = document.head, n = e || t, r = document.createElement("style"), o = function(c) {
    var p = Array.from(c.querySelectorAll("style[".concat(fo, "]")));
    return p[p.length - 1];
  }(n), s = o !== void 0 ? o.nextSibling : null;
  r.setAttribute(fo, vR), r.setAttribute(AR, ec);
  var u = t3();
  return u && r.setAttribute("nonce", u), n.insertBefore(r, s), r;
}, n3 = function() {
  function e(t) {
    this.element = LR(t), this.element.appendChild(document.createTextNode("")), this.sheet = function(n) {
      if (n.sheet) return n.sheet;
      for (var r = document.styleSheets, o = 0, s = r.length; o < s; o++) {
        var u = r[o];
        if (u.ownerNode === n) return u;
      }
      throw di(17);
    }(this.element), this.length = 0;
  }
  return e.prototype.insertRule = function(t, n) {
    try {
      return this.sheet.insertRule(n, t), this.length++, !0;
    } catch {
      return !1;
    }
  }, e.prototype.deleteRule = function(t) {
    this.sheet.deleteRule(t), this.length--;
  }, e.prototype.getRule = function(t) {
    var n = this.sheet.cssRules[t];
    return n && n.cssText ? n.cssText : "";
  }, e;
}(), r3 = function() {
  function e(t) {
    this.element = LR(t), this.nodes = this.element.childNodes, this.length = 0;
  }
  return e.prototype.insertRule = function(t, n) {
    if (t <= this.length && t >= 0) {
      var r = document.createTextNode(n);
      return this.element.insertBefore(r, this.nodes[t] || null), this.length++, !0;
    }
    return !1;
  }, e.prototype.deleteRule = function(t) {
    this.element.removeChild(this.nodes[t]), this.length--;
  }, e.prototype.getRule = function(t) {
    return t < this.length ? this.nodes[t].textContent : "";
  }, e;
}(), a3 = function() {
  function e(t) {
    this.rules = [], this.length = 0;
  }
  return e.prototype.insertRule = function(t, n) {
    return t <= this.length && (this.rules.splice(t, 0, n), this.length++, !0);
  }, e.prototype.deleteRule = function(t) {
    this.rules.splice(t, 1), this.length--;
  }, e.prototype.getRule = function(t) {
    return t < this.length ? this.rules[t] : "";
  }, e;
}(), LS = Fu, i3 = { isServer: !Fu, useCSSOMInjection: !MD }, Hu = function() {
  function e(t, n, r) {
    t === void 0 && (t = ho), n === void 0 && (n = {});
    var o = this;
    this.options = Zt(Zt({}, i3), t), this.gs = n, this.names = new Map(r), this.server = !!t.isServer, !this.server && Fu && LS && (LS = !1, OS(this)), RE(this, function() {
      return function(s) {
        for (var u = s.getTag(), c = u.length, p = "", f = function(g) {
          var T = function(C) {
            return Uu.get(C);
          }(g);
          if (T === void 0) return "continue";
          var y = s.names.get(T), _ = u.getGroup(g);
          if (y === void 0 || !y.size || _.length === 0) return "continue";
          var A = "".concat(fo, ".g").concat(g, '[id="').concat(T, '"]'), R = "";
          y !== void 0 && y.forEach(function(C) {
            C.length > 0 && (R += "".concat(C, ","));
          }), p += "".concat(_).concat(A, '{content:"').concat(R, '"}').concat(CE);
        }, b = 0; b < c; b++) f(b);
        return p;
      }(o);
    });
  }
  return e.registerId = function(t) {
    return pu(t);
  }, e.prototype.rehydrate = function() {
    !this.server && Fu && OS(this);
  }, e.prototype.reconstructWithOptions = function(t, n) {
    return n === void 0 && (n = !0), new e(Zt(Zt({}, this.options), t), this.gs, n && this.names || void 0);
  }, e.prototype.allocateGSInstance = function(t) {
    return this.gs[t] = (this.gs[t] || 0) + 1;
  }, e.prototype.getTag = function() {
    return this.tag || (this.tag = (t = function(n) {
      var r = n.useCSSOMInjection, o = n.target;
      return n.isServer ? new a3(o) : r ? new n3(o) : new r3(o);
    }(this.options), new KD(t)));
    var t;
  }, e.prototype.hasNameForId = function(t, n) {
    return this.names.has(t) && this.names.get(t).has(n);
  }, e.prototype.registerName = function(t, n) {
    if (pu(t), this.names.has(t)) this.names.get(t).add(n);
    else {
      var r = /* @__PURE__ */ new Set();
      r.add(n), this.names.set(t, r);
    }
  }, e.prototype.insertRules = function(t, n, r) {
    this.registerName(t, n), this.getTag().insertRules(pu(t), r);
  }, e.prototype.clearNames = function(t) {
    this.names.has(t) && this.names.get(t).clear();
  }, e.prototype.clearRules = function(t) {
    this.getTag().clearGroup(pu(t)), this.clearNames(t);
  }, e.prototype.clearTag = function() {
    this.tag = void 0;
  }, e;
}(), o3 = /&/g, s3 = /^\s*\/\/.*$/gm;
function DR(e, t) {
  return e.map(function(n) {
    return n.type === "rule" && (n.value = "".concat(t, " ").concat(n.value), n.value = n.value.replaceAll(",", ",".concat(t, " ")), n.props = n.props.map(function(r) {
      return "".concat(t, " ").concat(r);
    })), Array.isArray(n.children) && n.type !== "@keyframes" && (n.children = DR(n.children, t)), n;
  });
}
function MR(e) {
  var t, n, r, o = e === void 0 ? ho : e, s = o.options, u = s === void 0 ? ho : s, c = o.plugins, p = c === void 0 ? tc : c, f = function(T, y, _) {
    return _.startsWith(n) && _.endsWith(n) && _.replaceAll(n, "").length > 0 ? ".".concat(t) : T;
  }, b = p.slice();
  b.push(function(T) {
    T.type === Xu && T.value.includes("&") && (T.props[0] = T.props[0].replace(o3, n).replace(r, f));
  }), u.prefix && b.push(LD), b.push(xD);
  var g = function(T, y, _, A) {
    y === void 0 && (y = ""), _ === void 0 && (_ = ""), A === void 0 && (A = "&"), t = A, n = y, r = new RegExp("\\".concat(n, "\\b"), "g");
    var R = T.replace(s3, ""), C = ID(_ || y ? "".concat(_, " ").concat(y, " { ").concat(R, " }") : R);
    u.namespace && (C = DR(C, u.namespace));
    var w = [];
    return Pu(C, ND(b.concat(OD(function(k) {
      return w.push(k);
    })))), w;
  };
  return g.hash = p.length ? p.reduce(function(T, y) {
    return y.name || di(15), qi(T, y.name);
  }, wR).toString() : "", g;
}
var l3 = new Hu(), jb = MR(), xE = ot.createContext({ shouldForwardProp: void 0, styleSheet: l3, stylis: jb });
xE.Consumer;
var u3 = ot.createContext(void 0);
function $u() {
  return G.useContext(xE);
}
function c3(e) {
  var t = G.useState(e.stylisPlugins), n = t[0], r = t[1], o = $u().styleSheet, s = G.useMemo(function() {
    var p = o;
    return e.sheet ? p = e.sheet : e.target && (p = p.reconstructWithOptions({ target: e.target }, !1)), e.disableCSSOMInjection && (p = p.reconstructWithOptions({ useCSSOMInjection: !1 })), p;
  }, [e.disableCSSOMInjection, e.sheet, e.target, o]), u = G.useMemo(function() {
    return MR({ options: { namespace: e.namespace, prefix: e.enableVendorPrefixes }, plugins: n });
  }, [e.enableVendorPrefixes, e.namespace, n]);
  G.useEffect(function() {
    gD(n, e.stylisPlugins) || r(e.stylisPlugins);
  }, [e.stylisPlugins]);
  var c = G.useMemo(function() {
    return { shouldForwardProp: e.shouldForwardProp, styleSheet: s, stylis: u };
  }, [e.shouldForwardProp, s, u]);
  return ot.createElement(xE.Provider, { value: c }, ot.createElement(u3.Provider, { value: u }, e.children));
}
var PR = function() {
  function e(t, n) {
    var r = this;
    this.inject = function(o, s) {
      s === void 0 && (s = jb);
      var u = r.name + s.hash;
      o.hasNameForId(r.id, u) || o.insertRules(r.id, u, s(r.rules, u, "@keyframes"));
    }, this.name = t, this.id = "sc-keyframes-".concat(t), this.rules = n, RE(this, function() {
      throw di(12, String(r.name));
    });
  }
  return e.prototype.getName = function(t) {
    return t === void 0 && (t = jb), this.name + t.hash;
  }, e;
}(), d3 = function(e) {
  return e >= "A" && e <= "Z";
};
function DS(e) {
  for (var t = "", n = 0; n < e.length; n++) {
    var r = e[n];
    if (n === 1 && r === "-" && e[0] === "-") return e;
    d3(r) ? t += "-" + r.toLowerCase() : t += r;
  }
  return t.startsWith("ms-") ? "-" + t : t;
}
var FR = function(e) {
  return e == null || e === !1 || e === "";
}, BR = function(e) {
  var t, n, r = [];
  for (var o in e) {
    var s = e[o];
    e.hasOwnProperty(o) && !FR(s) && (Array.isArray(s) && s.isCss || ci(s) ? r.push("".concat(DS(o), ":"), s, ";") : Ms(s) ? r.push.apply(r, uo(uo(["".concat(o, " {")], BR(s), !1), ["}"], !1)) : r.push("".concat(DS(o), ": ").concat((t = o, (n = s) == null || typeof n == "boolean" || n === "" ? "" : typeof n != "number" || n === 0 || t in DD || t.startsWith("--") ? String(n).trim() : "".concat(n, "px")), ";")));
  }
  return r;
};
function Oa(e, t, n, r) {
  if (FR(e)) return [];
  if (IE(e)) return [".".concat(e.styledComponentId)];
  if (ci(e)) {
    if (!ci(s = e) || s.prototype && s.prototype.isReactComponent || !t) return [e];
    var o = e(t);
    return Oa(o, t, n, r);
  }
  var s;
  return e instanceof PR ? n ? (e.inject(n, r), [e.getName(r)]) : [e] : Ms(e) ? BR(e) : Array.isArray(e) ? Array.prototype.concat.apply(tc, e.map(function(u) {
    return Oa(u, t, n, r);
  })) : [e.toString()];
}
function UR(e) {
  for (var t = 0; t < e.length; t += 1) {
    var n = e[t];
    if (ci(n) && !IE(n)) return !1;
  }
  return !0;
}
var p3 = IR(ec), f3 = function() {
  function e(t, n, r) {
    this.rules = t, this.staticRulesId = "", this.isStatic = (r === void 0 || r.isStatic) && UR(t), this.componentId = n, this.baseHash = qi(p3, n), this.baseStyle = r, Hu.registerId(n);
  }
  return e.prototype.generateAndInjectStyles = function(t, n, r) {
    var o = this.baseStyle ? this.baseStyle.generateAndInjectStyles(t, n, r) : "";
    if (this.isStatic && !r.hash) if (this.staticRulesId && n.hasNameForId(this.componentId, this.staticRulesId)) o = Za(o, this.staticRulesId);
    else {
      var s = Bu(Oa(this.rules, t, n, r)), u = Gb(qi(this.baseHash, s) >>> 0);
      if (!n.hasNameForId(this.componentId, u)) {
        var c = r(s, ".".concat(u), void 0, this.componentId);
        n.insertRules(this.componentId, u, c);
      }
      o = Za(o, u), this.staticRulesId = u;
    }
    else {
      for (var p = qi(this.baseHash, r.hash), f = "", b = 0; b < this.rules.length; b++) {
        var g = this.rules[b];
        if (typeof g == "string") f += g;
        else if (g) {
          var T = Bu(Oa(g, t, n, r));
          p = qi(p, T + b), f += T;
        }
      }
      if (f) {
        var y = Gb(p >>> 0);
        n.hasNameForId(this.componentId, y) || n.insertRules(this.componentId, y, r(f, ".".concat(y), void 0, this.componentId)), o = Za(o, y);
      }
    }
    return o;
  }, e;
}(), Ps = ot.createContext(void 0);
Ps.Consumer;
function h3(e) {
  var t = ot.useContext(Ps), n = G.useMemo(function() {
    return function(r, o) {
      if (!r) throw di(14);
      if (ci(r)) {
        var s = r(o);
        return s;
      }
      if (Array.isArray(r) || typeof r != "object") throw di(8);
      return o ? Zt(Zt({}, o), r) : r;
    }(e.theme, t);
  }, [e.theme, t]);
  return e.children ? ot.createElement(Ps.Provider, { value: n }, e.children) : null;
}
var mp = {};
function g3(e, t, n) {
  var r = IE(e), o = e, s = !gp(e), u = t.attrs, c = u === void 0 ? tc : u, p = t.componentId, f = p === void 0 ? function(O, F) {
    var v = typeof O != "string" ? "sc" : wS(O);
    mp[v] = (mp[v] || 0) + 1;
    var B = "".concat(v, "-").concat(wE(ec + v + mp[v]));
    return F ? "".concat(F, "-").concat(B) : B;
  }(t.displayName, t.parentComponentId) : p, b = t.displayName, g = b === void 0 ? function(O) {
    return gp(O) ? "styled.".concat(O) : "Styled(".concat(HD(O), ")");
  }(e) : b, T = t.displayName && t.componentId ? "".concat(wS(t.displayName), "-").concat(t.componentId) : t.componentId || f, y = r && o.attrs ? o.attrs.concat(c).filter(Boolean) : c, _ = t.shouldForwardProp;
  if (r && o.shouldForwardProp) {
    var A = o.shouldForwardProp;
    if (t.shouldForwardProp) {
      var R = t.shouldForwardProp;
      _ = function(O, F) {
        return A(O, F) && R(O, F);
      };
    } else _ = A;
  }
  var C = new f3(n, T, r ? o.componentStyle : void 0);
  function w(O, F) {
    return function(v, B, Y) {
      var $ = v.attrs, M = v.componentStyle, V = v.defaultProps, ne = v.foldedComponentIds, se = v.styledComponentId, de = v.target, be = ot.useContext(Ps), Ne = $u(), ve = v.shouldForwardProp || Ne.shouldForwardProp, J = kR(B, be, V) || ho, oe = function(_e, Te, Oe) {
        for (var Me, He = Zt(Zt({}, Te), { className: void 0, theme: Oe }), Ze = 0; Ze < _e.length; Ze += 1) {
          var gt = ci(Me = _e[Ze]) ? Me(He) : Me;
          for (var kt in gt) He[kt] = kt === "className" ? Za(He[kt], gt[kt]) : kt === "style" ? Zt(Zt({}, He[kt]), gt[kt]) : gt[kt];
        }
        return Te.className && (He.className = Za(He.className, Te.className)), He;
      }($, B, J), I = oe.as || de, H = {};
      for (var W in oe) oe[W] === void 0 || W[0] === "$" || W === "as" || W === "theme" && oe.theme === J || (W === "forwardedAs" ? H.as = oe.forwardedAs : ve && !ve(W, I) || (H[W] = oe[W]));
      var x = function(_e, Te) {
        var Oe = $u(), Me = _e.generateAndInjectStyles(Te, Oe.styleSheet, Oe.stylis);
        return Me;
      }(M, oe), Ee = Za(ne, se);
      return x && (Ee += " " + x), oe.className && (Ee += " " + oe.className), H[gp(I) && !CR.has(I) ? "class" : "className"] = Ee, H.ref = Y, G.createElement(I, H);
    }(k, O, F);
  }
  w.displayName = g;
  var k = ot.forwardRef(w);
  return k.attrs = y, k.componentStyle = C, k.displayName = g, k.shouldForwardProp = _, k.foldedComponentIds = r ? Za(o.foldedComponentIds, o.styledComponentId) : "", k.styledComponentId = T, k.target = r ? o.target : e, Object.defineProperty(k, "defaultProps", { get: function() {
    return this._foldedDefaultProps;
  }, set: function(O) {
    this._foldedDefaultProps = r ? function(F) {
      for (var v = [], B = 1; B < arguments.length; B++) v[B - 1] = arguments[B];
      for (var Y = 0, $ = v; Y < $.length; Y++) qb(F, $[Y], !0);
      return F;
    }({}, o.defaultProps, O) : O;
  } }), RE(k, function() {
    return ".".concat(k.styledComponentId);
  }), s && OR(k, e, { attrs: !0, componentStyle: !0, displayName: !0, foldedComponentIds: !0, shouldForwardProp: !0, styledComponentId: !0, target: !0 }), k;
}
function MS(e, t) {
  for (var n = [e[0]], r = 0, o = t.length; r < o; r += 1) n.push(t[r], e[r + 1]);
  return n;
}
var PS = function(e) {
  return Object.assign(e, { isCss: !0 });
};
function Re(e) {
  for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
  if (ci(e) || Ms(e)) return PS(Oa(MS(tc, uo([e], t, !0))));
  var r = e;
  return t.length === 0 && r.length === 1 && typeof r[0] == "string" ? Oa(r) : PS(Oa(MS(r, t)));
}
function Vb(e, t, n) {
  if (n === void 0 && (n = ho), !t) throw di(1, t);
  var r = function(o) {
    for (var s = [], u = 1; u < arguments.length; u++) s[u - 1] = arguments[u];
    return e(t, n, Re.apply(void 0, uo([o], s, !1)));
  };
  return r.attrs = function(o) {
    return Vb(e, t, Zt(Zt({}, n), { attrs: Array.prototype.concat(n.attrs, o).filter(Boolean) }));
  }, r.withConfig = function(o) {
    return Vb(e, t, Zt(Zt({}, n), o));
  }, r;
}
var HR = function(e) {
  return Vb(g3, e);
}, Se = HR;
CR.forEach(function(e) {
  Se[e] = HR(e);
});
var m3 = function() {
  function e(t, n) {
    this.rules = t, this.componentId = n, this.isStatic = UR(t), Hu.registerId(this.componentId + 1);
  }
  return e.prototype.createStyles = function(t, n, r, o) {
    var s = o(Bu(Oa(this.rules, n, r, o)), ""), u = this.componentId + t;
    r.insertRules(u, u, s);
  }, e.prototype.removeStyles = function(t, n) {
    n.clearRules(this.componentId + t);
  }, e.prototype.renderStyles = function(t, n, r, o) {
    t > 2 && Hu.registerId(this.componentId + t), this.removeStyles(t, r), this.createStyles(t, n, r, o);
  }, e;
}();
function b3(e) {
  for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
  var r = Re.apply(void 0, uo([e], t, !1)), o = "sc-global-".concat(wE(JSON.stringify(r))), s = new m3(r, o), u = function(p) {
    var f = $u(), b = ot.useContext(Ps), g = ot.useRef(f.styleSheet.allocateGSInstance(o)).current;
    return f.styleSheet.server && c(g, p, f.styleSheet, b, f.stylis), ot.useLayoutEffect(function() {
      if (!f.styleSheet.server) return c(g, p, f.styleSheet, b, f.stylis), function() {
        return s.removeStyles(g, f.styleSheet);
      };
    }, [g, p, f.styleSheet, b, f.stylis]), null;
  };
  function c(p, f, b, g, T) {
    if (s.isStatic) s.renderStyles(p, PD, b, T);
    else {
      var y = Zt(Zt({}, f), { theme: kR(f, g, u.defaultProps) });
      s.renderStyles(p, y, b, T);
    }
  }
  return ot.memo(u);
}
function nc(e) {
  for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
  var r = Bu(Re.apply(void 0, uo([e], t, !1))), o = wE(r);
  return new PR(o, r);
}
const E3 = async () => {
  try {
    return (await Qn("post:/api-ai/chat")({
      body: {
        ref_id: "chatbot",
        name: "chatbot",
        is_org_chat: !0,
        type: "CHATBOT"
      }
    })).data;
  } catch (e) {
    console.error(e);
  }
}, y3 = (e) => /* @__PURE__ */ G.createElement("svg", { width: 16, height: 16, viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("g", { id: "Ic-Arrow-Reload" }, /* @__PURE__ */ G.createElement("path", { id: "Vector", d: "M6.61133 10.6667H3.27799V14M9.278 5.33333H12.6113V2M3 6.00227C3.37379 5.07711 3.99962 4.27536 4.80636 3.68815C5.6131 3.10094 6.56923 2.75168 7.5645 2.68034C8.55976 2.609 9.55448 2.81827 10.4367 3.28441C11.319 3.75055 12.0521 4.45503 12.5541 5.31742M12.8897 9.99805C12.5159 10.9232 11.8901 11.725 11.0833 12.3122C10.2766 12.8994 9.32144 13.2482 8.32617 13.3195C7.33091 13.3909 6.33537 13.1816 5.45312 12.7155C4.57088 12.2494 3.83721 11.545 3.33529 10.6826", stroke: "#72787F", strokeWidth: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }))), T3 = (e) => /* @__PURE__ */ G.createElement("svg", { width: 16, height: 16, viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("g", { id: "Ic-Chat-Close" }, /* @__PURE__ */ G.createElement("rect", { width: 16, height: 16, rx: 8, fill: "#E8EBED" }), /* @__PURE__ */ G.createElement("path", { id: "Vector", d: "M12 12L8 8M8 8L4 4M8 8L12 4M8 8L4 12", stroke: "#4D5053", strokeWidth: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }))), S3 = (e) => /* @__PURE__ */ G.createElement("svg", { width: 16, height: 16, viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("g", { id: "Ic-Chat-Excel" }, /* @__PURE__ */ G.createElement("rect", { id: "Rectangle", x: 4.75, y: 0.75, width: 10.5, height: 14.5, rx: 1.25, stroke: "#4D5053", strokeWidth: 1.5 }), /* @__PURE__ */ G.createElement("rect", { id: "Rectangle_2", x: 0.75, y: 3.75, width: 8.5, height: 8.5, rx: 1.25, fill: "white", stroke: "#4D5053", strokeWidth: 1.5 }), /* @__PURE__ */ G.createElement("g", { id: "Group 427321073" }, /* @__PURE__ */ G.createElement("path", { id: "Vector 1429", d: "M3 6L7 10", stroke: "#4D5053", strokeWidth: 1.5, strokeLinecap: "round" }), /* @__PURE__ */ G.createElement("path", { id: "Vector 1430", d: "M7 6L3 10", stroke: "#4D5053", strokeWidth: 1.5, strokeLinecap: "round" })), /* @__PURE__ */ G.createElement("path", { id: "Vector ", d: "M12 1V15", stroke: "#4D5053", strokeWidth: 1.5 }), /* @__PURE__ */ G.createElement("path", { id: "Vector 1432", d: "M15 6H9", stroke: "#4D5053", strokeWidth: 1.5 }), /* @__PURE__ */ G.createElement("path", { id: "Vector 1433", d: "M15 10H9", stroke: "#4D5053", strokeWidth: 1.5 }))), _3 = (e) => /* @__PURE__ */ G.createElement("svg", { width: 16, height: 16, viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("g", { id: "Ic-Chat-Upload" }, /* @__PURE__ */ G.createElement("path", { id: "Icon", d: "M2 11L2 11.75C2 12.9926 3.00736 14 4.25 14L11.75 14C12.9926 14 14 12.9926 14 11.75L14 11M11 5L8 2M8 2L5 5M8 2L8 11", stroke: "#4D5053", strokeWidth: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }))), v3 = (e) => /* @__PURE__ */ G.createElement("svg", { width: 16, height: 16, viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("g", { id: "Ic-Chat-Voice" }, /* @__PURE__ */ G.createElement("g", { id: "Border" }, /* @__PURE__ */ G.createElement("path", { id: "Icon", d: "M2 7.00272C2.20981 8.34574 2.93162 9.57348 4.0334 10.4614C5.13517 11.3492 6.54323 11.8379 8 11.8379M8 11.8379C9.45676 11.8379 10.8648 11.3492 11.9666 10.4614C13.0684 9.57348 13.7902 8.34574 14 7.00272M8 11.8379V14.6666M8.00087 1.33325C7.31189 1.33325 6.65114 1.58823 6.16396 2.0421C5.67678 2.49597 5.40309 3.11155 5.40309 3.75342V6.98031C5.40309 7.62218 5.67678 8.23776 6.16396 8.69163C6.65114 9.1455 7.31189 9.40048 8.00087 9.40048C8.68984 9.40048 9.35059 9.1455 9.83777 8.69163C10.325 8.23776 10.5986 7.62218 10.5986 6.98031V3.75342C10.5986 3.11155 10.325 2.49597 9.83777 2.0421C9.35059 1.58823 8.68984 1.33325 8.00087 1.33325Z", stroke: "#4D5053", strokeWidth: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }), /* @__PURE__ */ G.createElement("path", { id: "Vector", d: "M3 14.6665L13 14.6665", stroke: "#4D5053", strokeWidth: 1.5, strokeLinecap: "round" })))), A3 = (e) => /* @__PURE__ */ G.createElement("svg", { width: 16, height: 16, viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("g", { id: "Ic-Copy" }, /* @__PURE__ */ G.createElement("path", { id: "Vector", d: "M2.6665 8.75L2.6665 4.66667C2.66651 3.19391 3.86041 2 5.33317 2L9.4165 2M6.6665 14L11.1665 14C11.9949 14 12.6665 13.3284 12.6665 12.5L12.6665 6C12.6665 5.17157 11.9949 4.5 11.1665 4.5L6.6665 4.5C5.83808 4.5 5.1665 5.17157 5.1665 6L5.1665 12.5C5.1665 13.3284 5.83808 14 6.6665 14Z", stroke: "#72787F", strokeWidth: 1.5, strokeLinecap: "round" }))), k3 = (e) => /* @__PURE__ */ G.createElement("svg", { width: 16, height: 16, viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("g", { id: "Ic-Download-Img" }, /* @__PURE__ */ G.createElement("path", { id: "Icon", d: "M7.14274 15H3.71424C2.76749 15 1.99999 14.2165 2 13.25L2.00007 2.74999C2.00007 1.7835 2.76757 1 3.71431 1H11.4286C12.3754 1 13.1429 1.7835 13.1429 2.75V7.5625M14 13.219L12.247 15M12.247 15L10.5715 13.2995M12.247 15V10.625M5.0002 4.5H10.1429M5.0002 7.125H10.1429M5.0002 9.75H7.57157", stroke: "#72787F", strokeWidth: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }))), C3 = (e) => /* @__PURE__ */ G.createElement("svg", { width: 16, height: 16, viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("g", { id: "Ic-Download " }, /* @__PURE__ */ G.createElement("path", { id: "Icon", d: "M15 12.5L12 15M12 15L9 12.5M12 15L12 9", stroke: "#1C4792", strokeWidth: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }), /* @__PURE__ */ G.createElement("path", { id: "Vector 2", d: "M1 2H15", stroke: "#1C4792", strokeWidth: 1.5, strokeLinecap: "round" }), /* @__PURE__ */ G.createElement("path", { id: "Vector 3", d: "M1 6H15", stroke: "#1C4792", strokeWidth: 1.5, strokeLinecap: "round" }), /* @__PURE__ */ G.createElement("path", { id: "Vector 4", d: "M1 10H7", stroke: "#1C4792", strokeWidth: 1.5, strokeLinecap: "round" }))), w3 = (e) => /* @__PURE__ */ G.createElement("svg", { width: 16, height: 16, viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("g", { id: "Ic-File" }, /* @__PURE__ */ G.createElement("path", { id: "Vector", d: "M8.71421 1.00063C8.646 1 8.56941 1 8.48186 1H5.28582C4.48576 1 4.08543 1 3.77984 1.15744C3.51104 1.29592 3.29266 1.51673 3.1557 1.78852C3 2.0975 3 2.50229 3 3.31125V11.689C3 12.498 3 12.9023 3.1557 13.2113C3.29266 13.483 3.51104 13.7042 3.77984 13.8427C4.08513 14 4.48498 14 5.2835 14L10.7164 14C11.5149 14 11.9142 14 12.2194 13.8427C12.4882 13.7042 12.7073 13.483 12.8443 13.2112C12.9999 12.9026 12.9999 12.4989 12.9999 11.6915V5.56855C12.9999 5.47992 12.9998 5.40238 12.9992 5.33333M8.71421 1.00063C8.91823 1.00251 9.0473 1.01 9.17051 1.03991C9.31628 1.07529 9.45552 1.1338 9.58333 1.213C9.72745 1.3023 9.8512 1.42742 10.0981 1.67708L12.3306 3.93438C12.5776 4.1842 12.7005 4.30876 12.7888 4.45453C12.8672 4.58377 12.9251 4.72468 12.9601 4.87207C12.9897 4.9966 12.9972 5.12714 12.9992 5.33333M8.71421 1.00063V3.02222C8.71421 3.83119 8.71421 4.23539 8.86991 4.54437C9.00687 4.81616 9.22525 5.03757 9.49405 5.17605C9.79934 5.33333 10.1992 5.33333 10.9977 5.33333H12.9992M12.9992 5.33333H13", stroke: "#4D5053", strokeWidth: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }))), I3 = (e) => /* @__PURE__ */ G.createElement("svg", { width: 20, height: 20, viewBox: "0 0 20 20", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("path", { d: "M10 16L4.70711 10.7071C4.31658 10.3166 4.31658 9.68342 4.70711 9.29289L10 4", stroke: "#1B1D1F", strokeWidth: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }), /* @__PURE__ */ G.createElement("path", { d: "M16 10.75C16.4142 10.75 16.75 10.4142 16.75 10C16.75 9.58579 16.4142 9.25 16 9.25L16 10.75ZM4 10.75L16 10.75L16 9.25L4 9.25L4 10.75Z", fill: "#1B1D1F" })), R3 = (e) => /* @__PURE__ */ G.createElement("svg", { width: 20, height: 20, viewBox: "0 0 20 20", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("path", { d: "M7 2.5L7 6.5M7 6.5L3 6.5M7 6.5L2.5 2", stroke: "#9EA4AA", strokeWidth: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }), /* @__PURE__ */ G.createElement("path", { d: "M13 2.5L13 6.5M13 6.5L17 6.5M13 6.5L17.5 2", stroke: "#9EA4AA", strokeWidth: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }), /* @__PURE__ */ G.createElement("path", { d: "M3 13L7 13M7 13L7 17M7 13L2.5 17.5", stroke: "#9EA4AA", strokeWidth: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }), /* @__PURE__ */ G.createElement("path", { d: "M17 13L13 13M13 13L13 17M13 13L17.5 17.5", stroke: "#9EA4AA", strokeWidth: 1.5, strokeLinecap: "round", strokeLinejoin: "round" })), x3 = (e) => /* @__PURE__ */ G.createElement("svg", { width: 20, height: 20, viewBox: "0 0 20 20", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("path", { d: "M6 18H2M2 18V14M2 18L6.5 13.5M14 2H18M18 2V6M18 2L13.5 6.5M2 6L2 2M2 2L6 2M2 2L6.5 6.5M18 14L18 18M18 18H14M18 18L13.5 13.5", stroke: "#9EA4AA", strokeWidth: 1.5, strokeLinecap: "round", strokeLinejoin: "round" })), NE = (e) => /* @__PURE__ */ G.createElement("svg", { width: 24, height: 24, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("rect", { width: 24, height: 24, rx: 12, fill: "#E0EDFD" }), /* @__PURE__ */ G.createElement("path", { d: "M17 19C19.2091 19 20.9856 17.2071 20.8017 15.0057C20.6877 13.6405 20.525 12.3354 20.3149 11.7219C19.8626 10.4008 19.1997 9.20041 18.364 8.18928C17.5282 7.17815 16.5361 6.37609 15.4442 5.82887C14.3522 5.28165 13.1819 5 12 5C10.8181 5 9.64778 5.28165 8.55585 5.82887C7.46392 6.37609 6.47177 7.17816 5.63604 8.18928C4.80031 9.20041 4.13738 10.4008 3.68508 11.7219C3.47503 12.3354 3.31232 13.6405 3.19828 15.0057C3.01438 17.2071 4.79086 19 7 19H12H17Z", fill: "#1C4792" }), /* @__PURE__ */ G.createElement("rect", { x: 5, y: 10, width: 14, height: 6, rx: 3, fill: "white" }), /* @__PURE__ */ G.createElement("rect", { x: 6, y: 3, width: 2, height: 6, rx: 1, fill: "#1C4792" }), /* @__PURE__ */ G.createElement("rect", { x: 16, y: 3, width: 2, height: 6, rx: 1, fill: "#1C4792" }), /* @__PURE__ */ G.createElement("circle", { cx: 8.5, cy: 12.5, r: 1.5, fill: "#1C4792" }), /* @__PURE__ */ G.createElement("circle", { cx: 15.5, cy: 12.5, r: 1.5, fill: "#1C4792" })), N3 = (e) => /* @__PURE__ */ G.createElement("svg", { width: 24, height: 24, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("path", { d: "M20.2984 12.2412L12.3723 20.1673C10.215 22.3247 6.97955 22.5794 4.78001 20.3799C2.62269 18.2225 2.90307 15.0972 5.10261 12.8976L14.0124 3.98783C15.376 2.6242 17.5714 2.6242 18.935 3.98783C20.2986 5.35147 20.2986 7.54679 18.935 8.91042L9.86874 17.9767C9.18908 18.6563 8.08712 18.6563 7.40745 17.9767C6.72779 17.297 6.72779 16.195 7.40745 15.5154L15.49 7.4328", stroke: "#C9CDD2", strokeWidth: 1.5, strokeLinecap: "round" })), O3 = (e) => /* @__PURE__ */ G.createElement("svg", { width: 24, height: 24, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("path", { d: "M20.2984 12.2412L12.3723 20.1673C10.215 22.3247 6.97955 22.5794 4.78001 20.3799C2.62269 18.2225 2.90307 15.0972 5.10261 12.8976L14.0124 3.98783C15.376 2.6242 17.5714 2.6242 18.935 3.98783C20.2986 5.35147 20.2986 7.54679 18.935 8.91042L9.86874 17.9767C9.18908 18.6563 8.08712 18.6563 7.40745 17.9767C6.72779 17.297 6.72779 16.195 7.40745 15.5154L15.49 7.4328", stroke: "#1B1D1F", strokeWidth: 1.5, strokeLinecap: "round" })), $R = (e) => /* @__PURE__ */ G.createElement("svg", { width: 32, height: 32, viewBox: "0 0 32 32", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("rect", { width: 32, height: 32, rx: 16, fill: "#E8EBED" }), /* @__PURE__ */ G.createElement("path", { d: "M23.3066 14.8384L16.624 11.0099L9.94945 7.18142C9.67767 7.02599 9.38991 6.97691 9.11014 7.00963C8.27881 7.11598 7.79121 8.00765 8.08697 8.7848L10.4051 14.9774H18.0069C18.5744 14.9774 19.038 15.4355 19.038 16C19.038 16.5645 18.5744 17.0226 18.0069 17.0226H10.3971L8.08697 23.2152C7.79121 23.9923 8.27881 24.8922 9.11813 24.9904C9.38991 25.0231 9.68567 24.974 9.95744 24.8186L16.64 20.9901L23.3226 17.1616C24.2258 16.6463 24.2258 15.3537 23.3226 14.8384H23.3066Z", fill: "#C9CDD2" })), zR = (e) => /* @__PURE__ */ G.createElement("svg", { width: 32, height: 32, viewBox: "0 0 32 32", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("rect", { width: 32, height: 32, rx: 16, fill: "#E8EBED" }), /* @__PURE__ */ G.createElement("path", { d: "M23.3066 14.8384L16.624 11.0099L9.94945 7.18142C9.67767 7.02599 9.38991 6.97691 9.11014 7.00963C8.27881 7.11598 7.79121 8.00765 8.08697 8.7848L10.4051 14.9774H18.0069C18.5744 14.9774 19.038 15.4355 19.038 16C19.038 16.5645 18.5744 17.0226 18.0069 17.0226H10.3971L8.08697 23.2152C7.79121 23.9923 8.27881 24.8922 9.11813 24.9904C9.38991 25.0231 9.68567 24.974 9.95744 24.8186L16.64 20.9901L23.3226 17.1616C24.2258 16.6463 24.2258 15.3537 23.3226 14.8384H23.3066Z", fill: "#1B1D1F" })), GR = (e) => /* @__PURE__ */ G.createElement("svg", { width: 40, height: 40, viewBox: "0 0 40 40", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("rect", { width: 40, height: 40, rx: 8, fill: "#1C72F8" }), /* @__PURE__ */ G.createElement("path", { d: "M8 11H22", stroke: "white", strokeWidth: 1.5, strokeLinecap: "round" }), /* @__PURE__ */ G.createElement("path", { d: "M8 17H32", stroke: "white", strokeWidth: 1.5, strokeLinecap: "round" }), /* @__PURE__ */ G.createElement("path", { d: "M8 23H32", stroke: "white", strokeWidth: 1.5, strokeLinecap: "round" }), /* @__PURE__ */ G.createElement("path", { d: "M8 29H32", stroke: "white", strokeWidth: 1.5, strokeLinecap: "round" })), qR = (e) => /* @__PURE__ */ G.createElement("svg", { width: 40, height: 40, viewBox: "0 0 40 40", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("rect", { width: 40, height: 40, rx: 8, fill: "#4D5053" }), /* @__PURE__ */ G.createElement("path", { d: "M10 18.3546C10.3497 20.5706 11.5527 22.5964 13.389 24.0614C15.2253 25.5264 17.5721 26.3326 20 26.3326M20 26.3326C22.4279 26.3326 24.7747 25.5264 26.611 24.0614C28.4473 22.5964 29.6503 20.5706 30 18.3546M20 26.3326V31M20.0014 9C18.8532 9 17.7519 9.42072 16.9399 10.1696C16.128 10.9185 15.6718 11.9342 15.6718 12.9933V18.3176C15.6718 19.3767 16.128 20.3924 16.9399 21.1413C17.7519 21.8902 18.8532 22.3109 20.0014 22.3109C21.1497 22.3109 22.251 21.8902 23.063 21.1413C23.8749 20.3924 24.3311 19.3767 24.3311 18.3176V12.9933C24.3311 11.9342 23.8749 10.9185 23.063 10.1696C22.251 9.42072 21.1497 9 20.0014 9Z", stroke: "white", strokeWidth: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }), /* @__PURE__ */ G.createElement("path", { d: "M13.7998 31L25.7998 31", stroke: "white", strokeWidth: 1.5, strokeLinecap: "round" })), jR = (e) => /* @__PURE__ */ G.createElement("svg", { width: 40, height: 40, viewBox: "0 0 40 40", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("rect", { width: 40, height: 40, rx: 8, fill: "#00D000" }), /* @__PURE__ */ G.createElement("rect", { x: 8.75, y: 9.75, width: 22.5, height: 20.5, rx: 1.25, stroke: "white", strokeWidth: 1.5 }), /* @__PURE__ */ G.createElement("path", { d: "M15.2002 9L15.2002 31", stroke: "white", strokeWidth: 1.5 }), /* @__PURE__ */ G.createElement("path", { d: "M9 14H31", stroke: "white", strokeWidth: 1.5 }), /* @__PURE__ */ G.createElement("path", { d: "M9 18H31", stroke: "white", strokeWidth: 1.5 }), /* @__PURE__ */ G.createElement("path", { d: "M9 22H31", stroke: "white", strokeWidth: 1.5 }), /* @__PURE__ */ G.createElement("path", { d: "M9 26H31", stroke: "white", strokeWidth: 1.5 })), L3 = (e) => /* @__PURE__ */ G.createElement("svg", { width: 48, height: 48, viewBox: "0 0 48 48", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("rect", { width: 48, height: 48, rx: 24, fill: "#E0EDFD" }), /* @__PURE__ */ G.createElement("path", { d: "M36 36C38.2091 36 39.982 34.2088 39.8528 32.0034C39.6674 28.842 39.3083 25.0055 38.7821 23.5232C37.978 21.2585 36.7994 19.2007 35.3137 17.4673C33.828 15.734 32.0641 14.359 30.1229 13.4209C28.1817 12.4828 26.1012 12 24 12C21.8989 12 19.8183 12.4828 17.8771 13.4209C15.9359 14.359 14.172 15.734 12.6863 17.4673C11.2006 19.2007 10.022 21.2585 9.21793 23.5232C8.69167 25.0055 8.33256 28.842 8.14724 32.0034C8.01796 34.2088 9.79086 36 12 36H24H36Z", fill: "#1C4792" }), /* @__PURE__ */ G.createElement("rect", { x: 12, y: 19, width: 24, height: 12, rx: 6, fill: "white" }), /* @__PURE__ */ G.createElement("rect", { x: 13, y: 8, width: 4, height: 11, rx: 2, fill: "#1C4792" }), /* @__PURE__ */ G.createElement("rect", { x: 31, y: 8, width: 4, height: 11, rx: 2, fill: "#1C4792" }), /* @__PURE__ */ G.createElement("circle", { cx: 17.5, cy: 25.5, r: 2.5, fill: "#1C4792" }), /* @__PURE__ */ G.createElement("circle", { cx: 30.5, cy: 25.5, r: 2.5, fill: "#1C4792" })), VR = (e) => /* @__PURE__ */ G.createElement("svg", { width: 48, height: 48, viewBox: "0 0 48 48", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("rect", { width: 48, height: 48, rx: 24, fill: "#E0EDFD" }), /* @__PURE__ */ G.createElement("rect", { x: 11, y: 11, width: 20, height: 22, rx: 3, fill: "white", stroke: "#1C4792", strokeWidth: 2 }), /* @__PURE__ */ G.createElement("path", { d: "M15 16H27", stroke: "#1C4792", strokeWidth: 2, strokeLinecap: "round" }), /* @__PURE__ */ G.createElement("path", { d: "M15 20H27", stroke: "#1C4792", strokeWidth: 2, strokeLinecap: "round" }), /* @__PURE__ */ G.createElement("path", { d: "M15 24H21", stroke: "#1C4792", strokeWidth: 2, strokeLinecap: "round" }), /* @__PURE__ */ G.createElement("path", { d: "M36 38C38.2091 38 39.9856 36.2071 39.8017 34.0057C39.6877 32.6405 39.525 31.3354 39.3149 30.7219C38.8626 29.4008 38.1997 28.2004 37.364 27.1893C36.5282 26.1782 35.5361 25.3761 34.4442 24.8289C33.3522 24.2816 32.1819 24 31 24C29.8181 24 28.6478 24.2816 27.5558 24.8289C26.4639 25.3761 25.4718 26.1782 24.636 27.1893C23.8003 28.2004 23.1374 29.4008 22.6851 30.7219C22.475 31.3354 22.3123 32.6405 22.1983 34.0057C22.0144 36.2071 23.7909 38 26 38H31H36Z", fill: "#1C4792" }), /* @__PURE__ */ G.createElement("rect", { x: 24, y: 28, width: 14, height: 7, rx: 3.5, fill: "white" }), /* @__PURE__ */ G.createElement("rect", { x: 25, y: 22, width: 2, height: 6, rx: 1, fill: "#1C4792" }), /* @__PURE__ */ G.createElement("rect", { x: 35, y: 22, width: 2, height: 6, rx: 1, fill: "#1C4792" }), /* @__PURE__ */ G.createElement("circle", { cx: 27.5, cy: 31.5, r: 1.5, fill: "#1C4792" }), /* @__PURE__ */ G.createElement("circle", { cx: 34.5, cy: 31.5, r: 1.5, fill: "#1C4792" })), D3 = {
  "Title/40px/40px.400": `
 font-size: 40px;
 font-weight: 400;
 letter-spacing: -0.4000000059604645px;
 line-height: 52px;
 `,
  "Title/40px/40px.600": `
 font-size: 40px;
 font-weight: 700;
 letter-spacing: -0.4000000059604645px;
 line-height: 52px;
 `,
  "Title/32px/32px.400": `
 font-size: 32px;
 font-weight: 400;
 letter-spacing: -0.4000000059604645px;
 line-height: 42px;
 `,
  "Title/32px/32px.600": `
 font-size: 32px;
 font-weight: 700;
 letter-spacing: -0.4000000059604645px;
 line-height: 42px;
 `,
  "Title/24px/24px.400": `
 font-size: 24px;
 font-weight: 400;
 letter-spacing: -0.4000000059604645px;
 line-height: 34px;
 `,
  "Title/24px/24px.600": `
 font-size: 24px;
 font-weight: 700;
 letter-spacing: -0.4000000059604645px;
 line-height: 34px;
 `,
  "Title/18px/18px.400": `
 font-size: 18px;
 font-weight: 400;
 letter-spacing: -0.4000000059604645px;
 line-height: 26px;
 `,
  "Title/18px/18px.600": `
 font-size: 18px;
 font-weight: 700;
 letter-spacing: -0.4000000059604645px;
 line-height: 26px;
 `,
  "Body/16px/16px.400": `
 font-size: 16px;
 font-weight: 400;
 letter-spacing: -0.4000000059604645px;
 line-height: 24px;
 `,
  "Body/16px/16px.500": `
 font-size: 16px;
 font-weight: 500;
 letter-spacing: -0.4000000059604645px;
 line-height: 24px;
 `,
  "Body/16px/16px.600": `
 font-size: 16px;
 font-weight: 700;
 letter-spacing: -0.4000000059604645px;
 line-height: 24px;
 `,
  "Body/14px/14px.400": `
 font-size: 14px;
 font-weight: 400;
 letter-spacing: -0.4000000059604645px;
 line-height: 20px;
 `,
  "Body/14px/14px.500": `
 font-size: 14px;
 font-weight: 500;
 letter-spacing: -0.4000000059604645px;
 line-height: 20px;
 `,
  "Body/14px/14px.600": `
 font-size: 14px;
 font-weight: 700;
 letter-spacing: -0.4000000059604645px;
 line-height: 20px;
 `,
  "Body/12px/12px.400": `
 font-size: 12px;
 font-weight: 400;
 letter-spacing: -0.4000000059604645px;
 line-height: 16px;
 `,
  "Body/12px/12px.500": `
 font-size: 12px;
 font-weight: 500;
 letter-spacing: -0.4000000059604645px;
 line-height: 16px;
 `,
  "Body/12px/12px.600": `
 font-size: 12px;
 font-weight: 700;
 letter-spacing: -0.4000000059604645px;
 line-height: 16px;
 `
}, M3 = {
  "Grayscale/White": "#ffffff",
  "Grayscale/Black": "#1b1d1f",
  "Grayscale/Gray 50": "#f7f8f9",
  "Grayscale/Gray 100": "#e8ebed",
  "Grayscale/Gray 200": "#c9cdd2",
  "Grayscale/Gray 300": "#9ea4aa",
  "Grayscale/Gray 400": "#72787f",
  "Grayscale/Gray 500": "#4d5053",
  "Grayscale/Gray 600": "#34373a",
  "Primary/Primary 50": "#edf1fa",
  "Primary/Primary 100": "#c5d4ec",
  "Primary/Primary 200": "#a6bad9",
  "Primary/Primary 500": "#1c4792",
  "Primary/Primary 600": "#123777",
  "Red/Red 50": "#fef3f2",
  "Red/Red 100": "#ffeaea",
  "Red/Red 200": "#ffdddd",
  "Red/Red 500": "#e02d3c",
  "Red/Red 600": "#b91c1c",
  "Red/Red 700": "#981b25",
  "Green/Green 50": "#f5fbf8",
  "Green/Green 100": "#e9fdf0",
  "Green/Green 200": "#b1f3c8",
  "Green/Green 500": "#08875d",
  "Green/Green 600": "#04724d",
  "Green/Green 700": "#066042",
  "Yellow/Yellow 50": "#fffaeb",
  "Yellow/Yellow 100": "#fff5d7",
  "Yellow/Yellow 200": "#fedf89",
  "Yellow/Yellow 500": "#b25e09",
  "Yellow/Yellow 600": "#96530f",
  "Yellow/Yellow 700": "#80460d",
  "Blue/Blue 50": "#f7faff",
  "Blue/Blue 100": "#edf3ff",
  "Blue/Blue 200": "#b8cfff",
  "Blue/Blue 500": "#2f6fed"
}, br = { typography: D3, colors: M3 }, $t = (e, t) => `${e && br.colors[e] ? `color: ${br.colors[e]};` : ""} ${br.typography[t]}`, _s = (e) => br.typography[e], Kr = (e) => `color: ${e ? br.colors[e] : "inherit"};`, En = (e) => e && br.colors[e] ? br.colors[e] : "transparent", St = (e) => `background-color: ${e ? br.colors[e] : "transparent"};`, Nn = (e, t, n) => `border: ${e}px solid ${t ? br.colors[t] : "transparent"}; border-radius: ${n}px;`, ie = (e, t = 16) => `${e / t}rem`, Ka = (e = {
  default: {
    textColor: "Grayscale/Black",
    bgColor: "Grayscale/Gray 50"
  },
  hover: {
    bgColor: "Grayscale/Gray 100"
  },
  disabled: {
    textColor: "Grayscale/White",
    bgColor: "Grayscale/Gray 200"
  }
}) => Re`
  ${_s("Body/14px/14px.400")}
  ${St(e.default.bgColor)}
  ${Kr(e.default.textColor)}
  ${Nn(1, e.default.borderColor || null, 8)}
  &:hover {
    ${e.hover.bgColor && St(e.hover.bgColor)}
    ${e.hover.textColor && Kr(e.hover.textColor)}
    ${e.hover.borderColor && Nn(1, e.hover.borderColor, 8)}
  }
  &:disabled {
    ${e.disabled.bgColor && St(e.disabled.bgColor)}
    ${e.disabled.textColor && Kr(e.disabled.textColor)}
    ${e.disabled.borderColor && Nn(1, e.disabled.borderColor, 8)}
  }
`, P3 = {
  "primary-filled": Ka({
    default: {
      textColor: "Grayscale/White",
      bgColor: "Primary/Primary 500"
    },
    hover: {
      bgColor: "Primary/Primary 600"
    },
    disabled: {
      textColor: "Grayscale/White",
      bgColor: "Primary/Primary 200"
    }
  }),
  "danger-filled": Ka({
    default: {
      textColor: "Grayscale/White",
      bgColor: "Red/Red 500"
    },
    hover: {
      bgColor: "Red/Red 600"
    },
    disabled: {
      textColor: "Grayscale/White",
      bgColor: "Red/Red 200"
    }
  }),
  "primary-ghost-filled": Ka({
    default: {
      textColor: "Primary/Primary 500",
      bgColor: "Primary/Primary 50"
    },
    hover: {
      bgColor: "Primary/Primary 100"
    },
    disabled: {
      textColor: "Primary/Primary 200",
      bgColor: "Primary/Primary 50"
    }
  }),
  "danger-ghost-filled": Ka({
    default: {
      textColor: "Red/Red 500",
      bgColor: "Red/Red 50"
    },
    hover: {
      bgColor: "Red/Red 100"
    },
    disabled: {
      textColor: "Red/Red 200",
      bgColor: "Red/Red 50"
    }
  }),
  "grayscale-outline": Ka({
    default: {
      textColor: "Grayscale/Black",
      bgColor: "Grayscale/White",
      borderColor: "Grayscale/Gray 100"
    },
    hover: {
      bgColor: "Grayscale/Gray 100"
    },
    disabled: {
      textColor: "Grayscale/White",
      bgColor: "Grayscale/Gray 200",
      borderColor: "Grayscale/Gray 200"
    }
  }),
  "grayscale-filled": Ka(),
  "icon-white": Ka({
    default: {
      textColor: "Grayscale/Black",
      bgColor: null
    },
    hover: {
      bgColor: "Grayscale/Gray 100"
    },
    disabled: {
      textColor: "Grayscale/White",
      bgColor: "Grayscale/Gray 200"
    }
  })
}, F3 = {
  small: Re`
    padding: 6px 12px;
    ${_s("Body/14px/14px.400")}
  `,
  medium: Re`
    padding: 8px 16px;
    ${_s("Body/16px/16px.500")}
  `,
  large: Re`
    padding: 12px 16px;
    ${_s("Body/16px/16px.500")}
  `
}, rc = Se.button`
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
  cursor: pointer;
  gap: 4px;
  ${({ $variant: e }) => e && P3[e]}
  ${({ $size: e }) => e && F3[e]}
  ${({ $css: e }) => e && e}
`;
rc.defaultProps = {
  $variant: "grayscale-filled",
  $size: "medium"
};
function gr({
  children: e,
  $css: t,
  $variant: n = "white",
  ...r
}) {
  return /* @__PURE__ */ L.jsx(
    rc,
    {
      $variant: n ? `icon-${n}` : null,
      $size: null,
      $css: t,
      ...r,
      children: e
    }
  );
}
function WR(e) {
  var t, n, r = "";
  if (typeof e == "string" || typeof e == "number") r += e;
  else if (typeof e == "object") if (Array.isArray(e)) {
    var o = e.length;
    for (t = 0; t < o; t++) e[t] && (n = WR(e[t])) && (r && (r += " "), r += n);
  } else for (n in e) e[n] && (r && (r += " "), r += n);
  return r;
}
function B3() {
  for (var e, t, n = 0, r = "", o = arguments.length; n < o; n++) (e = arguments[n]) && (t = WR(e)) && (r && (r += " "), r += t);
  return r;
}
function La({
  children: e,
  $directionY: t = "bottom",
  className: n,
  $css: r,
  ...o
}) {
  return /* @__PURE__ */ L.jsx(
    U3,
    {
      className: B3("tooltip", n),
      $directionY: t,
      $css: r,
      ...o,
      children: e
    }
  );
}
const U3 = Se.div`
  position: absolute;
  z-index: 999;
  top: ${({ $directionY: e }) => e === "top" ? "0" : "auto"};
  bottom: ${({ $directionY: e }) => e === "bottom" ? "0" : "auto"};
  transform: translateY(
    ${({ $directionY: e }) => e === "top" ? "calc(-100% - 4px)" : "calc(100% + 4px)"}
  );
  display: none;
  padding: 8px;
  border-radius: 8px;
  ${St("Grayscale/Black")}
  ${$t("Grayscale/White", "Body/12px/12px.400")}
  max-width: max-content;
  width: max-content;
  min-width: min-content;
  ${({ $css: e }) => e && e}
`, wu = () => {
  const e = document.querySelector("gu-app");
  if (!e || !e.parentElement)
    return {
      width: window.innerWidth,
      height: window.innerHeight,
      x: 0,
      y: 0,
      borderLeft: 0,
      borderTop: 0
    };
  const t = e.parentElement, n = (t == null ? void 0 : t.nodeName) === "BODY" ? {
    width: window.innerWidth,
    height: window.innerHeight
  } : t ? {
    width: t == null ? void 0 : t.clientWidth,
    height: t == null ? void 0 : t.clientHeight
  } : {
    width: window.innerWidth,
    height: window.innerHeight
  }, r = {
    x: (t == null ? void 0 : t.offsetLeft) ?? 0,
    y: (t == null ? void 0 : t.offsetTop) ?? 0
  }, o = window.getComputedStyle(t), s = parseFloat(o.borderLeftWidth), u = parseFloat(o.borderTopWidth);
  return {
    ...n,
    ...r,
    borderLeft: s ?? 0,
    borderTop: u ?? 0
  };
}, H3 = Se.div(
  ({ $isMinimized: e, $isMaximized: t, $isBehind: n, theme: r }) => `
  position: inherit;
  background-color: ${r.colors["Grayscale/White"]};
  color: ${r.colors["Grayscale/Black"]};
  ${r.typography["Body/16px/16px.400"]}
  border-radius: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  transition: opacity 0.2s;
  box-shadow: 0px 12px 16px -4px rgba(51, 51, 51, 0.08), 0px 4px 6px -2px rgba(51, 51, 51, 0.03);

  ${e && `
    display: none;
  `}
  ${t && `
    top: 0 !important;
    left: 0 !important;
    width: 100% !important;
    height: 100% !important;
    transform: none !important;
  `}

  ${n && `
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15), 0 3px 6px rgba(0, 0, 0, 0.1),
      0 0 1px rgba(0, 0, 0, 0.05);

    .inner-dialog-content {
      opacity: 1;
    }
  `}

  &::-webkit-scrollbar {
    width: 6px;
  }

  &::-webkit-scrollbar-track {
    background: color-mix(
      in srgb,
      ${En("Grayscale/Gray 50")} 90%,
      transparent
    );
  }

  &::-webkit-scrollbar-thumb {
    background: color-mix(
      in srgb,
      ${En("Grayscale/Gray 200")} 50%,
      transparent
    );
    cursor: pointer;
    transition: all 0.2s ease-in-out;
  }

  &::-webkit-scrollbar-thumb:hover {
    background: color-mix(
      in srgb,
      ${En("Grayscale/Gray 200")} 90%,
      transparent
    );
  }

  &::-webkit-scrollbar-corner {
    background: transparent;
  }
`
), $3 = Se.div`
  display: flex;
  align-items: center;
  height: ${ie(44)};
  justify-content: space-between;
  gap: ${ie(8)};
  padding: ${ie(8)} ${ie(8)} ${ie(4)};
  user-select: none;
  cursor: ${({ $draggable: e }) => e ? "grab" : "default"};
  &:active {
    cursor: ${({ $draggable: e }) => e ? "grabbing" : "default"};
  }
`;
Se.div`
  font-size: 0.875rem;
  font-weight: 700;
`;
const z3 = Se.div`
  display: flex;
  gap: 0.5rem;
`;
Se.button`
  display: inline-flex;
  padding: 0;
  cursor: pointer;
`;
const G3 = Se.div`
  flex: 1;
  overflow: auto;
  padding: 0;
`, ac = Se.div`
  position: absolute;
  display: flex;
  justify-content: space-between;
  z-index: 10;
  pointer-events: none;
`, Da = Se.div`
  min-width: 0.5rem;
  min-height: 0.5rem;
  background: transparent;
  border-radius: 0.25rem;
  pointer-events: auto;
  user-select: none;

  &:hover {
    background-color: color-mix(in srgb, var(--terminal-fg) 30%, transparent);
  }

  ${(e) => e.$isMaximized && Re`
      display: none;
    `}
`, q3 = Se(ac)`
  top: 0.75rem;
  right: -0.25rem;
  bottom: 0.75rem;
`, j3 = Se(ac)`
  top: 0.75rem;
  left: -0.25rem;
  bottom: 0.75rem;
`, V3 = Se(ac)`
  top: -0.25rem;
  left: -0.25rem;
  right: -0.25rem;
  align-items: start;
`, W3 = Se(ac)`
  bottom: -0.25rem;
  left: -0.25rem;
  right: -0.25rem;
  align-items: end;
`, Y3 = Se(Da)`
  flex: 1;
  height: 0.5rem;
  cursor: ns-resize;
  &:active {
    cursor: n-resize;
  }
`, K3 = Se(Da)`
  flex: 1;
  height: 0.5rem;
  cursor: ns-resize;
  &:active {
    cursor: s-resize;
  }
`, X3 = Se(Da)`
  flex: 1;
  cursor: ew-resize;
  &:active {
    cursor: e-resize;
  }
`, Q3 = Se(Da)`
  flex: 1;
  cursor: ew-resize;
  &:active {
    cursor: w-resize;
  }
`, Z3 = Se(Da)`
  width: 1rem;
  height: 1rem;
  cursor: nwse-resize;
  &:active {
    cursor: nw-resize;
  }
`, J3 = Se(Da)`
  width: 1rem;
  height: 1rem;
  cursor: nesw-resize;
  &:active {
    cursor: ne-resize;
  }
`, e4 = Se(Da)`
  width: 1rem;
  height: 1rem;
  cursor: nesw-resize;
  &:active {
    cursor: sw-resize;
  }
`, t4 = Se(Da)`
  width: 1rem;
  height: 1rem;
  cursor: nwse-resize;
  &:active {
    cursor: se-resize;
  }
`, n4 = {
  Wrapper: H3,
  Header: $3,
  Controls: z3,
  Content: G3,
  ResizeHandleNorth: V3,
  ResizeHandleSouth: W3,
  ResizeHandleEast: q3,
  ResizeHandleWest: j3,
  ResizeN: Y3,
  ResizeS: K3,
  ResizeE: X3,
  ResizeW: Q3,
  ResizeNW: Z3,
  ResizeNE: J3,
  ResizeSW: e4,
  ResizeSE: t4
}, {
  Wrapper: r4,
  Header: a4,
  Controls: i4,
  Content: o4,
  ResizeHandleNorth: s4,
  ResizeHandleSouth: l4,
  ResizeHandleEast: u4,
  ResizeHandleWest: c4,
  ResizeN: d4,
  ResizeS: p4,
  ResizeE: f4,
  ResizeW: h4,
  ResizeNW: g4,
  ResizeNE: m4,
  ResizeSW: b4,
  ResizeSE: E4
} = n4, bp = 200, Ep = 150, FS = 0;
function y4({
  id: e,
  title: t,
  children: n,
  className: r
}) {
  const o = G.useRef(null), s = G.useRef({
    isDragging: !1,
    startPos: { x: 0, y: 0 }
  }), u = G.useRef({
    isResizing: !1,
    direction: null,
    startSize: { width: 0, height: 0 },
    startPos: { x: 0, y: 0 },
    startDialogPos: { x: 0, y: 0 }
  }), c = G.useRef({
    position: { x: 0, y: 0 },
    size: { width: 0, height: 0 }
  }), p = Xr((C) => C.dialogs.get(e)), f = Xr((C) => C.activeDialogId), {
    updatePosition: b,
    updateDialog: g,
    setActiveDialog: T,
    minimizeDialog: y,
    maximizeDialog: _
  } = Xr(), A = (C) => {
    var O;
    C.stopPropagation();
    const w = (O = o.current) == null ? void 0 : O.getBoundingClientRect(), k = wu();
    !p || p.isMaximized || !w || (T(e), s.current = {
      isDragging: !0,
      // 부모 기준 좌표: dialogRect.left - parentSize.left
      startPos: {
        x: C.clientX - (w.x - k.x),
        y: C.clientY - (w.y - k.y)
      }
    });
  }, R = (C, w) => {
    var B;
    const k = (B = o.current) == null ? void 0 : B.getBoundingClientRect(), O = wu();
    if (C.stopPropagation(), !p || p.isMaximized || !k) return;
    T(e);
    const F = O.borderLeft, v = O.borderTop;
    u.current = {
      isResizing: !0,
      direction: w,
      startSize: {
        width: k.width,
        height: k.height
      },
      startPos: { x: C.clientX, y: C.clientY },
      startDialogPos: {
        x: k.x - O.x - F,
        y: k.y - O.y - v
      }
    };
  };
  return G.useEffect(() => {
    p && (c.current = {
      position: { ...p.position },
      size: { ...p.size }
    });
  }, [p]), G.useEffect(() => {
    const C = (k) => {
      if (!p || !o.current) return;
      const O = wu(), F = o.current.getBoundingClientRect();
      if (s.current.isDragging) {
        const v = k.clientX - s.current.startPos.x, B = k.clientY - s.current.startPos.y;
        let Y = Math.min(
          Math.max(0, v),
          O.width - o.current.offsetWidth
        ), $ = Math.min(
          Math.max(0, B),
          O.height - o.current.offsetHeight - FS
        );
        const M = F.width, V = F.height, ne = M / 100, se = V / 100;
        Y = Y / ne, $ = $ / se, o.current.style.transform = `translate(${Y}%, ${$}%)`;
      } else if (u.current.isResizing && u.current.direction) {
        const v = k.clientX, B = k.clientY, Y = u.current.direction, $ = u.current.startSize, M = u.current.startDialogPos, V = { width: $.width, height: $.height }, ne = { ...M }, se = { ...M };
        if (Y.includes("w")) {
          const W = v - u.current.startPos.x, x = M.x + W;
          se.x = M.x + ($.width - bp), x >= 0 ? (V.width = $.width - W, ne.x = x) : (ne.x = 0, V.width = $.width + M.x);
        } else if (Y.includes("e")) {
          const W = v - u.current.startPos.x;
          V.width = $.width + W;
        }
        if (Y.includes("n")) {
          const W = B - u.current.startPos.y, x = M.y + W;
          se.y = M.y + ($.height - Ep), x >= 0 ? (V.height = $.height - W, ne.y = x) : (ne.y = 0, V.height = $.height + M.y);
        } else if (Y.includes("s")) {
          const W = B - u.current.startPos.y;
          V.height = $.height + W;
        }
        V.width = Math.max(bp, V.width), V.height = Math.max(Ep, V.height), V.width === bp && Y.includes("w") && (ne.x = se.x), V.height === Ep && Y.includes("n") && (ne.y = se.y), V.width = Math.min(
          V.width,
          O.width - ne.x
        ), V.height = Math.min(
          V.height,
          O.height - FS - ne.y
        );
        const de = ne.x, be = ne.y, Ne = V.width, ve = V.height, J = Ne / 100, oe = ve / 100;
        ne.x = de / J, ne.y = be / oe;
        const I = O.width, H = O.height;
        V.width = Ne / I * 100, V.height = ve / H * 100, o.current.style.width = `${V.width}%`, o.current.style.height = `${V.height}%`, o.current.style.transform = `translate(${ne.x}%, ${ne.y}%)`;
      }
    }, w = () => {
      o.current && (s.current.isDragging ? b(e, c.current.position) : u.current.isResizing && g(e, {
        position: c.current.position,
        size: c.current.size
      }), s.current.isDragging = !1, u.current.isResizing = !1);
    };
    return (s.current.isDragging || u.current.isResizing) && (document.addEventListener("mousemove", C), document.addEventListener("mouseup", w), document.addEventListener("mouseleave", w)), () => {
      document.removeEventListener("mousemove", C), document.removeEventListener("mouseup", w), document.removeEventListener("mouseleave", w);
    };
  }, [e, p, b, g]), !p || !p.isOpen ? null : /* @__PURE__ */ L.jsxs(
    r4,
    {
      ref: o,
      $isMinimized: p.isMinimized,
      $isMaximized: p.isMaximized,
      $isBehind: p.id !== f,
      style: {
        // 초기 렌더링 시에도 부모 기준 좌표가 아니라, 상태로 저장된 값을 사용
        transform: `translate(${p.position.x}%, ${p.position.y}%)`,
        width: `${p.size.width}%`,
        height: `${p.size.height}%`,
        zIndex: p.zIndex
      },
      onClick: () => T(e),
      children: [
        /* @__PURE__ */ L.jsxs(
          a4,
          {
            onDoubleClick: () => {
              _(e);
            },
            $draggable: p.isMaximized ? !1 : p.draggable ?? !0,
            ...p.draggable ? { onMouseDown: A } : {},
            children: [
              p.resizable ? /* @__PURE__ */ L.jsx(
                gr,
                {
                  $css: Re`
              padding: 6px;
              border-radius: 4px;
            `,
                  onClick: () => _(e),
                  children: p.isMaximized ? /* @__PURE__ */ L.jsxs(L.Fragment, { children: [
                    /* @__PURE__ */ L.jsx(La, { children: "축소" }),
                    /* @__PURE__ */ L.jsx(R3, {})
                  ] }) : /* @__PURE__ */ L.jsxs(L.Fragment, { children: [
                    /* @__PURE__ */ L.jsx(La, { children: "확장" }),
                    /* @__PURE__ */ L.jsx(x3, {})
                  ] })
                }
              ) : /* @__PURE__ */ L.jsx("div", {}),
              /* @__PURE__ */ L.jsx(i4, { children: /* @__PURE__ */ L.jsx(
                gr,
                {
                  $css: Re`
              padding: 0px;
              border-radius: 4px;
            `,
                  onClick: () => y(e),
                  children: /* @__PURE__ */ L.jsx(
                    "svg",
                    {
                      width: "20",
                      height: "20",
                      viewBox: "0 0 20 20",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg",
                      children: /* @__PURE__ */ L.jsx(
                        "path",
                        {
                          d: "M17.9999 17.9999L10 10M10 10L2 2M10 10L18 2M10 10L2 18",
                          stroke: "#4D5053",
                          strokeWidth: "1.5",
                          strokeLinecap: "round",
                          strokeLinejoin: "round"
                        }
                      )
                    }
                  )
                }
              ) })
            ]
          }
        ),
        /* @__PURE__ */ L.jsx(o4, { children: typeof n == "function" ? n(p) : n }),
        p.resizable && !p.isMaximized && /* @__PURE__ */ L.jsxs(L.Fragment, { children: [
          /* @__PURE__ */ L.jsxs(s4, { children: [
            /* @__PURE__ */ L.jsx(g4, { onMouseDown: (C) => R(C, "nw") }),
            /* @__PURE__ */ L.jsx(d4, { onMouseDown: (C) => R(C, "n") }),
            /* @__PURE__ */ L.jsx(m4, { onMouseDown: (C) => R(C, "ne") })
          ] }),
          /* @__PURE__ */ L.jsx(u4, { children: /* @__PURE__ */ L.jsx(f4, { onMouseDown: (C) => R(C, "e") }) }),
          /* @__PURE__ */ L.jsx(c4, { children: /* @__PURE__ */ L.jsx(h4, { onMouseDown: (C) => R(C, "w") }) }),
          /* @__PURE__ */ L.jsxs(l4, { children: [
            /* @__PURE__ */ L.jsx(b4, { onMouseDown: (C) => R(C, "sw") }),
            /* @__PURE__ */ L.jsx(p4, { onMouseDown: (C) => R(C, "s") }),
            /* @__PURE__ */ L.jsx(E4, { onMouseDown: (C) => R(C, "se") })
          ] })
        ] })
      ]
    }
  );
}
const T4 = Se.div`
  position: fixed;
  bottom: 32px;
  right: 32px;
  display: flex;
  flex-direction: column;
  gap: ${ie(16)};
  & img,
  & svg {
    width: 100%;
    height: 100%;
    max-width: 100%;
    max-height: 100%;
  }
`, S4 = Se.button`
  width: ${ie(48)};
  height: ${ie(48)};
  display: flex;
  align-items: center;
  justify-content: center;
  transition: filter 0.35s ease-in-out;
  cursor: pointer;
  filter: drop-shadow(0px 4px 6px rgba(51, 51, 51, 0.03))
    drop-shadow(0px 12px 16px rgba(51, 51, 51, 0.08));
  &:hover * {
    filter: drop-shadow(0px 4px 6px rgba(51, 51, 51, 0.13))
      drop-shadow(0px 12px 16px rgba(51, 51, 51, 0.18));
  }
`, _4 = {
  StatusBar: T4,
  TabIcon: S4
}, { StatusBar: v4, TabIcon: A4 } = _4, BS = Re`
  top: 50%;
  left: 0;
  bottom: auto;
  transform: translate(calc(-100% - 10px), -50%);
  line-height: 15px;
`;
function k4() {
  const e = Ku((c) => c.config), { dialogs: t, activeDialogId: n, updateDialog: r, setActiveDialog: o } = Xr(), s = G.useMemo(() => Array.from(t.values()).sort(
    (c, p) => c.createdAt - p.createdAt
  ), [t]), u = G.useCallback(
    (c) => {
      r(c, { isMinimized: !1 }), o(c);
    },
    [r, o]
  );
  return s.length === 0 ? null : /* @__PURE__ */ L.jsx(v4, { children: s.map((c) => {
    var p, f;
    return /* @__PURE__ */ L.jsx(
      A4,
      {
        $active: c.id === n,
        onClick: () => u(c.id),
        children: c.id === "chatbot-window-1" ? /* @__PURE__ */ L.jsxs(L.Fragment, { children: [
          /* @__PURE__ */ L.jsx(La, { $css: BS, children: "챗봇" }),
          (p = e.icons) != null && p.chatbot ? /* @__PURE__ */ L.jsx("img", { src: e.icons.chatbot, alt: "logo" }) : /* @__PURE__ */ L.jsx(VR, {})
        ] }) : /* @__PURE__ */ L.jsxs(L.Fragment, { children: [
          /* @__PURE__ */ L.jsx(La, { $css: BS, children: "채팅" }),
          (f = e.icons) != null && f.avatar ? /* @__PURE__ */ L.jsx("img", { src: e.icons.avatar, alt: "logo" }) : /* @__PURE__ */ L.jsx(L3, {})
        ] })
      },
      c.id
    );
  }) });
}
const C4 = {
  width: 100,
  height: 100
}, w4 = {
  x: 0,
  y: 0
}, Xr = yE((e, t) => ({
  dialogs: /* @__PURE__ */ new Map(),
  activeDialogId: null,
  maxZIndex: 0,
  addDialog: (n) => {
    const r = t();
    if (r.dialogs.has(n.id)) {
      if (r.activeDialogId === n.id) return;
      e((s) => {
        const u = new Map(s.dialogs);
        return u.set(n.id, {
          ...u.get(n.id),
          isMinimized: !1,
          zIndex: s.maxZIndex + 1
        }), {
          activeDialogId: n.id,
          dialogs: u,
          maxZIndex: s.maxZIndex + 1
        };
      }), r.reorderZIndices();
      return;
    }
    const o = {
      id: n.id,
      title: n.title,
      isOpen: n.isOpen ?? !0,
      isMinimized: n.isMinimized ?? !1,
      isMaximized: n.isMaximized ?? !1,
      position: n.position ?? w4,
      size: n.size ?? C4,
      zIndex: r.maxZIndex + 1,
      createdAt: Date.now(),
      data: n.data,
      draggable: n.draggable ?? !0,
      resizable: n.resizable ?? !0
    };
    e((s) => {
      const u = new Map(s.dialogs);
      return u.set(n.id, o), {
        dialogs: u,
        maxZIndex: s.maxZIndex + 1,
        activeDialogId: n.id
      };
    }), r.reorderZIndices();
  },
  getDialog: (n) => {
    const r = t().dialogs.get(n);
    return r || null;
  },
  removeDialog: (n) => {
    const { reorderZIndices: r, getHighestZIndexDialog: o } = t();
    e((s) => {
      var p;
      const u = new Map(s.dialogs);
      u.delete(n);
      const c = n === s.activeDialogId ? ((p = o(Array.from(u.values()))) == null ? void 0 : p.id) ?? null : s.activeDialogId;
      return {
        dialogs: u,
        activeDialogId: c
      };
    }), r();
  },
  clearDialogs: () => {
    e(() => ({
      dialogs: /* @__PURE__ */ new Map(),
      activeDialogId: null,
      maxZIndex: 0
    }));
  },
  updateDialog: (n, r) => e((o) => {
    const s = new Map(o.dialogs), u = s.get(n);
    return u && s.set(n, { ...u, ...r }), { dialogs: s };
  }),
  setActiveDialog: (n) => {
    const { reorderZIndices: r } = t();
    e((o) => {
      const s = new Map(o.dialogs), u = s.get(n);
      return u && s.set(n, { ...u, zIndex: o.maxZIndex + 1 }), {
        activeDialogId: n,
        dialogs: s,
        maxZIndex: o.maxZIndex + 1
      };
    }), r();
  },
  minimizeDialog: (n) => e((r) => {
    const o = new Map(r.dialogs), s = o.get(n);
    return s && o.set(n, { ...s, isMinimized: !0 }), {
      dialogs: o,
      activeDialogId: null
    };
  }),
  maximizeDialog: (n) => e((r) => {
    const o = new Map(r.dialogs), s = o.get(n);
    return s && o.set(n, {
      ...s,
      isMaximized: !s.isMaximized
    }), {
      dialogs: o
    };
  }),
  updatePosition: (n, r) => e((o) => {
    const s = new Map(o.dialogs), u = s.get(n);
    return u && s.set(n, { ...u, position: r }), {
      dialogs: s
    };
  }),
  reorderZIndices: () => {
    const { dialogs: n } = t(), r = Array.from(n.values());
    r.sort((s, u) => s.zIndex - u.zIndex);
    const o = r.reduce(
      (s, u, c) => {
        const p = new Map(s.dialogs);
        return p.set(u.id, { ...u, zIndex: c + 1 }), {
          dialogs: p,
          maxZIndex: c + 1
        };
      },
      { dialogs: /* @__PURE__ */ new Map(), maxZIndex: 0 }
    );
    e(o);
  },
  getHighestZIndexDialog: (n) => {
    const { dialogs: r } = t();
    return (n ?? Array.from(r.values())).sort((u, c) => c.zIndex - u.zIndex)[0];
  }
})), I4 = async (e) => {
  const t = yo(), r = await (await fetch(`${Eo}/spaces/${e}`, {
    headers: {
      Authorization: `Bearer ${t}`,
      "Content-Type": "application/json"
    }
  })).json();
  if (!r.success)
    throw new Error("Failed to get space info");
  return r.data;
}, R4 = async (e, t) => {
  const n = yo(), o = await (await fetch(`${Eo}/groups/bulk`, {
    method: "POST",
    body: JSON.stringify({ spaceId: e, group: t }),
    headers: {
      Authorization: `Bearer ${n}`,
      "Content-Type": "application/json"
    }
  })).json();
  if (!o.success)
    throw new Error("Failed to post group");
  return o.data;
}, US = (e, t) => {
  const r = e / (t === "width" ? window.innerWidth : window.innerHeight) * 100;
  return r > 100 ? 100 : r;
}, HS = (e, t, n, r) => {
  const o = wu(), s = o.width, u = o.height;
  let c = s - e - n, p = u - t - r;
  c < 0 && (c = 0), p < 0 && (p = 0);
  const f = c / e * 100, b = p / t * 100;
  return {
    xTranslatePercent: f,
    yTranslatePercent: b
  };
}, x4 = {
  width: US(579, "width"),
  height: US(648, "height")
}, N4 = {
  x: HS(579, 648, 32, 92).xTranslatePercent,
  y: HS(579, 648, 32, 92).yTranslatePercent
}, O4 = () => {
  const e = G.useRef(!1), { addDialog: t, clearDialogs: n, removeDialog: r } = Xr();
  G.useEffect(() => {
    const o = Os.getInstance();
    async function s() {
      const c = await E3();
      t({
        id: "chatbot-window-1",
        title: "Chatbot",
        data: {
          botId: (c == null ? void 0 : c.id) ?? ""
        },
        isMinimized: !0,
        size: x4,
        position: N4
      });
    }
    async function u(c) {
      try {
        const p = await bE();
        if (!p) return;
        const f = p.spaceId, b = await R4(f, c.chat), g = b[c.chat.length - 1], T = b.map((w) => w.name).join(" / "), y = {
          ref_id: g.id,
          name: T
        }, _ = {
          ref_id: g.refId,
          chat_id: "",
          name: g.name
        }, A = await Qn("post:/api-ai/chat/refs/details")({
          body: { ...y }
        });
        if (A.success)
          _.chat_id = A.data.id;
        else {
          const w = await Qn("post:/api-ai/chat")({
            body: { ...y }
          });
          w.success && (_.chat_id = w.data.id);
        }
        const { historyLimit: R, model: C } = await I4(f);
        t({
          id: "chat-window-1",
          title: "Chat",
          data: {
            chatId: _.chat_id,
            refId: _.ref_id,
            name: _.name,
            historyLimit: R,
            model: C
          },
          ...c.config ? { ...c.config } : {}
        });
      } catch (p) {
        console.error(p);
      }
    }
    return o.subscribe("user.chat-open", (c) => {
      r("chat-window-1"), u(c);
    }), o.subscribe("user.chat-close", () => {
      r("chat-window-1");
    }), o.subscribe("user.module-toggle", (c) => {
      c.type === "open" ? s() : n();
    }), e.current || (s(), e.current = !0), () => {
      Os.getInstance().unsubscribeAll();
    };
  }, [t, n, r]);
}, L4 = b3`
:host {
  font-family: 'Pretendard Variable', sans-serif;
  *:has(> .tooltip) {
    position: relative;
  }
  *:has(> .tooltip):hover .tooltip {
    display: block;
  }
   *,
   ::before,
   ::after {
    box-sizing: border-box;
    font-family: 'Pretendard Variable', sans-serif;
    --background: #1e1e1e;
    --foreground: #d4d4d4;
    --dialog-background: #1e1e1e;
    --dialog-foreground: #d4d4d4;
    --tab-foreground: #d4d4d4;
    --tab-background: #1e1e1e;
    --tab-selected-foreground: #d4d4d4;
    --tab-selected-background: #1e1e1e;
    --menu-foreground: #d4d4d4;
    --menu-background: #1e1e1e;
    --menu-separator: #1e1e1e;
    --accent-1: #0070f3;
    --accent-2: #28a745;
    --accent-3: #f0ad4e;
    --accent-4: #dc3545;

  }
}

textarea {
    &:focus,
    &:focus-visible,
    &:focus-within {
      outline: none;
    }
  }

   a {
    &:hover {}
    &:focus { outline: none; }
    &:active {}
  }

   button {
    background-color: transparent;
    border: none;
    border-radius: 0;
    padding: initial;

    &:hover {}
    &:focus { outline: none; }
    &:active {}
    &:focus:active { outline: none; }
  }
`;
function Iu(e) {
  var t = new Error(e);
  return t.source = "ulid", t;
}
var OE = "0123456789ABCDEFGHJKMNPQRSTVWXYZ", vs = OE.length, $S = Math.pow(2, 48) - 1, D4 = 10, M4 = 16;
function P4(e) {
  var t = Math.floor(e() * vs);
  return t === vs && (t = vs - 1), OE.charAt(t);
}
function F4(e, t) {
  if (isNaN(e))
    throw new Error(e + " must be a number");
  if (e > $S)
    throw Iu("cannot encode time greater than " + $S);
  if (e < 0)
    throw Iu("time must be positive");
  if (Number.isInteger(e) === !1)
    throw Iu("time must be an integer");
  for (var n = void 0, r = ""; t > 0; t--)
    n = e % vs, r = OE.charAt(n) + r, e = (e - n) / vs;
  return r;
}
function B4(e, t) {
  for (var n = ""; e > 0; e--)
    n = P4(t) + n;
  return n;
}
function U4() {
  var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1, t = arguments[1];
  t || (t = typeof window < "u" ? window : null);
  var n = t && (t.crypto || t.msCrypto);
  if (n)
    return function() {
      var o = new Uint8Array(1);
      return n.getRandomValues(o), o[0] / 255;
    };
  try {
    var r = require("crypto");
    return function() {
      return r.randomBytes(1).readUInt8() / 255;
    };
  } catch {
  }
  if (e) {
    try {
      console.error("secure crypto unusable, falling back to insecure Math.random()!");
    } catch {
    }
    return function() {
      return Math.random();
    };
  }
  throw Iu("secure crypto unusable, insecure Math.random not allowed");
}
function H4(e) {
  return e || (e = U4()), function(n) {
    return isNaN(n) && (n = Date.now()), F4(n, D4) + B4(M4, e);
  };
}
var As = H4();
const Rt = Se.div`
  ${({ $css: e }) => e ?? ""}
`, $4 = (e) => /* @__PURE__ */ G.createElement("svg", { width: 16, height: 16, viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("path", { d: "M14 6L8.64018 10.4665C8.26934 10.7756 7.73066 10.7756 7.35982 10.4665L2 6", stroke: "#4D5053", strokeWidth: 1.5, strokeLinecap: "round", strokeLinejoin: "round" })), z4 = (e) => /* @__PURE__ */ G.createElement("svg", { width: 16, height: 16, viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("path", { d: "M2 10L7.35982 5.53349C7.73066 5.22445 8.26934 5.22445 8.64018 5.53349L14 10", stroke: "#4D5053", strokeWidth: 1.5, strokeLinecap: "round", strokeLinejoin: "round" })), YR = Re`
  width: 100%;
  box-sizing: border-box;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: ${ie(8)};
  ${$t("Grayscale/Gray 500", "Body/14px/14px.400")}
  ${St("Grayscale/White")}
  &:hover {
    ${St("Grayscale/Gray 50")}
  }
  &.selected {
    ${Kr("Primary/Primary 500")}
  }
`, Wb = G.forwardRef(
  ({
    name: e,
    $value: t,
    $list: n,
    $ListItem: r,
    $css: o,
    $labelCss: s,
    $listCss: u,
    $placeholder: c = "Select",
    $directionY: p = "bottom",
    $size: f = "medium",
    $onChange: b,
    $Label: g,
    ...T
  }, y) => {
    const _ = G.useRef(null), [A, R] = G.useState(!1), C = () => {
      R((O) => !O);
    }, w = () => {
      R(!1);
    }, k = (O) => {
      _.current && !_.current.contains(O.target) && (document.removeEventListener("click", k), R(!1));
    };
    return /* @__PURE__ */ L.jsxs(G4, { ref: _, $css: o, children: [
      /* @__PURE__ */ L.jsx(
        "input",
        {
          type: "hidden",
          name: e ?? "dropdown",
          value: (t == null ? void 0 : t.value) ?? ""
        }
      ),
      g && /* @__PURE__ */ L.jsx(g, { $value: t, toggleDropdown: C }),
      !g && /* @__PURE__ */ L.jsxs(
        j4,
        {
          type: "button",
          ref: y,
          $css: s,
          onClick: C,
          $size: f,
          $placeholder: !t,
          ...T,
          children: [
            /* @__PURE__ */ L.jsx("span", { children: (t == null ? void 0 : t.label) ?? c }),
            /* @__PURE__ */ L.jsx("span", { style: { fontSize: "16px", width: "16px", height: "16px" }, children: A ? /* @__PURE__ */ L.jsx(z4, {}) : /* @__PURE__ */ L.jsx($4, {}) })
          ]
        }
      ),
      /* @__PURE__ */ L.jsx(
        q4,
        {
          $isOpen: A,
          $directionY: p,
          $css: u,
          onTransitionEnd: (O) => {
            O.propertyName === "opacity" && A && document.addEventListener("click", k);
          },
          children: n.map((O) => /* @__PURE__ */ L.jsx(ot.Fragment, { children: r ? /* @__PURE__ */ L.jsx(
            r,
            {
              item: O,
              onClose: w,
              $style: YR
            }
          ) : /* @__PURE__ */ L.jsx(
            KR,
            {
              type: "button",
              $selected: (t == null ? void 0 : t.value) === O.value,
              onClick: () => {
                b == null || b(O), w();
              },
              children: O.label
            }
          ) }, O.value))
        }
      )
    ] });
  }
);
Wb.displayName = "Dropdown";
const KR = Se.button`
  ${YR}
  ${({ $selected: e }) => e ? Re`
          ${Kr("Primary/Primary 500")}
        ` : ""}
  ${({ $size: e }) => e === "medium" ? Re`
          padding: ${ie(10)} ${ie(16)};
        ` : e === "large" ? Re`
          padding: ${ie(14)} ${ie(16)};
        ` : ""}
    ${({ theme: e }) => `
      border-bottom: 1px solid ${e.colors["Grayscale/Gray 100"]};
    `}
  &:last-of-type {
    border-bottom: none;
  }
  ${({ $css: e }) => e ?? ""}
`;
KR.defaultProps = {
  $size: "medium"
};
const G4 = Se.div`
  position: relative;
  width: 100%;
  pointer-events: none;
  ${({ $css: e }) => e ?? ""}
  & button {
    pointer-events: auto;
  }
`, q4 = Se.div`
  pointer-events: auto;
  position: absolute;
  bottom: ${({ $directionY: e }) => e === "top" ? "100%" : "auto"};
  top: ${({ $directionY: e }) => e === "bottom" ? "100%" : "auto"};
  left: 0;
  visibility: hidden;
  overflow-y: auto;
  max-height: 200px;
  opacity: 0;
  transform: translateY(0.5rem);
  will-change: transform, opacity;
  backface-visibility: hidden;
  transition: all 0.3s cubic-bezier(0.16, 1, 0.5, 1);
  ${Nn(1, "Grayscale/Gray 100", 8)}

  box-shadow: 0px 6px 8px -2px rgba(51, 51, 51, 0.10), 0px 2px 4px -2px rgba(51, 51, 51, 0.06);
  ${$t("Grayscale/Black", "Body/14px/14px.400")}
  &:focus {
    outline: none;
    ${Nn(1, "Primary/Primary 500", 8)}
  }
  ${({ $isOpen: e, $directionY: t }) => e ? Re`
          visibility: visible;
          opacity: 1;
          transform: ${t === "top" ? "translateY(-0.5rem)" : "translateY(0.5rem)"};
        ` : Re`
          transform: ${t === "top" ? "translateY(-0)" : "translateY(0)"};
        `}
  width: max-content;
  &::-webkit-scrollbar {
    width: 6px;
  }

  &::-webkit-scrollbar-track {
    background: color-mix(
      in srgb,
      ${En("Grayscale/Gray 50")} 90%,
      transparent
    );
  }

  &::-webkit-scrollbar-thumb {
    background: color-mix(
      in srgb,
      ${En("Grayscale/Gray 200")} 50%,
      transparent
    );
    cursor: pointer;
    transition: all 0.2s ease-in-out;
  }

  &::-webkit-scrollbar-thumb:hover {
    background: color-mix(
      in srgb,
      ${En("Grayscale/Gray 200")} 90%,
      transparent
    );
  }

  &::-webkit-scrollbar-corner {
    background: transparent;
  }
  ${({ $css: e }) => e ?? ""}
`, j4 = Se.button`
  pointer-events: auto;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: ${ie(8)};
  cursor: pointer;
  ${Nn(1, "Grayscale/Gray 100", 8)}
  ${St("Grayscale/White")}
  ${$t("Grayscale/Black", "Body/14px/14px.400")}
  ${({ $placeholder: e }) => e ? Re`
          ${Kr("Grayscale/Gray 300")}
        ` : ""}
  ${({ $size: e }) => e === "medium" ? Re`
          padding: ${ie(10)} ${ie(16)};
        ` : e === "large" ? Re`
          padding: ${ie(14)} ${ie(16)};
        ` : ""}
  &:disabled {
    cursor: not-allowed;
    ${St("Grayscale/Gray 50")}
    ${$t("Grayscale/Gray 300", "Body/14px/14px.400")}
  }

  &:focus {
    outline: none;
    ${Kr("Primary/Primary 500")}
    ${Nn(1, "Primary/Primary 500", 8)}
  }
  ${({ $css: e }) => e ?? ""}
`, V4 = nc`
  0% {
    ${St("Primary/Primary 100")};
  }
  50% {
    ${St("Primary/Primary 200")};
  }
  100% {
    ${St("Primary/Primary 500")};
  }
`, W4 = Se.div`
  display: flex;
  gap: ${ie(6)};
  align-items: center;
  justify-content: center;
`, yp = Se.div`
  width: ${ie(8)};
  height: ${ie(8)};
  ${St("Primary/Primary 50")};
  border-radius: 50%;
  animation: ${V4} 0.9s infinite;
  animation-delay: ${({ $delay: e }) => e}s;
`;
function XR() {
  return /* @__PURE__ */ L.jsxs(W4, { children: [
    /* @__PURE__ */ L.jsx(yp, { $delay: 0 }),
    /* @__PURE__ */ L.jsx(yp, { $delay: 0.3 }),
    /* @__PURE__ */ L.jsx(yp, { $delay: 0.6 })
  ] });
}
function zS(e) {
  const t = [], n = String(e || "");
  let r = n.indexOf(","), o = 0, s = !1;
  for (; !s; ) {
    r === -1 && (r = n.length, s = !0);
    const u = n.slice(o, r).trim();
    (u || !s) && t.push(u), o = r + 1, r = n.indexOf(",", o);
  }
  return t;
}
function QR(e, t) {
  const n = {};
  return (e[e.length - 1] === "" ? [...e, ""] : e).join(
    (n.padRight ? " " : "") + "," + (n.padLeft === !1 ? "" : " ")
  ).trim();
}
const Y4 = /^[$_\p{ID_Start}][$_\u{200C}\u{200D}\p{ID_Continue}]*$/u, K4 = /^[$_\p{ID_Start}][-$_\u{200C}\u{200D}\p{ID_Continue}]*$/u, X4 = {};
function GS(e, t) {
  return (X4.jsx ? K4 : Y4).test(e);
}
const Q4 = /[ \t\n\f\r]/g;
function Z4(e) {
  return typeof e == "object" ? e.type === "text" ? qS(e.value) : !1 : qS(e);
}
function qS(e) {
  return e.replace(Q4, "") === "";
}
let Ws = class {
  /**
   * @constructor
   * @param {Properties} property
   * @param {Normal} normal
   * @param {string} [space]
   */
  constructor(t, n, r) {
    this.property = t, this.normal = n, r && (this.space = r);
  }
};
Ws.prototype.property = {};
Ws.prototype.normal = {};
Ws.prototype.space = null;
function ZR(e, t) {
  const n = {}, r = {};
  let o = -1;
  for (; ++o < e.length; )
    Object.assign(n, e[o].property), Object.assign(r, e[o].normal);
  return new Ws(n, r, t);
}
function Yb(e) {
  return e.toLowerCase();
}
let tr = class {
  /**
   * @constructor
   * @param {string} property
   * @param {string} attribute
   */
  constructor(t, n) {
    this.property = t, this.attribute = n;
  }
};
tr.prototype.space = null;
tr.prototype.boolean = !1;
tr.prototype.booleanish = !1;
tr.prototype.overloadedBoolean = !1;
tr.prototype.number = !1;
tr.prototype.commaSeparated = !1;
tr.prototype.spaceSeparated = !1;
tr.prototype.commaOrSpaceSeparated = !1;
tr.prototype.mustUseProperty = !1;
tr.prototype.defined = !1;
let J4 = 0;
const qe = fi(), Dt = fi(), JR = fi(), he = fi(), ut = fi(), Yi = fi(), Bn = fi();
function fi() {
  return 2 ** ++J4;
}
const Kb = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  boolean: qe,
  booleanish: Dt,
  commaOrSpaceSeparated: Bn,
  commaSeparated: Yi,
  number: he,
  overloadedBoolean: JR,
  spaceSeparated: ut
}, Symbol.toStringTag, { value: "Module" })), Tp = Object.keys(Kb);
let LE = class extends tr {
  /**
   * @constructor
   * @param {string} property
   * @param {string} attribute
   * @param {number|null} [mask]
   * @param {string} [space]
   */
  constructor(t, n, r, o) {
    let s = -1;
    if (super(t, n), jS(this, "space", o), typeof r == "number")
      for (; ++s < Tp.length; ) {
        const u = Tp[s];
        jS(this, Tp[s], (r & Kb[u]) === Kb[u]);
      }
  }
};
LE.prototype.defined = !0;
function jS(e, t, n) {
  n && (e[t] = n);
}
const eM = {}.hasOwnProperty;
function _o(e) {
  const t = {}, n = {};
  let r;
  for (r in e.properties)
    if (eM.call(e.properties, r)) {
      const o = e.properties[r], s = new LE(
        r,
        e.transform(e.attributes || {}, r),
        o,
        e.space
      );
      e.mustUseProperty && e.mustUseProperty.includes(r) && (s.mustUseProperty = !0), t[r] = s, n[Yb(r)] = r, n[Yb(s.attribute)] = r;
    }
  return new Ws(t, n, e.space);
}
const ex = _o({
  space: "xlink",
  transform(e, t) {
    return "xlink:" + t.slice(5).toLowerCase();
  },
  properties: {
    xLinkActuate: null,
    xLinkArcRole: null,
    xLinkHref: null,
    xLinkRole: null,
    xLinkShow: null,
    xLinkTitle: null,
    xLinkType: null
  }
}), tx = _o({
  space: "xml",
  transform(e, t) {
    return "xml:" + t.slice(3).toLowerCase();
  },
  properties: { xmlLang: null, xmlBase: null, xmlSpace: null }
});
function nx(e, t) {
  return t in e ? e[t] : t;
}
function rx(e, t) {
  return nx(e, t.toLowerCase());
}
const ax = _o({
  space: "xmlns",
  attributes: { xmlnsxlink: "xmlns:xlink" },
  transform: rx,
  properties: { xmlns: null, xmlnsXLink: null }
}), ix = _o({
  transform(e, t) {
    return t === "role" ? t : "aria-" + t.slice(4).toLowerCase();
  },
  properties: {
    ariaActiveDescendant: null,
    ariaAtomic: Dt,
    ariaAutoComplete: null,
    ariaBusy: Dt,
    ariaChecked: Dt,
    ariaColCount: he,
    ariaColIndex: he,
    ariaColSpan: he,
    ariaControls: ut,
    ariaCurrent: null,
    ariaDescribedBy: ut,
    ariaDetails: null,
    ariaDisabled: Dt,
    ariaDropEffect: ut,
    ariaErrorMessage: null,
    ariaExpanded: Dt,
    ariaFlowTo: ut,
    ariaGrabbed: Dt,
    ariaHasPopup: null,
    ariaHidden: Dt,
    ariaInvalid: null,
    ariaKeyShortcuts: null,
    ariaLabel: null,
    ariaLabelledBy: ut,
    ariaLevel: he,
    ariaLive: null,
    ariaModal: Dt,
    ariaMultiLine: Dt,
    ariaMultiSelectable: Dt,
    ariaOrientation: null,
    ariaOwns: ut,
    ariaPlaceholder: null,
    ariaPosInSet: he,
    ariaPressed: Dt,
    ariaReadOnly: Dt,
    ariaRelevant: null,
    ariaRequired: Dt,
    ariaRoleDescription: ut,
    ariaRowCount: he,
    ariaRowIndex: he,
    ariaRowSpan: he,
    ariaSelected: Dt,
    ariaSetSize: he,
    ariaSort: null,
    ariaValueMax: he,
    ariaValueMin: he,
    ariaValueNow: he,
    ariaValueText: null,
    role: null
  }
}), tM = _o({
  space: "html",
  attributes: {
    acceptcharset: "accept-charset",
    classname: "class",
    htmlfor: "for",
    httpequiv: "http-equiv"
  },
  transform: rx,
  mustUseProperty: ["checked", "multiple", "muted", "selected"],
  properties: {
    // Standard Properties.
    abbr: null,
    accept: Yi,
    acceptCharset: ut,
    accessKey: ut,
    action: null,
    allow: null,
    allowFullScreen: qe,
    allowPaymentRequest: qe,
    allowUserMedia: qe,
    alt: null,
    as: null,
    async: qe,
    autoCapitalize: null,
    autoComplete: ut,
    autoFocus: qe,
    autoPlay: qe,
    blocking: ut,
    capture: null,
    charSet: null,
    checked: qe,
    cite: null,
    className: ut,
    cols: he,
    colSpan: null,
    content: null,
    contentEditable: Dt,
    controls: qe,
    controlsList: ut,
    coords: he | Yi,
    crossOrigin: null,
    data: null,
    dateTime: null,
    decoding: null,
    default: qe,
    defer: qe,
    dir: null,
    dirName: null,
    disabled: qe,
    download: JR,
    draggable: Dt,
    encType: null,
    enterKeyHint: null,
    fetchPriority: null,
    form: null,
    formAction: null,
    formEncType: null,
    formMethod: null,
    formNoValidate: qe,
    formTarget: null,
    headers: ut,
    height: he,
    hidden: qe,
    high: he,
    href: null,
    hrefLang: null,
    htmlFor: ut,
    httpEquiv: ut,
    id: null,
    imageSizes: null,
    imageSrcSet: null,
    inert: qe,
    inputMode: null,
    integrity: null,
    is: null,
    isMap: qe,
    itemId: null,
    itemProp: ut,
    itemRef: ut,
    itemScope: qe,
    itemType: ut,
    kind: null,
    label: null,
    lang: null,
    language: null,
    list: null,
    loading: null,
    loop: qe,
    low: he,
    manifest: null,
    max: null,
    maxLength: he,
    media: null,
    method: null,
    min: null,
    minLength: he,
    multiple: qe,
    muted: qe,
    name: null,
    nonce: null,
    noModule: qe,
    noValidate: qe,
    onAbort: null,
    onAfterPrint: null,
    onAuxClick: null,
    onBeforeMatch: null,
    onBeforePrint: null,
    onBeforeToggle: null,
    onBeforeUnload: null,
    onBlur: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onContextLost: null,
    onContextMenu: null,
    onContextRestored: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFormData: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLanguageChange: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadEnd: null,
    onLoadStart: null,
    onMessage: null,
    onMessageError: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRejectionHandled: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onScrollEnd: null,
    onSecurityPolicyViolation: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onSlotChange: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnhandledRejection: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onWheel: null,
    open: qe,
    optimum: he,
    pattern: null,
    ping: ut,
    placeholder: null,
    playsInline: qe,
    popover: null,
    popoverTarget: null,
    popoverTargetAction: null,
    poster: null,
    preload: null,
    readOnly: qe,
    referrerPolicy: null,
    rel: ut,
    required: qe,
    reversed: qe,
    rows: he,
    rowSpan: he,
    sandbox: ut,
    scope: null,
    scoped: qe,
    seamless: qe,
    selected: qe,
    shadowRootClonable: qe,
    shadowRootDelegatesFocus: qe,
    shadowRootMode: null,
    shape: null,
    size: he,
    sizes: null,
    slot: null,
    span: he,
    spellCheck: Dt,
    src: null,
    srcDoc: null,
    srcLang: null,
    srcSet: null,
    start: he,
    step: null,
    style: null,
    tabIndex: he,
    target: null,
    title: null,
    translate: null,
    type: null,
    typeMustMatch: qe,
    useMap: null,
    value: Dt,
    width: he,
    wrap: null,
    writingSuggestions: null,
    // Legacy.
    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis
    align: null,
    // Several. Use CSS `text-align` instead,
    aLink: null,
    // `<body>`. Use CSS `a:active {color}` instead
    archive: ut,
    // `<object>`. List of URIs to archives
    axis: null,
    // `<td>` and `<th>`. Use `scope` on `<th>`
    background: null,
    // `<body>`. Use CSS `background-image` instead
    bgColor: null,
    // `<body>` and table elements. Use CSS `background-color` instead
    border: he,
    // `<table>`. Use CSS `border-width` instead,
    borderColor: null,
    // `<table>`. Use CSS `border-color` instead,
    bottomMargin: he,
    // `<body>`
    cellPadding: null,
    // `<table>`
    cellSpacing: null,
    // `<table>`
    char: null,
    // Several table elements. When `align=char`, sets the character to align on
    charOff: null,
    // Several table elements. When `char`, offsets the alignment
    classId: null,
    // `<object>`
    clear: null,
    // `<br>`. Use CSS `clear` instead
    code: null,
    // `<object>`
    codeBase: null,
    // `<object>`
    codeType: null,
    // `<object>`
    color: null,
    // `<font>` and `<hr>`. Use CSS instead
    compact: qe,
    // Lists. Use CSS to reduce space between items instead
    declare: qe,
    // `<object>`
    event: null,
    // `<script>`
    face: null,
    // `<font>`. Use CSS instead
    frame: null,
    // `<table>`
    frameBorder: null,
    // `<iframe>`. Use CSS `border` instead
    hSpace: he,
    // `<img>` and `<object>`
    leftMargin: he,
    // `<body>`
    link: null,
    // `<body>`. Use CSS `a:link {color: *}` instead
    longDesc: null,
    // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`
    lowSrc: null,
    // `<img>`. Use a `<picture>`
    marginHeight: he,
    // `<body>`
    marginWidth: he,
    // `<body>`
    noResize: qe,
    // `<frame>`
    noHref: qe,
    // `<area>`. Use no href instead of an explicit `nohref`
    noShade: qe,
    // `<hr>`. Use background-color and height instead of borders
    noWrap: qe,
    // `<td>` and `<th>`
    object: null,
    // `<applet>`
    profile: null,
    // `<head>`
    prompt: null,
    // `<isindex>`
    rev: null,
    // `<link>`
    rightMargin: he,
    // `<body>`
    rules: null,
    // `<table>`
    scheme: null,
    // `<meta>`
    scrolling: Dt,
    // `<frame>`. Use overflow in the child context
    standby: null,
    // `<object>`
    summary: null,
    // `<table>`
    text: null,
    // `<body>`. Use CSS `color` instead
    topMargin: he,
    // `<body>`
    valueType: null,
    // `<param>`
    version: null,
    // `<html>`. Use a doctype.
    vAlign: null,
    // Several. Use CSS `vertical-align` instead
    vLink: null,
    // `<body>`. Use CSS `a:visited {color}` instead
    vSpace: he,
    // `<img>` and `<object>`
    // Non-standard Properties.
    allowTransparency: null,
    autoCorrect: null,
    autoSave: null,
    disablePictureInPicture: qe,
    disableRemotePlayback: qe,
    prefix: null,
    property: null,
    results: he,
    security: null,
    unselectable: null
  }
}), nM = _o({
  space: "svg",
  attributes: {
    accentHeight: "accent-height",
    alignmentBaseline: "alignment-baseline",
    arabicForm: "arabic-form",
    baselineShift: "baseline-shift",
    capHeight: "cap-height",
    className: "class",
    clipPath: "clip-path",
    clipRule: "clip-rule",
    colorInterpolation: "color-interpolation",
    colorInterpolationFilters: "color-interpolation-filters",
    colorProfile: "color-profile",
    colorRendering: "color-rendering",
    crossOrigin: "crossorigin",
    dataType: "datatype",
    dominantBaseline: "dominant-baseline",
    enableBackground: "enable-background",
    fillOpacity: "fill-opacity",
    fillRule: "fill-rule",
    floodColor: "flood-color",
    floodOpacity: "flood-opacity",
    fontFamily: "font-family",
    fontSize: "font-size",
    fontSizeAdjust: "font-size-adjust",
    fontStretch: "font-stretch",
    fontStyle: "font-style",
    fontVariant: "font-variant",
    fontWeight: "font-weight",
    glyphName: "glyph-name",
    glyphOrientationHorizontal: "glyph-orientation-horizontal",
    glyphOrientationVertical: "glyph-orientation-vertical",
    hrefLang: "hreflang",
    horizAdvX: "horiz-adv-x",
    horizOriginX: "horiz-origin-x",
    horizOriginY: "horiz-origin-y",
    imageRendering: "image-rendering",
    letterSpacing: "letter-spacing",
    lightingColor: "lighting-color",
    markerEnd: "marker-end",
    markerMid: "marker-mid",
    markerStart: "marker-start",
    navDown: "nav-down",
    navDownLeft: "nav-down-left",
    navDownRight: "nav-down-right",
    navLeft: "nav-left",
    navNext: "nav-next",
    navPrev: "nav-prev",
    navRight: "nav-right",
    navUp: "nav-up",
    navUpLeft: "nav-up-left",
    navUpRight: "nav-up-right",
    onAbort: "onabort",
    onActivate: "onactivate",
    onAfterPrint: "onafterprint",
    onBeforePrint: "onbeforeprint",
    onBegin: "onbegin",
    onCancel: "oncancel",
    onCanPlay: "oncanplay",
    onCanPlayThrough: "oncanplaythrough",
    onChange: "onchange",
    onClick: "onclick",
    onClose: "onclose",
    onCopy: "oncopy",
    onCueChange: "oncuechange",
    onCut: "oncut",
    onDblClick: "ondblclick",
    onDrag: "ondrag",
    onDragEnd: "ondragend",
    onDragEnter: "ondragenter",
    onDragExit: "ondragexit",
    onDragLeave: "ondragleave",
    onDragOver: "ondragover",
    onDragStart: "ondragstart",
    onDrop: "ondrop",
    onDurationChange: "ondurationchange",
    onEmptied: "onemptied",
    onEnd: "onend",
    onEnded: "onended",
    onError: "onerror",
    onFocus: "onfocus",
    onFocusIn: "onfocusin",
    onFocusOut: "onfocusout",
    onHashChange: "onhashchange",
    onInput: "oninput",
    onInvalid: "oninvalid",
    onKeyDown: "onkeydown",
    onKeyPress: "onkeypress",
    onKeyUp: "onkeyup",
    onLoad: "onload",
    onLoadedData: "onloadeddata",
    onLoadedMetadata: "onloadedmetadata",
    onLoadStart: "onloadstart",
    onMessage: "onmessage",
    onMouseDown: "onmousedown",
    onMouseEnter: "onmouseenter",
    onMouseLeave: "onmouseleave",
    onMouseMove: "onmousemove",
    onMouseOut: "onmouseout",
    onMouseOver: "onmouseover",
    onMouseUp: "onmouseup",
    onMouseWheel: "onmousewheel",
    onOffline: "onoffline",
    onOnline: "ononline",
    onPageHide: "onpagehide",
    onPageShow: "onpageshow",
    onPaste: "onpaste",
    onPause: "onpause",
    onPlay: "onplay",
    onPlaying: "onplaying",
    onPopState: "onpopstate",
    onProgress: "onprogress",
    onRateChange: "onratechange",
    onRepeat: "onrepeat",
    onReset: "onreset",
    onResize: "onresize",
    onScroll: "onscroll",
    onSeeked: "onseeked",
    onSeeking: "onseeking",
    onSelect: "onselect",
    onShow: "onshow",
    onStalled: "onstalled",
    onStorage: "onstorage",
    onSubmit: "onsubmit",
    onSuspend: "onsuspend",
    onTimeUpdate: "ontimeupdate",
    onToggle: "ontoggle",
    onUnload: "onunload",
    onVolumeChange: "onvolumechange",
    onWaiting: "onwaiting",
    onZoom: "onzoom",
    overlinePosition: "overline-position",
    overlineThickness: "overline-thickness",
    paintOrder: "paint-order",
    panose1: "panose-1",
    pointerEvents: "pointer-events",
    referrerPolicy: "referrerpolicy",
    renderingIntent: "rendering-intent",
    shapeRendering: "shape-rendering",
    stopColor: "stop-color",
    stopOpacity: "stop-opacity",
    strikethroughPosition: "strikethrough-position",
    strikethroughThickness: "strikethrough-thickness",
    strokeDashArray: "stroke-dasharray",
    strokeDashOffset: "stroke-dashoffset",
    strokeLineCap: "stroke-linecap",
    strokeLineJoin: "stroke-linejoin",
    strokeMiterLimit: "stroke-miterlimit",
    strokeOpacity: "stroke-opacity",
    strokeWidth: "stroke-width",
    tabIndex: "tabindex",
    textAnchor: "text-anchor",
    textDecoration: "text-decoration",
    textRendering: "text-rendering",
    transformOrigin: "transform-origin",
    typeOf: "typeof",
    underlinePosition: "underline-position",
    underlineThickness: "underline-thickness",
    unicodeBidi: "unicode-bidi",
    unicodeRange: "unicode-range",
    unitsPerEm: "units-per-em",
    vAlphabetic: "v-alphabetic",
    vHanging: "v-hanging",
    vIdeographic: "v-ideographic",
    vMathematical: "v-mathematical",
    vectorEffect: "vector-effect",
    vertAdvY: "vert-adv-y",
    vertOriginX: "vert-origin-x",
    vertOriginY: "vert-origin-y",
    wordSpacing: "word-spacing",
    writingMode: "writing-mode",
    xHeight: "x-height",
    // These were camelcased in Tiny. Now lowercased in SVG 2
    playbackOrder: "playbackorder",
    timelineBegin: "timelinebegin"
  },
  transform: nx,
  properties: {
    about: Bn,
    accentHeight: he,
    accumulate: null,
    additive: null,
    alignmentBaseline: null,
    alphabetic: he,
    amplitude: he,
    arabicForm: null,
    ascent: he,
    attributeName: null,
    attributeType: null,
    azimuth: he,
    bandwidth: null,
    baselineShift: null,
    baseFrequency: null,
    baseProfile: null,
    bbox: null,
    begin: null,
    bias: he,
    by: null,
    calcMode: null,
    capHeight: he,
    className: ut,
    clip: null,
    clipPath: null,
    clipPathUnits: null,
    clipRule: null,
    color: null,
    colorInterpolation: null,
    colorInterpolationFilters: null,
    colorProfile: null,
    colorRendering: null,
    content: null,
    contentScriptType: null,
    contentStyleType: null,
    crossOrigin: null,
    cursor: null,
    cx: null,
    cy: null,
    d: null,
    dataType: null,
    defaultAction: null,
    descent: he,
    diffuseConstant: he,
    direction: null,
    display: null,
    dur: null,
    divisor: he,
    dominantBaseline: null,
    download: qe,
    dx: null,
    dy: null,
    edgeMode: null,
    editable: null,
    elevation: he,
    enableBackground: null,
    end: null,
    event: null,
    exponent: he,
    externalResourcesRequired: null,
    fill: null,
    fillOpacity: he,
    fillRule: null,
    filter: null,
    filterRes: null,
    filterUnits: null,
    floodColor: null,
    floodOpacity: null,
    focusable: null,
    focusHighlight: null,
    fontFamily: null,
    fontSize: null,
    fontSizeAdjust: null,
    fontStretch: null,
    fontStyle: null,
    fontVariant: null,
    fontWeight: null,
    format: null,
    fr: null,
    from: null,
    fx: null,
    fy: null,
    g1: Yi,
    g2: Yi,
    glyphName: Yi,
    glyphOrientationHorizontal: null,
    glyphOrientationVertical: null,
    glyphRef: null,
    gradientTransform: null,
    gradientUnits: null,
    handler: null,
    hanging: he,
    hatchContentUnits: null,
    hatchUnits: null,
    height: null,
    href: null,
    hrefLang: null,
    horizAdvX: he,
    horizOriginX: he,
    horizOriginY: he,
    id: null,
    ideographic: he,
    imageRendering: null,
    initialVisibility: null,
    in: null,
    in2: null,
    intercept: he,
    k: he,
    k1: he,
    k2: he,
    k3: he,
    k4: he,
    kernelMatrix: Bn,
    kernelUnitLength: null,
    keyPoints: null,
    // SEMI_COLON_SEPARATED
    keySplines: null,
    // SEMI_COLON_SEPARATED
    keyTimes: null,
    // SEMI_COLON_SEPARATED
    kerning: null,
    lang: null,
    lengthAdjust: null,
    letterSpacing: null,
    lightingColor: null,
    limitingConeAngle: he,
    local: null,
    markerEnd: null,
    markerMid: null,
    markerStart: null,
    markerHeight: null,
    markerUnits: null,
    markerWidth: null,
    mask: null,
    maskContentUnits: null,
    maskUnits: null,
    mathematical: null,
    max: null,
    media: null,
    mediaCharacterEncoding: null,
    mediaContentEncodings: null,
    mediaSize: he,
    mediaTime: null,
    method: null,
    min: null,
    mode: null,
    name: null,
    navDown: null,
    navDownLeft: null,
    navDownRight: null,
    navLeft: null,
    navNext: null,
    navPrev: null,
    navRight: null,
    navUp: null,
    navUpLeft: null,
    navUpRight: null,
    numOctaves: null,
    observer: null,
    offset: null,
    onAbort: null,
    onActivate: null,
    onAfterPrint: null,
    onBeforePrint: null,
    onBegin: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnd: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFocusIn: null,
    onFocusOut: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadStart: null,
    onMessage: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onMouseWheel: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRepeat: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onShow: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onZoom: null,
    opacity: null,
    operator: null,
    order: null,
    orient: null,
    orientation: null,
    origin: null,
    overflow: null,
    overlay: null,
    overlinePosition: he,
    overlineThickness: he,
    paintOrder: null,
    panose1: null,
    path: null,
    pathLength: he,
    patternContentUnits: null,
    patternTransform: null,
    patternUnits: null,
    phase: null,
    ping: ut,
    pitch: null,
    playbackOrder: null,
    pointerEvents: null,
    points: null,
    pointsAtX: he,
    pointsAtY: he,
    pointsAtZ: he,
    preserveAlpha: null,
    preserveAspectRatio: null,
    primitiveUnits: null,
    propagate: null,
    property: Bn,
    r: null,
    radius: null,
    referrerPolicy: null,
    refX: null,
    refY: null,
    rel: Bn,
    rev: Bn,
    renderingIntent: null,
    repeatCount: null,
    repeatDur: null,
    requiredExtensions: Bn,
    requiredFeatures: Bn,
    requiredFonts: Bn,
    requiredFormats: Bn,
    resource: null,
    restart: null,
    result: null,
    rotate: null,
    rx: null,
    ry: null,
    scale: null,
    seed: null,
    shapeRendering: null,
    side: null,
    slope: null,
    snapshotTime: null,
    specularConstant: he,
    specularExponent: he,
    spreadMethod: null,
    spacing: null,
    startOffset: null,
    stdDeviation: null,
    stemh: null,
    stemv: null,
    stitchTiles: null,
    stopColor: null,
    stopOpacity: null,
    strikethroughPosition: he,
    strikethroughThickness: he,
    string: null,
    stroke: null,
    strokeDashArray: Bn,
    strokeDashOffset: null,
    strokeLineCap: null,
    strokeLineJoin: null,
    strokeMiterLimit: he,
    strokeOpacity: he,
    strokeWidth: null,
    style: null,
    surfaceScale: he,
    syncBehavior: null,
    syncBehaviorDefault: null,
    syncMaster: null,
    syncTolerance: null,
    syncToleranceDefault: null,
    systemLanguage: Bn,
    tabIndex: he,
    tableValues: null,
    target: null,
    targetX: he,
    targetY: he,
    textAnchor: null,
    textDecoration: null,
    textRendering: null,
    textLength: null,
    timelineBegin: null,
    title: null,
    transformBehavior: null,
    type: null,
    typeOf: Bn,
    to: null,
    transform: null,
    transformOrigin: null,
    u1: null,
    u2: null,
    underlinePosition: he,
    underlineThickness: he,
    unicode: null,
    unicodeBidi: null,
    unicodeRange: null,
    unitsPerEm: he,
    values: null,
    vAlphabetic: he,
    vMathematical: he,
    vectorEffect: null,
    vHanging: he,
    vIdeographic: he,
    version: null,
    vertAdvY: he,
    vertOriginX: he,
    vertOriginY: he,
    viewBox: null,
    viewTarget: null,
    visibility: null,
    width: null,
    widths: null,
    wordSpacing: null,
    writingMode: null,
    x: null,
    x1: null,
    x2: null,
    xChannelSelector: null,
    xHeight: he,
    y: null,
    y1: null,
    y2: null,
    yChannelSelector: null,
    z: null,
    zoomAndPan: null
  }
}), rM = /^data[-\w.:]+$/i, VS = /-[a-z]/g, aM = /[A-Z]/g;
function ox(e, t) {
  const n = Yb(t);
  let r = t, o = tr;
  if (n in e.normal)
    return e.property[e.normal[n]];
  if (n.length > 4 && n.slice(0, 4) === "data" && rM.test(t)) {
    if (t.charAt(4) === "-") {
      const s = t.slice(5).replace(VS, oM);
      r = "data" + s.charAt(0).toUpperCase() + s.slice(1);
    } else {
      const s = t.slice(4);
      if (!VS.test(s)) {
        let u = s.replace(aM, iM);
        u.charAt(0) !== "-" && (u = "-" + u), t = "data" + u;
      }
    }
    o = LE;
  }
  return new o(r, t);
}
function iM(e) {
  return "-" + e.toLowerCase();
}
function oM(e) {
  return e.charAt(1).toUpperCase();
}
const sM = {
  classId: "classID",
  dataType: "datatype",
  itemId: "itemID",
  strokeDashArray: "strokeDasharray",
  strokeDashOffset: "strokeDashoffset",
  strokeLineCap: "strokeLinecap",
  strokeLineJoin: "strokeLinejoin",
  strokeMiterLimit: "strokeMiterlimit",
  typeOf: "typeof",
  xLinkActuate: "xlinkActuate",
  xLinkArcRole: "xlinkArcrole",
  xLinkHref: "xlinkHref",
  xLinkRole: "xlinkRole",
  xLinkShow: "xlinkShow",
  xLinkTitle: "xlinkTitle",
  xLinkType: "xlinkType",
  xmlnsXLink: "xmlnsXlink"
}, sx = ZR([tx, ex, ax, ix, tM], "html"), Ys = ZR([tx, ex, ax, ix, nM], "svg");
function WS(e) {
  const t = String(e || "").trim();
  return t ? t.split(/[ \t\n\r\f]+/g) : [];
}
function lx(e) {
  return e.join(" ").trim();
}
var $i = {}, Sp, YS;
function lM() {
  if (YS) return Sp;
  YS = 1;
  var e = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//g, t = /\n/g, n = /^\s*/, r = /^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/, o = /^:\s*/, s = /^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/, u = /^[;\s]*/, c = /^\s+|\s+$/g, p = `
`, f = "/", b = "*", g = "", T = "comment", y = "declaration";
  Sp = function(A, R) {
    if (typeof A != "string")
      throw new TypeError("First argument must be a string");
    if (!A) return [];
    R = R || {};
    var C = 1, w = 1;
    function k(se) {
      var de = se.match(t);
      de && (C += de.length);
      var be = se.lastIndexOf(p);
      w = ~be ? se.length - be : w + se.length;
    }
    function O() {
      var se = { line: C, column: w };
      return function(de) {
        return de.position = new F(se), Y(), de;
      };
    }
    function F(se) {
      this.start = se, this.end = { line: C, column: w }, this.source = R.source;
    }
    F.prototype.content = A;
    function v(se) {
      var de = new Error(
        R.source + ":" + C + ":" + w + ": " + se
      );
      if (de.reason = se, de.filename = R.source, de.line = C, de.column = w, de.source = A, !R.silent) throw de;
    }
    function B(se) {
      var de = se.exec(A);
      if (de) {
        var be = de[0];
        return k(be), A = A.slice(be.length), de;
      }
    }
    function Y() {
      B(n);
    }
    function $(se) {
      var de;
      for (se = se || []; de = M(); )
        de !== !1 && se.push(de);
      return se;
    }
    function M() {
      var se = O();
      if (!(f != A.charAt(0) || b != A.charAt(1))) {
        for (var de = 2; g != A.charAt(de) && (b != A.charAt(de) || f != A.charAt(de + 1)); )
          ++de;
        if (de += 2, g === A.charAt(de - 1))
          return v("End of comment missing");
        var be = A.slice(2, de - 2);
        return w += 2, k(be), A = A.slice(de), w += 2, se({
          type: T,
          comment: be
        });
      }
    }
    function V() {
      var se = O(), de = B(r);
      if (de) {
        if (M(), !B(o)) return v("property missing ':'");
        var be = B(s), Ne = se({
          type: y,
          property: _(de[0].replace(e, g)),
          value: be ? _(be[0].replace(e, g)) : g
        });
        return B(u), Ne;
      }
    }
    function ne() {
      var se = [];
      $(se);
      for (var de; de = V(); )
        de !== !1 && (se.push(de), $(se));
      return se;
    }
    return Y(), ne();
  };
  function _(A) {
    return A ? A.replace(c, g) : g;
  }
  return Sp;
}
var KS;
function uM() {
  if (KS) return $i;
  KS = 1;
  var e = $i && $i.__importDefault || function(r) {
    return r && r.__esModule ? r : { default: r };
  };
  Object.defineProperty($i, "__esModule", { value: !0 }), $i.default = n;
  var t = e(lM());
  function n(r, o) {
    var s = null;
    if (!r || typeof r != "string")
      return s;
    var u = (0, t.default)(r), c = typeof o == "function";
    return u.forEach(function(p) {
      if (p.type === "declaration") {
        var f = p.property, b = p.value;
        c ? o(f, b, p) : b && (s = s || {}, s[f] = b);
      }
    }), s;
  }
  return $i;
}
var cM = uM();
const XS = /* @__PURE__ */ To(cM), dM = XS.default || XS, ic = ux("end"), Or = ux("start");
function ux(e) {
  return t;
  function t(n) {
    const r = n && n.position && n.position[e] || {};
    if (typeof r.line == "number" && r.line > 0 && typeof r.column == "number" && r.column > 0)
      return {
        line: r.line,
        column: r.column,
        offset: typeof r.offset == "number" && r.offset > -1 ? r.offset : void 0
      };
  }
}
function pM(e) {
  const t = Or(e), n = ic(e);
  if (t && n)
    return { start: t, end: n };
}
function ks(e) {
  return !e || typeof e != "object" ? "" : "position" in e || "type" in e ? QS(e.position) : "start" in e || "end" in e ? QS(e) : "line" in e || "column" in e ? Xb(e) : "";
}
function Xb(e) {
  return ZS(e && e.line) + ":" + ZS(e && e.column);
}
function QS(e) {
  return Xb(e && e.start) + "-" + Xb(e && e.end);
}
function ZS(e) {
  return e && typeof e == "number" ? e : 1;
}
class dn extends Error {
  /**
   * Create a message for `reason`.
   *
   * > 🪦 **Note**: also has obsolete signatures.
   *
   * @overload
   * @param {string} reason
   * @param {Options | null | undefined} [options]
   * @returns
   *
   * @overload
   * @param {string} reason
   * @param {Node | NodeLike | null | undefined} parent
   * @param {string | null | undefined} [origin]
   * @returns
   *
   * @overload
   * @param {string} reason
   * @param {Point | Position | null | undefined} place
   * @param {string | null | undefined} [origin]
   * @returns
   *
   * @overload
   * @param {string} reason
   * @param {string | null | undefined} [origin]
   * @returns
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {Node | NodeLike | null | undefined} parent
   * @param {string | null | undefined} [origin]
   * @returns
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {Point | Position | null | undefined} place
   * @param {string | null | undefined} [origin]
   * @returns
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {string | null | undefined} [origin]
   * @returns
   *
   * @param {Error | VFileMessage | string} causeOrReason
   *   Reason for message, should use markdown.
   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]
   *   Configuration (optional).
   * @param {string | null | undefined} [origin]
   *   Place in code where the message originates (example:
   *   `'my-package:my-rule'` or `'my-rule'`).
   * @returns
   *   Instance of `VFileMessage`.
   */
  // eslint-disable-next-line complexity
  constructor(t, n, r) {
    super(), typeof n == "string" && (r = n, n = void 0);
    let o = "", s = {}, u = !1;
    if (n && ("line" in n && "column" in n ? s = { place: n } : "start" in n && "end" in n ? s = { place: n } : "type" in n ? s = {
      ancestors: [n],
      place: n.position
    } : s = { ...n }), typeof t == "string" ? o = t : !s.cause && t && (u = !0, o = t.message, s.cause = t), !s.ruleId && !s.source && typeof r == "string") {
      const p = r.indexOf(":");
      p === -1 ? s.ruleId = r : (s.source = r.slice(0, p), s.ruleId = r.slice(p + 1));
    }
    if (!s.place && s.ancestors && s.ancestors) {
      const p = s.ancestors[s.ancestors.length - 1];
      p && (s.place = p.position);
    }
    const c = s.place && "start" in s.place ? s.place.start : s.place;
    this.ancestors = s.ancestors || void 0, this.cause = s.cause || void 0, this.column = c ? c.column : void 0, this.fatal = void 0, this.file, this.message = o, this.line = c ? c.line : void 0, this.name = ks(s.place) || "1:1", this.place = s.place || void 0, this.reason = this.message, this.ruleId = s.ruleId || void 0, this.source = s.source || void 0, this.stack = u && s.cause && typeof s.cause.stack == "string" ? s.cause.stack : "", this.actual, this.expected, this.note, this.url;
  }
}
dn.prototype.file = "";
dn.prototype.name = "";
dn.prototype.reason = "";
dn.prototype.message = "";
dn.prototype.stack = "";
dn.prototype.column = void 0;
dn.prototype.line = void 0;
dn.prototype.ancestors = void 0;
dn.prototype.cause = void 0;
dn.prototype.fatal = void 0;
dn.prototype.place = void 0;
dn.prototype.ruleId = void 0;
dn.prototype.source = void 0;
const DE = {}.hasOwnProperty, fM = /* @__PURE__ */ new Map(), hM = /[A-Z]/g, gM = /-([a-z])/g, mM = /* @__PURE__ */ new Set(["table", "tbody", "thead", "tfoot", "tr"]), bM = /* @__PURE__ */ new Set(["td", "th"]), cx = "https://github.com/syntax-tree/hast-util-to-jsx-runtime";
function EM(e, t) {
  if (!t || t.Fragment === void 0)
    throw new TypeError("Expected `Fragment` in options");
  const n = t.filePath || void 0;
  let r;
  if (t.development) {
    if (typeof t.jsxDEV != "function")
      throw new TypeError(
        "Expected `jsxDEV` in options when `development: true`"
      );
    r = CM(n, t.jsxDEV);
  } else {
    if (typeof t.jsx != "function")
      throw new TypeError("Expected `jsx` in production options");
    if (typeof t.jsxs != "function")
      throw new TypeError("Expected `jsxs` in production options");
    r = kM(n, t.jsx, t.jsxs);
  }
  const o = {
    Fragment: t.Fragment,
    ancestors: [],
    components: t.components || {},
    create: r,
    elementAttributeNameCase: t.elementAttributeNameCase || "react",
    evaluater: t.createEvaluater ? t.createEvaluater() : void 0,
    filePath: n,
    ignoreInvalidStyle: t.ignoreInvalidStyle || !1,
    passKeys: t.passKeys !== !1,
    passNode: t.passNode || !1,
    schema: t.space === "svg" ? Ys : sx,
    stylePropertyNameCase: t.stylePropertyNameCase || "dom",
    tableCellAlignToStyle: t.tableCellAlignToStyle !== !1
  }, s = dx(o, e, void 0);
  return s && typeof s != "string" ? s : o.create(
    e,
    o.Fragment,
    { children: s || void 0 },
    void 0
  );
}
function dx(e, t, n) {
  if (t.type === "element")
    return yM(e, t, n);
  if (t.type === "mdxFlowExpression" || t.type === "mdxTextExpression")
    return TM(e, t);
  if (t.type === "mdxJsxFlowElement" || t.type === "mdxJsxTextElement")
    return _M(e, t, n);
  if (t.type === "mdxjsEsm")
    return SM(e, t);
  if (t.type === "root")
    return vM(e, t, n);
  if (t.type === "text")
    return AM(e, t);
}
function yM(e, t, n) {
  const r = e.schema;
  let o = r;
  t.tagName.toLowerCase() === "svg" && r.space === "html" && (o = Ys, e.schema = o), e.ancestors.push(t);
  const s = fx(e, t.tagName, !1), u = wM(e, t);
  let c = PE(e, t);
  return mM.has(t.tagName) && (c = c.filter(function(p) {
    return typeof p == "string" ? !Z4(p) : !0;
  })), px(e, u, s, t), ME(u, c), e.ancestors.pop(), e.schema = r, e.create(t, s, u, n);
}
function TM(e, t) {
  if (t.data && t.data.estree && e.evaluater) {
    const r = t.data.estree.body[0];
    return r.type, /** @type {Child | undefined} */
    e.evaluater.evaluateExpression(r.expression);
  }
  Fs(e, t.position);
}
function SM(e, t) {
  if (t.data && t.data.estree && e.evaluater)
    return (
      /** @type {Child | undefined} */
      e.evaluater.evaluateProgram(t.data.estree)
    );
  Fs(e, t.position);
}
function _M(e, t, n) {
  const r = e.schema;
  let o = r;
  t.name === "svg" && r.space === "html" && (o = Ys, e.schema = o), e.ancestors.push(t);
  const s = t.name === null ? e.Fragment : fx(e, t.name, !0), u = IM(e, t), c = PE(e, t);
  return px(e, u, s, t), ME(u, c), e.ancestors.pop(), e.schema = r, e.create(t, s, u, n);
}
function vM(e, t, n) {
  const r = {};
  return ME(r, PE(e, t)), e.create(t, e.Fragment, r, n);
}
function AM(e, t) {
  return t.value;
}
function px(e, t, n, r) {
  typeof n != "string" && n !== e.Fragment && e.passNode && (t.node = r);
}
function ME(e, t) {
  if (t.length > 0) {
    const n = t.length > 1 ? t : t[0];
    n && (e.children = n);
  }
}
function kM(e, t, n) {
  return r;
  function r(o, s, u, c) {
    const f = Array.isArray(u.children) ? n : t;
    return c ? f(s, u, c) : f(s, u);
  }
}
function CM(e, t) {
  return n;
  function n(r, o, s, u) {
    const c = Array.isArray(s.children), p = Or(r);
    return t(
      o,
      s,
      u,
      c,
      {
        columnNumber: p ? p.column - 1 : void 0,
        fileName: e,
        lineNumber: p ? p.line : void 0
      },
      void 0
    );
  }
}
function wM(e, t) {
  const n = {};
  let r, o;
  for (o in t.properties)
    if (o !== "children" && DE.call(t.properties, o)) {
      const s = RM(e, o, t.properties[o]);
      if (s) {
        const [u, c] = s;
        e.tableCellAlignToStyle && u === "align" && typeof c == "string" && bM.has(t.tagName) ? r = c : n[u] = c;
      }
    }
  if (r) {
    const s = (
      /** @type {Style} */
      n.style || (n.style = {})
    );
    s[e.stylePropertyNameCase === "css" ? "text-align" : "textAlign"] = r;
  }
  return n;
}
function IM(e, t) {
  const n = {};
  for (const r of t.attributes)
    if (r.type === "mdxJsxExpressionAttribute")
      if (r.data && r.data.estree && e.evaluater) {
        const s = r.data.estree.body[0];
        s.type;
        const u = s.expression;
        u.type;
        const c = u.properties[0];
        c.type, Object.assign(
          n,
          e.evaluater.evaluateExpression(c.argument)
        );
      } else
        Fs(e, t.position);
    else {
      const o = r.name;
      let s;
      if (r.value && typeof r.value == "object")
        if (r.value.data && r.value.data.estree && e.evaluater) {
          const c = r.value.data.estree.body[0];
          c.type, s = e.evaluater.evaluateExpression(c.expression);
        } else
          Fs(e, t.position);
      else
        s = r.value === null ? !0 : r.value;
      n[o] = /** @type {Props[keyof Props]} */
      s;
    }
  return n;
}
function PE(e, t) {
  const n = [];
  let r = -1;
  const o = e.passKeys ? /* @__PURE__ */ new Map() : fM;
  for (; ++r < t.children.length; ) {
    const s = t.children[r];
    let u;
    if (e.passKeys) {
      const p = s.type === "element" ? s.tagName : s.type === "mdxJsxFlowElement" || s.type === "mdxJsxTextElement" ? s.name : void 0;
      if (p) {
        const f = o.get(p) || 0;
        u = p + "-" + f, o.set(p, f + 1);
      }
    }
    const c = dx(e, s, u);
    c !== void 0 && n.push(c);
  }
  return n;
}
function RM(e, t, n) {
  const r = ox(e.schema, t);
  if (!(n == null || typeof n == "number" && Number.isNaN(n))) {
    if (Array.isArray(n) && (n = r.commaSeparated ? QR(n) : lx(n)), r.property === "style") {
      let o = typeof n == "object" ? n : xM(e, String(n));
      return e.stylePropertyNameCase === "css" && (o = NM(o)), ["style", o];
    }
    return [
      e.elementAttributeNameCase === "react" && r.space ? sM[r.property] || r.property : r.attribute,
      n
    ];
  }
}
function xM(e, t) {
  const n = {};
  try {
    dM(t, r);
  } catch (o) {
    if (!e.ignoreInvalidStyle) {
      const s = (
        /** @type {Error} */
        o
      ), u = new dn("Cannot parse `style` attribute", {
        ancestors: e.ancestors,
        cause: s,
        ruleId: "style",
        source: "hast-util-to-jsx-runtime"
      });
      throw u.file = e.filePath || void 0, u.url = cx + "#cannot-parse-style-attribute", u;
    }
  }
  return n;
  function r(o, s) {
    let u = o;
    u.slice(0, 2) !== "--" && (u.slice(0, 4) === "-ms-" && (u = "ms-" + u.slice(4)), u = u.replace(gM, LM)), n[u] = s;
  }
}
function fx(e, t, n) {
  let r;
  if (!n)
    r = { type: "Literal", value: t };
  else if (t.includes(".")) {
    const o = t.split(".");
    let s = -1, u;
    for (; ++s < o.length; ) {
      const c = GS(o[s]) ? { type: "Identifier", name: o[s] } : { type: "Literal", value: o[s] };
      u = u ? {
        type: "MemberExpression",
        object: u,
        property: c,
        computed: !!(s && c.type === "Literal"),
        optional: !1
      } : c;
    }
    r = u;
  } else
    r = GS(t) && !/^[a-z]/.test(t) ? { type: "Identifier", name: t } : { type: "Literal", value: t };
  if (r.type === "Literal") {
    const o = (
      /** @type {keyof JSX.IntrinsicElements} */
      r.value
    );
    return DE.call(e.components, o) ? e.components[o] : o;
  }
  if (e.evaluater)
    return e.evaluater.evaluateExpression(r);
  Fs(e);
}
function Fs(e, t) {
  const n = new dn(
    "Cannot handle MDX estrees without `createEvaluater`",
    {
      ancestors: e.ancestors,
      place: t,
      ruleId: "mdx-estree",
      source: "hast-util-to-jsx-runtime"
    }
  );
  throw n.file = e.filePath || void 0, n.url = cx + "#cannot-handle-mdx-estrees-without-createevaluater", n;
}
function NM(e) {
  const t = {};
  let n;
  for (n in e)
    DE.call(e, n) && (t[OM(n)] = e[n]);
  return t;
}
function OM(e) {
  let t = e.replace(hM, DM);
  return t.slice(0, 3) === "ms-" && (t = "-" + t), t;
}
function LM(e, t) {
  return t.toUpperCase();
}
function DM(e) {
  return "-" + e.toLowerCase();
}
const _p = {
  action: ["form"],
  cite: ["blockquote", "del", "ins", "q"],
  data: ["object"],
  formAction: ["button", "input"],
  href: ["a", "area", "base", "link"],
  icon: ["menuitem"],
  itemId: null,
  manifest: ["html"],
  ping: ["a", "area"],
  poster: ["video"],
  src: [
    "audio",
    "embed",
    "iframe",
    "img",
    "input",
    "script",
    "source",
    "track",
    "video"
  ]
}, MM = {};
function FE(e, t) {
  const n = MM, r = typeof n.includeImageAlt == "boolean" ? n.includeImageAlt : !0, o = typeof n.includeHtml == "boolean" ? n.includeHtml : !0;
  return hx(e, r, o);
}
function hx(e, t, n) {
  if (PM(e)) {
    if ("value" in e)
      return e.type === "html" && !n ? "" : e.value;
    if (t && "alt" in e && e.alt)
      return e.alt;
    if ("children" in e)
      return JS(e.children, t, n);
  }
  return Array.isArray(e) ? JS(e, t, n) : "";
}
function JS(e, t, n) {
  const r = [];
  let o = -1;
  for (; ++o < e.length; )
    r[o] = hx(e[o], t, n);
  return r.join("");
}
function PM(e) {
  return !!(e && typeof e == "object");
}
const e_ = document.createElement("i");
function BE(e) {
  const t = "&" + e + ";";
  e_.innerHTML = t;
  const n = e_.textContent;
  return n.charCodeAt(n.length - 1) === 59 && e !== "semi" || n === t ? !1 : n;
}
function $n(e, t, n, r) {
  const o = e.length;
  let s = 0, u;
  if (t < 0 ? t = -t > o ? 0 : o + t : t = t > o ? o : t, n = n > 0 ? n : 0, r.length < 1e4)
    u = Array.from(r), u.unshift(t, n), e.splice(...u);
  else
    for (n && e.splice(t, n); s < r.length; )
      u = r.slice(s, s + 1e4), u.unshift(t, 0), e.splice(...u), s += 1e4, t += 1e4;
}
function Zn(e, t) {
  return e.length > 0 ? ($n(e, e.length, 0, t), e) : t;
}
const t_ = {}.hasOwnProperty;
function gx(e) {
  const t = {};
  let n = -1;
  for (; ++n < e.length; )
    FM(t, e[n]);
  return t;
}
function FM(e, t) {
  let n;
  for (n in t) {
    const o = (t_.call(e, n) ? e[n] : void 0) || (e[n] = {}), s = t[n];
    let u;
    if (s)
      for (u in s) {
        t_.call(o, u) || (o[u] = []);
        const c = s[u];
        BM(
          // @ts-expect-error Looks like a list.
          o[u],
          Array.isArray(c) ? c : c ? [c] : []
        );
      }
  }
}
function BM(e, t) {
  let n = -1;
  const r = [];
  for (; ++n < t.length; )
    (t[n].add === "after" ? e : r).push(t[n]);
  $n(e, 0, 0, r);
}
function mx(e, t) {
  const n = Number.parseInt(e, t);
  return (
    // C0 except for HT, LF, FF, CR, space.
    n < 9 || n === 11 || n > 13 && n < 32 || // Control character (DEL) of C0, and C1 controls.
    n > 126 && n < 160 || // Lone high surrogates and low surrogates.
    n > 55295 && n < 57344 || // Noncharacters.
    n > 64975 && n < 65008 || /* eslint-disable no-bitwise */
    (n & 65535) === 65535 || (n & 65535) === 65534 || /* eslint-enable no-bitwise */
    // Out of range
    n > 1114111 ? "�" : String.fromCodePoint(n)
  );
}
function Er(e) {
  return e.replace(/[\t\n\r ]+/g, " ").replace(/^ | $/g, "").toLowerCase().toUpperCase();
}
const bn = Ma(/[A-Za-z]/), cn = Ma(/[\dA-Za-z]/), UM = Ma(/[#-'*+\--9=?A-Z^-~]/);
function zu(e) {
  return (
    // Special whitespace codes (which have negative values), C0 and Control
    // character DEL
    e !== null && (e < 32 || e === 127)
  );
}
const Qb = Ma(/\d/), HM = Ma(/[\dA-Fa-f]/), $M = Ma(/[!-/:-@[-`{-~]/);
function Ue(e) {
  return e !== null && e < -2;
}
function st(e) {
  return e !== null && (e < 0 || e === 32);
}
function Ke(e) {
  return e === -2 || e === -1 || e === 32;
}
const oc = Ma(new RegExp("\\p{P}|\\p{S}", "u")), pi = Ma(/\s/);
function Ma(e) {
  return t;
  function t(n) {
    return n !== null && n > -1 && e.test(String.fromCharCode(n));
  }
}
function vo(e) {
  const t = [];
  let n = -1, r = 0, o = 0;
  for (; ++n < e.length; ) {
    const s = e.charCodeAt(n);
    let u = "";
    if (s === 37 && cn(e.charCodeAt(n + 1)) && cn(e.charCodeAt(n + 2)))
      o = 2;
    else if (s < 128)
      /[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(s)) || (u = String.fromCharCode(s));
    else if (s > 55295 && s < 57344) {
      const c = e.charCodeAt(n + 1);
      s < 56320 && c > 56319 && c < 57344 ? (u = String.fromCharCode(s, c), o = 1) : u = "�";
    } else
      u = String.fromCharCode(s);
    u && (t.push(e.slice(r, n), encodeURIComponent(u)), r = n + o + 1, u = ""), o && (n += o, o = 0);
  }
  return t.join("") + e.slice(r);
}
function et(e, t, n, r) {
  const o = r ? r - 1 : Number.POSITIVE_INFINITY;
  let s = 0;
  return u;
  function u(p) {
    return Ke(p) ? (e.enter(n), c(p)) : t(p);
  }
  function c(p) {
    return Ke(p) && s++ < o ? (e.consume(p), c) : (e.exit(n), t(p));
  }
}
const zM = {
  tokenize: GM
};
function GM(e) {
  const t = e.attempt(this.parser.constructs.contentInitial, r, o);
  let n;
  return t;
  function r(c) {
    if (c === null) {
      e.consume(c);
      return;
    }
    return e.enter("lineEnding"), e.consume(c), e.exit("lineEnding"), et(e, t, "linePrefix");
  }
  function o(c) {
    return e.enter("paragraph"), s(c);
  }
  function s(c) {
    const p = e.enter("chunkText", {
      contentType: "text",
      previous: n
    });
    return n && (n.next = p), n = p, u(c);
  }
  function u(c) {
    if (c === null) {
      e.exit("chunkText"), e.exit("paragraph"), e.consume(c);
      return;
    }
    return Ue(c) ? (e.consume(c), e.exit("chunkText"), s) : (e.consume(c), u);
  }
}
const qM = {
  tokenize: jM
}, n_ = {
  tokenize: VM
};
function jM(e) {
  const t = this, n = [];
  let r = 0, o, s, u;
  return c;
  function c(k) {
    if (r < n.length) {
      const O = n[r];
      return t.containerState = O[1], e.attempt(O[0].continuation, p, f)(k);
    }
    return f(k);
  }
  function p(k) {
    if (r++, t.containerState._closeFlow) {
      t.containerState._closeFlow = void 0, o && w();
      const O = t.events.length;
      let F = O, v;
      for (; F--; )
        if (t.events[F][0] === "exit" && t.events[F][1].type === "chunkFlow") {
          v = t.events[F][1].end;
          break;
        }
      C(r);
      let B = O;
      for (; B < t.events.length; )
        t.events[B][1].end = {
          ...v
        }, B++;
      return $n(t.events, F + 1, 0, t.events.slice(O)), t.events.length = B, f(k);
    }
    return c(k);
  }
  function f(k) {
    if (r === n.length) {
      if (!o)
        return T(k);
      if (o.currentConstruct && o.currentConstruct.concrete)
        return _(k);
      t.interrupt = !!(o.currentConstruct && !o._gfmTableDynamicInterruptHack);
    }
    return t.containerState = {}, e.check(n_, b, g)(k);
  }
  function b(k) {
    return o && w(), C(r), T(k);
  }
  function g(k) {
    return t.parser.lazy[t.now().line] = r !== n.length, u = t.now().offset, _(k);
  }
  function T(k) {
    return t.containerState = {}, e.attempt(n_, y, _)(k);
  }
  function y(k) {
    return r++, n.push([t.currentConstruct, t.containerState]), T(k);
  }
  function _(k) {
    if (k === null) {
      o && w(), C(0), e.consume(k);
      return;
    }
    return o = o || t.parser.flow(t.now()), e.enter("chunkFlow", {
      _tokenizer: o,
      contentType: "flow",
      previous: s
    }), A(k);
  }
  function A(k) {
    if (k === null) {
      R(e.exit("chunkFlow"), !0), C(0), e.consume(k);
      return;
    }
    return Ue(k) ? (e.consume(k), R(e.exit("chunkFlow")), r = 0, t.interrupt = void 0, c) : (e.consume(k), A);
  }
  function R(k, O) {
    const F = t.sliceStream(k);
    if (O && F.push(null), k.previous = s, s && (s.next = k), s = k, o.defineSkip(k.start), o.write(F), t.parser.lazy[k.start.line]) {
      let v = o.events.length;
      for (; v--; )
        if (
          // The token starts before the line ending…
          o.events[v][1].start.offset < u && // …and either is not ended yet…
          (!o.events[v][1].end || // …or ends after it.
          o.events[v][1].end.offset > u)
        )
          return;
      const B = t.events.length;
      let Y = B, $, M;
      for (; Y--; )
        if (t.events[Y][0] === "exit" && t.events[Y][1].type === "chunkFlow") {
          if ($) {
            M = t.events[Y][1].end;
            break;
          }
          $ = !0;
        }
      for (C(r), v = B; v < t.events.length; )
        t.events[v][1].end = {
          ...M
        }, v++;
      $n(t.events, Y + 1, 0, t.events.slice(B)), t.events.length = v;
    }
  }
  function C(k) {
    let O = n.length;
    for (; O-- > k; ) {
      const F = n[O];
      t.containerState = F[1], F[0].exit.call(t, e);
    }
    n.length = k;
  }
  function w() {
    o.write([null]), s = void 0, o = void 0, t.containerState._closeFlow = void 0;
  }
}
function VM(e, t, n) {
  return et(e, e.attempt(this.parser.constructs.document, t, n), "linePrefix", this.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4);
}
function go(e) {
  if (e === null || st(e) || pi(e))
    return 1;
  if (oc(e))
    return 2;
}
function sc(e, t, n) {
  const r = [];
  let o = -1;
  for (; ++o < e.length; ) {
    const s = e[o].resolveAll;
    s && !r.includes(s) && (t = s(t, n), r.push(s));
  }
  return t;
}
const Zb = {
  name: "attention",
  resolveAll: WM,
  tokenize: YM
};
function WM(e, t) {
  let n = -1, r, o, s, u, c, p, f, b;
  for (; ++n < e.length; )
    if (e[n][0] === "enter" && e[n][1].type === "attentionSequence" && e[n][1]._close) {
      for (r = n; r--; )
        if (e[r][0] === "exit" && e[r][1].type === "attentionSequence" && e[r][1]._open && // If the markers are the same:
        t.sliceSerialize(e[r][1]).charCodeAt(0) === t.sliceSerialize(e[n][1]).charCodeAt(0)) {
          if ((e[r][1]._close || e[n][1]._open) && (e[n][1].end.offset - e[n][1].start.offset) % 3 && !((e[r][1].end.offset - e[r][1].start.offset + e[n][1].end.offset - e[n][1].start.offset) % 3))
            continue;
          p = e[r][1].end.offset - e[r][1].start.offset > 1 && e[n][1].end.offset - e[n][1].start.offset > 1 ? 2 : 1;
          const g = {
            ...e[r][1].end
          }, T = {
            ...e[n][1].start
          };
          r_(g, -p), r_(T, p), u = {
            type: p > 1 ? "strongSequence" : "emphasisSequence",
            start: g,
            end: {
              ...e[r][1].end
            }
          }, c = {
            type: p > 1 ? "strongSequence" : "emphasisSequence",
            start: {
              ...e[n][1].start
            },
            end: T
          }, s = {
            type: p > 1 ? "strongText" : "emphasisText",
            start: {
              ...e[r][1].end
            },
            end: {
              ...e[n][1].start
            }
          }, o = {
            type: p > 1 ? "strong" : "emphasis",
            start: {
              ...u.start
            },
            end: {
              ...c.end
            }
          }, e[r][1].end = {
            ...u.start
          }, e[n][1].start = {
            ...c.end
          }, f = [], e[r][1].end.offset - e[r][1].start.offset && (f = Zn(f, [["enter", e[r][1], t], ["exit", e[r][1], t]])), f = Zn(f, [["enter", o, t], ["enter", u, t], ["exit", u, t], ["enter", s, t]]), f = Zn(f, sc(t.parser.constructs.insideSpan.null, e.slice(r + 1, n), t)), f = Zn(f, [["exit", s, t], ["enter", c, t], ["exit", c, t], ["exit", o, t]]), e[n][1].end.offset - e[n][1].start.offset ? (b = 2, f = Zn(f, [["enter", e[n][1], t], ["exit", e[n][1], t]])) : b = 0, $n(e, r - 1, n - r + 3, f), n = r + f.length - b - 2;
          break;
        }
    }
  for (n = -1; ++n < e.length; )
    e[n][1].type === "attentionSequence" && (e[n][1].type = "data");
  return e;
}
function YM(e, t) {
  const n = this.parser.constructs.attentionMarkers.null, r = this.previous, o = go(r);
  let s;
  return u;
  function u(p) {
    return s = p, e.enter("attentionSequence"), c(p);
  }
  function c(p) {
    if (p === s)
      return e.consume(p), c;
    const f = e.exit("attentionSequence"), b = go(p), g = !b || b === 2 && o || n.includes(p), T = !o || o === 2 && b || n.includes(r);
    return f._open = !!(s === 42 ? g : g && (o || !T)), f._close = !!(s === 42 ? T : T && (b || !g)), t(p);
  }
}
function r_(e, t) {
  e.column += t, e.offset += t, e._bufferIndex += t;
}
const KM = {
  name: "autolink",
  tokenize: XM
};
function XM(e, t, n) {
  let r = 0;
  return o;
  function o(y) {
    return e.enter("autolink"), e.enter("autolinkMarker"), e.consume(y), e.exit("autolinkMarker"), e.enter("autolinkProtocol"), s;
  }
  function s(y) {
    return bn(y) ? (e.consume(y), u) : y === 64 ? n(y) : f(y);
  }
  function u(y) {
    return y === 43 || y === 45 || y === 46 || cn(y) ? (r = 1, c(y)) : f(y);
  }
  function c(y) {
    return y === 58 ? (e.consume(y), r = 0, p) : (y === 43 || y === 45 || y === 46 || cn(y)) && r++ < 32 ? (e.consume(y), c) : (r = 0, f(y));
  }
  function p(y) {
    return y === 62 ? (e.exit("autolinkProtocol"), e.enter("autolinkMarker"), e.consume(y), e.exit("autolinkMarker"), e.exit("autolink"), t) : y === null || y === 32 || y === 60 || zu(y) ? n(y) : (e.consume(y), p);
  }
  function f(y) {
    return y === 64 ? (e.consume(y), b) : UM(y) ? (e.consume(y), f) : n(y);
  }
  function b(y) {
    return cn(y) ? g(y) : n(y);
  }
  function g(y) {
    return y === 46 ? (e.consume(y), r = 0, b) : y === 62 ? (e.exit("autolinkProtocol").type = "autolinkEmail", e.enter("autolinkMarker"), e.consume(y), e.exit("autolinkMarker"), e.exit("autolink"), t) : T(y);
  }
  function T(y) {
    if ((y === 45 || cn(y)) && r++ < 63) {
      const _ = y === 45 ? T : g;
      return e.consume(y), _;
    }
    return n(y);
  }
}
const Ks = {
  partial: !0,
  tokenize: QM
};
function QM(e, t, n) {
  return r;
  function r(s) {
    return Ke(s) ? et(e, o, "linePrefix")(s) : o(s);
  }
  function o(s) {
    return s === null || Ue(s) ? t(s) : n(s);
  }
}
const bx = {
  continuation: {
    tokenize: JM
  },
  exit: e6,
  name: "blockQuote",
  tokenize: ZM
};
function ZM(e, t, n) {
  const r = this;
  return o;
  function o(u) {
    if (u === 62) {
      const c = r.containerState;
      return c.open || (e.enter("blockQuote", {
        _container: !0
      }), c.open = !0), e.enter("blockQuotePrefix"), e.enter("blockQuoteMarker"), e.consume(u), e.exit("blockQuoteMarker"), s;
    }
    return n(u);
  }
  function s(u) {
    return Ke(u) ? (e.enter("blockQuotePrefixWhitespace"), e.consume(u), e.exit("blockQuotePrefixWhitespace"), e.exit("blockQuotePrefix"), t) : (e.exit("blockQuotePrefix"), t(u));
  }
}
function JM(e, t, n) {
  const r = this;
  return o;
  function o(u) {
    return Ke(u) ? et(e, s, "linePrefix", r.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4)(u) : s(u);
  }
  function s(u) {
    return e.attempt(bx, t, n)(u);
  }
}
function e6(e) {
  e.exit("blockQuote");
}
const Ex = {
  name: "characterEscape",
  tokenize: t6
};
function t6(e, t, n) {
  return r;
  function r(s) {
    return e.enter("characterEscape"), e.enter("escapeMarker"), e.consume(s), e.exit("escapeMarker"), o;
  }
  function o(s) {
    return $M(s) ? (e.enter("characterEscapeValue"), e.consume(s), e.exit("characterEscapeValue"), e.exit("characterEscape"), t) : n(s);
  }
}
const yx = {
  name: "characterReference",
  tokenize: n6
};
function n6(e, t, n) {
  const r = this;
  let o = 0, s, u;
  return c;
  function c(g) {
    return e.enter("characterReference"), e.enter("characterReferenceMarker"), e.consume(g), e.exit("characterReferenceMarker"), p;
  }
  function p(g) {
    return g === 35 ? (e.enter("characterReferenceMarkerNumeric"), e.consume(g), e.exit("characterReferenceMarkerNumeric"), f) : (e.enter("characterReferenceValue"), s = 31, u = cn, b(g));
  }
  function f(g) {
    return g === 88 || g === 120 ? (e.enter("characterReferenceMarkerHexadecimal"), e.consume(g), e.exit("characterReferenceMarkerHexadecimal"), e.enter("characterReferenceValue"), s = 6, u = HM, b) : (e.enter("characterReferenceValue"), s = 7, u = Qb, b(g));
  }
  function b(g) {
    if (g === 59 && o) {
      const T = e.exit("characterReferenceValue");
      return u === cn && !BE(r.sliceSerialize(T)) ? n(g) : (e.enter("characterReferenceMarker"), e.consume(g), e.exit("characterReferenceMarker"), e.exit("characterReference"), t);
    }
    return u(g) && o++ < s ? (e.consume(g), b) : n(g);
  }
}
const a_ = {
  partial: !0,
  tokenize: a6
}, i_ = {
  concrete: !0,
  name: "codeFenced",
  tokenize: r6
};
function r6(e, t, n) {
  const r = this, o = {
    partial: !0,
    tokenize: F
  };
  let s = 0, u = 0, c;
  return p;
  function p(v) {
    return f(v);
  }
  function f(v) {
    const B = r.events[r.events.length - 1];
    return s = B && B[1].type === "linePrefix" ? B[2].sliceSerialize(B[1], !0).length : 0, c = v, e.enter("codeFenced"), e.enter("codeFencedFence"), e.enter("codeFencedFenceSequence"), b(v);
  }
  function b(v) {
    return v === c ? (u++, e.consume(v), b) : u < 3 ? n(v) : (e.exit("codeFencedFenceSequence"), Ke(v) ? et(e, g, "whitespace")(v) : g(v));
  }
  function g(v) {
    return v === null || Ue(v) ? (e.exit("codeFencedFence"), r.interrupt ? t(v) : e.check(a_, A, O)(v)) : (e.enter("codeFencedFenceInfo"), e.enter("chunkString", {
      contentType: "string"
    }), T(v));
  }
  function T(v) {
    return v === null || Ue(v) ? (e.exit("chunkString"), e.exit("codeFencedFenceInfo"), g(v)) : Ke(v) ? (e.exit("chunkString"), e.exit("codeFencedFenceInfo"), et(e, y, "whitespace")(v)) : v === 96 && v === c ? n(v) : (e.consume(v), T);
  }
  function y(v) {
    return v === null || Ue(v) ? g(v) : (e.enter("codeFencedFenceMeta"), e.enter("chunkString", {
      contentType: "string"
    }), _(v));
  }
  function _(v) {
    return v === null || Ue(v) ? (e.exit("chunkString"), e.exit("codeFencedFenceMeta"), g(v)) : v === 96 && v === c ? n(v) : (e.consume(v), _);
  }
  function A(v) {
    return e.attempt(o, O, R)(v);
  }
  function R(v) {
    return e.enter("lineEnding"), e.consume(v), e.exit("lineEnding"), C;
  }
  function C(v) {
    return s > 0 && Ke(v) ? et(e, w, "linePrefix", s + 1)(v) : w(v);
  }
  function w(v) {
    return v === null || Ue(v) ? e.check(a_, A, O)(v) : (e.enter("codeFlowValue"), k(v));
  }
  function k(v) {
    return v === null || Ue(v) ? (e.exit("codeFlowValue"), w(v)) : (e.consume(v), k);
  }
  function O(v) {
    return e.exit("codeFenced"), t(v);
  }
  function F(v, B, Y) {
    let $ = 0;
    return M;
    function M(be) {
      return v.enter("lineEnding"), v.consume(be), v.exit("lineEnding"), V;
    }
    function V(be) {
      return v.enter("codeFencedFence"), Ke(be) ? et(v, ne, "linePrefix", r.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4)(be) : ne(be);
    }
    function ne(be) {
      return be === c ? (v.enter("codeFencedFenceSequence"), se(be)) : Y(be);
    }
    function se(be) {
      return be === c ? ($++, v.consume(be), se) : $ >= u ? (v.exit("codeFencedFenceSequence"), Ke(be) ? et(v, de, "whitespace")(be) : de(be)) : Y(be);
    }
    function de(be) {
      return be === null || Ue(be) ? (v.exit("codeFencedFence"), B(be)) : Y(be);
    }
  }
}
function a6(e, t, n) {
  const r = this;
  return o;
  function o(u) {
    return u === null ? n(u) : (e.enter("lineEnding"), e.consume(u), e.exit("lineEnding"), s);
  }
  function s(u) {
    return r.parser.lazy[r.now().line] ? n(u) : t(u);
  }
}
const vp = {
  name: "codeIndented",
  tokenize: o6
}, i6 = {
  partial: !0,
  tokenize: s6
};
function o6(e, t, n) {
  const r = this;
  return o;
  function o(f) {
    return e.enter("codeIndented"), et(e, s, "linePrefix", 5)(f);
  }
  function s(f) {
    const b = r.events[r.events.length - 1];
    return b && b[1].type === "linePrefix" && b[2].sliceSerialize(b[1], !0).length >= 4 ? u(f) : n(f);
  }
  function u(f) {
    return f === null ? p(f) : Ue(f) ? e.attempt(i6, u, p)(f) : (e.enter("codeFlowValue"), c(f));
  }
  function c(f) {
    return f === null || Ue(f) ? (e.exit("codeFlowValue"), u(f)) : (e.consume(f), c);
  }
  function p(f) {
    return e.exit("codeIndented"), t(f);
  }
}
function s6(e, t, n) {
  const r = this;
  return o;
  function o(u) {
    return r.parser.lazy[r.now().line] ? n(u) : Ue(u) ? (e.enter("lineEnding"), e.consume(u), e.exit("lineEnding"), o) : et(e, s, "linePrefix", 5)(u);
  }
  function s(u) {
    const c = r.events[r.events.length - 1];
    return c && c[1].type === "linePrefix" && c[2].sliceSerialize(c[1], !0).length >= 4 ? t(u) : Ue(u) ? o(u) : n(u);
  }
}
const l6 = {
  name: "codeText",
  previous: c6,
  resolve: u6,
  tokenize: d6
};
function u6(e) {
  let t = e.length - 4, n = 3, r, o;
  if ((e[n][1].type === "lineEnding" || e[n][1].type === "space") && (e[t][1].type === "lineEnding" || e[t][1].type === "space")) {
    for (r = n; ++r < t; )
      if (e[r][1].type === "codeTextData") {
        e[n][1].type = "codeTextPadding", e[t][1].type = "codeTextPadding", n += 2, t -= 2;
        break;
      }
  }
  for (r = n - 1, t++; ++r <= t; )
    o === void 0 ? r !== t && e[r][1].type !== "lineEnding" && (o = r) : (r === t || e[r][1].type === "lineEnding") && (e[o][1].type = "codeTextData", r !== o + 2 && (e[o][1].end = e[r - 1][1].end, e.splice(o + 2, r - o - 2), t -= r - o - 2, r = o + 2), o = void 0);
  return e;
}
function c6(e) {
  return e !== 96 || this.events[this.events.length - 1][1].type === "characterEscape";
}
function d6(e, t, n) {
  let r = 0, o, s;
  return u;
  function u(g) {
    return e.enter("codeText"), e.enter("codeTextSequence"), c(g);
  }
  function c(g) {
    return g === 96 ? (e.consume(g), r++, c) : (e.exit("codeTextSequence"), p(g));
  }
  function p(g) {
    return g === null ? n(g) : g === 32 ? (e.enter("space"), e.consume(g), e.exit("space"), p) : g === 96 ? (s = e.enter("codeTextSequence"), o = 0, b(g)) : Ue(g) ? (e.enter("lineEnding"), e.consume(g), e.exit("lineEnding"), p) : (e.enter("codeTextData"), f(g));
  }
  function f(g) {
    return g === null || g === 32 || g === 96 || Ue(g) ? (e.exit("codeTextData"), p(g)) : (e.consume(g), f);
  }
  function b(g) {
    return g === 96 ? (e.consume(g), o++, b) : o === r ? (e.exit("codeTextSequence"), e.exit("codeText"), t(g)) : (s.type = "codeTextData", f(g));
  }
}
class p6 {
  /**
   * @param {ReadonlyArray<T> | null | undefined} [initial]
   *   Initial items (optional).
   * @returns
   *   Splice buffer.
   */
  constructor(t) {
    this.left = t ? [...t] : [], this.right = [];
  }
  /**
   * Array access;
   * does not move the cursor.
   *
   * @param {number} index
   *   Index.
   * @return {T}
   *   Item.
   */
  get(t) {
    if (t < 0 || t >= this.left.length + this.right.length)
      throw new RangeError("Cannot access index `" + t + "` in a splice buffer of size `" + (this.left.length + this.right.length) + "`");
    return t < this.left.length ? this.left[t] : this.right[this.right.length - t + this.left.length - 1];
  }
  /**
   * The length of the splice buffer, one greater than the largest index in the
   * array.
   */
  get length() {
    return this.left.length + this.right.length;
  }
  /**
   * Remove and return `list[0]`;
   * moves the cursor to `0`.
   *
   * @returns {T | undefined}
   *   Item, optional.
   */
  shift() {
    return this.setCursor(0), this.right.pop();
  }
  /**
   * Slice the buffer to get an array;
   * does not move the cursor.
   *
   * @param {number} start
   *   Start.
   * @param {number | null | undefined} [end]
   *   End (optional).
   * @returns {Array<T>}
   *   Array of items.
   */
  slice(t, n) {
    const r = n ?? Number.POSITIVE_INFINITY;
    return r < this.left.length ? this.left.slice(t, r) : t > this.left.length ? this.right.slice(this.right.length - r + this.left.length, this.right.length - t + this.left.length).reverse() : this.left.slice(t).concat(this.right.slice(this.right.length - r + this.left.length).reverse());
  }
  /**
   * Mimics the behavior of Array.prototype.splice() except for the change of
   * interface necessary to avoid segfaults when patching in very large arrays.
   *
   * This operation moves cursor is moved to `start` and results in the cursor
   * placed after any inserted items.
   *
   * @param {number} start
   *   Start;
   *   zero-based index at which to start changing the array;
   *   negative numbers count backwards from the end of the array and values
   *   that are out-of bounds are clamped to the appropriate end of the array.
   * @param {number | null | undefined} [deleteCount=0]
   *   Delete count (default: `0`);
   *   maximum number of elements to delete, starting from start.
   * @param {Array<T> | null | undefined} [items=[]]
   *   Items to include in place of the deleted items (default: `[]`).
   * @return {Array<T>}
   *   Any removed items.
   */
  splice(t, n, r) {
    const o = n || 0;
    this.setCursor(Math.trunc(t));
    const s = this.right.splice(this.right.length - o, Number.POSITIVE_INFINITY);
    return r && hs(this.left, r), s.reverse();
  }
  /**
   * Remove and return the highest-numbered item in the array, so
   * `list[list.length - 1]`;
   * Moves the cursor to `length`.
   *
   * @returns {T | undefined}
   *   Item, optional.
   */
  pop() {
    return this.setCursor(Number.POSITIVE_INFINITY), this.left.pop();
  }
  /**
   * Inserts a single item to the high-numbered side of the array;
   * moves the cursor to `length`.
   *
   * @param {T} item
   *   Item.
   * @returns {undefined}
   *   Nothing.
   */
  push(t) {
    this.setCursor(Number.POSITIVE_INFINITY), this.left.push(t);
  }
  /**
   * Inserts many items to the high-numbered side of the array.
   * Moves the cursor to `length`.
   *
   * @param {Array<T>} items
   *   Items.
   * @returns {undefined}
   *   Nothing.
   */
  pushMany(t) {
    this.setCursor(Number.POSITIVE_INFINITY), hs(this.left, t);
  }
  /**
   * Inserts a single item to the low-numbered side of the array;
   * Moves the cursor to `0`.
   *
   * @param {T} item
   *   Item.
   * @returns {undefined}
   *   Nothing.
   */
  unshift(t) {
    this.setCursor(0), this.right.push(t);
  }
  /**
   * Inserts many items to the low-numbered side of the array;
   * moves the cursor to `0`.
   *
   * @param {Array<T>} items
   *   Items.
   * @returns {undefined}
   *   Nothing.
   */
  unshiftMany(t) {
    this.setCursor(0), hs(this.right, t.reverse());
  }
  /**
   * Move the cursor to a specific position in the array. Requires
   * time proportional to the distance moved.
   *
   * If `n < 0`, the cursor will end up at the beginning.
   * If `n > length`, the cursor will end up at the end.
   *
   * @param {number} n
   *   Position.
   * @return {undefined}
   *   Nothing.
   */
  setCursor(t) {
    if (!(t === this.left.length || t > this.left.length && this.right.length === 0 || t < 0 && this.left.length === 0))
      if (t < this.left.length) {
        const n = this.left.splice(t, Number.POSITIVE_INFINITY);
        hs(this.right, n.reverse());
      } else {
        const n = this.right.splice(this.left.length + this.right.length - t, Number.POSITIVE_INFINITY);
        hs(this.left, n.reverse());
      }
  }
}
function hs(e, t) {
  let n = 0;
  if (t.length < 1e4)
    e.push(...t);
  else
    for (; n < t.length; )
      e.push(...t.slice(n, n + 1e4)), n += 1e4;
}
function Tx(e) {
  const t = {};
  let n = -1, r, o, s, u, c, p, f;
  const b = new p6(e);
  for (; ++n < b.length; ) {
    for (; n in t; )
      n = t[n];
    if (r = b.get(n), n && r[1].type === "chunkFlow" && b.get(n - 1)[1].type === "listItemPrefix" && (p = r[1]._tokenizer.events, s = 0, s < p.length && p[s][1].type === "lineEndingBlank" && (s += 2), s < p.length && p[s][1].type === "content"))
      for (; ++s < p.length && p[s][1].type !== "content"; )
        p[s][1].type === "chunkText" && (p[s][1]._isInFirstContentOfListItem = !0, s++);
    if (r[0] === "enter")
      r[1].contentType && (Object.assign(t, f6(b, n)), n = t[n], f = !0);
    else if (r[1]._container) {
      for (s = n, o = void 0; s-- && (u = b.get(s), u[1].type === "lineEnding" || u[1].type === "lineEndingBlank"); )
        u[0] === "enter" && (o && (b.get(o)[1].type = "lineEndingBlank"), u[1].type = "lineEnding", o = s);
      o && (r[1].end = {
        ...b.get(o)[1].start
      }, c = b.slice(o, n), c.unshift(r), b.splice(o, n - o + 1, c));
    }
  }
  return $n(e, 0, Number.POSITIVE_INFINITY, b.slice(0)), !f;
}
function f6(e, t) {
  const n = e.get(t)[1], r = e.get(t)[2];
  let o = t - 1;
  const s = [], u = n._tokenizer || r.parser[n.contentType](n.start), c = u.events, p = [], f = {};
  let b, g, T = -1, y = n, _ = 0, A = 0;
  const R = [A];
  for (; y; ) {
    for (; e.get(++o)[1] !== y; )
      ;
    s.push(o), y._tokenizer || (b = r.sliceStream(y), y.next || b.push(null), g && u.defineSkip(y.start), y._isInFirstContentOfListItem && (u._gfmTasklistFirstContentOfListItem = !0), u.write(b), y._isInFirstContentOfListItem && (u._gfmTasklistFirstContentOfListItem = void 0)), g = y, y = y.next;
  }
  for (y = n; ++T < c.length; )
    // Find a void token that includes a break.
    c[T][0] === "exit" && c[T - 1][0] === "enter" && c[T][1].type === c[T - 1][1].type && c[T][1].start.line !== c[T][1].end.line && (A = T + 1, R.push(A), y._tokenizer = void 0, y.previous = void 0, y = y.next);
  for (u.events = [], y ? (y._tokenizer = void 0, y.previous = void 0) : R.pop(), T = R.length; T--; ) {
    const C = c.slice(R[T], R[T + 1]), w = s.pop();
    p.push([w, w + C.length - 1]), e.splice(w, 2, C);
  }
  for (p.reverse(), T = -1; ++T < p.length; )
    f[_ + p[T][0]] = _ + p[T][1], _ += p[T][1] - p[T][0] - 1;
  return f;
}
const h6 = {
  resolve: m6,
  tokenize: b6
}, g6 = {
  partial: !0,
  tokenize: E6
};
function m6(e) {
  return Tx(e), e;
}
function b6(e, t) {
  let n;
  return r;
  function r(c) {
    return e.enter("content"), n = e.enter("chunkContent", {
      contentType: "content"
    }), o(c);
  }
  function o(c) {
    return c === null ? s(c) : Ue(c) ? e.check(g6, u, s)(c) : (e.consume(c), o);
  }
  function s(c) {
    return e.exit("chunkContent"), e.exit("content"), t(c);
  }
  function u(c) {
    return e.consume(c), e.exit("chunkContent"), n.next = e.enter("chunkContent", {
      contentType: "content",
      previous: n
    }), n = n.next, o;
  }
}
function E6(e, t, n) {
  const r = this;
  return o;
  function o(u) {
    return e.exit("chunkContent"), e.enter("lineEnding"), e.consume(u), e.exit("lineEnding"), et(e, s, "linePrefix");
  }
  function s(u) {
    if (u === null || Ue(u))
      return n(u);
    const c = r.events[r.events.length - 1];
    return !r.parser.constructs.disable.null.includes("codeIndented") && c && c[1].type === "linePrefix" && c[2].sliceSerialize(c[1], !0).length >= 4 ? t(u) : e.interrupt(r.parser.constructs.flow, n, t)(u);
  }
}
function Sx(e, t, n, r, o, s, u, c, p) {
  const f = p || Number.POSITIVE_INFINITY;
  let b = 0;
  return g;
  function g(C) {
    return C === 60 ? (e.enter(r), e.enter(o), e.enter(s), e.consume(C), e.exit(s), T) : C === null || C === 32 || C === 41 || zu(C) ? n(C) : (e.enter(r), e.enter(u), e.enter(c), e.enter("chunkString", {
      contentType: "string"
    }), A(C));
  }
  function T(C) {
    return C === 62 ? (e.enter(s), e.consume(C), e.exit(s), e.exit(o), e.exit(r), t) : (e.enter(c), e.enter("chunkString", {
      contentType: "string"
    }), y(C));
  }
  function y(C) {
    return C === 62 ? (e.exit("chunkString"), e.exit(c), T(C)) : C === null || C === 60 || Ue(C) ? n(C) : (e.consume(C), C === 92 ? _ : y);
  }
  function _(C) {
    return C === 60 || C === 62 || C === 92 ? (e.consume(C), y) : y(C);
  }
  function A(C) {
    return !b && (C === null || C === 41 || st(C)) ? (e.exit("chunkString"), e.exit(c), e.exit(u), e.exit(r), t(C)) : b < f && C === 40 ? (e.consume(C), b++, A) : C === 41 ? (e.consume(C), b--, A) : C === null || C === 32 || C === 40 || zu(C) ? n(C) : (e.consume(C), C === 92 ? R : A);
  }
  function R(C) {
    return C === 40 || C === 41 || C === 92 ? (e.consume(C), A) : A(C);
  }
}
function _x(e, t, n, r, o, s) {
  const u = this;
  let c = 0, p;
  return f;
  function f(y) {
    return e.enter(r), e.enter(o), e.consume(y), e.exit(o), e.enter(s), b;
  }
  function b(y) {
    return c > 999 || y === null || y === 91 || y === 93 && !p || // To do: remove in the future once we’ve switched from
    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,
    // which doesn’t need this.
    // Hidden footnotes hook.
    /* c8 ignore next 3 */
    y === 94 && !c && "_hiddenFootnoteSupport" in u.parser.constructs ? n(y) : y === 93 ? (e.exit(s), e.enter(o), e.consume(y), e.exit(o), e.exit(r), t) : Ue(y) ? (e.enter("lineEnding"), e.consume(y), e.exit("lineEnding"), b) : (e.enter("chunkString", {
      contentType: "string"
    }), g(y));
  }
  function g(y) {
    return y === null || y === 91 || y === 93 || Ue(y) || c++ > 999 ? (e.exit("chunkString"), b(y)) : (e.consume(y), p || (p = !Ke(y)), y === 92 ? T : g);
  }
  function T(y) {
    return y === 91 || y === 92 || y === 93 ? (e.consume(y), c++, g) : g(y);
  }
}
function vx(e, t, n, r, o, s) {
  let u;
  return c;
  function c(T) {
    return T === 34 || T === 39 || T === 40 ? (e.enter(r), e.enter(o), e.consume(T), e.exit(o), u = T === 40 ? 41 : T, p) : n(T);
  }
  function p(T) {
    return T === u ? (e.enter(o), e.consume(T), e.exit(o), e.exit(r), t) : (e.enter(s), f(T));
  }
  function f(T) {
    return T === u ? (e.exit(s), p(u)) : T === null ? n(T) : Ue(T) ? (e.enter("lineEnding"), e.consume(T), e.exit("lineEnding"), et(e, f, "linePrefix")) : (e.enter("chunkString", {
      contentType: "string"
    }), b(T));
  }
  function b(T) {
    return T === u || T === null || Ue(T) ? (e.exit("chunkString"), f(T)) : (e.consume(T), T === 92 ? g : b);
  }
  function g(T) {
    return T === u || T === 92 ? (e.consume(T), b) : b(T);
  }
}
function Cs(e, t) {
  let n;
  return r;
  function r(o) {
    return Ue(o) ? (e.enter("lineEnding"), e.consume(o), e.exit("lineEnding"), n = !0, r) : Ke(o) ? et(e, r, n ? "linePrefix" : "lineSuffix")(o) : t(o);
  }
}
const y6 = {
  name: "definition",
  tokenize: S6
}, T6 = {
  partial: !0,
  tokenize: _6
};
function S6(e, t, n) {
  const r = this;
  let o;
  return s;
  function s(y) {
    return e.enter("definition"), u(y);
  }
  function u(y) {
    return _x.call(
      r,
      e,
      c,
      // Note: we don’t need to reset the way `markdown-rs` does.
      n,
      "definitionLabel",
      "definitionLabelMarker",
      "definitionLabelString"
    )(y);
  }
  function c(y) {
    return o = Er(r.sliceSerialize(r.events[r.events.length - 1][1]).slice(1, -1)), y === 58 ? (e.enter("definitionMarker"), e.consume(y), e.exit("definitionMarker"), p) : n(y);
  }
  function p(y) {
    return st(y) ? Cs(e, f)(y) : f(y);
  }
  function f(y) {
    return Sx(
      e,
      b,
      // Note: we don’t need to reset the way `markdown-rs` does.
      n,
      "definitionDestination",
      "definitionDestinationLiteral",
      "definitionDestinationLiteralMarker",
      "definitionDestinationRaw",
      "definitionDestinationString"
    )(y);
  }
  function b(y) {
    return e.attempt(T6, g, g)(y);
  }
  function g(y) {
    return Ke(y) ? et(e, T, "whitespace")(y) : T(y);
  }
  function T(y) {
    return y === null || Ue(y) ? (e.exit("definition"), r.parser.defined.push(o), t(y)) : n(y);
  }
}
function _6(e, t, n) {
  return r;
  function r(c) {
    return st(c) ? Cs(e, o)(c) : n(c);
  }
  function o(c) {
    return vx(e, s, n, "definitionTitle", "definitionTitleMarker", "definitionTitleString")(c);
  }
  function s(c) {
    return Ke(c) ? et(e, u, "whitespace")(c) : u(c);
  }
  function u(c) {
    return c === null || Ue(c) ? t(c) : n(c);
  }
}
const v6 = {
  name: "hardBreakEscape",
  tokenize: A6
};
function A6(e, t, n) {
  return r;
  function r(s) {
    return e.enter("hardBreakEscape"), e.consume(s), o;
  }
  function o(s) {
    return Ue(s) ? (e.exit("hardBreakEscape"), t(s)) : n(s);
  }
}
const k6 = {
  name: "headingAtx",
  resolve: C6,
  tokenize: w6
};
function C6(e, t) {
  let n = e.length - 2, r = 3, o, s;
  return e[r][1].type === "whitespace" && (r += 2), n - 2 > r && e[n][1].type === "whitespace" && (n -= 2), e[n][1].type === "atxHeadingSequence" && (r === n - 1 || n - 4 > r && e[n - 2][1].type === "whitespace") && (n -= r + 1 === n ? 2 : 4), n > r && (o = {
    type: "atxHeadingText",
    start: e[r][1].start,
    end: e[n][1].end
  }, s = {
    type: "chunkText",
    start: e[r][1].start,
    end: e[n][1].end,
    contentType: "text"
  }, $n(e, r, n - r + 1, [["enter", o, t], ["enter", s, t], ["exit", s, t], ["exit", o, t]])), e;
}
function w6(e, t, n) {
  let r = 0;
  return o;
  function o(b) {
    return e.enter("atxHeading"), s(b);
  }
  function s(b) {
    return e.enter("atxHeadingSequence"), u(b);
  }
  function u(b) {
    return b === 35 && r++ < 6 ? (e.consume(b), u) : b === null || st(b) ? (e.exit("atxHeadingSequence"), c(b)) : n(b);
  }
  function c(b) {
    return b === 35 ? (e.enter("atxHeadingSequence"), p(b)) : b === null || Ue(b) ? (e.exit("atxHeading"), t(b)) : Ke(b) ? et(e, c, "whitespace")(b) : (e.enter("atxHeadingText"), f(b));
  }
  function p(b) {
    return b === 35 ? (e.consume(b), p) : (e.exit("atxHeadingSequence"), c(b));
  }
  function f(b) {
    return b === null || b === 35 || st(b) ? (e.exit("atxHeadingText"), c(b)) : (e.consume(b), f);
  }
}
const I6 = [
  "address",
  "article",
  "aside",
  "base",
  "basefont",
  "blockquote",
  "body",
  "caption",
  "center",
  "col",
  "colgroup",
  "dd",
  "details",
  "dialog",
  "dir",
  "div",
  "dl",
  "dt",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "frame",
  "frameset",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hr",
  "html",
  "iframe",
  "legend",
  "li",
  "link",
  "main",
  "menu",
  "menuitem",
  "nav",
  "noframes",
  "ol",
  "optgroup",
  "option",
  "p",
  "param",
  "search",
  "section",
  "summary",
  "table",
  "tbody",
  "td",
  "tfoot",
  "th",
  "thead",
  "title",
  "tr",
  "track",
  "ul"
], o_ = ["pre", "script", "style", "textarea"], R6 = {
  concrete: !0,
  name: "htmlFlow",
  resolveTo: O6,
  tokenize: L6
}, x6 = {
  partial: !0,
  tokenize: M6
}, N6 = {
  partial: !0,
  tokenize: D6
};
function O6(e) {
  let t = e.length;
  for (; t-- && !(e[t][0] === "enter" && e[t][1].type === "htmlFlow"); )
    ;
  return t > 1 && e[t - 2][1].type === "linePrefix" && (e[t][1].start = e[t - 2][1].start, e[t + 1][1].start = e[t - 2][1].start, e.splice(t - 2, 2)), e;
}
function L6(e, t, n) {
  const r = this;
  let o, s, u, c, p;
  return f;
  function f(x) {
    return b(x);
  }
  function b(x) {
    return e.enter("htmlFlow"), e.enter("htmlFlowData"), e.consume(x), g;
  }
  function g(x) {
    return x === 33 ? (e.consume(x), T) : x === 47 ? (e.consume(x), s = !0, A) : x === 63 ? (e.consume(x), o = 3, r.interrupt ? t : I) : bn(x) ? (e.consume(x), u = String.fromCharCode(x), R) : n(x);
  }
  function T(x) {
    return x === 45 ? (e.consume(x), o = 2, y) : x === 91 ? (e.consume(x), o = 5, c = 0, _) : bn(x) ? (e.consume(x), o = 4, r.interrupt ? t : I) : n(x);
  }
  function y(x) {
    return x === 45 ? (e.consume(x), r.interrupt ? t : I) : n(x);
  }
  function _(x) {
    const Ee = "CDATA[";
    return x === Ee.charCodeAt(c++) ? (e.consume(x), c === Ee.length ? r.interrupt ? t : ne : _) : n(x);
  }
  function A(x) {
    return bn(x) ? (e.consume(x), u = String.fromCharCode(x), R) : n(x);
  }
  function R(x) {
    if (x === null || x === 47 || x === 62 || st(x)) {
      const Ee = x === 47, _e = u.toLowerCase();
      return !Ee && !s && o_.includes(_e) ? (o = 1, r.interrupt ? t(x) : ne(x)) : I6.includes(u.toLowerCase()) ? (o = 6, Ee ? (e.consume(x), C) : r.interrupt ? t(x) : ne(x)) : (o = 7, r.interrupt && !r.parser.lazy[r.now().line] ? n(x) : s ? w(x) : k(x));
    }
    return x === 45 || cn(x) ? (e.consume(x), u += String.fromCharCode(x), R) : n(x);
  }
  function C(x) {
    return x === 62 ? (e.consume(x), r.interrupt ? t : ne) : n(x);
  }
  function w(x) {
    return Ke(x) ? (e.consume(x), w) : M(x);
  }
  function k(x) {
    return x === 47 ? (e.consume(x), M) : x === 58 || x === 95 || bn(x) ? (e.consume(x), O) : Ke(x) ? (e.consume(x), k) : M(x);
  }
  function O(x) {
    return x === 45 || x === 46 || x === 58 || x === 95 || cn(x) ? (e.consume(x), O) : F(x);
  }
  function F(x) {
    return x === 61 ? (e.consume(x), v) : Ke(x) ? (e.consume(x), F) : k(x);
  }
  function v(x) {
    return x === null || x === 60 || x === 61 || x === 62 || x === 96 ? n(x) : x === 34 || x === 39 ? (e.consume(x), p = x, B) : Ke(x) ? (e.consume(x), v) : Y(x);
  }
  function B(x) {
    return x === p ? (e.consume(x), p = null, $) : x === null || Ue(x) ? n(x) : (e.consume(x), B);
  }
  function Y(x) {
    return x === null || x === 34 || x === 39 || x === 47 || x === 60 || x === 61 || x === 62 || x === 96 || st(x) ? F(x) : (e.consume(x), Y);
  }
  function $(x) {
    return x === 47 || x === 62 || Ke(x) ? k(x) : n(x);
  }
  function M(x) {
    return x === 62 ? (e.consume(x), V) : n(x);
  }
  function V(x) {
    return x === null || Ue(x) ? ne(x) : Ke(x) ? (e.consume(x), V) : n(x);
  }
  function ne(x) {
    return x === 45 && o === 2 ? (e.consume(x), Ne) : x === 60 && o === 1 ? (e.consume(x), ve) : x === 62 && o === 4 ? (e.consume(x), H) : x === 63 && o === 3 ? (e.consume(x), I) : x === 93 && o === 5 ? (e.consume(x), oe) : Ue(x) && (o === 6 || o === 7) ? (e.exit("htmlFlowData"), e.check(x6, W, se)(x)) : x === null || Ue(x) ? (e.exit("htmlFlowData"), se(x)) : (e.consume(x), ne);
  }
  function se(x) {
    return e.check(N6, de, W)(x);
  }
  function de(x) {
    return e.enter("lineEnding"), e.consume(x), e.exit("lineEnding"), be;
  }
  function be(x) {
    return x === null || Ue(x) ? se(x) : (e.enter("htmlFlowData"), ne(x));
  }
  function Ne(x) {
    return x === 45 ? (e.consume(x), I) : ne(x);
  }
  function ve(x) {
    return x === 47 ? (e.consume(x), u = "", J) : ne(x);
  }
  function J(x) {
    if (x === 62) {
      const Ee = u.toLowerCase();
      return o_.includes(Ee) ? (e.consume(x), H) : ne(x);
    }
    return bn(x) && u.length < 8 ? (e.consume(x), u += String.fromCharCode(x), J) : ne(x);
  }
  function oe(x) {
    return x === 93 ? (e.consume(x), I) : ne(x);
  }
  function I(x) {
    return x === 62 ? (e.consume(x), H) : x === 45 && o === 2 ? (e.consume(x), I) : ne(x);
  }
  function H(x) {
    return x === null || Ue(x) ? (e.exit("htmlFlowData"), W(x)) : (e.consume(x), H);
  }
  function W(x) {
    return e.exit("htmlFlow"), t(x);
  }
}
function D6(e, t, n) {
  const r = this;
  return o;
  function o(u) {
    return Ue(u) ? (e.enter("lineEnding"), e.consume(u), e.exit("lineEnding"), s) : n(u);
  }
  function s(u) {
    return r.parser.lazy[r.now().line] ? n(u) : t(u);
  }
}
function M6(e, t, n) {
  return r;
  function r(o) {
    return e.enter("lineEnding"), e.consume(o), e.exit("lineEnding"), e.attempt(Ks, t, n);
  }
}
const P6 = {
  name: "htmlText",
  tokenize: F6
};
function F6(e, t, n) {
  const r = this;
  let o, s, u;
  return c;
  function c(I) {
    return e.enter("htmlText"), e.enter("htmlTextData"), e.consume(I), p;
  }
  function p(I) {
    return I === 33 ? (e.consume(I), f) : I === 47 ? (e.consume(I), F) : I === 63 ? (e.consume(I), k) : bn(I) ? (e.consume(I), Y) : n(I);
  }
  function f(I) {
    return I === 45 ? (e.consume(I), b) : I === 91 ? (e.consume(I), s = 0, _) : bn(I) ? (e.consume(I), w) : n(I);
  }
  function b(I) {
    return I === 45 ? (e.consume(I), y) : n(I);
  }
  function g(I) {
    return I === null ? n(I) : I === 45 ? (e.consume(I), T) : Ue(I) ? (u = g, ve(I)) : (e.consume(I), g);
  }
  function T(I) {
    return I === 45 ? (e.consume(I), y) : g(I);
  }
  function y(I) {
    return I === 62 ? Ne(I) : I === 45 ? T(I) : g(I);
  }
  function _(I) {
    const H = "CDATA[";
    return I === H.charCodeAt(s++) ? (e.consume(I), s === H.length ? A : _) : n(I);
  }
  function A(I) {
    return I === null ? n(I) : I === 93 ? (e.consume(I), R) : Ue(I) ? (u = A, ve(I)) : (e.consume(I), A);
  }
  function R(I) {
    return I === 93 ? (e.consume(I), C) : A(I);
  }
  function C(I) {
    return I === 62 ? Ne(I) : I === 93 ? (e.consume(I), C) : A(I);
  }
  function w(I) {
    return I === null || I === 62 ? Ne(I) : Ue(I) ? (u = w, ve(I)) : (e.consume(I), w);
  }
  function k(I) {
    return I === null ? n(I) : I === 63 ? (e.consume(I), O) : Ue(I) ? (u = k, ve(I)) : (e.consume(I), k);
  }
  function O(I) {
    return I === 62 ? Ne(I) : k(I);
  }
  function F(I) {
    return bn(I) ? (e.consume(I), v) : n(I);
  }
  function v(I) {
    return I === 45 || cn(I) ? (e.consume(I), v) : B(I);
  }
  function B(I) {
    return Ue(I) ? (u = B, ve(I)) : Ke(I) ? (e.consume(I), B) : Ne(I);
  }
  function Y(I) {
    return I === 45 || cn(I) ? (e.consume(I), Y) : I === 47 || I === 62 || st(I) ? $(I) : n(I);
  }
  function $(I) {
    return I === 47 ? (e.consume(I), Ne) : I === 58 || I === 95 || bn(I) ? (e.consume(I), M) : Ue(I) ? (u = $, ve(I)) : Ke(I) ? (e.consume(I), $) : Ne(I);
  }
  function M(I) {
    return I === 45 || I === 46 || I === 58 || I === 95 || cn(I) ? (e.consume(I), M) : V(I);
  }
  function V(I) {
    return I === 61 ? (e.consume(I), ne) : Ue(I) ? (u = V, ve(I)) : Ke(I) ? (e.consume(I), V) : $(I);
  }
  function ne(I) {
    return I === null || I === 60 || I === 61 || I === 62 || I === 96 ? n(I) : I === 34 || I === 39 ? (e.consume(I), o = I, se) : Ue(I) ? (u = ne, ve(I)) : Ke(I) ? (e.consume(I), ne) : (e.consume(I), de);
  }
  function se(I) {
    return I === o ? (e.consume(I), o = void 0, be) : I === null ? n(I) : Ue(I) ? (u = se, ve(I)) : (e.consume(I), se);
  }
  function de(I) {
    return I === null || I === 34 || I === 39 || I === 60 || I === 61 || I === 96 ? n(I) : I === 47 || I === 62 || st(I) ? $(I) : (e.consume(I), de);
  }
  function be(I) {
    return I === 47 || I === 62 || st(I) ? $(I) : n(I);
  }
  function Ne(I) {
    return I === 62 ? (e.consume(I), e.exit("htmlTextData"), e.exit("htmlText"), t) : n(I);
  }
  function ve(I) {
    return e.exit("htmlTextData"), e.enter("lineEnding"), e.consume(I), e.exit("lineEnding"), J;
  }
  function J(I) {
    return Ke(I) ? et(e, oe, "linePrefix", r.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4)(I) : oe(I);
  }
  function oe(I) {
    return e.enter("htmlTextData"), u(I);
  }
}
const UE = {
  name: "labelEnd",
  resolveAll: $6,
  resolveTo: z6,
  tokenize: G6
}, B6 = {
  tokenize: q6
}, U6 = {
  tokenize: j6
}, H6 = {
  tokenize: V6
};
function $6(e) {
  let t = -1;
  const n = [];
  for (; ++t < e.length; ) {
    const r = e[t][1];
    if (n.push(e[t]), r.type === "labelImage" || r.type === "labelLink" || r.type === "labelEnd") {
      const o = r.type === "labelImage" ? 4 : 2;
      r.type = "data", t += o;
    }
  }
  return e.length !== n.length && $n(e, 0, e.length, n), e;
}
function z6(e, t) {
  let n = e.length, r = 0, o, s, u, c;
  for (; n--; )
    if (o = e[n][1], s) {
      if (o.type === "link" || o.type === "labelLink" && o._inactive)
        break;
      e[n][0] === "enter" && o.type === "labelLink" && (o._inactive = !0);
    } else if (u) {
      if (e[n][0] === "enter" && (o.type === "labelImage" || o.type === "labelLink") && !o._balanced && (s = n, o.type !== "labelLink")) {
        r = 2;
        break;
      }
    } else o.type === "labelEnd" && (u = n);
  const p = {
    type: e[s][1].type === "labelLink" ? "link" : "image",
    start: {
      ...e[s][1].start
    },
    end: {
      ...e[e.length - 1][1].end
    }
  }, f = {
    type: "label",
    start: {
      ...e[s][1].start
    },
    end: {
      ...e[u][1].end
    }
  }, b = {
    type: "labelText",
    start: {
      ...e[s + r + 2][1].end
    },
    end: {
      ...e[u - 2][1].start
    }
  };
  return c = [["enter", p, t], ["enter", f, t]], c = Zn(c, e.slice(s + 1, s + r + 3)), c = Zn(c, [["enter", b, t]]), c = Zn(c, sc(t.parser.constructs.insideSpan.null, e.slice(s + r + 4, u - 3), t)), c = Zn(c, [["exit", b, t], e[u - 2], e[u - 1], ["exit", f, t]]), c = Zn(c, e.slice(u + 1)), c = Zn(c, [["exit", p, t]]), $n(e, s, e.length, c), e;
}
function G6(e, t, n) {
  const r = this;
  let o = r.events.length, s, u;
  for (; o--; )
    if ((r.events[o][1].type === "labelImage" || r.events[o][1].type === "labelLink") && !r.events[o][1]._balanced) {
      s = r.events[o][1];
      break;
    }
  return c;
  function c(T) {
    return s ? s._inactive ? g(T) : (u = r.parser.defined.includes(Er(r.sliceSerialize({
      start: s.end,
      end: r.now()
    }))), e.enter("labelEnd"), e.enter("labelMarker"), e.consume(T), e.exit("labelMarker"), e.exit("labelEnd"), p) : n(T);
  }
  function p(T) {
    return T === 40 ? e.attempt(B6, b, u ? b : g)(T) : T === 91 ? e.attempt(U6, b, u ? f : g)(T) : u ? b(T) : g(T);
  }
  function f(T) {
    return e.attempt(H6, b, g)(T);
  }
  function b(T) {
    return t(T);
  }
  function g(T) {
    return s._balanced = !0, n(T);
  }
}
function q6(e, t, n) {
  return r;
  function r(g) {
    return e.enter("resource"), e.enter("resourceMarker"), e.consume(g), e.exit("resourceMarker"), o;
  }
  function o(g) {
    return st(g) ? Cs(e, s)(g) : s(g);
  }
  function s(g) {
    return g === 41 ? b(g) : Sx(e, u, c, "resourceDestination", "resourceDestinationLiteral", "resourceDestinationLiteralMarker", "resourceDestinationRaw", "resourceDestinationString", 32)(g);
  }
  function u(g) {
    return st(g) ? Cs(e, p)(g) : b(g);
  }
  function c(g) {
    return n(g);
  }
  function p(g) {
    return g === 34 || g === 39 || g === 40 ? vx(e, f, n, "resourceTitle", "resourceTitleMarker", "resourceTitleString")(g) : b(g);
  }
  function f(g) {
    return st(g) ? Cs(e, b)(g) : b(g);
  }
  function b(g) {
    return g === 41 ? (e.enter("resourceMarker"), e.consume(g), e.exit("resourceMarker"), e.exit("resource"), t) : n(g);
  }
}
function j6(e, t, n) {
  const r = this;
  return o;
  function o(c) {
    return _x.call(r, e, s, u, "reference", "referenceMarker", "referenceString")(c);
  }
  function s(c) {
    return r.parser.defined.includes(Er(r.sliceSerialize(r.events[r.events.length - 1][1]).slice(1, -1))) ? t(c) : n(c);
  }
  function u(c) {
    return n(c);
  }
}
function V6(e, t, n) {
  return r;
  function r(s) {
    return e.enter("reference"), e.enter("referenceMarker"), e.consume(s), e.exit("referenceMarker"), o;
  }
  function o(s) {
    return s === 93 ? (e.enter("referenceMarker"), e.consume(s), e.exit("referenceMarker"), e.exit("reference"), t) : n(s);
  }
}
const W6 = {
  name: "labelStartImage",
  resolveAll: UE.resolveAll,
  tokenize: Y6
};
function Y6(e, t, n) {
  const r = this;
  return o;
  function o(c) {
    return e.enter("labelImage"), e.enter("labelImageMarker"), e.consume(c), e.exit("labelImageMarker"), s;
  }
  function s(c) {
    return c === 91 ? (e.enter("labelMarker"), e.consume(c), e.exit("labelMarker"), e.exit("labelImage"), u) : n(c);
  }
  function u(c) {
    return c === 94 && "_hiddenFootnoteSupport" in r.parser.constructs ? n(c) : t(c);
  }
}
const K6 = {
  name: "labelStartLink",
  resolveAll: UE.resolveAll,
  tokenize: X6
};
function X6(e, t, n) {
  const r = this;
  return o;
  function o(u) {
    return e.enter("labelLink"), e.enter("labelMarker"), e.consume(u), e.exit("labelMarker"), e.exit("labelLink"), s;
  }
  function s(u) {
    return u === 94 && "_hiddenFootnoteSupport" in r.parser.constructs ? n(u) : t(u);
  }
}
const Ap = {
  name: "lineEnding",
  tokenize: Q6
};
function Q6(e, t) {
  return n;
  function n(r) {
    return e.enter("lineEnding"), e.consume(r), e.exit("lineEnding"), et(e, t, "linePrefix");
  }
}
const Ru = {
  name: "thematicBreak",
  tokenize: Z6
};
function Z6(e, t, n) {
  let r = 0, o;
  return s;
  function s(f) {
    return e.enter("thematicBreak"), u(f);
  }
  function u(f) {
    return o = f, c(f);
  }
  function c(f) {
    return f === o ? (e.enter("thematicBreakSequence"), p(f)) : r >= 3 && (f === null || Ue(f)) ? (e.exit("thematicBreak"), t(f)) : n(f);
  }
  function p(f) {
    return f === o ? (e.consume(f), r++, p) : (e.exit("thematicBreakSequence"), Ke(f) ? et(e, c, "whitespace")(f) : c(f));
  }
}
const Rn = {
  continuation: {
    tokenize: nP
  },
  exit: aP,
  name: "list",
  tokenize: tP
}, J6 = {
  partial: !0,
  tokenize: iP
}, eP = {
  partial: !0,
  tokenize: rP
};
function tP(e, t, n) {
  const r = this, o = r.events[r.events.length - 1];
  let s = o && o[1].type === "linePrefix" ? o[2].sliceSerialize(o[1], !0).length : 0, u = 0;
  return c;
  function c(y) {
    const _ = r.containerState.type || (y === 42 || y === 43 || y === 45 ? "listUnordered" : "listOrdered");
    if (_ === "listUnordered" ? !r.containerState.marker || y === r.containerState.marker : Qb(y)) {
      if (r.containerState.type || (r.containerState.type = _, e.enter(_, {
        _container: !0
      })), _ === "listUnordered")
        return e.enter("listItemPrefix"), y === 42 || y === 45 ? e.check(Ru, n, f)(y) : f(y);
      if (!r.interrupt || y === 49)
        return e.enter("listItemPrefix"), e.enter("listItemValue"), p(y);
    }
    return n(y);
  }
  function p(y) {
    return Qb(y) && ++u < 10 ? (e.consume(y), p) : (!r.interrupt || u < 2) && (r.containerState.marker ? y === r.containerState.marker : y === 41 || y === 46) ? (e.exit("listItemValue"), f(y)) : n(y);
  }
  function f(y) {
    return e.enter("listItemMarker"), e.consume(y), e.exit("listItemMarker"), r.containerState.marker = r.containerState.marker || y, e.check(
      Ks,
      // Can’t be empty when interrupting.
      r.interrupt ? n : b,
      e.attempt(J6, T, g)
    );
  }
  function b(y) {
    return r.containerState.initialBlankLine = !0, s++, T(y);
  }
  function g(y) {
    return Ke(y) ? (e.enter("listItemPrefixWhitespace"), e.consume(y), e.exit("listItemPrefixWhitespace"), T) : n(y);
  }
  function T(y) {
    return r.containerState.size = s + r.sliceSerialize(e.exit("listItemPrefix"), !0).length, t(y);
  }
}
function nP(e, t, n) {
  const r = this;
  return r.containerState._closeFlow = void 0, e.check(Ks, o, s);
  function o(c) {
    return r.containerState.furtherBlankLines = r.containerState.furtherBlankLines || r.containerState.initialBlankLine, et(e, t, "listItemIndent", r.containerState.size + 1)(c);
  }
  function s(c) {
    return r.containerState.furtherBlankLines || !Ke(c) ? (r.containerState.furtherBlankLines = void 0, r.containerState.initialBlankLine = void 0, u(c)) : (r.containerState.furtherBlankLines = void 0, r.containerState.initialBlankLine = void 0, e.attempt(eP, t, u)(c));
  }
  function u(c) {
    return r.containerState._closeFlow = !0, r.interrupt = void 0, et(e, e.attempt(Rn, t, n), "linePrefix", r.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4)(c);
  }
}
function rP(e, t, n) {
  const r = this;
  return et(e, o, "listItemIndent", r.containerState.size + 1);
  function o(s) {
    const u = r.events[r.events.length - 1];
    return u && u[1].type === "listItemIndent" && u[2].sliceSerialize(u[1], !0).length === r.containerState.size ? t(s) : n(s);
  }
}
function aP(e) {
  e.exit(this.containerState.type);
}
function iP(e, t, n) {
  const r = this;
  return et(e, o, "listItemPrefixWhitespace", r.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 5);
  function o(s) {
    const u = r.events[r.events.length - 1];
    return !Ke(s) && u && u[1].type === "listItemPrefixWhitespace" ? t(s) : n(s);
  }
}
const s_ = {
  name: "setextUnderline",
  resolveTo: oP,
  tokenize: sP
};
function oP(e, t) {
  let n = e.length, r, o, s;
  for (; n--; )
    if (e[n][0] === "enter") {
      if (e[n][1].type === "content") {
        r = n;
        break;
      }
      e[n][1].type === "paragraph" && (o = n);
    } else
      e[n][1].type === "content" && e.splice(n, 1), !s && e[n][1].type === "definition" && (s = n);
  const u = {
    type: "setextHeading",
    start: {
      ...e[o][1].start
    },
    end: {
      ...e[e.length - 1][1].end
    }
  };
  return e[o][1].type = "setextHeadingText", s ? (e.splice(o, 0, ["enter", u, t]), e.splice(s + 1, 0, ["exit", e[r][1], t]), e[r][1].end = {
    ...e[s][1].end
  }) : e[r][1] = u, e.push(["exit", u, t]), e;
}
function sP(e, t, n) {
  const r = this;
  let o;
  return s;
  function s(f) {
    let b = r.events.length, g;
    for (; b--; )
      if (r.events[b][1].type !== "lineEnding" && r.events[b][1].type !== "linePrefix" && r.events[b][1].type !== "content") {
        g = r.events[b][1].type === "paragraph";
        break;
      }
    return !r.parser.lazy[r.now().line] && (r.interrupt || g) ? (e.enter("setextHeadingLine"), o = f, u(f)) : n(f);
  }
  function u(f) {
    return e.enter("setextHeadingLineSequence"), c(f);
  }
  function c(f) {
    return f === o ? (e.consume(f), c) : (e.exit("setextHeadingLineSequence"), Ke(f) ? et(e, p, "lineSuffix")(f) : p(f));
  }
  function p(f) {
    return f === null || Ue(f) ? (e.exit("setextHeadingLine"), t(f)) : n(f);
  }
}
const lP = {
  tokenize: uP
};
function uP(e) {
  const t = this, n = e.attempt(
    // Try to parse a blank line.
    Ks,
    r,
    // Try to parse initial flow (essentially, only code).
    e.attempt(this.parser.constructs.flowInitial, o, et(e, e.attempt(this.parser.constructs.flow, o, e.attempt(h6, o)), "linePrefix"))
  );
  return n;
  function r(s) {
    if (s === null) {
      e.consume(s);
      return;
    }
    return e.enter("lineEndingBlank"), e.consume(s), e.exit("lineEndingBlank"), t.currentConstruct = void 0, n;
  }
  function o(s) {
    if (s === null) {
      e.consume(s);
      return;
    }
    return e.enter("lineEnding"), e.consume(s), e.exit("lineEnding"), t.currentConstruct = void 0, n;
  }
}
const cP = {
  resolveAll: kx()
}, dP = Ax("string"), pP = Ax("text");
function Ax(e) {
  return {
    resolveAll: kx(e === "text" ? fP : void 0),
    tokenize: t
  };
  function t(n) {
    const r = this, o = this.parser.constructs[e], s = n.attempt(o, u, c);
    return u;
    function u(b) {
      return f(b) ? s(b) : c(b);
    }
    function c(b) {
      if (b === null) {
        n.consume(b);
        return;
      }
      return n.enter("data"), n.consume(b), p;
    }
    function p(b) {
      return f(b) ? (n.exit("data"), s(b)) : (n.consume(b), p);
    }
    function f(b) {
      if (b === null)
        return !0;
      const g = o[b];
      let T = -1;
      if (g)
        for (; ++T < g.length; ) {
          const y = g[T];
          if (!y.previous || y.previous.call(r, r.previous))
            return !0;
        }
      return !1;
    }
  }
}
function kx(e) {
  return t;
  function t(n, r) {
    let o = -1, s;
    for (; ++o <= n.length; )
      s === void 0 ? n[o] && n[o][1].type === "data" && (s = o, o++) : (!n[o] || n[o][1].type !== "data") && (o !== s + 2 && (n[s][1].end = n[o - 1][1].end, n.splice(s + 2, o - s - 2), o = s + 2), s = void 0);
    return e ? e(n, r) : n;
  }
}
function fP(e, t) {
  let n = 0;
  for (; ++n <= e.length; )
    if ((n === e.length || e[n][1].type === "lineEnding") && e[n - 1][1].type === "data") {
      const r = e[n - 1][1], o = t.sliceStream(r);
      let s = o.length, u = -1, c = 0, p;
      for (; s--; ) {
        const f = o[s];
        if (typeof f == "string") {
          for (u = f.length; f.charCodeAt(u - 1) === 32; )
            c++, u--;
          if (u) break;
          u = -1;
        } else if (f === -2)
          p = !0, c++;
        else if (f !== -1) {
          s++;
          break;
        }
      }
      if (c) {
        const f = {
          type: n === e.length || p || c < 2 ? "lineSuffix" : "hardBreakTrailing",
          start: {
            _bufferIndex: s ? u : r.start._bufferIndex + u,
            _index: r.start._index + s,
            line: r.end.line,
            column: r.end.column - c,
            offset: r.end.offset - c
          },
          end: {
            ...r.end
          }
        };
        r.end = {
          ...f.start
        }, r.start.offset === r.end.offset ? Object.assign(r, f) : (e.splice(n, 0, ["enter", f, t], ["exit", f, t]), n += 2);
      }
      n++;
    }
  return e;
}
const hP = {
  42: Rn,
  43: Rn,
  45: Rn,
  48: Rn,
  49: Rn,
  50: Rn,
  51: Rn,
  52: Rn,
  53: Rn,
  54: Rn,
  55: Rn,
  56: Rn,
  57: Rn,
  62: bx
}, gP = {
  91: y6
}, mP = {
  [-2]: vp,
  [-1]: vp,
  32: vp
}, bP = {
  35: k6,
  42: Ru,
  45: [s_, Ru],
  60: R6,
  61: s_,
  95: Ru,
  96: i_,
  126: i_
}, EP = {
  38: yx,
  92: Ex
}, yP = {
  [-5]: Ap,
  [-4]: Ap,
  [-3]: Ap,
  33: W6,
  38: yx,
  42: Zb,
  60: [KM, P6],
  91: K6,
  92: [v6, Ex],
  93: UE,
  95: Zb,
  96: l6
}, TP = {
  null: [Zb, cP]
}, SP = {
  null: [42, 95]
}, _P = {
  null: []
}, vP = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  attentionMarkers: SP,
  contentInitial: gP,
  disable: _P,
  document: hP,
  flow: bP,
  flowInitial: mP,
  insideSpan: TP,
  string: EP,
  text: yP
}, Symbol.toStringTag, { value: "Module" }));
function AP(e, t, n) {
  let r = {
    _bufferIndex: -1,
    _index: 0,
    line: n && n.line || 1,
    column: n && n.column || 1,
    offset: n && n.offset || 0
  };
  const o = {}, s = [];
  let u = [], c = [];
  const p = {
    attempt: B(F),
    check: B(v),
    consume: w,
    enter: k,
    exit: O,
    interrupt: B(v, {
      interrupt: !0
    })
  }, f = {
    code: null,
    containerState: {},
    defineSkip: A,
    events: [],
    now: _,
    parser: e,
    previous: null,
    sliceSerialize: T,
    sliceStream: y,
    write: g
  };
  let b = t.tokenize.call(f, p);
  return t.resolveAll && s.push(t), f;
  function g(V) {
    return u = Zn(u, V), R(), u[u.length - 1] !== null ? [] : (Y(t, 0), f.events = sc(s, f.events, f), f.events);
  }
  function T(V, ne) {
    return CP(y(V), ne);
  }
  function y(V) {
    return kP(u, V);
  }
  function _() {
    const {
      _bufferIndex: V,
      _index: ne,
      line: se,
      column: de,
      offset: be
    } = r;
    return {
      _bufferIndex: V,
      _index: ne,
      line: se,
      column: de,
      offset: be
    };
  }
  function A(V) {
    o[V.line] = V.column, M();
  }
  function R() {
    let V;
    for (; r._index < u.length; ) {
      const ne = u[r._index];
      if (typeof ne == "string")
        for (V = r._index, r._bufferIndex < 0 && (r._bufferIndex = 0); r._index === V && r._bufferIndex < ne.length; )
          C(ne.charCodeAt(r._bufferIndex));
      else
        C(ne);
    }
  }
  function C(V) {
    b = b(V);
  }
  function w(V) {
    Ue(V) ? (r.line++, r.column = 1, r.offset += V === -3 ? 2 : 1, M()) : V !== -1 && (r.column++, r.offset++), r._bufferIndex < 0 ? r._index++ : (r._bufferIndex++, r._bufferIndex === // Points w/ non-negative `_bufferIndex` reference
    // strings.
    /** @type {string} */
    u[r._index].length && (r._bufferIndex = -1, r._index++)), f.previous = V;
  }
  function k(V, ne) {
    const se = ne || {};
    return se.type = V, se.start = _(), f.events.push(["enter", se, f]), c.push(se), se;
  }
  function O(V) {
    const ne = c.pop();
    return ne.end = _(), f.events.push(["exit", ne, f]), ne;
  }
  function F(V, ne) {
    Y(V, ne.from);
  }
  function v(V, ne) {
    ne.restore();
  }
  function B(V, ne) {
    return se;
    function se(de, be, Ne) {
      let ve, J, oe, I;
      return Array.isArray(de) ? (
        /* c8 ignore next 1 */
        W(de)
      ) : "tokenize" in de ? (
        // Looks like a construct.
        W([
          /** @type {Construct} */
          de
        ])
      ) : H(de);
      function H(Te) {
        return Oe;
        function Oe(Me) {
          const He = Me !== null && Te[Me], Ze = Me !== null && Te.null, gt = [
            // To do: add more extension tests.
            /* c8 ignore next 2 */
            ...Array.isArray(He) ? He : He ? [He] : [],
            ...Array.isArray(Ze) ? Ze : Ze ? [Ze] : []
          ];
          return W(gt)(Me);
        }
      }
      function W(Te) {
        return ve = Te, J = 0, Te.length === 0 ? Ne : x(Te[J]);
      }
      function x(Te) {
        return Oe;
        function Oe(Me) {
          return I = $(), oe = Te, Te.partial || (f.currentConstruct = Te), Te.name && f.parser.constructs.disable.null.includes(Te.name) ? _e() : Te.tokenize.call(
            // If we do have fields, create an object w/ `context` as its
            // prototype.
            // This allows a “live binding”, which is needed for `interrupt`.
            ne ? Object.assign(Object.create(f), ne) : f,
            p,
            Ee,
            _e
          )(Me);
        }
      }
      function Ee(Te) {
        return V(oe, I), be;
      }
      function _e(Te) {
        return I.restore(), ++J < ve.length ? x(ve[J]) : Ne;
      }
    }
  }
  function Y(V, ne) {
    V.resolveAll && !s.includes(V) && s.push(V), V.resolve && $n(f.events, ne, f.events.length - ne, V.resolve(f.events.slice(ne), f)), V.resolveTo && (f.events = V.resolveTo(f.events, f));
  }
  function $() {
    const V = _(), ne = f.previous, se = f.currentConstruct, de = f.events.length, be = Array.from(c);
    return {
      from: de,
      restore: Ne
    };
    function Ne() {
      r = V, f.previous = ne, f.currentConstruct = se, f.events.length = de, c = be, M();
    }
  }
  function M() {
    r.line in o && r.column < 2 && (r.column = o[r.line], r.offset += o[r.line] - 1);
  }
}
function kP(e, t) {
  const n = t.start._index, r = t.start._bufferIndex, o = t.end._index, s = t.end._bufferIndex;
  let u;
  if (n === o)
    u = [e[n].slice(r, s)];
  else {
    if (u = e.slice(n, o), r > -1) {
      const c = u[0];
      typeof c == "string" ? u[0] = c.slice(r) : u.shift();
    }
    s > 0 && u.push(e[o].slice(0, s));
  }
  return u;
}
function CP(e, t) {
  let n = -1;
  const r = [];
  let o;
  for (; ++n < e.length; ) {
    const s = e[n];
    let u;
    if (typeof s == "string")
      u = s;
    else switch (s) {
      case -5: {
        u = "\r";
        break;
      }
      case -4: {
        u = `
`;
        break;
      }
      case -3: {
        u = `\r
`;
        break;
      }
      case -2: {
        u = t ? " " : "	";
        break;
      }
      case -1: {
        if (!t && o) continue;
        u = " ";
        break;
      }
      default:
        u = String.fromCharCode(s);
    }
    o = s === -2, r.push(u);
  }
  return r.join("");
}
function wP(e) {
  const r = {
    constructs: (
      /** @type {FullNormalizedExtension} */
      gx([vP, ...(e || {}).extensions || []])
    ),
    content: o(zM),
    defined: [],
    document: o(qM),
    flow: o(lP),
    lazy: {},
    string: o(dP),
    text: o(pP)
  };
  return r;
  function o(s) {
    return u;
    function u(c) {
      return AP(r, s, c);
    }
  }
}
function IP(e) {
  for (; !Tx(e); )
    ;
  return e;
}
const l_ = /[\0\t\n\r]/g;
function RP() {
  let e = 1, t = "", n = !0, r;
  return o;
  function o(s, u, c) {
    const p = [];
    let f, b, g, T, y;
    for (s = t + (typeof s == "string" ? s.toString() : new TextDecoder(u || void 0).decode(s)), g = 0, t = "", n && (s.charCodeAt(0) === 65279 && g++, n = void 0); g < s.length; ) {
      if (l_.lastIndex = g, f = l_.exec(s), T = f && f.index !== void 0 ? f.index : s.length, y = s.charCodeAt(T), !f) {
        t = s.slice(g);
        break;
      }
      if (y === 10 && g === T && r)
        p.push(-3), r = void 0;
      else
        switch (r && (p.push(-5), r = void 0), g < T && (p.push(s.slice(g, T)), e += T - g), y) {
          case 0: {
            p.push(65533), e++;
            break;
          }
          case 9: {
            for (b = Math.ceil(e / 4) * 4, p.push(-2); e++ < b; ) p.push(-1);
            break;
          }
          case 10: {
            p.push(-4), e = 1;
            break;
          }
          default:
            r = !0, e = 1;
        }
      g = T + 1;
    }
    return c && (r && p.push(-5), t && p.push(t), p.push(null)), p;
  }
}
const xP = /\\([!-/:-@[-`{-~])|&(#(?:\d{1,7}|x[\da-f]{1,6})|[\da-z]{1,31});/gi;
function NP(e) {
  return e.replace(xP, OP);
}
function OP(e, t, n) {
  if (t)
    return t;
  if (n.charCodeAt(0) === 35) {
    const o = n.charCodeAt(1), s = o === 120 || o === 88;
    return mx(n.slice(s ? 2 : 1), s ? 16 : 10);
  }
  return BE(n) || e;
}
const Cx = {}.hasOwnProperty;
function LP(e, t, n) {
  return typeof t != "string" && (n = t, t = void 0), DP(n)(IP(wP(n).document().write(RP()(e, t, !0))));
}
function DP(e) {
  const t = {
    transforms: [],
    canContainEols: ["emphasis", "fragment", "heading", "paragraph", "strong"],
    enter: {
      autolink: s(ar),
      autolinkProtocol: $,
      autolinkEmail: $,
      atxHeading: s(nr),
      blockQuote: s(Ze),
      characterEscape: $,
      characterReference: $,
      codeFenced: s(gt),
      codeFencedFenceInfo: u,
      codeFencedFenceMeta: u,
      codeIndented: s(gt, u),
      codeText: s(kt, u),
      codeTextData: $,
      data: $,
      codeFlowValue: $,
      definition: s(zt),
      definitionDestinationString: u,
      definitionLabelString: u,
      definitionTitleString: u,
      emphasis: s(Dr),
      hardBreakEscape: s(Gt),
      hardBreakTrailing: s(Gt),
      htmlFlow: s(rr, u),
      htmlFlowData: $,
      htmlText: s(rr, u),
      htmlTextData: $,
      image: s(yn),
      label: u,
      link: s(ar),
      listItem: s(Tn),
      listItemValue: T,
      listOrdered: s(qt, g),
      listUnordered: s(qt),
      paragraph: s(Sn),
      reference: x,
      referenceString: u,
      resourceDestinationString: u,
      resourceTitleString: u,
      setextHeading: s(nr),
      strong: s(re),
      thematicBreak: s(Pe)
    },
    exit: {
      atxHeading: p(),
      atxHeadingSequence: F,
      autolink: p(),
      autolinkEmail: He,
      autolinkProtocol: Me,
      blockQuote: p(),
      characterEscapeValue: M,
      characterReferenceMarkerHexadecimal: _e,
      characterReferenceMarkerNumeric: _e,
      characterReferenceValue: Te,
      characterReference: Oe,
      codeFenced: p(R),
      codeFencedFence: A,
      codeFencedFenceInfo: y,
      codeFencedFenceMeta: _,
      codeFlowValue: M,
      codeIndented: p(C),
      codeText: p(be),
      codeTextData: M,
      data: M,
      definition: p(),
      definitionDestinationString: O,
      definitionLabelString: w,
      definitionTitleString: k,
      emphasis: p(),
      hardBreakEscape: p(ne),
      hardBreakTrailing: p(ne),
      htmlFlow: p(se),
      htmlFlowData: M,
      htmlText: p(de),
      htmlTextData: M,
      image: p(ve),
      label: oe,
      labelText: J,
      lineEnding: V,
      link: p(Ne),
      listItem: p(),
      listOrdered: p(),
      listUnordered: p(),
      paragraph: p(),
      referenceString: Ee,
      resourceDestinationString: I,
      resourceTitleString: H,
      resource: W,
      setextHeading: p(Y),
      setextHeadingLineSequence: B,
      setextHeadingText: v,
      strong: p(),
      thematicBreak: p()
    }
  };
  wx(t, (e || {}).mdastExtensions || []);
  const n = {};
  return r;
  function r(Z) {
    let ae = {
      type: "root",
      children: []
    };
    const ye = {
      stack: [ae],
      tokenStack: [],
      config: t,
      enter: c,
      exit: f,
      buffer: u,
      resume: b,
      data: n
    }, De = [];
    let Ge = -1;
    for (; ++Ge < Z.length; )
      if (Z[Ge][1].type === "listOrdered" || Z[Ge][1].type === "listUnordered")
        if (Z[Ge][0] === "enter")
          De.push(Ge);
        else {
          const Je = De.pop();
          Ge = o(Z, Je, Ge);
        }
    for (Ge = -1; ++Ge < Z.length; ) {
      const Je = t[Z[Ge][0]];
      Cx.call(Je, Z[Ge][1].type) && Je[Z[Ge][1].type].call(Object.assign({
        sliceSerialize: Z[Ge][2].sliceSerialize
      }, ye), Z[Ge][1]);
    }
    if (ye.tokenStack.length > 0) {
      const Je = ye.tokenStack[ye.tokenStack.length - 1];
      (Je[1] || u_).call(ye, void 0, Je[0]);
    }
    for (ae.position = {
      start: Ea(Z.length > 0 ? Z[0][1].start : {
        line: 1,
        column: 1,
        offset: 0
      }),
      end: Ea(Z.length > 0 ? Z[Z.length - 2][1].end : {
        line: 1,
        column: 1,
        offset: 0
      })
    }, Ge = -1; ++Ge < t.transforms.length; )
      ae = t.transforms[Ge](ae) || ae;
    return ae;
  }
  function o(Z, ae, ye) {
    let De = ae - 1, Ge = -1, Je = !1, Ft, Nt, Ot, Bt;
    for (; ++De <= ye; ) {
      const Ct = Z[De];
      switch (Ct[1].type) {
        case "listUnordered":
        case "listOrdered":
        case "blockQuote": {
          Ct[0] === "enter" ? Ge++ : Ge--, Bt = void 0;
          break;
        }
        case "lineEndingBlank": {
          Ct[0] === "enter" && (Ft && !Bt && !Ge && !Ot && (Ot = De), Bt = void 0);
          break;
        }
        case "linePrefix":
        case "listItemValue":
        case "listItemMarker":
        case "listItemPrefix":
        case "listItemPrefixWhitespace":
          break;
        default:
          Bt = void 0;
      }
      if (!Ge && Ct[0] === "enter" && Ct[1].type === "listItemPrefix" || Ge === -1 && Ct[0] === "exit" && (Ct[1].type === "listUnordered" || Ct[1].type === "listOrdered")) {
        if (Ft) {
          let jt = De;
          for (Nt = void 0; jt--; ) {
            const _t = Z[jt];
            if (_t[1].type === "lineEnding" || _t[1].type === "lineEndingBlank") {
              if (_t[0] === "exit") continue;
              Nt && (Z[Nt][1].type = "lineEndingBlank", Je = !0), _t[1].type = "lineEnding", Nt = jt;
            } else if (!(_t[1].type === "linePrefix" || _t[1].type === "blockQuotePrefix" || _t[1].type === "blockQuotePrefixWhitespace" || _t[1].type === "blockQuoteMarker" || _t[1].type === "listItemIndent")) break;
          }
          Ot && (!Nt || Ot < Nt) && (Ft._spread = !0), Ft.end = Object.assign({}, Nt ? Z[Nt][1].start : Ct[1].end), Z.splice(Nt || De, 0, ["exit", Ft, Ct[2]]), De++, ye++;
        }
        if (Ct[1].type === "listItemPrefix") {
          const jt = {
            type: "listItem",
            _spread: !1,
            start: Object.assign({}, Ct[1].start),
            // @ts-expect-error: we’ll add `end` in a second.
            end: void 0
          };
          Ft = jt, Z.splice(De, 0, ["enter", jt, Ct[2]]), De++, ye++, Ot = void 0, Bt = !0;
        }
      }
    }
    return Z[ae][1]._spread = Je, ye;
  }
  function s(Z, ae) {
    return ye;
    function ye(De) {
      c.call(this, Z(De), De), ae && ae.call(this, De);
    }
  }
  function u() {
    this.stack.push({
      type: "fragment",
      children: []
    });
  }
  function c(Z, ae, ye) {
    this.stack[this.stack.length - 1].children.push(Z), this.stack.push(Z), this.tokenStack.push([ae, ye || void 0]), Z.position = {
      start: Ea(ae.start),
      // @ts-expect-error: `end` will be patched later.
      end: void 0
    };
  }
  function p(Z) {
    return ae;
    function ae(ye) {
      Z && Z.call(this, ye), f.call(this, ye);
    }
  }
  function f(Z, ae) {
    const ye = this.stack.pop(), De = this.tokenStack.pop();
    if (De)
      De[0].type !== Z.type && (ae ? ae.call(this, Z, De[0]) : (De[1] || u_).call(this, Z, De[0]));
    else throw new Error("Cannot close `" + Z.type + "` (" + ks({
      start: Z.start,
      end: Z.end
    }) + "): it’s not open");
    ye.position.end = Ea(Z.end);
  }
  function b() {
    return FE(this.stack.pop());
  }
  function g() {
    this.data.expectingFirstListItemValue = !0;
  }
  function T(Z) {
    if (this.data.expectingFirstListItemValue) {
      const ae = this.stack[this.stack.length - 2];
      ae.start = Number.parseInt(this.sliceSerialize(Z), 10), this.data.expectingFirstListItemValue = void 0;
    }
  }
  function y() {
    const Z = this.resume(), ae = this.stack[this.stack.length - 1];
    ae.lang = Z;
  }
  function _() {
    const Z = this.resume(), ae = this.stack[this.stack.length - 1];
    ae.meta = Z;
  }
  function A() {
    this.data.flowCodeInside || (this.buffer(), this.data.flowCodeInside = !0);
  }
  function R() {
    const Z = this.resume(), ae = this.stack[this.stack.length - 1];
    ae.value = Z.replace(/^(\r?\n|\r)|(\r?\n|\r)$/g, ""), this.data.flowCodeInside = void 0;
  }
  function C() {
    const Z = this.resume(), ae = this.stack[this.stack.length - 1];
    ae.value = Z.replace(/(\r?\n|\r)$/g, "");
  }
  function w(Z) {
    const ae = this.resume(), ye = this.stack[this.stack.length - 1];
    ye.label = ae, ye.identifier = Er(this.sliceSerialize(Z)).toLowerCase();
  }
  function k() {
    const Z = this.resume(), ae = this.stack[this.stack.length - 1];
    ae.title = Z;
  }
  function O() {
    const Z = this.resume(), ae = this.stack[this.stack.length - 1];
    ae.url = Z;
  }
  function F(Z) {
    const ae = this.stack[this.stack.length - 1];
    if (!ae.depth) {
      const ye = this.sliceSerialize(Z).length;
      ae.depth = ye;
    }
  }
  function v() {
    this.data.setextHeadingSlurpLineEnding = !0;
  }
  function B(Z) {
    const ae = this.stack[this.stack.length - 1];
    ae.depth = this.sliceSerialize(Z).codePointAt(0) === 61 ? 1 : 2;
  }
  function Y() {
    this.data.setextHeadingSlurpLineEnding = void 0;
  }
  function $(Z) {
    const ye = this.stack[this.stack.length - 1].children;
    let De = ye[ye.length - 1];
    (!De || De.type !== "text") && (De = Le(), De.position = {
      start: Ea(Z.start),
      // @ts-expect-error: we’ll add `end` later.
      end: void 0
    }, ye.push(De)), this.stack.push(De);
  }
  function M(Z) {
    const ae = this.stack.pop();
    ae.value += this.sliceSerialize(Z), ae.position.end = Ea(Z.end);
  }
  function V(Z) {
    const ae = this.stack[this.stack.length - 1];
    if (this.data.atHardBreak) {
      const ye = ae.children[ae.children.length - 1];
      ye.position.end = Ea(Z.end), this.data.atHardBreak = void 0;
      return;
    }
    !this.data.setextHeadingSlurpLineEnding && t.canContainEols.includes(ae.type) && ($.call(this, Z), M.call(this, Z));
  }
  function ne() {
    this.data.atHardBreak = !0;
  }
  function se() {
    const Z = this.resume(), ae = this.stack[this.stack.length - 1];
    ae.value = Z;
  }
  function de() {
    const Z = this.resume(), ae = this.stack[this.stack.length - 1];
    ae.value = Z;
  }
  function be() {
    const Z = this.resume(), ae = this.stack[this.stack.length - 1];
    ae.value = Z;
  }
  function Ne() {
    const Z = this.stack[this.stack.length - 1];
    if (this.data.inReference) {
      const ae = this.data.referenceType || "shortcut";
      Z.type += "Reference", Z.referenceType = ae, delete Z.url, delete Z.title;
    } else
      delete Z.identifier, delete Z.label;
    this.data.referenceType = void 0;
  }
  function ve() {
    const Z = this.stack[this.stack.length - 1];
    if (this.data.inReference) {
      const ae = this.data.referenceType || "shortcut";
      Z.type += "Reference", Z.referenceType = ae, delete Z.url, delete Z.title;
    } else
      delete Z.identifier, delete Z.label;
    this.data.referenceType = void 0;
  }
  function J(Z) {
    const ae = this.sliceSerialize(Z), ye = this.stack[this.stack.length - 2];
    ye.label = NP(ae), ye.identifier = Er(ae).toLowerCase();
  }
  function oe() {
    const Z = this.stack[this.stack.length - 1], ae = this.resume(), ye = this.stack[this.stack.length - 1];
    if (this.data.inReference = !0, ye.type === "link") {
      const De = Z.children;
      ye.children = De;
    } else
      ye.alt = ae;
  }
  function I() {
    const Z = this.resume(), ae = this.stack[this.stack.length - 1];
    ae.url = Z;
  }
  function H() {
    const Z = this.resume(), ae = this.stack[this.stack.length - 1];
    ae.title = Z;
  }
  function W() {
    this.data.inReference = void 0;
  }
  function x() {
    this.data.referenceType = "collapsed";
  }
  function Ee(Z) {
    const ae = this.resume(), ye = this.stack[this.stack.length - 1];
    ye.label = ae, ye.identifier = Er(this.sliceSerialize(Z)).toLowerCase(), this.data.referenceType = "full";
  }
  function _e(Z) {
    this.data.characterReferenceType = Z.type;
  }
  function Te(Z) {
    const ae = this.sliceSerialize(Z), ye = this.data.characterReferenceType;
    let De;
    ye ? (De = mx(ae, ye === "characterReferenceMarkerNumeric" ? 10 : 16), this.data.characterReferenceType = void 0) : De = BE(ae);
    const Ge = this.stack[this.stack.length - 1];
    Ge.value += De;
  }
  function Oe(Z) {
    const ae = this.stack.pop();
    ae.position.end = Ea(Z.end);
  }
  function Me(Z) {
    M.call(this, Z);
    const ae = this.stack[this.stack.length - 1];
    ae.url = this.sliceSerialize(Z);
  }
  function He(Z) {
    M.call(this, Z);
    const ae = this.stack[this.stack.length - 1];
    ae.url = "mailto:" + this.sliceSerialize(Z);
  }
  function Ze() {
    return {
      type: "blockquote",
      children: []
    };
  }
  function gt() {
    return {
      type: "code",
      lang: null,
      meta: null,
      value: ""
    };
  }
  function kt() {
    return {
      type: "inlineCode",
      value: ""
    };
  }
  function zt() {
    return {
      type: "definition",
      identifier: "",
      label: null,
      title: null,
      url: ""
    };
  }
  function Dr() {
    return {
      type: "emphasis",
      children: []
    };
  }
  function nr() {
    return {
      type: "heading",
      // @ts-expect-error `depth` will be set later.
      depth: 0,
      children: []
    };
  }
  function Gt() {
    return {
      type: "break"
    };
  }
  function rr() {
    return {
      type: "html",
      value: ""
    };
  }
  function yn() {
    return {
      type: "image",
      title: null,
      url: "",
      alt: null
    };
  }
  function ar() {
    return {
      type: "link",
      title: null,
      url: "",
      children: []
    };
  }
  function qt(Z) {
    return {
      type: "list",
      ordered: Z.type === "listOrdered",
      start: null,
      spread: Z._spread,
      children: []
    };
  }
  function Tn(Z) {
    return {
      type: "listItem",
      spread: Z._spread,
      checked: null,
      children: []
    };
  }
  function Sn() {
    return {
      type: "paragraph",
      children: []
    };
  }
  function re() {
    return {
      type: "strong",
      children: []
    };
  }
  function Le() {
    return {
      type: "text",
      value: ""
    };
  }
  function Pe() {
    return {
      type: "thematicBreak"
    };
  }
}
function Ea(e) {
  return {
    line: e.line,
    column: e.column,
    offset: e.offset
  };
}
function wx(e, t) {
  let n = -1;
  for (; ++n < t.length; ) {
    const r = t[n];
    Array.isArray(r) ? wx(e, r) : MP(e, r);
  }
}
function MP(e, t) {
  let n;
  for (n in t)
    if (Cx.call(t, n))
      switch (n) {
        case "canContainEols": {
          const r = t[n];
          r && e[n].push(...r);
          break;
        }
        case "transforms": {
          const r = t[n];
          r && e[n].push(...r);
          break;
        }
        case "enter":
        case "exit": {
          const r = t[n];
          r && Object.assign(e[n], r);
          break;
        }
      }
}
function u_(e, t) {
  throw e ? new Error("Cannot close `" + e.type + "` (" + ks({
    start: e.start,
    end: e.end
  }) + "): a different token (`" + t.type + "`, " + ks({
    start: t.start,
    end: t.end
  }) + ") is open") : new Error("Cannot close document, a token (`" + t.type + "`, " + ks({
    start: t.start,
    end: t.end
  }) + ") is still open");
}
function Ix(e) {
  const t = this;
  t.parser = n;
  function n(r) {
    return LP(r, {
      ...t.data("settings"),
      ...e,
      // Note: these options are not in the readme.
      // The goal is for them to be set by plugins on `data` instead of being
      // passed by users.
      extensions: t.data("micromarkExtensions") || [],
      mdastExtensions: t.data("fromMarkdownExtensions") || []
    });
  }
}
function PP(e, t) {
  const n = {
    type: "element",
    tagName: "blockquote",
    properties: {},
    children: e.wrap(e.all(t), !0)
  };
  return e.patch(t, n), e.applyData(t, n);
}
function FP(e, t) {
  const n = { type: "element", tagName: "br", properties: {}, children: [] };
  return e.patch(t, n), [e.applyData(t, n), { type: "text", value: `
` }];
}
function BP(e, t) {
  const n = t.value ? t.value + `
` : "", r = {};
  t.lang && (r.className = ["language-" + t.lang]);
  let o = {
    type: "element",
    tagName: "code",
    properties: r,
    children: [{ type: "text", value: n }]
  };
  return t.meta && (o.data = { meta: t.meta }), e.patch(t, o), o = e.applyData(t, o), o = { type: "element", tagName: "pre", properties: {}, children: [o] }, e.patch(t, o), o;
}
function UP(e, t) {
  const n = {
    type: "element",
    tagName: "del",
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, n), e.applyData(t, n);
}
function HP(e, t) {
  const n = {
    type: "element",
    tagName: "em",
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, n), e.applyData(t, n);
}
function $P(e, t) {
  const n = typeof e.options.clobberPrefix == "string" ? e.options.clobberPrefix : "user-content-", r = String(t.identifier).toUpperCase(), o = vo(r.toLowerCase()), s = e.footnoteOrder.indexOf(r);
  let u, c = e.footnoteCounts.get(r);
  c === void 0 ? (c = 0, e.footnoteOrder.push(r), u = e.footnoteOrder.length) : u = s + 1, c += 1, e.footnoteCounts.set(r, c);
  const p = {
    type: "element",
    tagName: "a",
    properties: {
      href: "#" + n + "fn-" + o,
      id: n + "fnref-" + o + (c > 1 ? "-" + c : ""),
      dataFootnoteRef: !0,
      ariaDescribedBy: ["footnote-label"]
    },
    children: [{ type: "text", value: String(u) }]
  };
  e.patch(t, p);
  const f = {
    type: "element",
    tagName: "sup",
    properties: {},
    children: [p]
  };
  return e.patch(t, f), e.applyData(t, f);
}
function zP(e, t) {
  const n = {
    type: "element",
    tagName: "h" + t.depth,
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, n), e.applyData(t, n);
}
function GP(e, t) {
  if (e.options.allowDangerousHtml) {
    const n = { type: "raw", value: t.value };
    return e.patch(t, n), e.applyData(t, n);
  }
}
function Rx(e, t) {
  const n = t.referenceType;
  let r = "]";
  if (n === "collapsed" ? r += "[]" : n === "full" && (r += "[" + (t.label || t.identifier) + "]"), t.type === "imageReference")
    return [{ type: "text", value: "![" + t.alt + r }];
  const o = e.all(t), s = o[0];
  s && s.type === "text" ? s.value = "[" + s.value : o.unshift({ type: "text", value: "[" });
  const u = o[o.length - 1];
  return u && u.type === "text" ? u.value += r : o.push({ type: "text", value: r }), o;
}
function qP(e, t) {
  const n = String(t.identifier).toUpperCase(), r = e.definitionById.get(n);
  if (!r)
    return Rx(e, t);
  const o = { src: vo(r.url || ""), alt: t.alt };
  r.title !== null && r.title !== void 0 && (o.title = r.title);
  const s = { type: "element", tagName: "img", properties: o, children: [] };
  return e.patch(t, s), e.applyData(t, s);
}
function jP(e, t) {
  const n = { src: vo(t.url) };
  t.alt !== null && t.alt !== void 0 && (n.alt = t.alt), t.title !== null && t.title !== void 0 && (n.title = t.title);
  const r = { type: "element", tagName: "img", properties: n, children: [] };
  return e.patch(t, r), e.applyData(t, r);
}
function VP(e, t) {
  const n = { type: "text", value: t.value.replace(/\r?\n|\r/g, " ") };
  e.patch(t, n);
  const r = {
    type: "element",
    tagName: "code",
    properties: {},
    children: [n]
  };
  return e.patch(t, r), e.applyData(t, r);
}
function WP(e, t) {
  const n = String(t.identifier).toUpperCase(), r = e.definitionById.get(n);
  if (!r)
    return Rx(e, t);
  const o = { href: vo(r.url || "") };
  r.title !== null && r.title !== void 0 && (o.title = r.title);
  const s = {
    type: "element",
    tagName: "a",
    properties: o,
    children: e.all(t)
  };
  return e.patch(t, s), e.applyData(t, s);
}
function YP(e, t) {
  const n = { href: vo(t.url) };
  t.title !== null && t.title !== void 0 && (n.title = t.title);
  const r = {
    type: "element",
    tagName: "a",
    properties: n,
    children: e.all(t)
  };
  return e.patch(t, r), e.applyData(t, r);
}
function KP(e, t, n) {
  const r = e.all(t), o = n ? XP(n) : xx(t), s = {}, u = [];
  if (typeof t.checked == "boolean") {
    const b = r[0];
    let g;
    b && b.type === "element" && b.tagName === "p" ? g = b : (g = { type: "element", tagName: "p", properties: {}, children: [] }, r.unshift(g)), g.children.length > 0 && g.children.unshift({ type: "text", value: " " }), g.children.unshift({
      type: "element",
      tagName: "input",
      properties: { type: "checkbox", checked: t.checked, disabled: !0 },
      children: []
    }), s.className = ["task-list-item"];
  }
  let c = -1;
  for (; ++c < r.length; ) {
    const b = r[c];
    (o || c !== 0 || b.type !== "element" || b.tagName !== "p") && u.push({ type: "text", value: `
` }), b.type === "element" && b.tagName === "p" && !o ? u.push(...b.children) : u.push(b);
  }
  const p = r[r.length - 1];
  p && (o || p.type !== "element" || p.tagName !== "p") && u.push({ type: "text", value: `
` });
  const f = { type: "element", tagName: "li", properties: s, children: u };
  return e.patch(t, f), e.applyData(t, f);
}
function XP(e) {
  let t = !1;
  if (e.type === "list") {
    t = e.spread || !1;
    const n = e.children;
    let r = -1;
    for (; !t && ++r < n.length; )
      t = xx(n[r]);
  }
  return t;
}
function xx(e) {
  const t = e.spread;
  return t ?? e.children.length > 1;
}
function QP(e, t) {
  const n = {}, r = e.all(t);
  let o = -1;
  for (typeof t.start == "number" && t.start !== 1 && (n.start = t.start); ++o < r.length; ) {
    const u = r[o];
    if (u.type === "element" && u.tagName === "li" && u.properties && Array.isArray(u.properties.className) && u.properties.className.includes("task-list-item")) {
      n.className = ["contains-task-list"];
      break;
    }
  }
  const s = {
    type: "element",
    tagName: t.ordered ? "ol" : "ul",
    properties: n,
    children: e.wrap(r, !0)
  };
  return e.patch(t, s), e.applyData(t, s);
}
function ZP(e, t) {
  const n = {
    type: "element",
    tagName: "p",
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, n), e.applyData(t, n);
}
function JP(e, t) {
  const n = { type: "root", children: e.wrap(e.all(t)) };
  return e.patch(t, n), e.applyData(t, n);
}
function eF(e, t) {
  const n = {
    type: "element",
    tagName: "strong",
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, n), e.applyData(t, n);
}
function tF(e, t) {
  const n = e.all(t), r = n.shift(), o = [];
  if (r) {
    const u = {
      type: "element",
      tagName: "thead",
      properties: {},
      children: e.wrap([r], !0)
    };
    e.patch(t.children[0], u), o.push(u);
  }
  if (n.length > 0) {
    const u = {
      type: "element",
      tagName: "tbody",
      properties: {},
      children: e.wrap(n, !0)
    }, c = Or(t.children[1]), p = ic(t.children[t.children.length - 1]);
    c && p && (u.position = { start: c, end: p }), o.push(u);
  }
  const s = {
    type: "element",
    tagName: "table",
    properties: {},
    children: e.wrap(o, !0)
  };
  return e.patch(t, s), e.applyData(t, s);
}
function nF(e, t, n) {
  const r = n ? n.children : void 0, s = (r ? r.indexOf(t) : 1) === 0 ? "th" : "td", u = n && n.type === "table" ? n.align : void 0, c = u ? u.length : t.children.length;
  let p = -1;
  const f = [];
  for (; ++p < c; ) {
    const g = t.children[p], T = {}, y = u ? u[p] : void 0;
    y && (T.align = y);
    let _ = { type: "element", tagName: s, properties: T, children: [] };
    g && (_.children = e.all(g), e.patch(g, _), _ = e.applyData(g, _)), f.push(_);
  }
  const b = {
    type: "element",
    tagName: "tr",
    properties: {},
    children: e.wrap(f, !0)
  };
  return e.patch(t, b), e.applyData(t, b);
}
function rF(e, t) {
  const n = {
    type: "element",
    tagName: "td",
    // Assume body cell.
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, n), e.applyData(t, n);
}
const c_ = 9, d_ = 32;
function aF(e) {
  const t = String(e), n = /\r?\n|\r/g;
  let r = n.exec(t), o = 0;
  const s = [];
  for (; r; )
    s.push(
      p_(t.slice(o, r.index), o > 0, !0),
      r[0]
    ), o = r.index + r[0].length, r = n.exec(t);
  return s.push(p_(t.slice(o), o > 0, !1)), s.join("");
}
function p_(e, t, n) {
  let r = 0, o = e.length;
  if (t) {
    let s = e.codePointAt(r);
    for (; s === c_ || s === d_; )
      r++, s = e.codePointAt(r);
  }
  if (n) {
    let s = e.codePointAt(o - 1);
    for (; s === c_ || s === d_; )
      o--, s = e.codePointAt(o - 1);
  }
  return o > r ? e.slice(r, o) : "";
}
function iF(e, t) {
  const n = { type: "text", value: aF(String(t.value)) };
  return e.patch(t, n), e.applyData(t, n);
}
function oF(e, t) {
  const n = {
    type: "element",
    tagName: "hr",
    properties: {},
    children: []
  };
  return e.patch(t, n), e.applyData(t, n);
}
const sF = {
  blockquote: PP,
  break: FP,
  code: BP,
  delete: UP,
  emphasis: HP,
  footnoteReference: $P,
  heading: zP,
  html: GP,
  imageReference: qP,
  image: jP,
  inlineCode: VP,
  linkReference: WP,
  link: YP,
  listItem: KP,
  list: QP,
  paragraph: ZP,
  // @ts-expect-error: root is different, but hard to type.
  root: JP,
  strong: eF,
  table: tF,
  tableCell: rF,
  tableRow: nF,
  text: iF,
  thematicBreak: oF,
  toml: fu,
  yaml: fu,
  definition: fu,
  footnoteDefinition: fu
};
function fu() {
}
const Nx = -1, lc = 0, Gu = 1, qu = 2, HE = 3, $E = 4, zE = 5, GE = 6, Ox = 7, Lx = 8, f_ = typeof self == "object" ? self : globalThis, lF = (e, t) => {
  const n = (o, s) => (e.set(s, o), o), r = (o) => {
    if (e.has(o))
      return e.get(o);
    const [s, u] = t[o];
    switch (s) {
      case lc:
      case Nx:
        return n(u, o);
      case Gu: {
        const c = n([], o);
        for (const p of u)
          c.push(r(p));
        return c;
      }
      case qu: {
        const c = n({}, o);
        for (const [p, f] of u)
          c[r(p)] = r(f);
        return c;
      }
      case HE:
        return n(new Date(u), o);
      case $E: {
        const { source: c, flags: p } = u;
        return n(new RegExp(c, p), o);
      }
      case zE: {
        const c = n(/* @__PURE__ */ new Map(), o);
        for (const [p, f] of u)
          c.set(r(p), r(f));
        return c;
      }
      case GE: {
        const c = n(/* @__PURE__ */ new Set(), o);
        for (const p of u)
          c.add(r(p));
        return c;
      }
      case Ox: {
        const { name: c, message: p } = u;
        return n(new f_[c](p), o);
      }
      case Lx:
        return n(BigInt(u), o);
      case "BigInt":
        return n(Object(BigInt(u)), o);
    }
    return n(new f_[s](u), o);
  };
  return r;
}, h_ = (e) => lF(/* @__PURE__ */ new Map(), e)(0), zi = "", { toString: uF } = {}, { keys: cF } = Object, gs = (e) => {
  const t = typeof e;
  if (t !== "object" || !e)
    return [lc, t];
  const n = uF.call(e).slice(8, -1);
  switch (n) {
    case "Array":
      return [Gu, zi];
    case "Object":
      return [qu, zi];
    case "Date":
      return [HE, zi];
    case "RegExp":
      return [$E, zi];
    case "Map":
      return [zE, zi];
    case "Set":
      return [GE, zi];
  }
  return n.includes("Array") ? [Gu, n] : n.includes("Error") ? [Ox, n] : [qu, n];
}, hu = ([e, t]) => e === lc && (t === "function" || t === "symbol"), dF = (e, t, n, r) => {
  const o = (u, c) => {
    const p = r.push(u) - 1;
    return n.set(c, p), p;
  }, s = (u) => {
    if (n.has(u))
      return n.get(u);
    let [c, p] = gs(u);
    switch (c) {
      case lc: {
        let b = u;
        switch (p) {
          case "bigint":
            c = Lx, b = u.toString();
            break;
          case "function":
          case "symbol":
            if (e)
              throw new TypeError("unable to serialize " + p);
            b = null;
            break;
          case "undefined":
            return o([Nx], u);
        }
        return o([c, b], u);
      }
      case Gu: {
        if (p)
          return o([p, [...u]], u);
        const b = [], g = o([c, b], u);
        for (const T of u)
          b.push(s(T));
        return g;
      }
      case qu: {
        if (p)
          switch (p) {
            case "BigInt":
              return o([p, u.toString()], u);
            case "Boolean":
            case "Number":
            case "String":
              return o([p, u.valueOf()], u);
          }
        if (t && "toJSON" in u)
          return s(u.toJSON());
        const b = [], g = o([c, b], u);
        for (const T of cF(u))
          (e || !hu(gs(u[T]))) && b.push([s(T), s(u[T])]);
        return g;
      }
      case HE:
        return o([c, u.toISOString()], u);
      case $E: {
        const { source: b, flags: g } = u;
        return o([c, { source: b, flags: g }], u);
      }
      case zE: {
        const b = [], g = o([c, b], u);
        for (const [T, y] of u)
          (e || !(hu(gs(T)) || hu(gs(y)))) && b.push([s(T), s(y)]);
        return g;
      }
      case GE: {
        const b = [], g = o([c, b], u);
        for (const T of u)
          (e || !hu(gs(T))) && b.push(s(T));
        return g;
      }
    }
    const { message: f } = u;
    return o([c, { name: p, message: f }], u);
  };
  return s;
}, g_ = (e, { json: t, lossy: n } = {}) => {
  const r = [];
  return dF(!(t || n), !!t, /* @__PURE__ */ new Map(), r)(e), r;
}, mo = typeof structuredClone == "function" ? (
  /* c8 ignore start */
  (e, t) => t && ("json" in t || "lossy" in t) ? h_(g_(e, t)) : structuredClone(e)
) : (e, t) => h_(g_(e, t));
function pF(e, t) {
  const n = [{ type: "text", value: "↩" }];
  return t > 1 && n.push({
    type: "element",
    tagName: "sup",
    properties: {},
    children: [{ type: "text", value: String(t) }]
  }), n;
}
function fF(e, t) {
  return "Back to reference " + (e + 1) + (t > 1 ? "-" + t : "");
}
function hF(e) {
  const t = typeof e.options.clobberPrefix == "string" ? e.options.clobberPrefix : "user-content-", n = e.options.footnoteBackContent || pF, r = e.options.footnoteBackLabel || fF, o = e.options.footnoteLabel || "Footnotes", s = e.options.footnoteLabelTagName || "h2", u = e.options.footnoteLabelProperties || {
    className: ["sr-only"]
  }, c = [];
  let p = -1;
  for (; ++p < e.footnoteOrder.length; ) {
    const f = e.footnoteById.get(
      e.footnoteOrder[p]
    );
    if (!f)
      continue;
    const b = e.all(f), g = String(f.identifier).toUpperCase(), T = vo(g.toLowerCase());
    let y = 0;
    const _ = [], A = e.footnoteCounts.get(g);
    for (; A !== void 0 && ++y <= A; ) {
      _.length > 0 && _.push({ type: "text", value: " " });
      let w = typeof n == "string" ? n : n(p, y);
      typeof w == "string" && (w = { type: "text", value: w }), _.push({
        type: "element",
        tagName: "a",
        properties: {
          href: "#" + t + "fnref-" + T + (y > 1 ? "-" + y : ""),
          dataFootnoteBackref: "",
          ariaLabel: typeof r == "string" ? r : r(p, y),
          className: ["data-footnote-backref"]
        },
        children: Array.isArray(w) ? w : [w]
      });
    }
    const R = b[b.length - 1];
    if (R && R.type === "element" && R.tagName === "p") {
      const w = R.children[R.children.length - 1];
      w && w.type === "text" ? w.value += " " : R.children.push({ type: "text", value: " " }), R.children.push(..._);
    } else
      b.push(..._);
    const C = {
      type: "element",
      tagName: "li",
      properties: { id: t + "fn-" + T },
      children: e.wrap(b, !0)
    };
    e.patch(f, C), c.push(C);
  }
  if (c.length !== 0)
    return {
      type: "element",
      tagName: "section",
      properties: { dataFootnotes: !0, className: ["footnotes"] },
      children: [
        {
          type: "element",
          tagName: s,
          properties: {
            ...mo(u),
            id: "footnote-label"
          },
          children: [{ type: "text", value: o }]
        },
        { type: "text", value: `
` },
        {
          type: "element",
          tagName: "ol",
          properties: {},
          children: e.wrap(c, !0)
        },
        { type: "text", value: `
` }
      ]
    };
}
const uc = (
  // Note: overloads in JSDoc can’t yet use different `@template`s.
  /**
   * @type {(
   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &
   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &
   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &
   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &
   *   ((test?: Test) => Check)
   * )}
   */
  /**
   * @param {Test} [test]
   * @returns {Check}
   */
  function(e) {
    if (e == null)
      return EF;
    if (typeof e == "function")
      return cc(e);
    if (typeof e == "object")
      return Array.isArray(e) ? gF(e) : mF(e);
    if (typeof e == "string")
      return bF(e);
    throw new Error("Expected function, string, or object as test");
  }
);
function gF(e) {
  const t = [];
  let n = -1;
  for (; ++n < e.length; )
    t[n] = uc(e[n]);
  return cc(r);
  function r(...o) {
    let s = -1;
    for (; ++s < t.length; )
      if (t[s].apply(this, o)) return !0;
    return !1;
  }
}
function mF(e) {
  const t = (
    /** @type {Record<string, unknown>} */
    e
  );
  return cc(n);
  function n(r) {
    const o = (
      /** @type {Record<string, unknown>} */
      /** @type {unknown} */
      r
    );
    let s;
    for (s in e)
      if (o[s] !== t[s]) return !1;
    return !0;
  }
}
function bF(e) {
  return cc(t);
  function t(n) {
    return n && n.type === e;
  }
}
function cc(e) {
  return t;
  function t(n, r, o) {
    return !!(yF(n) && e.call(
      this,
      n,
      typeof r == "number" ? r : void 0,
      o || void 0
    ));
  }
}
function EF() {
  return !0;
}
function yF(e) {
  return e !== null && typeof e == "object" && "type" in e;
}
const Dx = [], TF = !0, Jb = !1, SF = "skip";
function Mx(e, t, n, r) {
  let o;
  typeof t == "function" && typeof n != "function" ? (r = n, n = t) : o = t;
  const s = uc(o), u = r ? -1 : 1;
  c(e, void 0, [])();
  function c(p, f, b) {
    const g = (
      /** @type {Record<string, unknown>} */
      p && typeof p == "object" ? p : {}
    );
    if (typeof g.type == "string") {
      const y = (
        // `hast`
        typeof g.tagName == "string" ? g.tagName : (
          // `xast`
          typeof g.name == "string" ? g.name : void 0
        )
      );
      Object.defineProperty(T, "name", {
        value: "node (" + (p.type + (y ? "<" + y + ">" : "")) + ")"
      });
    }
    return T;
    function T() {
      let y = Dx, _, A, R;
      if ((!t || s(p, f, b[b.length - 1] || void 0)) && (y = _F(n(p, b)), y[0] === Jb))
        return y;
      if ("children" in p && p.children) {
        const C = (
          /** @type {UnistParent} */
          p
        );
        if (C.children && y[0] !== SF)
          for (A = (r ? C.children.length : -1) + u, R = b.concat(C); A > -1 && A < C.children.length; ) {
            const w = C.children[A];
            if (_ = c(w, A, R)(), _[0] === Jb)
              return _;
            A = typeof _[1] == "number" ? _[1] : A + u;
          }
      }
      return y;
    }
  }
}
function _F(e) {
  return Array.isArray(e) ? e : typeof e == "number" ? [TF, e] : e == null ? Dx : [e];
}
function dc(e, t, n, r) {
  let o, s, u;
  typeof t == "function" && typeof n != "function" ? (s = void 0, u = t, o = n) : (s = t, u = n, o = r), Mx(e, s, c, o);
  function c(p, f) {
    const b = f[f.length - 1], g = b ? b.children.indexOf(p) : void 0;
    return u(p, g, b);
  }
}
const eE = {}.hasOwnProperty, vF = {};
function AF(e, t) {
  const n = t || vF, r = /* @__PURE__ */ new Map(), o = /* @__PURE__ */ new Map(), s = /* @__PURE__ */ new Map(), u = { ...sF, ...n.handlers }, c = {
    all: f,
    applyData: CF,
    definitionById: r,
    footnoteById: o,
    footnoteCounts: s,
    footnoteOrder: [],
    handlers: u,
    one: p,
    options: n,
    patch: kF,
    wrap: IF
  };
  return dc(e, function(b) {
    if (b.type === "definition" || b.type === "footnoteDefinition") {
      const g = b.type === "definition" ? r : o, T = String(b.identifier).toUpperCase();
      g.has(T) || g.set(T, b);
    }
  }), c;
  function p(b, g) {
    const T = b.type, y = c.handlers[T];
    if (eE.call(c.handlers, T) && y)
      return y(c, b, g);
    if (c.options.passThrough && c.options.passThrough.includes(T)) {
      if ("children" in b) {
        const { children: A, ...R } = b, C = mo(R);
        return C.children = c.all(b), C;
      }
      return mo(b);
    }
    return (c.options.unknownHandler || wF)(c, b, g);
  }
  function f(b) {
    const g = [];
    if ("children" in b) {
      const T = b.children;
      let y = -1;
      for (; ++y < T.length; ) {
        const _ = c.one(T[y], b);
        if (_) {
          if (y && T[y - 1].type === "break" && (!Array.isArray(_) && _.type === "text" && (_.value = m_(_.value)), !Array.isArray(_) && _.type === "element")) {
            const A = _.children[0];
            A && A.type === "text" && (A.value = m_(A.value));
          }
          Array.isArray(_) ? g.push(..._) : g.push(_);
        }
      }
    }
    return g;
  }
}
function kF(e, t) {
  e.position && (t.position = pM(e));
}
function CF(e, t) {
  let n = t;
  if (e && e.data) {
    const r = e.data.hName, o = e.data.hChildren, s = e.data.hProperties;
    if (typeof r == "string")
      if (n.type === "element")
        n.tagName = r;
      else {
        const u = "children" in n ? n.children : [n];
        n = { type: "element", tagName: r, properties: {}, children: u };
      }
    n.type === "element" && s && Object.assign(n.properties, mo(s)), "children" in n && n.children && o !== null && o !== void 0 && (n.children = o);
  }
  return n;
}
function wF(e, t) {
  const n = t.data || {}, r = "value" in t && !(eE.call(n, "hProperties") || eE.call(n, "hChildren")) ? { type: "text", value: t.value } : {
    type: "element",
    tagName: "div",
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, r), e.applyData(t, r);
}
function IF(e, t) {
  const n = [];
  let r = -1;
  for (t && n.push({ type: "text", value: `
` }); ++r < e.length; )
    r && n.push({ type: "text", value: `
` }), n.push(e[r]);
  return t && e.length > 0 && n.push({ type: "text", value: `
` }), n;
}
function m_(e) {
  let t = 0, n = e.charCodeAt(t);
  for (; n === 9 || n === 32; )
    t++, n = e.charCodeAt(t);
  return e.slice(t);
}
function b_(e, t) {
  const n = AF(e, t), r = n.one(e, void 0), o = hF(n), s = Array.isArray(r) ? { type: "root", children: r } : r || { type: "root", children: [] };
  return o && s.children.push({ type: "text", value: `
` }, o), s;
}
function RF(e, t) {
  return e && "run" in e ? async function(n, r) {
    const o = (
      /** @type {HastRoot} */
      b_(n, { file: r, ...t })
    );
    await e.run(o, r);
  } : function(n, r) {
    return (
      /** @type {HastRoot} */
      b_(n, { file: r, ...e || t })
    );
  };
}
function E_(e) {
  if (e)
    throw e;
}
var kp, y_;
function xF() {
  if (y_) return kp;
  y_ = 1;
  var e = Object.prototype.hasOwnProperty, t = Object.prototype.toString, n = Object.defineProperty, r = Object.getOwnPropertyDescriptor, o = function(f) {
    return typeof Array.isArray == "function" ? Array.isArray(f) : t.call(f) === "[object Array]";
  }, s = function(f) {
    if (!f || t.call(f) !== "[object Object]")
      return !1;
    var b = e.call(f, "constructor"), g = f.constructor && f.constructor.prototype && e.call(f.constructor.prototype, "isPrototypeOf");
    if (f.constructor && !b && !g)
      return !1;
    var T;
    for (T in f)
      ;
    return typeof T > "u" || e.call(f, T);
  }, u = function(f, b) {
    n && b.name === "__proto__" ? n(f, b.name, {
      enumerable: !0,
      configurable: !0,
      value: b.newValue,
      writable: !0
    }) : f[b.name] = b.newValue;
  }, c = function(f, b) {
    if (b === "__proto__")
      if (e.call(f, b)) {
        if (r)
          return r(f, b).value;
      } else return;
    return f[b];
  };
  return kp = function p() {
    var f, b, g, T, y, _, A = arguments[0], R = 1, C = arguments.length, w = !1;
    for (typeof A == "boolean" && (w = A, A = arguments[1] || {}, R = 2), (A == null || typeof A != "object" && typeof A != "function") && (A = {}); R < C; ++R)
      if (f = arguments[R], f != null)
        for (b in f)
          g = c(A, b), T = c(f, b), A !== T && (w && T && (s(T) || (y = o(T))) ? (y ? (y = !1, _ = g && o(g) ? g : []) : _ = g && s(g) ? g : {}, u(A, { name: b, newValue: p(w, _, T) })) : typeof T < "u" && u(A, { name: b, newValue: T }));
    return A;
  }, kp;
}
var NF = xF();
const Cp = /* @__PURE__ */ To(NF);
function tE(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function OF() {
  const e = [], t = { run: n, use: r };
  return t;
  function n(...o) {
    let s = -1;
    const u = o.pop();
    if (typeof u != "function")
      throw new TypeError("Expected function as last argument, not " + u);
    c(null, ...o);
    function c(p, ...f) {
      const b = e[++s];
      let g = -1;
      if (p) {
        u(p);
        return;
      }
      for (; ++g < o.length; )
        (f[g] === null || f[g] === void 0) && (f[g] = o[g]);
      o = f, b ? LF(b, c)(...f) : u(null, ...f);
    }
  }
  function r(o) {
    if (typeof o != "function")
      throw new TypeError(
        "Expected `middelware` to be a function, not " + o
      );
    return e.push(o), t;
  }
}
function LF(e, t) {
  let n;
  return r;
  function r(...u) {
    const c = e.length > u.length;
    let p;
    c && u.push(o);
    try {
      p = e.apply(this, u);
    } catch (f) {
      const b = (
        /** @type {Error} */
        f
      );
      if (c && n)
        throw b;
      return o(b);
    }
    c || (p && p.then && typeof p.then == "function" ? p.then(s, o) : p instanceof Error ? o(p) : s(p));
  }
  function o(u, ...c) {
    n || (n = !0, t(u, ...c));
  }
  function s(u) {
    o(null, u);
  }
}
const kr = { basename: DF, dirname: MF, extname: PF, join: FF, sep: "/" };
function DF(e, t) {
  if (t !== void 0 && typeof t != "string")
    throw new TypeError('"ext" argument must be a string');
  Xs(e);
  let n = 0, r = -1, o = e.length, s;
  if (t === void 0 || t.length === 0 || t.length > e.length) {
    for (; o--; )
      if (e.codePointAt(o) === 47) {
        if (s) {
          n = o + 1;
          break;
        }
      } else r < 0 && (s = !0, r = o + 1);
    return r < 0 ? "" : e.slice(n, r);
  }
  if (t === e)
    return "";
  let u = -1, c = t.length - 1;
  for (; o--; )
    if (e.codePointAt(o) === 47) {
      if (s) {
        n = o + 1;
        break;
      }
    } else
      u < 0 && (s = !0, u = o + 1), c > -1 && (e.codePointAt(o) === t.codePointAt(c--) ? c < 0 && (r = o) : (c = -1, r = u));
  return n === r ? r = u : r < 0 && (r = e.length), e.slice(n, r);
}
function MF(e) {
  if (Xs(e), e.length === 0)
    return ".";
  let t = -1, n = e.length, r;
  for (; --n; )
    if (e.codePointAt(n) === 47) {
      if (r) {
        t = n;
        break;
      }
    } else r || (r = !0);
  return t < 0 ? e.codePointAt(0) === 47 ? "/" : "." : t === 1 && e.codePointAt(0) === 47 ? "//" : e.slice(0, t);
}
function PF(e) {
  Xs(e);
  let t = e.length, n = -1, r = 0, o = -1, s = 0, u;
  for (; t--; ) {
    const c = e.codePointAt(t);
    if (c === 47) {
      if (u) {
        r = t + 1;
        break;
      }
      continue;
    }
    n < 0 && (u = !0, n = t + 1), c === 46 ? o < 0 ? o = t : s !== 1 && (s = 1) : o > -1 && (s = -1);
  }
  return o < 0 || n < 0 || // We saw a non-dot character immediately before the dot.
  s === 0 || // The (right-most) trimmed path component is exactly `..`.
  s === 1 && o === n - 1 && o === r + 1 ? "" : e.slice(o, n);
}
function FF(...e) {
  let t = -1, n;
  for (; ++t < e.length; )
    Xs(e[t]), e[t] && (n = n === void 0 ? e[t] : n + "/" + e[t]);
  return n === void 0 ? "." : BF(n);
}
function BF(e) {
  Xs(e);
  const t = e.codePointAt(0) === 47;
  let n = UF(e, !t);
  return n.length === 0 && !t && (n = "."), n.length > 0 && e.codePointAt(e.length - 1) === 47 && (n += "/"), t ? "/" + n : n;
}
function UF(e, t) {
  let n = "", r = 0, o = -1, s = 0, u = -1, c, p;
  for (; ++u <= e.length; ) {
    if (u < e.length)
      c = e.codePointAt(u);
    else {
      if (c === 47)
        break;
      c = 47;
    }
    if (c === 47) {
      if (!(o === u - 1 || s === 1)) if (o !== u - 1 && s === 2) {
        if (n.length < 2 || r !== 2 || n.codePointAt(n.length - 1) !== 46 || n.codePointAt(n.length - 2) !== 46) {
          if (n.length > 2) {
            if (p = n.lastIndexOf("/"), p !== n.length - 1) {
              p < 0 ? (n = "", r = 0) : (n = n.slice(0, p), r = n.length - 1 - n.lastIndexOf("/")), o = u, s = 0;
              continue;
            }
          } else if (n.length > 0) {
            n = "", r = 0, o = u, s = 0;
            continue;
          }
        }
        t && (n = n.length > 0 ? n + "/.." : "..", r = 2);
      } else
        n.length > 0 ? n += "/" + e.slice(o + 1, u) : n = e.slice(o + 1, u), r = u - o - 1;
      o = u, s = 0;
    } else c === 46 && s > -1 ? s++ : s = -1;
  }
  return n;
}
function Xs(e) {
  if (typeof e != "string")
    throw new TypeError(
      "Path must be a string. Received " + JSON.stringify(e)
    );
}
const HF = { cwd: $F };
function $F() {
  return "/";
}
function nE(e) {
  return !!(e !== null && typeof e == "object" && "href" in e && e.href && "protocol" in e && e.protocol && // @ts-expect-error: indexing is fine.
  e.auth === void 0);
}
function zF(e) {
  if (typeof e == "string")
    e = new URL(e);
  else if (!nE(e)) {
    const t = new TypeError(
      'The "path" argument must be of type string or an instance of URL. Received `' + e + "`"
    );
    throw t.code = "ERR_INVALID_ARG_TYPE", t;
  }
  if (e.protocol !== "file:") {
    const t = new TypeError("The URL must be of scheme file");
    throw t.code = "ERR_INVALID_URL_SCHEME", t;
  }
  return GF(e);
}
function GF(e) {
  if (e.hostname !== "") {
    const r = new TypeError(
      'File URL host must be "localhost" or empty on darwin'
    );
    throw r.code = "ERR_INVALID_FILE_URL_HOST", r;
  }
  const t = e.pathname;
  let n = -1;
  for (; ++n < t.length; )
    if (t.codePointAt(n) === 37 && t.codePointAt(n + 1) === 50) {
      const r = t.codePointAt(n + 2);
      if (r === 70 || r === 102) {
        const o = new TypeError(
          "File URL path must not include encoded / characters"
        );
        throw o.code = "ERR_INVALID_FILE_URL_PATH", o;
      }
    }
  return decodeURIComponent(t);
}
const wp = (
  /** @type {const} */
  [
    "history",
    "path",
    "basename",
    "stem",
    "extname",
    "dirname"
  ]
);
class Px {
  /**
   * Create a new virtual file.
   *
   * `options` is treated as:
   *
   * *   `string` or `Uint8Array` — `{value: options}`
   * *   `URL` — `{path: options}`
   * *   `VFile` — shallow copies its data over to the new file
   * *   `object` — all fields are shallow copied over to the new file
   *
   * Path related fields are set in the following order (least specific to
   * most specific): `history`, `path`, `basename`, `stem`, `extname`,
   * `dirname`.
   *
   * You cannot set `dirname` or `extname` without setting either `history`,
   * `path`, `basename`, or `stem` too.
   *
   * @param {Compatible | null | undefined} [value]
   *   File value.
   * @returns
   *   New instance.
   */
  constructor(t) {
    let n;
    t ? nE(t) ? n = { path: t } : typeof t == "string" || qF(t) ? n = { value: t } : n = t : n = {}, this.cwd = "cwd" in n ? "" : HF.cwd(), this.data = {}, this.history = [], this.messages = [], this.value, this.map, this.result, this.stored;
    let r = -1;
    for (; ++r < wp.length; ) {
      const s = wp[r];
      s in n && n[s] !== void 0 && n[s] !== null && (this[s] = s === "history" ? [...n[s]] : n[s]);
    }
    let o;
    for (o in n)
      wp.includes(o) || (this[o] = n[o]);
  }
  /**
   * Get the basename (including extname) (example: `'index.min.js'`).
   *
   * @returns {string | undefined}
   *   Basename.
   */
  get basename() {
    return typeof this.path == "string" ? kr.basename(this.path) : void 0;
  }
  /**
   * Set basename (including extname) (`'index.min.js'`).
   *
   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
   * on windows).
   * Cannot be nullified (use `file.path = file.dirname` instead).
   *
   * @param {string} basename
   *   Basename.
   * @returns {undefined}
   *   Nothing.
   */
  set basename(t) {
    Rp(t, "basename"), Ip(t, "basename"), this.path = kr.join(this.dirname || "", t);
  }
  /**
   * Get the parent path (example: `'~'`).
   *
   * @returns {string | undefined}
   *   Dirname.
   */
  get dirname() {
    return typeof this.path == "string" ? kr.dirname(this.path) : void 0;
  }
  /**
   * Set the parent path (example: `'~'`).
   *
   * Cannot be set if there’s no `path` yet.
   *
   * @param {string | undefined} dirname
   *   Dirname.
   * @returns {undefined}
   *   Nothing.
   */
  set dirname(t) {
    T_(this.basename, "dirname"), this.path = kr.join(t || "", this.basename);
  }
  /**
   * Get the extname (including dot) (example: `'.js'`).
   *
   * @returns {string | undefined}
   *   Extname.
   */
  get extname() {
    return typeof this.path == "string" ? kr.extname(this.path) : void 0;
  }
  /**
   * Set the extname (including dot) (example: `'.js'`).
   *
   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
   * on windows).
   * Cannot be set if there’s no `path` yet.
   *
   * @param {string | undefined} extname
   *   Extname.
   * @returns {undefined}
   *   Nothing.
   */
  set extname(t) {
    if (Ip(t, "extname"), T_(this.dirname, "extname"), t) {
      if (t.codePointAt(0) !== 46)
        throw new Error("`extname` must start with `.`");
      if (t.includes(".", 1))
        throw new Error("`extname` cannot contain multiple dots");
    }
    this.path = kr.join(this.dirname, this.stem + (t || ""));
  }
  /**
   * Get the full path (example: `'~/index.min.js'`).
   *
   * @returns {string}
   *   Path.
   */
  get path() {
    return this.history[this.history.length - 1];
  }
  /**
   * Set the full path (example: `'~/index.min.js'`).
   *
   * Cannot be nullified.
   * You can set a file URL (a `URL` object with a `file:` protocol) which will
   * be turned into a path with `url.fileURLToPath`.
   *
   * @param {URL | string} path
   *   Path.
   * @returns {undefined}
   *   Nothing.
   */
  set path(t) {
    nE(t) && (t = zF(t)), Rp(t, "path"), this.path !== t && this.history.push(t);
  }
  /**
   * Get the stem (basename w/o extname) (example: `'index.min'`).
   *
   * @returns {string | undefined}
   *   Stem.
   */
  get stem() {
    return typeof this.path == "string" ? kr.basename(this.path, this.extname) : void 0;
  }
  /**
   * Set the stem (basename w/o extname) (example: `'index.min'`).
   *
   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
   * on windows).
   * Cannot be nullified (use `file.path = file.dirname` instead).
   *
   * @param {string} stem
   *   Stem.
   * @returns {undefined}
   *   Nothing.
   */
  set stem(t) {
    Rp(t, "stem"), Ip(t, "stem"), this.path = kr.join(this.dirname || "", t + (this.extname || ""));
  }
  // Normal prototypal methods.
  /**
   * Create a fatal message for `reason` associated with the file.
   *
   * The `fatal` field of the message is set to `true` (error; file not usable)
   * and the `file` field is set to the current file path.
   * The message is added to the `messages` field on `file`.
   *
   * > 🪦 **Note**: also has obsolete signatures.
   *
   * @overload
   * @param {string} reason
   * @param {MessageOptions | null | undefined} [options]
   * @returns {never}
   *
   * @overload
   * @param {string} reason
   * @param {Node | NodeLike | null | undefined} parent
   * @param {string | null | undefined} [origin]
   * @returns {never}
   *
   * @overload
   * @param {string} reason
   * @param {Point | Position | null | undefined} place
   * @param {string | null | undefined} [origin]
   * @returns {never}
   *
   * @overload
   * @param {string} reason
   * @param {string | null | undefined} [origin]
   * @returns {never}
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {Node | NodeLike | null | undefined} parent
   * @param {string | null | undefined} [origin]
   * @returns {never}
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {Point | Position | null | undefined} place
   * @param {string | null | undefined} [origin]
   * @returns {never}
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {string | null | undefined} [origin]
   * @returns {never}
   *
   * @param {Error | VFileMessage | string} causeOrReason
   *   Reason for message, should use markdown.
   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]
   *   Configuration (optional).
   * @param {string | null | undefined} [origin]
   *   Place in code where the message originates (example:
   *   `'my-package:my-rule'` or `'my-rule'`).
   * @returns {never}
   *   Never.
   * @throws {VFileMessage}
   *   Message.
   */
  fail(t, n, r) {
    const o = this.message(t, n, r);
    throw o.fatal = !0, o;
  }
  /**
   * Create an info message for `reason` associated with the file.
   *
   * The `fatal` field of the message is set to `undefined` (info; change
   * likely not needed) and the `file` field is set to the current file path.
   * The message is added to the `messages` field on `file`.
   *
   * > 🪦 **Note**: also has obsolete signatures.
   *
   * @overload
   * @param {string} reason
   * @param {MessageOptions | null | undefined} [options]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {string} reason
   * @param {Node | NodeLike | null | undefined} parent
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {string} reason
   * @param {Point | Position | null | undefined} place
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {string} reason
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {Node | NodeLike | null | undefined} parent
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {Point | Position | null | undefined} place
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @param {Error | VFileMessage | string} causeOrReason
   *   Reason for message, should use markdown.
   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]
   *   Configuration (optional).
   * @param {string | null | undefined} [origin]
   *   Place in code where the message originates (example:
   *   `'my-package:my-rule'` or `'my-rule'`).
   * @returns {VFileMessage}
   *   Message.
   */
  info(t, n, r) {
    const o = this.message(t, n, r);
    return o.fatal = void 0, o;
  }
  /**
   * Create a message for `reason` associated with the file.
   *
   * The `fatal` field of the message is set to `false` (warning; change may be
   * needed) and the `file` field is set to the current file path.
   * The message is added to the `messages` field on `file`.
   *
   * > 🪦 **Note**: also has obsolete signatures.
   *
   * @overload
   * @param {string} reason
   * @param {MessageOptions | null | undefined} [options]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {string} reason
   * @param {Node | NodeLike | null | undefined} parent
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {string} reason
   * @param {Point | Position | null | undefined} place
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {string} reason
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {Node | NodeLike | null | undefined} parent
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {Point | Position | null | undefined} place
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @param {Error | VFileMessage | string} causeOrReason
   *   Reason for message, should use markdown.
   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]
   *   Configuration (optional).
   * @param {string | null | undefined} [origin]
   *   Place in code where the message originates (example:
   *   `'my-package:my-rule'` or `'my-rule'`).
   * @returns {VFileMessage}
   *   Message.
   */
  message(t, n, r) {
    const o = new dn(
      // @ts-expect-error: the overloads are fine.
      t,
      n,
      r
    );
    return this.path && (o.name = this.path + ":" + o.name, o.file = this.path), o.fatal = !1, this.messages.push(o), o;
  }
  /**
   * Serialize the file.
   *
   * > **Note**: which encodings are supported depends on the engine.
   * > For info on Node.js, see:
   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.
   *
   * @param {string | null | undefined} [encoding='utf8']
   *   Character encoding to understand `value` as when it’s a `Uint8Array`
   *   (default: `'utf-8'`).
   * @returns {string}
   *   Serialized file.
   */
  toString(t) {
    return this.value === void 0 ? "" : typeof this.value == "string" ? this.value : new TextDecoder(t || void 0).decode(this.value);
  }
}
function Ip(e, t) {
  if (e && e.includes(kr.sep))
    throw new Error(
      "`" + t + "` cannot be a path: did not expect `" + kr.sep + "`"
    );
}
function Rp(e, t) {
  if (!e)
    throw new Error("`" + t + "` cannot be empty");
}
function T_(e, t) {
  if (!e)
    throw new Error("Setting `" + t + "` requires `path` to be set too");
}
function qF(e) {
  return !!(e && typeof e == "object" && "byteLength" in e && "byteOffset" in e);
}
const jF = (
  /**
   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}
   */
  /** @type {unknown} */
  /**
   * @this {Function}
   * @param {string | symbol} property
   * @returns {(...parameters: Array<unknown>) => unknown}
   */
  function(e) {
    const r = (
      /** @type {Record<string | symbol, Function>} */
      // Prototypes do exist.
      // type-coverage:ignore-next-line
      this.constructor.prototype
    ), o = r[e], s = function() {
      return o.apply(s, arguments);
    };
    return Object.setPrototypeOf(s, r), s;
  }
), VF = {}.hasOwnProperty;
class qE extends jF {
  /**
   * Create a processor.
   */
  constructor() {
    super("copy"), this.Compiler = void 0, this.Parser = void 0, this.attachers = [], this.compiler = void 0, this.freezeIndex = -1, this.frozen = void 0, this.namespace = {}, this.parser = void 0, this.transformers = OF();
  }
  /**
   * Copy a processor.
   *
   * @deprecated
   *   This is a private internal method and should not be used.
   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
   *   New *unfrozen* processor ({@linkcode Processor}) that is
   *   configured to work the same as its ancestor.
   *   When the descendant processor is configured in the future it does not
   *   affect the ancestral processor.
   */
  copy() {
    const t = (
      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */
      new qE()
    );
    let n = -1;
    for (; ++n < this.attachers.length; ) {
      const r = this.attachers[n];
      t.use(...r);
    }
    return t.data(Cp(!0, {}, this.namespace)), t;
  }
  /**
   * Configure the processor with info available to all plugins.
   * Information is stored in an object.
   *
   * Typically, options can be given to a specific plugin, but sometimes it
   * makes sense to have information shared with several plugins.
   * For example, a list of HTML elements that are self-closing, which is
   * needed during all phases.
   *
   * > **Note**: setting information cannot occur on *frozen* processors.
   * > Call the processor first to create a new unfrozen processor.
   *
   * > **Note**: to register custom data in TypeScript, augment the
   * > {@linkcode Data} interface.
   *
   * @example
   *   This example show how to get and set info:
   *
   *   ```js
   *   import {unified} from 'unified'
   *
   *   const processor = unified().data('alpha', 'bravo')
   *
   *   processor.data('alpha') // => 'bravo'
   *
   *   processor.data() // => {alpha: 'bravo'}
   *
   *   processor.data({charlie: 'delta'})
   *
   *   processor.data() // => {charlie: 'delta'}
   *   ```
   *
   * @template {keyof Data} Key
   *
   * @overload
   * @returns {Data}
   *
   * @overload
   * @param {Data} dataset
   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
   *
   * @overload
   * @param {Key} key
   * @returns {Data[Key]}
   *
   * @overload
   * @param {Key} key
   * @param {Data[Key]} value
   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
   *
   * @param {Data | Key} [key]
   *   Key to get or set, or entire dataset to set, or nothing to get the
   *   entire dataset (optional).
   * @param {Data[Key]} [value]
   *   Value to set (optional).
   * @returns {unknown}
   *   The current processor when setting, the value at `key` when getting, or
   *   the entire dataset when getting without key.
   */
  data(t, n) {
    return typeof t == "string" ? arguments.length === 2 ? (Op("data", this.frozen), this.namespace[t] = n, this) : VF.call(this.namespace, t) && this.namespace[t] || void 0 : t ? (Op("data", this.frozen), this.namespace = t, this) : this.namespace;
  }
  /**
   * Freeze a processor.
   *
   * Frozen processors are meant to be extended and not to be configured
   * directly.
   *
   * When a processor is frozen it cannot be unfrozen.
   * New processors working the same way can be created by calling the
   * processor.
   *
   * It’s possible to freeze processors explicitly by calling `.freeze()`.
   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,
   * `.stringify()`, `.process()`, or `.processSync()` are called.
   *
   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
   *   The current processor.
   */
  freeze() {
    if (this.frozen)
      return this;
    const t = (
      /** @type {Processor} */
      /** @type {unknown} */
      this
    );
    for (; ++this.freezeIndex < this.attachers.length; ) {
      const [n, ...r] = this.attachers[this.freezeIndex];
      if (r[0] === !1)
        continue;
      r[0] === !0 && (r[0] = void 0);
      const o = n.call(t, ...r);
      typeof o == "function" && this.transformers.use(o);
    }
    return this.frozen = !0, this.freezeIndex = Number.POSITIVE_INFINITY, this;
  }
  /**
   * Parse text to a syntax tree.
   *
   * > **Note**: `parse` freezes the processor if not already *frozen*.
   *
   * > **Note**: `parse` performs the parse phase, not the run phase or other
   * > phases.
   *
   * @param {Compatible | undefined} [file]
   *   file to parse (optional); typically `string` or `VFile`; any value
   *   accepted as `x` in `new VFile(x)`.
   * @returns {ParseTree extends undefined ? Node : ParseTree}
   *   Syntax tree representing `file`.
   */
  parse(t) {
    this.freeze();
    const n = gu(t), r = this.parser || this.Parser;
    return xp("parse", r), r(String(n), n);
  }
  /**
   * Process the given file as configured on the processor.
   *
   * > **Note**: `process` freezes the processor if not already *frozen*.
   *
   * > **Note**: `process` performs the parse, run, and stringify phases.
   *
   * @overload
   * @param {Compatible | undefined} file
   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done
   * @returns {undefined}
   *
   * @overload
   * @param {Compatible | undefined} [file]
   * @returns {Promise<VFileWithOutput<CompileResult>>}
   *
   * @param {Compatible | undefined} [file]
   *   File (optional); typically `string` or `VFile`]; any value accepted as
   *   `x` in `new VFile(x)`.
   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]
   *   Callback (optional).
   * @returns {Promise<VFile> | undefined}
   *   Nothing if `done` is given.
   *   Otherwise a promise, rejected with a fatal error or resolved with the
   *   processed file.
   *
   *   The parsed, transformed, and compiled value is available at
   *   `file.value` (see note).
   *
   *   > **Note**: unified typically compiles by serializing: most
   *   > compilers return `string` (or `Uint8Array`).
   *   > Some compilers, such as the one configured with
   *   > [`rehype-react`][rehype-react], return other values (in this case, a
   *   > React tree).
   *   > If you’re using a compiler that doesn’t serialize, expect different
   *   > result values.
   *   >
   *   > To register custom results in TypeScript, add them to
   *   > {@linkcode CompileResultMap}.
   *
   *   [rehype-react]: https://github.com/rehypejs/rehype-react
   */
  process(t, n) {
    const r = this;
    return this.freeze(), xp("process", this.parser || this.Parser), Np("process", this.compiler || this.Compiler), n ? o(void 0, n) : new Promise(o);
    function o(s, u) {
      const c = gu(t), p = (
        /** @type {HeadTree extends undefined ? Node : HeadTree} */
        /** @type {unknown} */
        r.parse(c)
      );
      r.run(p, c, function(b, g, T) {
        if (b || !g || !T)
          return f(b);
        const y = (
          /** @type {CompileTree extends undefined ? Node : CompileTree} */
          /** @type {unknown} */
          g
        ), _ = r.stringify(y, T);
        KF(_) ? T.value = _ : T.result = _, f(
          b,
          /** @type {VFileWithOutput<CompileResult>} */
          T
        );
      });
      function f(b, g) {
        b || !g ? u(b) : s ? s(g) : n(void 0, g);
      }
    }
  }
  /**
   * Process the given file as configured on the processor.
   *
   * An error is thrown if asynchronous transforms are configured.
   *
   * > **Note**: `processSync` freezes the processor if not already *frozen*.
   *
   * > **Note**: `processSync` performs the parse, run, and stringify phases.
   *
   * @param {Compatible | undefined} [file]
   *   File (optional); typically `string` or `VFile`; any value accepted as
   *   `x` in `new VFile(x)`.
   * @returns {VFileWithOutput<CompileResult>}
   *   The processed file.
   *
   *   The parsed, transformed, and compiled value is available at
   *   `file.value` (see note).
   *
   *   > **Note**: unified typically compiles by serializing: most
   *   > compilers return `string` (or `Uint8Array`).
   *   > Some compilers, such as the one configured with
   *   > [`rehype-react`][rehype-react], return other values (in this case, a
   *   > React tree).
   *   > If you’re using a compiler that doesn’t serialize, expect different
   *   > result values.
   *   >
   *   > To register custom results in TypeScript, add them to
   *   > {@linkcode CompileResultMap}.
   *
   *   [rehype-react]: https://github.com/rehypejs/rehype-react
   */
  processSync(t) {
    let n = !1, r;
    return this.freeze(), xp("processSync", this.parser || this.Parser), Np("processSync", this.compiler || this.Compiler), this.process(t, o), __("processSync", "process", n), r;
    function o(s, u) {
      n = !0, E_(s), r = u;
    }
  }
  /**
   * Run *transformers* on a syntax tree.
   *
   * > **Note**: `run` freezes the processor if not already *frozen*.
   *
   * > **Note**: `run` performs the run phase, not other phases.
   *
   * @overload
   * @param {HeadTree extends undefined ? Node : HeadTree} tree
   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done
   * @returns {undefined}
   *
   * @overload
   * @param {HeadTree extends undefined ? Node : HeadTree} tree
   * @param {Compatible | undefined} file
   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done
   * @returns {undefined}
   *
   * @overload
   * @param {HeadTree extends undefined ? Node : HeadTree} tree
   * @param {Compatible | undefined} [file]
   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}
   *
   * @param {HeadTree extends undefined ? Node : HeadTree} tree
   *   Tree to transform and inspect.
   * @param {(
   *   RunCallback<TailTree extends undefined ? Node : TailTree> |
   *   Compatible
   * )} [file]
   *   File associated with `node` (optional); any value accepted as `x` in
   *   `new VFile(x)`.
   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]
   *   Callback (optional).
   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}
   *   Nothing if `done` is given.
   *   Otherwise, a promise rejected with a fatal error or resolved with the
   *   transformed tree.
   */
  run(t, n, r) {
    S_(t), this.freeze();
    const o = this.transformers;
    return !r && typeof n == "function" && (r = n, n = void 0), r ? s(void 0, r) : new Promise(s);
    function s(u, c) {
      const p = gu(n);
      o.run(t, p, f);
      function f(b, g, T) {
        const y = (
          /** @type {TailTree extends undefined ? Node : TailTree} */
          g || t
        );
        b ? c(b) : u ? u(y) : r(void 0, y, T);
      }
    }
  }
  /**
   * Run *transformers* on a syntax tree.
   *
   * An error is thrown if asynchronous transforms are configured.
   *
   * > **Note**: `runSync` freezes the processor if not already *frozen*.
   *
   * > **Note**: `runSync` performs the run phase, not other phases.
   *
   * @param {HeadTree extends undefined ? Node : HeadTree} tree
   *   Tree to transform and inspect.
   * @param {Compatible | undefined} [file]
   *   File associated with `node` (optional); any value accepted as `x` in
   *   `new VFile(x)`.
   * @returns {TailTree extends undefined ? Node : TailTree}
   *   Transformed tree.
   */
  runSync(t, n) {
    let r = !1, o;
    return this.run(t, n, s), __("runSync", "run", r), o;
    function s(u, c) {
      E_(u), o = c, r = !0;
    }
  }
  /**
   * Compile a syntax tree.
   *
   * > **Note**: `stringify` freezes the processor if not already *frozen*.
   *
   * > **Note**: `stringify` performs the stringify phase, not the run phase
   * > or other phases.
   *
   * @param {CompileTree extends undefined ? Node : CompileTree} tree
   *   Tree to compile.
   * @param {Compatible | undefined} [file]
   *   File associated with `node` (optional); any value accepted as `x` in
   *   `new VFile(x)`.
   * @returns {CompileResult extends undefined ? Value : CompileResult}
   *   Textual representation of the tree (see note).
   *
   *   > **Note**: unified typically compiles by serializing: most compilers
   *   > return `string` (or `Uint8Array`).
   *   > Some compilers, such as the one configured with
   *   > [`rehype-react`][rehype-react], return other values (in this case, a
   *   > React tree).
   *   > If you’re using a compiler that doesn’t serialize, expect different
   *   > result values.
   *   >
   *   > To register custom results in TypeScript, add them to
   *   > {@linkcode CompileResultMap}.
   *
   *   [rehype-react]: https://github.com/rehypejs/rehype-react
   */
  stringify(t, n) {
    this.freeze();
    const r = gu(n), o = this.compiler || this.Compiler;
    return Np("stringify", o), S_(t), o(t, r);
  }
  /**
   * Configure the processor to use a plugin, a list of usable values, or a
   * preset.
   *
   * If the processor is already using a plugin, the previous plugin
   * configuration is changed based on the options that are passed in.
   * In other words, the plugin is not added a second time.
   *
   * > **Note**: `use` cannot be called on *frozen* processors.
   * > Call the processor first to create a new unfrozen processor.
   *
   * @example
   *   There are many ways to pass plugins to `.use()`.
   *   This example gives an overview:
   *
   *   ```js
   *   import {unified} from 'unified'
   *
   *   unified()
   *     // Plugin with options:
   *     .use(pluginA, {x: true, y: true})
   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):
   *     .use(pluginA, {y: false, z: true})
   *     // Plugins:
   *     .use([pluginB, pluginC])
   *     // Two plugins, the second with options:
   *     .use([pluginD, [pluginE, {}]])
   *     // Preset with plugins and settings:
   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})
   *     // Settings only:
   *     .use({settings: {position: false}})
   *   ```
   *
   * @template {Array<unknown>} [Parameters=[]]
   * @template {Node | string | undefined} [Input=undefined]
   * @template [Output=Input]
   *
   * @overload
   * @param {Preset | null | undefined} [preset]
   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
   *
   * @overload
   * @param {PluggableList} list
   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
   *
   * @overload
   * @param {Plugin<Parameters, Input, Output>} plugin
   * @param {...(Parameters | [boolean])} parameters
   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}
   *
   * @param {PluggableList | Plugin | Preset | null | undefined} value
   *   Usable value.
   * @param {...unknown} parameters
   *   Parameters, when a plugin is given as a usable value.
   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
   *   Current processor.
   */
  use(t, ...n) {
    const r = this.attachers, o = this.namespace;
    if (Op("use", this.frozen), t != null) if (typeof t == "function")
      p(t, n);
    else if (typeof t == "object")
      Array.isArray(t) ? c(t) : u(t);
    else
      throw new TypeError("Expected usable value, not `" + t + "`");
    return this;
    function s(f) {
      if (typeof f == "function")
        p(f, []);
      else if (typeof f == "object")
        if (Array.isArray(f)) {
          const [b, ...g] = (
            /** @type {PluginTuple<Array<unknown>>} */
            f
          );
          p(b, g);
        } else
          u(f);
      else
        throw new TypeError("Expected usable value, not `" + f + "`");
    }
    function u(f) {
      if (!("plugins" in f) && !("settings" in f))
        throw new Error(
          "Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither"
        );
      c(f.plugins), f.settings && (o.settings = Cp(!0, o.settings, f.settings));
    }
    function c(f) {
      let b = -1;
      if (f != null) if (Array.isArray(f))
        for (; ++b < f.length; ) {
          const g = f[b];
          s(g);
        }
      else
        throw new TypeError("Expected a list of plugins, not `" + f + "`");
    }
    function p(f, b) {
      let g = -1, T = -1;
      for (; ++g < r.length; )
        if (r[g][0] === f) {
          T = g;
          break;
        }
      if (T === -1)
        r.push([f, ...b]);
      else if (b.length > 0) {
        let [y, ..._] = b;
        const A = r[T][1];
        tE(A) && tE(y) && (y = Cp(!0, A, y)), r[T] = [f, y, ..._];
      }
    }
  }
}
const WF = new qE().freeze();
function xp(e, t) {
  if (typeof t != "function")
    throw new TypeError("Cannot `" + e + "` without `parser`");
}
function Np(e, t) {
  if (typeof t != "function")
    throw new TypeError("Cannot `" + e + "` without `compiler`");
}
function Op(e, t) {
  if (t)
    throw new Error(
      "Cannot call `" + e + "` on a frozen processor.\nCreate a new processor first, by calling it: use `processor()` instead of `processor`."
    );
}
function S_(e) {
  if (!tE(e) || typeof e.type != "string")
    throw new TypeError("Expected node, got `" + e + "`");
}
function __(e, t, n) {
  if (!n)
    throw new Error(
      "`" + e + "` finished async. Use `" + t + "` instead"
    );
}
function gu(e) {
  return YF(e) ? e : new Px(e);
}
function YF(e) {
  return !!(e && typeof e == "object" && "message" in e && "messages" in e);
}
function KF(e) {
  return typeof e == "string" || XF(e);
}
function XF(e) {
  return !!(e && typeof e == "object" && "byteLength" in e && "byteOffset" in e);
}
const QF = "https://github.com/remarkjs/react-markdown/blob/main/changelog.md", v_ = [], A_ = { allowDangerousHtml: !0 }, ZF = /^(https?|ircs?|mailto|xmpp)$/i, JF = [
  { from: "astPlugins", id: "remove-buggy-html-in-markdown-parser" },
  { from: "allowDangerousHtml", id: "remove-buggy-html-in-markdown-parser" },
  {
    from: "allowNode",
    id: "replace-allownode-allowedtypes-and-disallowedtypes",
    to: "allowElement"
  },
  {
    from: "allowedTypes",
    id: "replace-allownode-allowedtypes-and-disallowedtypes",
    to: "allowedElements"
  },
  {
    from: "disallowedTypes",
    id: "replace-allownode-allowedtypes-and-disallowedtypes",
    to: "disallowedElements"
  },
  { from: "escapeHtml", id: "remove-buggy-html-in-markdown-parser" },
  { from: "includeElementIndex", id: "#remove-includeelementindex" },
  {
    from: "includeNodeIndex",
    id: "change-includenodeindex-to-includeelementindex"
  },
  { from: "linkTarget", id: "remove-linktarget" },
  { from: "plugins", id: "change-plugins-to-remarkplugins", to: "remarkPlugins" },
  { from: "rawSourcePos", id: "#remove-rawsourcepos" },
  { from: "renderers", id: "change-renderers-to-components", to: "components" },
  { from: "source", id: "change-source-to-children", to: "children" },
  { from: "sourcePos", id: "#remove-sourcepos" },
  { from: "transformImageUri", id: "#add-urltransform", to: "urlTransform" },
  { from: "transformLinkUri", id: "#add-urltransform", to: "urlTransform" }
];
function e5(e) {
  const t = e.allowedElements, n = e.allowElement, r = e.children || "", o = e.className, s = e.components, u = e.disallowedElements, c = e.rehypePlugins || v_, p = e.remarkPlugins || v_, f = e.remarkRehypeOptions ? { ...e.remarkRehypeOptions, ...A_ } : A_, b = e.skipHtml, g = e.unwrapDisallowed, T = e.urlTransform || t5, y = WF().use(Ix).use(p).use(RF, f).use(c), _ = new Px();
  typeof r == "string" && (_.value = r);
  for (const w of JF)
    Object.hasOwn(e, w.from) && ("" + w.from + (w.to ? "use `" + w.to + "` instead" : "remove it") + QF + w.id, void 0);
  const A = y.parse(_);
  let R = y.runSync(A, _);
  return o && (R = {
    type: "element",
    tagName: "div",
    properties: { className: o },
    // Assume no doctypes.
    children: (
      /** @type {Array<ElementContent>} */
      R.type === "root" ? R.children : [R]
    )
  }), dc(R, C), EM(R, {
    Fragment: L.Fragment,
    // @ts-expect-error
    // React components are allowed to return numbers,
    // but not according to the types in hast-util-to-jsx-runtime
    components: s,
    ignoreInvalidStyle: !0,
    jsx: L.jsx,
    jsxs: L.jsxs,
    passKeys: !0,
    passNode: !0
  });
  function C(w, k, O) {
    if (w.type === "raw" && O && typeof k == "number")
      return b ? O.children.splice(k, 1) : O.children[k] = { type: "text", value: w.value }, k;
    if (w.type === "element") {
      let F;
      for (F in _p)
        if (Object.hasOwn(_p, F) && Object.hasOwn(w.properties, F)) {
          const v = w.properties[F], B = _p[F];
          (B === null || B.includes(w.tagName)) && (w.properties[F] = T(String(v || ""), F, w));
        }
    }
    if (w.type === "element") {
      let F = t ? !t.includes(w.tagName) : u ? u.includes(w.tagName) : !1;
      if (!F && n && typeof k == "number" && (F = !n(w, k, O)), F && O && typeof k == "number")
        return g && w.children ? O.children.splice(k, 1, ...w.children) : O.children.splice(k, 1), k;
    }
  }
}
function t5(e) {
  const t = e.indexOf(":"), n = e.indexOf("?"), r = e.indexOf("#"), o = e.indexOf("/");
  return (
    // If there is no protocol, it’s relative.
    t === -1 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.
    o !== -1 && t > o || n !== -1 && t > n || r !== -1 && t > r || // It is a protocol, it should be allowed.
    ZF.test(e.slice(0, t)) ? e : ""
  );
}
function n5(e, t) {
  if (e == null) return {};
  var n = {};
  for (var r in e) if ({}.hasOwnProperty.call(e, r)) {
    if (t.includes(r)) continue;
    n[r] = e[r];
  }
  return n;
}
function r5(e, t) {
  if (e == null) return {};
  var n, r, o = n5(e, t);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (r = 0; r < s.length; r++) n = s[r], t.includes(n) || {}.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);
  }
  return o;
}
function rE(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var n = 0, r = Array(t); n < t; n++) r[n] = e[n];
  return r;
}
function a5(e) {
  if (Array.isArray(e)) return rE(e);
}
function i5(e) {
  if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null) return Array.from(e);
}
function o5(e, t) {
  if (e) {
    if (typeof e == "string") return rE(e, t);
    var n = {}.toString.call(e).slice(8, -1);
    return n === "Object" && e.constructor && (n = e.constructor.name), n === "Map" || n === "Set" ? Array.from(e) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? rE(e, t) : void 0;
  }
}
function s5() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function aE(e) {
  return a5(e) || i5(e) || o5(e) || s5();
}
function Bs(e) {
  "@babel/helpers - typeof";
  return Bs = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, Bs(e);
}
function l5(e, t) {
  if (Bs(e) != "object" || !e) return e;
  var n = e[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(e, t);
    if (Bs(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
function u5(e) {
  var t = l5(e, "string");
  return Bs(t) == "symbol" ? t : t + "";
}
function Fx(e, t, n) {
  return (t = u5(t)) in e ? Object.defineProperty(e, t, {
    value: n,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = n, e;
}
function iE() {
  return iE = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var r in n) ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
    }
    return e;
  }, iE.apply(null, arguments);
}
function k_(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(e);
    t && (r = r.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function ji(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2 ? k_(Object(n), !0).forEach(function(r) {
      Fx(e, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : k_(Object(n)).forEach(function(r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return e;
}
function c5(e) {
  var t = e.length;
  if (t === 0 || t === 1) return e;
  if (t === 2)
    return [e[0], e[1], "".concat(e[0], ".").concat(e[1]), "".concat(e[1], ".").concat(e[0])];
  if (t === 3)
    return [e[0], e[1], e[2], "".concat(e[0], ".").concat(e[1]), "".concat(e[0], ".").concat(e[2]), "".concat(e[1], ".").concat(e[0]), "".concat(e[1], ".").concat(e[2]), "".concat(e[2], ".").concat(e[0]), "".concat(e[2], ".").concat(e[1]), "".concat(e[0], ".").concat(e[1], ".").concat(e[2]), "".concat(e[0], ".").concat(e[2], ".").concat(e[1]), "".concat(e[1], ".").concat(e[0], ".").concat(e[2]), "".concat(e[1], ".").concat(e[2], ".").concat(e[0]), "".concat(e[2], ".").concat(e[0], ".").concat(e[1]), "".concat(e[2], ".").concat(e[1], ".").concat(e[0])];
  if (t >= 4)
    return [e[0], e[1], e[2], e[3], "".concat(e[0], ".").concat(e[1]), "".concat(e[0], ".").concat(e[2]), "".concat(e[0], ".").concat(e[3]), "".concat(e[1], ".").concat(e[0]), "".concat(e[1], ".").concat(e[2]), "".concat(e[1], ".").concat(e[3]), "".concat(e[2], ".").concat(e[0]), "".concat(e[2], ".").concat(e[1]), "".concat(e[2], ".").concat(e[3]), "".concat(e[3], ".").concat(e[0]), "".concat(e[3], ".").concat(e[1]), "".concat(e[3], ".").concat(e[2]), "".concat(e[0], ".").concat(e[1], ".").concat(e[2]), "".concat(e[0], ".").concat(e[1], ".").concat(e[3]), "".concat(e[0], ".").concat(e[2], ".").concat(e[1]), "".concat(e[0], ".").concat(e[2], ".").concat(e[3]), "".concat(e[0], ".").concat(e[3], ".").concat(e[1]), "".concat(e[0], ".").concat(e[3], ".").concat(e[2]), "".concat(e[1], ".").concat(e[0], ".").concat(e[2]), "".concat(e[1], ".").concat(e[0], ".").concat(e[3]), "".concat(e[1], ".").concat(e[2], ".").concat(e[0]), "".concat(e[1], ".").concat(e[2], ".").concat(e[3]), "".concat(e[1], ".").concat(e[3], ".").concat(e[0]), "".concat(e[1], ".").concat(e[3], ".").concat(e[2]), "".concat(e[2], ".").concat(e[0], ".").concat(e[1]), "".concat(e[2], ".").concat(e[0], ".").concat(e[3]), "".concat(e[2], ".").concat(e[1], ".").concat(e[0]), "".concat(e[2], ".").concat(e[1], ".").concat(e[3]), "".concat(e[2], ".").concat(e[3], ".").concat(e[0]), "".concat(e[2], ".").concat(e[3], ".").concat(e[1]), "".concat(e[3], ".").concat(e[0], ".").concat(e[1]), "".concat(e[3], ".").concat(e[0], ".").concat(e[2]), "".concat(e[3], ".").concat(e[1], ".").concat(e[0]), "".concat(e[3], ".").concat(e[1], ".").concat(e[2]), "".concat(e[3], ".").concat(e[2], ".").concat(e[0]), "".concat(e[3], ".").concat(e[2], ".").concat(e[1]), "".concat(e[0], ".").concat(e[1], ".").concat(e[2], ".").concat(e[3]), "".concat(e[0], ".").concat(e[1], ".").concat(e[3], ".").concat(e[2]), "".concat(e[0], ".").concat(e[2], ".").concat(e[1], ".").concat(e[3]), "".concat(e[0], ".").concat(e[2], ".").concat(e[3], ".").concat(e[1]), "".concat(e[0], ".").concat(e[3], ".").concat(e[1], ".").concat(e[2]), "".concat(e[0], ".").concat(e[3], ".").concat(e[2], ".").concat(e[1]), "".concat(e[1], ".").concat(e[0], ".").concat(e[2], ".").concat(e[3]), "".concat(e[1], ".").concat(e[0], ".").concat(e[3], ".").concat(e[2]), "".concat(e[1], ".").concat(e[2], ".").concat(e[0], ".").concat(e[3]), "".concat(e[1], ".").concat(e[2], ".").concat(e[3], ".").concat(e[0]), "".concat(e[1], ".").concat(e[3], ".").concat(e[0], ".").concat(e[2]), "".concat(e[1], ".").concat(e[3], ".").concat(e[2], ".").concat(e[0]), "".concat(e[2], ".").concat(e[0], ".").concat(e[1], ".").concat(e[3]), "".concat(e[2], ".").concat(e[0], ".").concat(e[3], ".").concat(e[1]), "".concat(e[2], ".").concat(e[1], ".").concat(e[0], ".").concat(e[3]), "".concat(e[2], ".").concat(e[1], ".").concat(e[3], ".").concat(e[0]), "".concat(e[2], ".").concat(e[3], ".").concat(e[0], ".").concat(e[1]), "".concat(e[2], ".").concat(e[3], ".").concat(e[1], ".").concat(e[0]), "".concat(e[3], ".").concat(e[0], ".").concat(e[1], ".").concat(e[2]), "".concat(e[3], ".").concat(e[0], ".").concat(e[2], ".").concat(e[1]), "".concat(e[3], ".").concat(e[1], ".").concat(e[0], ".").concat(e[2]), "".concat(e[3], ".").concat(e[1], ".").concat(e[2], ".").concat(e[0]), "".concat(e[3], ".").concat(e[2], ".").concat(e[0], ".").concat(e[1]), "".concat(e[3], ".").concat(e[2], ".").concat(e[1], ".").concat(e[0])];
}
var Lp = {};
function d5(e) {
  if (e.length === 0 || e.length === 1) return e;
  var t = e.join(".");
  return Lp[t] || (Lp[t] = c5(e)), Lp[t];
}
function p5(e) {
  var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n = arguments.length > 2 ? arguments[2] : void 0, r = e.filter(function(s) {
    return s !== "token";
  }), o = d5(r);
  return o.reduce(function(s, u) {
    return ji(ji({}, s), n[u]);
  }, t);
}
function C_(e) {
  return e.join(" ");
}
function f5(e, t) {
  var n = 0;
  return function(r) {
    return n += 1, r.map(function(o, s) {
      return Bx({
        node: o,
        stylesheet: e,
        useInlineStyles: t,
        key: "code-segment-".concat(n, "-").concat(s)
      });
    });
  };
}
function Bx(e) {
  var t = e.node, n = e.stylesheet, r = e.style, o = r === void 0 ? {} : r, s = e.useInlineStyles, u = e.key, c = t.properties, p = t.type, f = t.tagName, b = t.value;
  if (p === "text")
    return b;
  if (f) {
    var g = f5(n, s), T;
    if (!s)
      T = ji(ji({}, c), {}, {
        className: C_(c.className)
      });
    else {
      var y = Object.keys(n).reduce(function(C, w) {
        return w.split(".").forEach(function(k) {
          C.includes(k) || C.push(k);
        }), C;
      }, []), _ = c.className && c.className.includes("token") ? ["token"] : [], A = c.className && _.concat(c.className.filter(function(C) {
        return !y.includes(C);
      }));
      T = ji(ji({}, c), {}, {
        className: C_(A) || void 0,
        style: p5(c.className, Object.assign({}, c.style, o), n)
      });
    }
    var R = g(t.children);
    return /* @__PURE__ */ ot.createElement(f, iE({
      key: u
    }, T), R);
  }
}
const h5 = function(e, t) {
  var n = e.listLanguages();
  return n.indexOf(t) !== -1;
};
var g5 = ["language", "children", "style", "customStyle", "codeTagProps", "useInlineStyles", "showLineNumbers", "showInlineLineNumbers", "startingLineNumber", "lineNumberContainerStyle", "lineNumberStyle", "wrapLines", "wrapLongLines", "lineProps", "renderer", "PreTag", "CodeTag", "code", "astGenerator"];
function w_(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(e);
    t && (r = r.filter(function(o) {
      return Object.getOwnPropertyDescriptor(e, o).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function xa(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2 ? w_(Object(n), !0).forEach(function(r) {
      Fx(e, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : w_(Object(n)).forEach(function(r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return e;
}
var m5 = /\n/g;
function b5(e) {
  return e.match(m5);
}
function E5(e) {
  var t = e.lines, n = e.startingLineNumber, r = e.style;
  return t.map(function(o, s) {
    var u = s + n;
    return /* @__PURE__ */ ot.createElement("span", {
      key: "line-".concat(s),
      className: "react-syntax-highlighter-line-number",
      style: typeof r == "function" ? r(u) : r
    }, "".concat(u, `
`));
  });
}
function y5(e) {
  var t = e.codeString, n = e.codeStyle, r = e.containerStyle, o = r === void 0 ? {
    float: "left",
    paddingRight: "10px"
  } : r, s = e.numberStyle, u = s === void 0 ? {} : s, c = e.startingLineNumber;
  return /* @__PURE__ */ ot.createElement("code", {
    style: Object.assign({}, n, o)
  }, E5({
    lines: t.replace(/\n$/, "").split(`
`),
    style: u,
    startingLineNumber: c
  }));
}
function T5(e) {
  return "".concat(e.toString().length, ".25em");
}
function Ux(e, t) {
  return {
    type: "element",
    tagName: "span",
    properties: {
      key: "line-number--".concat(e),
      className: ["comment", "linenumber", "react-syntax-highlighter-line-number"],
      style: t
    },
    children: [{
      type: "text",
      value: e
    }]
  };
}
function Hx(e, t, n) {
  var r = {
    display: "inline-block",
    minWidth: T5(n),
    paddingRight: "1em",
    textAlign: "right",
    userSelect: "none"
  }, o = typeof e == "function" ? e(t) : e, s = xa(xa({}, r), o);
  return s;
}
function xu(e) {
  var t = e.children, n = e.lineNumber, r = e.lineNumberStyle, o = e.largestLineNumber, s = e.showInlineLineNumbers, u = e.lineProps, c = u === void 0 ? {} : u, p = e.className, f = p === void 0 ? [] : p, b = e.showLineNumbers, g = e.wrapLongLines, T = e.wrapLines, y = T === void 0 ? !1 : T, _ = y ? xa({}, typeof c == "function" ? c(n) : c) : {};
  if (_.className = _.className ? [].concat(aE(_.className.trim().split(/\s+/)), aE(f)) : f, n && s) {
    var A = Hx(r, n, o);
    t.unshift(Ux(n, A));
  }
  return g & b && (_.style = xa({
    display: "flex"
  }, _.style)), {
    type: "element",
    tagName: "span",
    properties: _,
    children: t
  };
}
function $x(e) {
  for (var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], r = 0; r < e.length; r++) {
    var o = e[r];
    if (o.type === "text")
      n.push(xu({
        children: [o],
        className: aE(new Set(t))
      }));
    else if (o.children) {
      var s = t.concat(o.properties.className);
      $x(o.children, s).forEach(function(u) {
        return n.push(u);
      });
    }
  }
  return n;
}
function S5(e, t, n, r, o, s, u, c, p) {
  var f, b = $x(e.value), g = [], T = -1, y = 0;
  function _(F, v) {
    var B = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
    return xu({
      children: F,
      lineNumber: v,
      lineNumberStyle: c,
      largestLineNumber: u,
      showInlineLineNumbers: o,
      lineProps: n,
      className: B,
      showLineNumbers: r,
      wrapLongLines: p,
      wrapLines: t
    });
  }
  function A(F, v) {
    if (r && v && o) {
      var B = Hx(c, v, u);
      F.unshift(Ux(v, B));
    }
    return F;
  }
  function R(F, v) {
    var B = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
    return t || B.length > 0 ? _(F, v, B) : A(F, v);
  }
  for (var C = function() {
    var v = b[y], B = v.children[0].value, Y = b5(B);
    if (Y) {
      var $ = B.split(`
`);
      $.forEach(function(M, V) {
        var ne = r && g.length + s, se = {
          type: "text",
          value: "".concat(M, `
`)
        };
        if (V === 0) {
          var de = b.slice(T + 1, y).concat(xu({
            children: [se],
            className: v.properties.className
          })), be = R(de, ne);
          g.push(be);
        } else if (V === $.length - 1) {
          var Ne = b[y + 1] && b[y + 1].children && b[y + 1].children[0], ve = {
            type: "text",
            value: "".concat(M)
          };
          if (Ne) {
            var J = xu({
              children: [ve],
              className: v.properties.className
            });
            b.splice(y + 1, 0, J);
          } else {
            var oe = [ve], I = R(oe, ne, v.properties.className);
            g.push(I);
          }
        } else {
          var H = [se], W = R(H, ne, v.properties.className);
          g.push(W);
        }
      }), T = y;
    }
    y++;
  }; y < b.length; )
    C();
  if (T !== b.length - 1) {
    var w = b.slice(T + 1, b.length);
    if (w && w.length) {
      var k = r && g.length + s, O = R(w, k);
      g.push(O);
    }
  }
  return t ? g : (f = []).concat.apply(f, g);
}
function _5(e) {
  var t = e.rows, n = e.stylesheet, r = e.useInlineStyles;
  return t.map(function(o, s) {
    return Bx({
      node: o,
      stylesheet: n,
      useInlineStyles: r,
      key: "code-segement".concat(s)
    });
  });
}
function zx(e) {
  return e && typeof e.highlightAuto < "u";
}
function v5(e) {
  var t = e.astGenerator, n = e.language, r = e.code, o = e.defaultCodeValue;
  if (zx(t)) {
    var s = h5(t, n);
    return n === "text" ? {
      value: o,
      language: "text"
    } : s ? t.highlight(n, r) : t.highlightAuto(r);
  }
  try {
    return n && n !== "text" ? {
      value: t.highlight(r, n)
    } : {
      value: o
    };
  } catch {
    return {
      value: o
    };
  }
}
function A5(e, t) {
  return function(r) {
    var o = r.language, s = r.children, u = r.style, c = u === void 0 ? t : u, p = r.customStyle, f = p === void 0 ? {} : p, b = r.codeTagProps, g = b === void 0 ? {
      className: o ? "language-".concat(o) : void 0,
      style: xa(xa({}, c['code[class*="language-"]']), c['code[class*="language-'.concat(o, '"]')])
    } : b, T = r.useInlineStyles, y = T === void 0 ? !0 : T, _ = r.showLineNumbers, A = _ === void 0 ? !1 : _, R = r.showInlineLineNumbers, C = R === void 0 ? !0 : R, w = r.startingLineNumber, k = w === void 0 ? 1 : w, O = r.lineNumberContainerStyle, F = r.lineNumberStyle, v = F === void 0 ? {} : F, B = r.wrapLines, Y = r.wrapLongLines, $ = Y === void 0 ? !1 : Y, M = r.lineProps, V = M === void 0 ? {} : M, ne = r.renderer, se = r.PreTag, de = se === void 0 ? "pre" : se, be = r.CodeTag, Ne = be === void 0 ? "code" : be, ve = r.code, J = ve === void 0 ? (Array.isArray(s) ? s[0] : s) || "" : ve, oe = r.astGenerator, I = r5(r, g5);
    oe = oe || e;
    var H = A ? /* @__PURE__ */ ot.createElement(y5, {
      containerStyle: O,
      codeStyle: g.style || {},
      numberStyle: v,
      startingLineNumber: k,
      codeString: J
    }) : null, W = c.hljs || c['pre[class*="language-"]'] || {
      backgroundColor: "#fff"
    }, x = zx(oe) ? "hljs" : "prismjs", Ee = y ? Object.assign({}, I, {
      style: Object.assign({}, W, f)
    }) : Object.assign({}, I, {
      className: I.className ? "".concat(x, " ").concat(I.className) : x,
      style: Object.assign({}, f)
    });
    if ($ ? g.style = xa({
      whiteSpace: "pre-wrap"
    }, g.style) : g.style = xa({
      whiteSpace: "pre"
    }, g.style), !oe)
      return /* @__PURE__ */ ot.createElement(de, Ee, H, /* @__PURE__ */ ot.createElement(Ne, g, J));
    (B === void 0 && ne || $) && (B = !0), ne = ne || _5;
    var _e = [{
      type: "text",
      value: J
    }], Te = v5({
      astGenerator: oe,
      language: o,
      code: J,
      defaultCodeValue: _e
    });
    Te.language === null && (Te.value = _e);
    var Oe = Te.value.length;
    Oe === 1 && Te.value[0].type === "text" && (Oe = Te.value[0].value.split(`
`).length);
    var Me = Oe + k, He = S5(Te, B, V, A, C, k, Me, v, $);
    return /* @__PURE__ */ ot.createElement(de, Ee, /* @__PURE__ */ ot.createElement(Ne, g, !C && H, ne({
      rows: He,
      stylesheet: c,
      useInlineStyles: y
    })));
  };
}
const k5 = ["abap", "abnf", "actionscript", "ada", "agda", "al", "antlr4", "apacheconf", "apex", "apl", "applescript", "aql", "arduino", "arff", "asciidoc", "asm6502", "asmatmel", "aspnet", "autohotkey", "autoit", "avisynth", "avro-idl", "bash", "basic", "batch", "bbcode", "bicep", "birb", "bison", "bnf", "brainfuck", "brightscript", "bro", "bsl", "c", "cfscript", "chaiscript", "cil", "clike", "clojure", "cmake", "cobol", "coffeescript", "concurnas", "coq", "cpp", "crystal", "csharp", "cshtml", "csp", "css-extras", "css", "csv", "cypher", "d", "dart", "dataweave", "dax", "dhall", "diff", "django", "dns-zone-file", "docker", "dot", "ebnf", "editorconfig", "eiffel", "ejs", "elixir", "elm", "erb", "erlang", "etlua", "excel-formula", "factor", "false", "firestore-security-rules", "flow", "fortran", "fsharp", "ftl", "gap", "gcode", "gdscript", "gedcom", "gherkin", "git", "glsl", "gml", "gn", "go-module", "go", "graphql", "groovy", "haml", "handlebars", "haskell", "haxe", "hcl", "hlsl", "hoon", "hpkp", "hsts", "http", "ichigojam", "icon", "icu-message-format", "idris", "iecst", "ignore", "inform7", "ini", "io", "j", "java", "javadoc", "javadoclike", "javascript", "javastacktrace", "jexl", "jolie", "jq", "js-extras", "js-templates", "jsdoc", "json", "json5", "jsonp", "jsstacktrace", "jsx", "julia", "keepalived", "keyman", "kotlin", "kumir", "kusto", "latex", "latte", "less", "lilypond", "liquid", "lisp", "livescript", "llvm", "log", "lolcode", "lua", "magma", "makefile", "markdown", "markup-templating", "markup", "matlab", "maxscript", "mel", "mermaid", "mizar", "mongodb", "monkey", "moonscript", "n1ql", "n4js", "nand2tetris-hdl", "naniscript", "nasm", "neon", "nevod", "nginx", "nim", "nix", "nsis", "objectivec", "ocaml", "opencl", "openqasm", "oz", "parigp", "parser", "pascal", "pascaligo", "pcaxis", "peoplecode", "perl", "php-extras", "php", "phpdoc", "plsql", "powerquery", "powershell", "processing", "prolog", "promql", "properties", "protobuf", "psl", "pug", "puppet", "pure", "purebasic", "purescript", "python", "q", "qml", "qore", "qsharp", "r", "racket", "reason", "regex", "rego", "renpy", "rest", "rip", "roboconf", "robotframework", "ruby", "rust", "sas", "sass", "scala", "scheme", "scss", "shell-session", "smali", "smalltalk", "smarty", "sml", "solidity", "solution-file", "soy", "sparql", "splunk-spl", "sqf", "sql", "squirrel", "stan", "stylus", "swift", "systemd", "t4-cs", "t4-templating", "t4-vb", "tap", "tcl", "textile", "toml", "tremor", "tsx", "tt2", "turtle", "twig", "typescript", "typoscript", "unrealscript", "uorazor", "uri", "v", "vala", "vbnet", "velocity", "verilog", "vhdl", "vim", "visual-basic", "warpscript", "wasm", "web-idl", "wiki", "wolfram", "wren", "xeora", "xml-doc", "xojo", "xquery", "yaml", "yang", "zig"];
var Dp, I_;
function C5() {
  if (I_) return Dp;
  I_ = 1, Dp = t;
  var e = Object.prototype.hasOwnProperty;
  function t() {
    for (var n = {}, r = 0; r < arguments.length; r++) {
      var o = arguments[r];
      for (var s in o)
        e.call(o, s) && (n[s] = o[s]);
    }
    return n;
  }
  return Dp;
}
var Mp, R_;
function Gx() {
  if (R_) return Mp;
  R_ = 1, Mp = t;
  var e = t.prototype;
  e.space = null, e.normal = {}, e.property = {};
  function t(n, r, o) {
    this.property = n, this.normal = r, o && (this.space = o);
  }
  return Mp;
}
var Pp, x_;
function w5() {
  if (x_) return Pp;
  x_ = 1;
  var e = C5(), t = Gx();
  Pp = n;
  function n(r) {
    for (var o = r.length, s = [], u = [], c = -1, p, f; ++c < o; )
      p = r[c], s.push(p.property), u.push(p.normal), f = p.space;
    return new t(
      e.apply(null, s),
      e.apply(null, u),
      f
    );
  }
  return Pp;
}
var Fp, N_;
function jE() {
  if (N_) return Fp;
  N_ = 1, Fp = e;
  function e(t) {
    return t.toLowerCase();
  }
  return Fp;
}
var Bp, O_;
function qx() {
  if (O_) return Bp;
  O_ = 1, Bp = t;
  var e = t.prototype;
  e.space = null, e.attribute = null, e.property = null, e.boolean = !1, e.booleanish = !1, e.overloadedBoolean = !1, e.number = !1, e.commaSeparated = !1, e.spaceSeparated = !1, e.commaOrSpaceSeparated = !1, e.mustUseProperty = !1, e.defined = !1;
  function t(n, r) {
    this.property = n, this.attribute = r;
  }
  return Bp;
}
var Gr = {}, L_;
function VE() {
  if (L_) return Gr;
  L_ = 1;
  var e = 0;
  Gr.boolean = t(), Gr.booleanish = t(), Gr.overloadedBoolean = t(), Gr.number = t(), Gr.spaceSeparated = t(), Gr.commaSeparated = t(), Gr.commaOrSpaceSeparated = t();
  function t() {
    return Math.pow(2, ++e);
  }
  return Gr;
}
var Up, D_;
function jx() {
  if (D_) return Up;
  D_ = 1;
  var e = qx(), t = VE();
  Up = o, o.prototype = new e(), o.prototype.defined = !0;
  var n = [
    "boolean",
    "booleanish",
    "overloadedBoolean",
    "number",
    "commaSeparated",
    "spaceSeparated",
    "commaOrSpaceSeparated"
  ], r = n.length;
  function o(u, c, p, f) {
    var b = -1, g;
    for (s(this, "space", f), e.call(this, u, c); ++b < r; )
      g = n[b], s(this, g, (p & t[g]) === t[g]);
  }
  function s(u, c, p) {
    p && (u[c] = p);
  }
  return Up;
}
var Hp, M_;
function Qs() {
  if (M_) return Hp;
  M_ = 1;
  var e = jE(), t = Gx(), n = jx();
  Hp = r;
  function r(o) {
    var s = o.space, u = o.mustUseProperty || [], c = o.attributes || {}, p = o.properties, f = o.transform, b = {}, g = {}, T, y;
    for (T in p)
      y = new n(
        T,
        f(c, T),
        p[T],
        s
      ), u.indexOf(T) !== -1 && (y.mustUseProperty = !0), b[T] = y, g[e(T)] = T, g[e(y.attribute)] = T;
    return new t(b, g, s);
  }
  return Hp;
}
var $p, P_;
function I5() {
  if (P_) return $p;
  P_ = 1;
  var e = Qs();
  $p = e({
    space: "xlink",
    transform: t,
    properties: {
      xLinkActuate: null,
      xLinkArcRole: null,
      xLinkHref: null,
      xLinkRole: null,
      xLinkShow: null,
      xLinkTitle: null,
      xLinkType: null
    }
  });
  function t(n, r) {
    return "xlink:" + r.slice(5).toLowerCase();
  }
  return $p;
}
var zp, F_;
function R5() {
  if (F_) return zp;
  F_ = 1;
  var e = Qs();
  zp = e({
    space: "xml",
    transform: t,
    properties: {
      xmlLang: null,
      xmlBase: null,
      xmlSpace: null
    }
  });
  function t(n, r) {
    return "xml:" + r.slice(3).toLowerCase();
  }
  return zp;
}
var Gp, B_;
function x5() {
  if (B_) return Gp;
  B_ = 1, Gp = e;
  function e(t, n) {
    return n in t ? t[n] : n;
  }
  return Gp;
}
var qp, U_;
function Vx() {
  if (U_) return qp;
  U_ = 1;
  var e = x5();
  qp = t;
  function t(n, r) {
    return e(n, r.toLowerCase());
  }
  return qp;
}
var jp, H_;
function N5() {
  if (H_) return jp;
  H_ = 1;
  var e = Qs(), t = Vx();
  return jp = e({
    space: "xmlns",
    attributes: {
      xmlnsxlink: "xmlns:xlink"
    },
    transform: t,
    properties: {
      xmlns: null,
      xmlnsXLink: null
    }
  }), jp;
}
var Vp, $_;
function O5() {
  if ($_) return Vp;
  $_ = 1;
  var e = VE(), t = Qs(), n = e.booleanish, r = e.number, o = e.spaceSeparated;
  Vp = t({
    transform: s,
    properties: {
      ariaActiveDescendant: null,
      ariaAtomic: n,
      ariaAutoComplete: null,
      ariaBusy: n,
      ariaChecked: n,
      ariaColCount: r,
      ariaColIndex: r,
      ariaColSpan: r,
      ariaControls: o,
      ariaCurrent: null,
      ariaDescribedBy: o,
      ariaDetails: null,
      ariaDisabled: n,
      ariaDropEffect: o,
      ariaErrorMessage: null,
      ariaExpanded: n,
      ariaFlowTo: o,
      ariaGrabbed: n,
      ariaHasPopup: null,
      ariaHidden: n,
      ariaInvalid: null,
      ariaKeyShortcuts: null,
      ariaLabel: null,
      ariaLabelledBy: o,
      ariaLevel: r,
      ariaLive: null,
      ariaModal: n,
      ariaMultiLine: n,
      ariaMultiSelectable: n,
      ariaOrientation: null,
      ariaOwns: o,
      ariaPlaceholder: null,
      ariaPosInSet: r,
      ariaPressed: n,
      ariaReadOnly: n,
      ariaRelevant: null,
      ariaRequired: n,
      ariaRoleDescription: o,
      ariaRowCount: r,
      ariaRowIndex: r,
      ariaRowSpan: r,
      ariaSelected: n,
      ariaSetSize: r,
      ariaSort: null,
      ariaValueMax: r,
      ariaValueMin: r,
      ariaValueNow: r,
      ariaValueText: null,
      role: null
    }
  });
  function s(u, c) {
    return c === "role" ? c : "aria-" + c.slice(4).toLowerCase();
  }
  return Vp;
}
var Wp, z_;
function L5() {
  if (z_) return Wp;
  z_ = 1;
  var e = VE(), t = Qs(), n = Vx(), r = e.boolean, o = e.overloadedBoolean, s = e.booleanish, u = e.number, c = e.spaceSeparated, p = e.commaSeparated;
  return Wp = t({
    space: "html",
    attributes: {
      acceptcharset: "accept-charset",
      classname: "class",
      htmlfor: "for",
      httpequiv: "http-equiv"
    },
    transform: n,
    mustUseProperty: ["checked", "multiple", "muted", "selected"],
    properties: {
      // Standard Properties.
      abbr: null,
      accept: p,
      acceptCharset: c,
      accessKey: c,
      action: null,
      allow: null,
      allowFullScreen: r,
      allowPaymentRequest: r,
      allowUserMedia: r,
      alt: null,
      as: null,
      async: r,
      autoCapitalize: null,
      autoComplete: c,
      autoFocus: r,
      autoPlay: r,
      capture: r,
      charSet: null,
      checked: r,
      cite: null,
      className: c,
      cols: u,
      colSpan: null,
      content: null,
      contentEditable: s,
      controls: r,
      controlsList: c,
      coords: u | p,
      crossOrigin: null,
      data: null,
      dateTime: null,
      decoding: null,
      default: r,
      defer: r,
      dir: null,
      dirName: null,
      disabled: r,
      download: o,
      draggable: s,
      encType: null,
      enterKeyHint: null,
      form: null,
      formAction: null,
      formEncType: null,
      formMethod: null,
      formNoValidate: r,
      formTarget: null,
      headers: c,
      height: u,
      hidden: r,
      high: u,
      href: null,
      hrefLang: null,
      htmlFor: c,
      httpEquiv: c,
      id: null,
      imageSizes: null,
      imageSrcSet: p,
      inputMode: null,
      integrity: null,
      is: null,
      isMap: r,
      itemId: null,
      itemProp: c,
      itemRef: c,
      itemScope: r,
      itemType: c,
      kind: null,
      label: null,
      lang: null,
      language: null,
      list: null,
      loading: null,
      loop: r,
      low: u,
      manifest: null,
      max: null,
      maxLength: u,
      media: null,
      method: null,
      min: null,
      minLength: u,
      multiple: r,
      muted: r,
      name: null,
      nonce: null,
      noModule: r,
      noValidate: r,
      onAbort: null,
      onAfterPrint: null,
      onAuxClick: null,
      onBeforePrint: null,
      onBeforeUnload: null,
      onBlur: null,
      onCancel: null,
      onCanPlay: null,
      onCanPlayThrough: null,
      onChange: null,
      onClick: null,
      onClose: null,
      onContextMenu: null,
      onCopy: null,
      onCueChange: null,
      onCut: null,
      onDblClick: null,
      onDrag: null,
      onDragEnd: null,
      onDragEnter: null,
      onDragExit: null,
      onDragLeave: null,
      onDragOver: null,
      onDragStart: null,
      onDrop: null,
      onDurationChange: null,
      onEmptied: null,
      onEnded: null,
      onError: null,
      onFocus: null,
      onFormData: null,
      onHashChange: null,
      onInput: null,
      onInvalid: null,
      onKeyDown: null,
      onKeyPress: null,
      onKeyUp: null,
      onLanguageChange: null,
      onLoad: null,
      onLoadedData: null,
      onLoadedMetadata: null,
      onLoadEnd: null,
      onLoadStart: null,
      onMessage: null,
      onMessageError: null,
      onMouseDown: null,
      onMouseEnter: null,
      onMouseLeave: null,
      onMouseMove: null,
      onMouseOut: null,
      onMouseOver: null,
      onMouseUp: null,
      onOffline: null,
      onOnline: null,
      onPageHide: null,
      onPageShow: null,
      onPaste: null,
      onPause: null,
      onPlay: null,
      onPlaying: null,
      onPopState: null,
      onProgress: null,
      onRateChange: null,
      onRejectionHandled: null,
      onReset: null,
      onResize: null,
      onScroll: null,
      onSecurityPolicyViolation: null,
      onSeeked: null,
      onSeeking: null,
      onSelect: null,
      onSlotChange: null,
      onStalled: null,
      onStorage: null,
      onSubmit: null,
      onSuspend: null,
      onTimeUpdate: null,
      onToggle: null,
      onUnhandledRejection: null,
      onUnload: null,
      onVolumeChange: null,
      onWaiting: null,
      onWheel: null,
      open: r,
      optimum: u,
      pattern: null,
      ping: c,
      placeholder: null,
      playsInline: r,
      poster: null,
      preload: null,
      readOnly: r,
      referrerPolicy: null,
      rel: c,
      required: r,
      reversed: r,
      rows: u,
      rowSpan: u,
      sandbox: c,
      scope: null,
      scoped: r,
      seamless: r,
      selected: r,
      shape: null,
      size: u,
      sizes: null,
      slot: null,
      span: u,
      spellCheck: s,
      src: null,
      srcDoc: null,
      srcLang: null,
      srcSet: p,
      start: u,
      step: null,
      style: null,
      tabIndex: u,
      target: null,
      title: null,
      translate: null,
      type: null,
      typeMustMatch: r,
      useMap: null,
      value: s,
      width: u,
      wrap: null,
      // Legacy.
      // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis
      align: null,
      // Several. Use CSS `text-align` instead,
      aLink: null,
      // `<body>`. Use CSS `a:active {color}` instead
      archive: c,
      // `<object>`. List of URIs to archives
      axis: null,
      // `<td>` and `<th>`. Use `scope` on `<th>`
      background: null,
      // `<body>`. Use CSS `background-image` instead
      bgColor: null,
      // `<body>` and table elements. Use CSS `background-color` instead
      border: u,
      // `<table>`. Use CSS `border-width` instead,
      borderColor: null,
      // `<table>`. Use CSS `border-color` instead,
      bottomMargin: u,
      // `<body>`
      cellPadding: null,
      // `<table>`
      cellSpacing: null,
      // `<table>`
      char: null,
      // Several table elements. When `align=char`, sets the character to align on
      charOff: null,
      // Several table elements. When `char`, offsets the alignment
      classId: null,
      // `<object>`
      clear: null,
      // `<br>`. Use CSS `clear` instead
      code: null,
      // `<object>`
      codeBase: null,
      // `<object>`
      codeType: null,
      // `<object>`
      color: null,
      // `<font>` and `<hr>`. Use CSS instead
      compact: r,
      // Lists. Use CSS to reduce space between items instead
      declare: r,
      // `<object>`
      event: null,
      // `<script>`
      face: null,
      // `<font>`. Use CSS instead
      frame: null,
      // `<table>`
      frameBorder: null,
      // `<iframe>`. Use CSS `border` instead
      hSpace: u,
      // `<img>` and `<object>`
      leftMargin: u,
      // `<body>`
      link: null,
      // `<body>`. Use CSS `a:link {color: *}` instead
      longDesc: null,
      // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`
      lowSrc: null,
      // `<img>`. Use a `<picture>`
      marginHeight: u,
      // `<body>`
      marginWidth: u,
      // `<body>`
      noResize: r,
      // `<frame>`
      noHref: r,
      // `<area>`. Use no href instead of an explicit `nohref`
      noShade: r,
      // `<hr>`. Use background-color and height instead of borders
      noWrap: r,
      // `<td>` and `<th>`
      object: null,
      // `<applet>`
      profile: null,
      // `<head>`
      prompt: null,
      // `<isindex>`
      rev: null,
      // `<link>`
      rightMargin: u,
      // `<body>`
      rules: null,
      // `<table>`
      scheme: null,
      // `<meta>`
      scrolling: s,
      // `<frame>`. Use overflow in the child context
      standby: null,
      // `<object>`
      summary: null,
      // `<table>`
      text: null,
      // `<body>`. Use CSS `color` instead
      topMargin: u,
      // `<body>`
      valueType: null,
      // `<param>`
      version: null,
      // `<html>`. Use a doctype.
      vAlign: null,
      // Several. Use CSS `vertical-align` instead
      vLink: null,
      // `<body>`. Use CSS `a:visited {color}` instead
      vSpace: u,
      // `<img>` and `<object>`
      // Non-standard Properties.
      allowTransparency: null,
      autoCorrect: null,
      autoSave: null,
      disablePictureInPicture: r,
      disableRemotePlayback: r,
      prefix: null,
      property: null,
      results: u,
      security: null,
      unselectable: null
    }
  }), Wp;
}
var Yp, G_;
function D5() {
  if (G_) return Yp;
  G_ = 1;
  var e = w5(), t = I5(), n = R5(), r = N5(), o = O5(), s = L5();
  return Yp = e([n, t, r, o, s]), Yp;
}
var Kp, q_;
function M5() {
  if (q_) return Kp;
  q_ = 1;
  var e = jE(), t = jx(), n = qx(), r = "data";
  Kp = c;
  var o = /^data[-\w.:]+$/i, s = /-[a-z]/g, u = /[A-Z]/g;
  function c(T, y) {
    var _ = e(y), A = y, R = n;
    return _ in T.normal ? T.property[T.normal[_]] : (_.length > 4 && _.slice(0, 4) === r && o.test(y) && (y.charAt(4) === "-" ? A = p(y) : y = f(y), R = t), new R(A, y));
  }
  function p(T) {
    var y = T.slice(5).replace(s, g);
    return r + y.charAt(0).toUpperCase() + y.slice(1);
  }
  function f(T) {
    var y = T.slice(4);
    return s.test(y) ? T : (y = y.replace(u, b), y.charAt(0) !== "-" && (y = "-" + y), r + y);
  }
  function b(T) {
    return "-" + T.toLowerCase();
  }
  function g(T) {
    return T.charAt(1).toUpperCase();
  }
  return Kp;
}
var Xp, j_;
function P5() {
  if (j_) return Xp;
  j_ = 1, Xp = t;
  var e = /[#.]/g;
  function t(n, r) {
    for (var o = n || "", s = r || "div", u = {}, c = 0, p, f, b; c < o.length; )
      e.lastIndex = c, b = e.exec(o), p = o.slice(c, b ? b.index : o.length), p && (f ? f === "#" ? u.id = p : u.className ? u.className.push(p) : u.className = [p] : s = p, c += p.length), b && (f = b[0], c++);
    return { type: "element", tagName: s, properties: u, children: [] };
  }
  return Xp;
}
var mu = {}, V_;
function F5() {
  if (V_) return mu;
  V_ = 1, mu.parse = r, mu.stringify = o;
  var e = "", t = " ", n = /[ \t\n\r\f]+/g;
  function r(s) {
    var u = String(s || e).trim();
    return u === e ? [] : u.split(n);
  }
  function o(s) {
    return s.join(t).trim();
  }
  return mu;
}
var bu = {}, W_;
function B5() {
  if (W_) return bu;
  W_ = 1, bu.parse = r, bu.stringify = o;
  var e = ",", t = " ", n = "";
  function r(s) {
    for (var u = [], c = String(s || n), p = c.indexOf(e), f = 0, b = !1, g; !b; )
      p === -1 && (p = c.length, b = !0), g = c.slice(f, p).trim(), (g || !b) && u.push(g), f = p + 1, p = c.indexOf(e, f);
    return u;
  }
  function o(s, u) {
    var c = u || {}, p = c.padLeft === !1 ? n : t, f = c.padRight ? t : n;
    return s[s.length - 1] === n && (s = s.concat(n)), s.join(f + e + p).trim();
  }
  return bu;
}
var Qp, Y_;
function U5() {
  if (Y_) return Qp;
  Y_ = 1;
  var e = M5(), t = jE(), n = P5(), r = F5().parse, o = B5().parse;
  Qp = u;
  var s = {}.hasOwnProperty;
  function u(_, A, R) {
    var C = R ? y(R) : null;
    return w;
    function w(O, F) {
      var v = n(O, A), B = Array.prototype.slice.call(arguments, 2), Y = v.tagName.toLowerCase(), $;
      if (v.tagName = C && s.call(C, Y) ? C[Y] : Y, F && c(F, v) && (B.unshift(F), F = null), F)
        for ($ in F)
          k(v.properties, $, F[$]);
      return f(v.children, B), v.tagName === "template" && (v.content = { type: "root", children: v.children }, v.children = []), v;
    }
    function k(O, F, v) {
      var B, Y, $;
      v == null || v !== v || (B = e(_, F), Y = B.property, $ = v, typeof $ == "string" && (B.spaceSeparated ? $ = r($) : B.commaSeparated ? $ = o($) : B.commaOrSpaceSeparated && ($ = r(o($).join(" ")))), Y === "style" && typeof v != "string" && ($ = T($)), Y === "className" && O.className && ($ = O.className.concat($)), O[Y] = b(B, Y, $));
    }
  }
  function c(_, A) {
    return typeof _ == "string" || "length" in _ || p(A.tagName, _);
  }
  function p(_, A) {
    var R = A.type;
    return _ === "input" || !R || typeof R != "string" ? !1 : typeof A.children == "object" && "length" in A.children ? !0 : (R = R.toLowerCase(), _ === "button" ? R !== "menu" && R !== "submit" && R !== "reset" && R !== "button" : "value" in A);
  }
  function f(_, A) {
    var R, C;
    if (typeof A == "string" || typeof A == "number") {
      _.push({ type: "text", value: String(A) });
      return;
    }
    if (typeof A == "object" && "length" in A) {
      for (R = -1, C = A.length; ++R < C; )
        f(_, A[R]);
      return;
    }
    if (typeof A != "object" || !("type" in A))
      throw new Error("Expected node, nodes, or string, got `" + A + "`");
    _.push(A);
  }
  function b(_, A, R) {
    var C, w, k;
    if (typeof R != "object" || !("length" in R))
      return g(_, A, R);
    for (w = R.length, C = -1, k = []; ++C < w; )
      k[C] = g(_, A, R[C]);
    return k;
  }
  function g(_, A, R) {
    var C = R;
    return _.number || _.positiveNumber ? !isNaN(C) && C !== "" && (C = Number(C)) : (_.boolean || _.overloadedBoolean) && typeof C == "string" && (C === "" || t(R) === t(A)) && (C = !0), C;
  }
  function T(_) {
    var A = [], R;
    for (R in _)
      A.push([R, _[R]].join(": "));
    return A.join("; ");
  }
  function y(_) {
    for (var A = _.length, R = -1, C = {}, w; ++R < A; )
      w = _[R], C[w.toLowerCase()] = w;
    return C;
  }
  return Qp;
}
var Zp, K_;
function H5() {
  if (K_) return Zp;
  K_ = 1;
  var e = D5(), t = U5(), n = t(e, "div");
  return n.displayName = "html", Zp = n, Zp;
}
var Jp, X_;
function $5() {
  return X_ || (X_ = 1, Jp = H5()), Jp;
}
const z5 = "Æ", G5 = "&", q5 = "Á", j5 = "Â", V5 = "À", W5 = "Å", Y5 = "Ã", K5 = "Ä", X5 = "©", Q5 = "Ç", Z5 = "Ð", J5 = "É", e8 = "Ê", t8 = "È", n8 = "Ë", r8 = ">", a8 = "Í", i8 = "Î", o8 = "Ì", s8 = "Ï", l8 = "<", u8 = "Ñ", c8 = "Ó", d8 = "Ô", p8 = "Ò", f8 = "Ø", h8 = "Õ", g8 = "Ö", m8 = '"', b8 = "®", E8 = "Þ", y8 = "Ú", T8 = "Û", S8 = "Ù", _8 = "Ü", v8 = "Ý", A8 = "á", k8 = "â", C8 = "´", w8 = "æ", I8 = "à", R8 = "&", x8 = "å", N8 = "ã", O8 = "ä", L8 = "¦", D8 = "ç", M8 = "¸", P8 = "¢", F8 = "©", B8 = "¤", U8 = "°", H8 = "÷", $8 = "é", z8 = "ê", G8 = "è", q8 = "ð", j8 = "ë", V8 = "½", W8 = "¼", Y8 = "¾", K8 = ">", X8 = "í", Q8 = "î", Z8 = "¡", J8 = "ì", eB = "¿", tB = "ï", nB = "«", rB = "<", aB = "¯", iB = "µ", oB = "·", sB = " ", lB = "¬", uB = "ñ", cB = "ó", dB = "ô", pB = "ò", fB = "ª", hB = "º", gB = "ø", mB = "õ", bB = "ö", EB = "¶", yB = "±", TB = "£", SB = '"', _B = "»", vB = "®", AB = "§", kB = "­", CB = "¹", wB = "²", IB = "³", RB = "ß", xB = "þ", NB = "×", OB = "ú", LB = "û", DB = "ù", MB = "¨", PB = "ü", FB = "ý", BB = "¥", UB = "ÿ", HB = {
  AElig: z5,
  AMP: G5,
  Aacute: q5,
  Acirc: j5,
  Agrave: V5,
  Aring: W5,
  Atilde: Y5,
  Auml: K5,
  COPY: X5,
  Ccedil: Q5,
  ETH: Z5,
  Eacute: J5,
  Ecirc: e8,
  Egrave: t8,
  Euml: n8,
  GT: r8,
  Iacute: a8,
  Icirc: i8,
  Igrave: o8,
  Iuml: s8,
  LT: l8,
  Ntilde: u8,
  Oacute: c8,
  Ocirc: d8,
  Ograve: p8,
  Oslash: f8,
  Otilde: h8,
  Ouml: g8,
  QUOT: m8,
  REG: b8,
  THORN: E8,
  Uacute: y8,
  Ucirc: T8,
  Ugrave: S8,
  Uuml: _8,
  Yacute: v8,
  aacute: A8,
  acirc: k8,
  acute: C8,
  aelig: w8,
  agrave: I8,
  amp: R8,
  aring: x8,
  atilde: N8,
  auml: O8,
  brvbar: L8,
  ccedil: D8,
  cedil: M8,
  cent: P8,
  copy: F8,
  curren: B8,
  deg: U8,
  divide: H8,
  eacute: $8,
  ecirc: z8,
  egrave: G8,
  eth: q8,
  euml: j8,
  frac12: V8,
  frac14: W8,
  frac34: Y8,
  gt: K8,
  iacute: X8,
  icirc: Q8,
  iexcl: Z8,
  igrave: J8,
  iquest: eB,
  iuml: tB,
  laquo: nB,
  lt: rB,
  macr: aB,
  micro: iB,
  middot: oB,
  nbsp: sB,
  not: lB,
  ntilde: uB,
  oacute: cB,
  ocirc: dB,
  ograve: pB,
  ordf: fB,
  ordm: hB,
  oslash: gB,
  otilde: mB,
  ouml: bB,
  para: EB,
  plusmn: yB,
  pound: TB,
  quot: SB,
  raquo: _B,
  reg: vB,
  sect: AB,
  shy: kB,
  sup1: CB,
  sup2: wB,
  sup3: IB,
  szlig: RB,
  thorn: xB,
  times: NB,
  uacute: OB,
  ucirc: LB,
  ugrave: DB,
  uml: MB,
  uuml: PB,
  yacute: FB,
  yen: BB,
  yuml: UB
}, $B = {
  0: "�",
  128: "€",
  130: "‚",
  131: "ƒ",
  132: "„",
  133: "…",
  134: "†",
  135: "‡",
  136: "ˆ",
  137: "‰",
  138: "Š",
  139: "‹",
  140: "Œ",
  142: "Ž",
  145: "‘",
  146: "’",
  147: "“",
  148: "”",
  149: "•",
  150: "–",
  151: "—",
  152: "˜",
  153: "™",
  154: "š",
  155: "›",
  156: "œ",
  158: "ž",
  159: "Ÿ"
};
var ef, Q_;
function Wx() {
  if (Q_) return ef;
  Q_ = 1, ef = e;
  function e(t) {
    var n = typeof t == "string" ? t.charCodeAt(0) : t;
    return n >= 48 && n <= 57;
  }
  return ef;
}
var tf, Z_;
function zB() {
  if (Z_) return tf;
  Z_ = 1, tf = e;
  function e(t) {
    var n = typeof t == "string" ? t.charCodeAt(0) : t;
    return n >= 97 && n <= 102 || n >= 65 && n <= 70 || n >= 48 && n <= 57;
  }
  return tf;
}
var nf, J_;
function GB() {
  if (J_) return nf;
  J_ = 1, nf = e;
  function e(t) {
    var n = typeof t == "string" ? t.charCodeAt(0) : t;
    return n >= 97 && n <= 122 || n >= 65 && n <= 90;
  }
  return nf;
}
var rf, ev;
function qB() {
  if (ev) return rf;
  ev = 1;
  var e = GB(), t = Wx();
  rf = n;
  function n(r) {
    return e(r) || t(r);
  }
  return rf;
}
var af, tv;
function jB() {
  if (tv) return af;
  tv = 1;
  var e, t = 59;
  af = n;
  function n(r) {
    var o = "&" + r + ";", s;
    return e = e || document.createElement("i"), e.innerHTML = o, s = e.textContent, s.charCodeAt(s.length - 1) === t && r !== "semi" || s === o ? !1 : s;
  }
  return af;
}
var of, nv;
function VB() {
  if (nv) return of;
  nv = 1;
  var e = HB, t = $B, n = Wx(), r = zB(), o = qB(), s = jB();
  of = oe;
  var u = {}.hasOwnProperty, c = String.fromCharCode, p = Function.prototype, f = {
    warning: null,
    reference: null,
    text: null,
    warningContext: null,
    referenceContext: null,
    textContext: null,
    position: {},
    additional: null,
    attribute: !1,
    nonTerminated: !0
  }, b = 9, g = 10, T = 12, y = 32, _ = 38, A = 59, R = 60, C = 61, w = 35, k = 88, O = 120, F = 65533, v = "named", B = "hexadecimal", Y = "decimal", $ = {};
  $[B] = 16, $[Y] = 10;
  var M = {};
  M[v] = o, M[Y] = n, M[B] = r;
  var V = 1, ne = 2, se = 3, de = 4, be = 5, Ne = 6, ve = 7, J = {};
  J[V] = "Named character references must be terminated by a semicolon", J[ne] = "Numeric character references must be terminated by a semicolon", J[se] = "Named character references cannot be empty", J[de] = "Numeric character references cannot be empty", J[be] = "Named character references must be known", J[Ne] = "Numeric character references cannot be disallowed", J[ve] = "Numeric character references cannot be outside the permissible Unicode range";
  function oe(x, Ee) {
    var _e = {}, Te, Oe;
    Ee || (Ee = {});
    for (Oe in f)
      Te = Ee[Oe], _e[Oe] = Te ?? f[Oe];
    return (_e.position.indent || _e.position.start) && (_e.indent = _e.position.indent || [], _e.position = _e.position.start), I(x, _e);
  }
  function I(x, Ee) {
    var _e = Ee.additional, Te = Ee.nonTerminated, Oe = Ee.text, Me = Ee.reference, He = Ee.warning, Ze = Ee.textContext, gt = Ee.referenceContext, kt = Ee.warningContext, zt = Ee.position, Dr = Ee.indent || [], nr = x.length, Gt = 0, rr = -1, yn = zt.column || 1, ar = zt.line || 1, qt = "", Tn = [], Sn, re, Le, Pe, Z, ae, ye, De, Ge, Je, Ft, Nt, Ot, Bt, Ct, jt, _t, dt, Et;
    for (typeof _e == "string" && (_e = _e.charCodeAt(0)), jt = zn(), De = He ? Zr : p, Gt--, nr++; ++Gt < nr; )
      if (Z === g && (yn = Dr[rr] || 1), Z = x.charCodeAt(Gt), Z === _) {
        if (ye = x.charCodeAt(Gt + 1), ye === b || ye === g || ye === T || ye === y || ye === _ || ye === R || ye !== ye || _e && ye === _e) {
          qt += c(Z), yn++;
          continue;
        }
        for (Ot = Gt + 1, Nt = Ot, Et = Ot, ye === w ? (Et = ++Nt, ye = x.charCodeAt(Et), ye === k || ye === O ? (Bt = B, Et = ++Nt) : Bt = Y) : Bt = v, Sn = "", Ft = "", Pe = "", Ct = M[Bt], Et--; ++Et < nr && (ye = x.charCodeAt(Et), !!Ct(ye)); )
          Pe += c(ye), Bt === v && u.call(e, Pe) && (Sn = Pe, Ft = e[Pe]);
        Le = x.charCodeAt(Et) === A, Le && (Et++, re = Bt === v ? s(Pe) : !1, re && (Sn = Pe, Ft = re)), dt = 1 + Et - Ot, !Le && !Te || (Pe ? Bt === v ? (Le && !Ft ? De(be, 1) : (Sn !== Pe && (Et = Nt + Sn.length, dt = 1 + Et - Nt, Le = !1), Le || (Ge = Sn ? V : se, Ee.attribute ? (ye = x.charCodeAt(Et), ye === C ? (De(Ge, dt), Ft = null) : o(ye) ? Ft = null : De(Ge, dt)) : De(Ge, dt))), ae = Ft) : (Le || De(ne, dt), ae = parseInt(Pe, $[Bt]), H(ae) ? (De(ve, dt), ae = c(F)) : ae in t ? (De(Ne, dt), ae = t[ae]) : (Je = "", W(ae) && De(Ne, dt), ae > 65535 && (ae -= 65536, Je += c(ae >>> 10 | 55296), ae = 56320 | ae & 1023), ae = Je + c(ae))) : Bt !== v && De(de, dt)), ae ? (Io(), jt = zn(), Gt = Et - 1, yn += Et - Ot + 1, Tn.push(ae), _t = zn(), _t.offset++, Me && Me.call(
          gt,
          ae,
          { start: jt, end: _t },
          x.slice(Ot - 1, Et)
        ), jt = _t) : (Pe = x.slice(Ot - 1, Et), qt += Pe, yn += Pe.length, Gt = Et - 1);
      } else
        Z === 10 && (ar++, rr++, yn = 0), Z === Z ? (qt += c(Z), yn++) : Io();
    return Tn.join("");
    function zn() {
      return {
        line: ar,
        column: yn,
        offset: Gt + (zt.offset || 0)
      };
    }
    function Zr(Ro, xo) {
      var bi = zn();
      bi.column += xo, bi.offset += xo, He.call(kt, J[Ro], bi, Ro);
    }
    function Io() {
      qt && (Tn.push(qt), Oe && Oe.call(Ze, qt, { start: jt, end: zn() }), qt = "");
    }
  }
  function H(x) {
    return x >= 55296 && x <= 57343 || x > 1114111;
  }
  function W(x) {
    return x >= 1 && x <= 8 || x === 11 || x >= 13 && x <= 31 || x >= 127 && x <= 159 || x >= 64976 && x <= 65007 || (x & 65535) === 65535 || (x & 65535) === 65534;
  }
  return of;
}
var sf = { exports: {} }, rv;
function WB() {
  return rv || (rv = 1, function(e) {
    var t = typeof window < "u" ? window : typeof WorkerGlobalScope < "u" && self instanceof WorkerGlobalScope ? self : {};
    /**
     * Prism: Lightweight, robust, elegant syntax highlighting
     *
     * @license MIT <https://opensource.org/licenses/MIT>
     * @author Lea Verou <https://lea.verou.me>
     * @namespace
     * @public
     */
    var n = function(r) {
      var o = /(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i, s = 0, u = {}, c = {
        /**
         * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the
         * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load
         * additional languages or plugins yourself.
         *
         * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.
         *
         * You obviously have to change this value before the automatic highlighting started. To do this, you can add an
         * empty Prism object into the global scope before loading the Prism script like this:
         *
         * ```js
         * window.Prism = window.Prism || {};
         * Prism.manual = true;
         * // add a new <script> to load Prism's script
         * ```
         *
         * @default false
         * @type {boolean}
         * @memberof Prism
         * @public
         */
        manual: r.Prism && r.Prism.manual,
        /**
         * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses
         * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your
         * own worker, you don't want it to do this.
         *
         * By setting this value to `true`, Prism will not add its own listeners to the worker.
         *
         * You obviously have to change this value before Prism executes. To do this, you can add an
         * empty Prism object into the global scope before loading the Prism script like this:
         *
         * ```js
         * window.Prism = window.Prism || {};
         * Prism.disableWorkerMessageHandler = true;
         * // Load Prism's script
         * ```
         *
         * @default false
         * @type {boolean}
         * @memberof Prism
         * @public
         */
        disableWorkerMessageHandler: r.Prism && r.Prism.disableWorkerMessageHandler,
        /**
         * A namespace for utility methods.
         *
         * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may
         * change or disappear at any time.
         *
         * @namespace
         * @memberof Prism
         */
        util: {
          encode: function w(k) {
            return k instanceof p ? new p(k.type, w(k.content), k.alias) : Array.isArray(k) ? k.map(w) : k.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/\u00a0/g, " ");
          },
          /**
           * Returns the name of the type of the given value.
           *
           * @param {any} o
           * @returns {string}
           * @example
           * type(null)      === 'Null'
           * type(undefined) === 'Undefined'
           * type(123)       === 'Number'
           * type('foo')     === 'String'
           * type(true)      === 'Boolean'
           * type([1, 2])    === 'Array'
           * type({})        === 'Object'
           * type(String)    === 'Function'
           * type(/abc+/)    === 'RegExp'
           */
          type: function(w) {
            return Object.prototype.toString.call(w).slice(8, -1);
          },
          /**
           * Returns a unique number for the given object. Later calls will still return the same number.
           *
           * @param {Object} obj
           * @returns {number}
           */
          objId: function(w) {
            return w.__id || Object.defineProperty(w, "__id", { value: ++s }), w.__id;
          },
          /**
           * Creates a deep clone of the given object.
           *
           * The main intended use of this function is to clone language definitions.
           *
           * @param {T} o
           * @param {Record<number, any>} [visited]
           * @returns {T}
           * @template T
           */
          clone: function w(k, O) {
            O = O || {};
            var F, v;
            switch (c.util.type(k)) {
              case "Object":
                if (v = c.util.objId(k), O[v])
                  return O[v];
                F = /** @type {Record<string, any>} */
                {}, O[v] = F;
                for (var B in k)
                  k.hasOwnProperty(B) && (F[B] = w(k[B], O));
                return (
                  /** @type {any} */
                  F
                );
              case "Array":
                return v = c.util.objId(k), O[v] ? O[v] : (F = [], O[v] = F, /** @type {Array} */
                /** @type {any} */
                k.forEach(function(Y, $) {
                  F[$] = w(Y, O);
                }), /** @type {any} */
                F);
              default:
                return k;
            }
          },
          /**
           * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.
           *
           * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.
           *
           * @param {Element} element
           * @returns {string}
           */
          getLanguage: function(w) {
            for (; w; ) {
              var k = o.exec(w.className);
              if (k)
                return k[1].toLowerCase();
              w = w.parentElement;
            }
            return "none";
          },
          /**
           * Sets the Prism `language-xxxx` class of the given element.
           *
           * @param {Element} element
           * @param {string} language
           * @returns {void}
           */
          setLanguage: function(w, k) {
            w.className = w.className.replace(RegExp(o, "gi"), ""), w.classList.add("language-" + k);
          },
          /**
           * Returns the script element that is currently executing.
           *
           * This does __not__ work for line script element.
           *
           * @returns {HTMLScriptElement | null}
           */
          currentScript: function() {
            if (typeof document > "u")
              return null;
            if ("currentScript" in document)
              return (
                /** @type {any} */
                document.currentScript
              );
            try {
              throw new Error();
            } catch (F) {
              var w = (/at [^(\r\n]*\((.*):[^:]+:[^:]+\)$/i.exec(F.stack) || [])[1];
              if (w) {
                var k = document.getElementsByTagName("script");
                for (var O in k)
                  if (k[O].src == w)
                    return k[O];
              }
              return null;
            }
          },
          /**
           * Returns whether a given class is active for `element`.
           *
           * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated
           * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the
           * given class is just the given class with a `no-` prefix.
           *
           * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is
           * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its
           * ancestors have the given class or the negated version of it, then the default activation will be returned.
           *
           * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated
           * version of it, the class is considered active.
           *
           * @param {Element} element
           * @param {string} className
           * @param {boolean} [defaultActivation=false]
           * @returns {boolean}
           */
          isActive: function(w, k, O) {
            for (var F = "no-" + k; w; ) {
              var v = w.classList;
              if (v.contains(k))
                return !0;
              if (v.contains(F))
                return !1;
              w = w.parentElement;
            }
            return !!O;
          }
        },
        /**
         * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.
         *
         * @namespace
         * @memberof Prism
         * @public
         */
        languages: {
          /**
           * The grammar for plain, unformatted text.
           */
          plain: u,
          plaintext: u,
          text: u,
          txt: u,
          /**
           * Creates a deep copy of the language with the given id and appends the given tokens.
           *
           * If a token in `redef` also appears in the copied language, then the existing token in the copied language
           * will be overwritten at its original position.
           *
           * ## Best practices
           *
           * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)
           * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to
           * understand the language definition because, normally, the order of tokens matters in Prism grammars.
           *
           * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.
           * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.
           *
           * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.
           * @param {Grammar} redef The new tokens to append.
           * @returns {Grammar} The new language created.
           * @public
           * @example
           * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {
           *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token
           *     // at its original position
           *     'comment': { ... },
           *     // CSS doesn't have a 'color' token, so this token will be appended
           *     'color': /\b(?:red|green|blue)\b/
           * });
           */
          extend: function(w, k) {
            var O = c.util.clone(c.languages[w]);
            for (var F in k)
              O[F] = k[F];
            return O;
          },
          /**
           * Inserts tokens _before_ another token in a language definition or any other grammar.
           *
           * ## Usage
           *
           * This helper method makes it easy to modify existing languages. For example, the CSS language definition
           * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded
           * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the
           * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do
           * this:
           *
           * ```js
           * Prism.languages.markup.style = {
           *     // token
           * };
           * ```
           *
           * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens
           * before existing tokens. For the CSS example above, you would use it like this:
           *
           * ```js
           * Prism.languages.insertBefore('markup', 'cdata', {
           *     'style': {
           *         // token
           *     }
           * });
           * ```
           *
           * ## Special cases
           *
           * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar
           * will be ignored.
           *
           * This behavior can be used to insert tokens after `before`:
           *
           * ```js
           * Prism.languages.insertBefore('markup', 'comment', {
           *     'comment': Prism.languages.markup.comment,
           *     // tokens after 'comment'
           * });
           * ```
           *
           * ## Limitations
           *
           * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object
           * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave
           * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily
           * deleting properties which is necessary to insert at arbitrary positions.
           *
           * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.
           * Instead, it will create a new object and replace all references to the target object with the new one. This
           * can be done without temporarily deleting properties, so the iteration order is well-defined.
           *
           * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if
           * you hold the target object in a variable, then the value of the variable will not change.
           *
           * ```js
           * var oldMarkup = Prism.languages.markup;
           * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });
           *
           * assert(oldMarkup !== Prism.languages.markup);
           * assert(newMarkup === Prism.languages.markup);
           * ```
           *
           * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the
           * object to be modified.
           * @param {string} before The key to insert before.
           * @param {Grammar} insert An object containing the key-value pairs to be inserted.
           * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the
           * object to be modified.
           *
           * Defaults to `Prism.languages`.
           * @returns {Grammar} The new grammar object.
           * @public
           */
          insertBefore: function(w, k, O, F) {
            F = F || /** @type {any} */
            c.languages;
            var v = F[w], B = {};
            for (var Y in v)
              if (v.hasOwnProperty(Y)) {
                if (Y == k)
                  for (var $ in O)
                    O.hasOwnProperty($) && (B[$] = O[$]);
                O.hasOwnProperty(Y) || (B[Y] = v[Y]);
              }
            var M = F[w];
            return F[w] = B, c.languages.DFS(c.languages, function(V, ne) {
              ne === M && V != w && (this[V] = B);
            }), B;
          },
          // Traverse a language definition with Depth First Search
          DFS: function w(k, O, F, v) {
            v = v || {};
            var B = c.util.objId;
            for (var Y in k)
              if (k.hasOwnProperty(Y)) {
                O.call(k, Y, k[Y], F || Y);
                var $ = k[Y], M = c.util.type($);
                M === "Object" && !v[B($)] ? (v[B($)] = !0, w($, O, null, v)) : M === "Array" && !v[B($)] && (v[B($)] = !0, w($, O, Y, v));
              }
          }
        },
        plugins: {},
        /**
         * This is the most high-level function in Prism’s API.
         * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on
         * each one of them.
         *
         * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.
         *
         * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.
         * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.
         * @memberof Prism
         * @public
         */
        highlightAll: function(w, k) {
          c.highlightAllUnder(document, w, k);
        },
        /**
         * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls
         * {@link Prism.highlightElement} on each one of them.
         *
         * The following hooks will be run:
         * 1. `before-highlightall`
         * 2. `before-all-elements-highlight`
         * 3. All hooks of {@link Prism.highlightElement} for each element.
         *
         * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.
         * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.
         * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.
         * @memberof Prism
         * @public
         */
        highlightAllUnder: function(w, k, O) {
          var F = {
            callback: O,
            container: w,
            selector: 'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'
          };
          c.hooks.run("before-highlightall", F), F.elements = Array.prototype.slice.apply(F.container.querySelectorAll(F.selector)), c.hooks.run("before-all-elements-highlight", F);
          for (var v = 0, B; B = F.elements[v++]; )
            c.highlightElement(B, k === !0, F.callback);
        },
        /**
         * Highlights the code inside a single element.
         *
         * The following hooks will be run:
         * 1. `before-sanity-check`
         * 2. `before-highlight`
         * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.
         * 4. `before-insert`
         * 5. `after-highlight`
         * 6. `complete`
         *
         * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for
         * the element's language.
         *
         * @param {Element} element The element containing the code.
         * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.
         * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers
         * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is
         * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).
         *
         * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for
         * asynchronous highlighting to work. You can build your own bundle on the
         * [Download page](https://prismjs.com/download.html).
         * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.
         * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.
         * @memberof Prism
         * @public
         */
        highlightElement: function(w, k, O) {
          var F = c.util.getLanguage(w), v = c.languages[F];
          c.util.setLanguage(w, F);
          var B = w.parentElement;
          B && B.nodeName.toLowerCase() === "pre" && c.util.setLanguage(B, F);
          var Y = w.textContent, $ = {
            element: w,
            language: F,
            grammar: v,
            code: Y
          };
          function M(ne) {
            $.highlightedCode = ne, c.hooks.run("before-insert", $), $.element.innerHTML = $.highlightedCode, c.hooks.run("after-highlight", $), c.hooks.run("complete", $), O && O.call($.element);
          }
          if (c.hooks.run("before-sanity-check", $), B = $.element.parentElement, B && B.nodeName.toLowerCase() === "pre" && !B.hasAttribute("tabindex") && B.setAttribute("tabindex", "0"), !$.code) {
            c.hooks.run("complete", $), O && O.call($.element);
            return;
          }
          if (c.hooks.run("before-highlight", $), !$.grammar) {
            M(c.util.encode($.code));
            return;
          }
          if (k && r.Worker) {
            var V = new Worker(c.filename);
            V.onmessage = function(ne) {
              M(ne.data);
            }, V.postMessage(JSON.stringify({
              language: $.language,
              code: $.code,
              immediateClose: !0
            }));
          } else
            M(c.highlight($.code, $.grammar, $.language));
        },
        /**
         * Low-level function, only use if you know what you’re doing. It accepts a string of text as input
         * and the language definitions to use, and returns a string with the HTML produced.
         *
         * The following hooks will be run:
         * 1. `before-tokenize`
         * 2. `after-tokenize`
         * 3. `wrap`: On each {@link Token}.
         *
         * @param {string} text A string with the code to be highlighted.
         * @param {Grammar} grammar An object containing the tokens to use.
         *
         * Usually a language definition like `Prism.languages.markup`.
         * @param {string} language The name of the language definition passed to `grammar`.
         * @returns {string} The highlighted HTML.
         * @memberof Prism
         * @public
         * @example
         * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');
         */
        highlight: function(w, k, O) {
          var F = {
            code: w,
            grammar: k,
            language: O
          };
          if (c.hooks.run("before-tokenize", F), !F.grammar)
            throw new Error('The language "' + F.language + '" has no grammar.');
          return F.tokens = c.tokenize(F.code, F.grammar), c.hooks.run("after-tokenize", F), p.stringify(c.util.encode(F.tokens), F.language);
        },
        /**
         * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input
         * and the language definitions to use, and returns an array with the tokenized code.
         *
         * When the language definition includes nested tokens, the function is called recursively on each of these tokens.
         *
         * This method could be useful in other contexts as well, as a very crude parser.
         *
         * @param {string} text A string with the code to be highlighted.
         * @param {Grammar} grammar An object containing the tokens to use.
         *
         * Usually a language definition like `Prism.languages.markup`.
         * @returns {TokenStream} An array of strings and tokens, a token stream.
         * @memberof Prism
         * @public
         * @example
         * let code = `var foo = 0;`;
         * let tokens = Prism.tokenize(code, Prism.languages.javascript);
         * tokens.forEach(token => {
         *     if (token instanceof Prism.Token && token.type === 'number') {
         *         console.log(`Found numeric literal: ${token.content}`);
         *     }
         * });
         */
        tokenize: function(w, k) {
          var O = k.rest;
          if (O) {
            for (var F in O)
              k[F] = O[F];
            delete k.rest;
          }
          var v = new g();
          return T(v, v.head, w), b(w, v, k, v.head, 0), _(v);
        },
        /**
         * @namespace
         * @memberof Prism
         * @public
         */
        hooks: {
          all: {},
          /**
           * Adds the given callback to the list of callbacks for the given hook.
           *
           * The callback will be invoked when the hook it is registered for is run.
           * Hooks are usually directly run by a highlight function but you can also run hooks yourself.
           *
           * One callback function can be registered to multiple hooks and the same hook multiple times.
           *
           * @param {string} name The name of the hook.
           * @param {HookCallback} callback The callback function which is given environment variables.
           * @public
           */
          add: function(w, k) {
            var O = c.hooks.all;
            O[w] = O[w] || [], O[w].push(k);
          },
          /**
           * Runs a hook invoking all registered callbacks with the given environment variables.
           *
           * Callbacks will be invoked synchronously and in the order in which they were registered.
           *
           * @param {string} name The name of the hook.
           * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.
           * @public
           */
          run: function(w, k) {
            var O = c.hooks.all[w];
            if (!(!O || !O.length))
              for (var F = 0, v; v = O[F++]; )
                v(k);
          }
        },
        Token: p
      };
      r.Prism = c;
      function p(w, k, O, F) {
        this.type = w, this.content = k, this.alias = O, this.length = (F || "").length | 0;
      }
      p.stringify = function w(k, O) {
        if (typeof k == "string")
          return k;
        if (Array.isArray(k)) {
          var F = "";
          return k.forEach(function(M) {
            F += w(M, O);
          }), F;
        }
        var v = {
          type: k.type,
          content: w(k.content, O),
          tag: "span",
          classes: ["token", k.type],
          attributes: {},
          language: O
        }, B = k.alias;
        B && (Array.isArray(B) ? Array.prototype.push.apply(v.classes, B) : v.classes.push(B)), c.hooks.run("wrap", v);
        var Y = "";
        for (var $ in v.attributes)
          Y += " " + $ + '="' + (v.attributes[$] || "").replace(/"/g, "&quot;") + '"';
        return "<" + v.tag + ' class="' + v.classes.join(" ") + '"' + Y + ">" + v.content + "</" + v.tag + ">";
      };
      function f(w, k, O, F) {
        w.lastIndex = k;
        var v = w.exec(O);
        if (v && F && v[1]) {
          var B = v[1].length;
          v.index += B, v[0] = v[0].slice(B);
        }
        return v;
      }
      function b(w, k, O, F, v, B) {
        for (var Y in O)
          if (!(!O.hasOwnProperty(Y) || !O[Y])) {
            var $ = O[Y];
            $ = Array.isArray($) ? $ : [$];
            for (var M = 0; M < $.length; ++M) {
              if (B && B.cause == Y + "," + M)
                return;
              var V = $[M], ne = V.inside, se = !!V.lookbehind, de = !!V.greedy, be = V.alias;
              if (de && !V.pattern.global) {
                var Ne = V.pattern.toString().match(/[imsuy]*$/)[0];
                V.pattern = RegExp(V.pattern.source, Ne + "g");
              }
              for (var ve = V.pattern || V, J = F.next, oe = v; J !== k.tail && !(B && oe >= B.reach); oe += J.value.length, J = J.next) {
                var I = J.value;
                if (k.length > w.length)
                  return;
                if (!(I instanceof p)) {
                  var H = 1, W;
                  if (de) {
                    if (W = f(ve, oe, w, se), !W || W.index >= w.length)
                      break;
                    var Te = W.index, x = W.index + W[0].length, Ee = oe;
                    for (Ee += J.value.length; Te >= Ee; )
                      J = J.next, Ee += J.value.length;
                    if (Ee -= J.value.length, oe = Ee, J.value instanceof p)
                      continue;
                    for (var _e = J; _e !== k.tail && (Ee < x || typeof _e.value == "string"); _e = _e.next)
                      H++, Ee += _e.value.length;
                    H--, I = w.slice(oe, Ee), W.index -= oe;
                  } else if (W = f(ve, 0, I, se), !W)
                    continue;
                  var Te = W.index, Oe = W[0], Me = I.slice(0, Te), He = I.slice(Te + Oe.length), Ze = oe + I.length;
                  B && Ze > B.reach && (B.reach = Ze);
                  var gt = J.prev;
                  Me && (gt = T(k, gt, Me), oe += Me.length), y(k, gt, H);
                  var kt = new p(Y, ne ? c.tokenize(Oe, ne) : Oe, be, Oe);
                  if (J = T(k, gt, kt), He && T(k, J, He), H > 1) {
                    var zt = {
                      cause: Y + "," + M,
                      reach: Ze
                    };
                    b(w, k, O, J.prev, oe, zt), B && zt.reach > B.reach && (B.reach = zt.reach);
                  }
                }
              }
            }
          }
      }
      function g() {
        var w = { value: null, prev: null, next: null }, k = { value: null, prev: w, next: null };
        w.next = k, this.head = w, this.tail = k, this.length = 0;
      }
      function T(w, k, O) {
        var F = k.next, v = { value: O, prev: k, next: F };
        return k.next = v, F.prev = v, w.length++, v;
      }
      function y(w, k, O) {
        for (var F = k.next, v = 0; v < O && F !== w.tail; v++)
          F = F.next;
        k.next = F, F.prev = k, w.length -= v;
      }
      function _(w) {
        for (var k = [], O = w.head.next; O !== w.tail; )
          k.push(O.value), O = O.next;
        return k;
      }
      if (!r.document)
        return r.addEventListener && (c.disableWorkerMessageHandler || r.addEventListener("message", function(w) {
          var k = JSON.parse(w.data), O = k.language, F = k.code, v = k.immediateClose;
          r.postMessage(c.highlight(F, c.languages[O], O)), v && r.close();
        }, !1)), c;
      var A = c.util.currentScript();
      A && (c.filename = A.src, A.hasAttribute("data-manual") && (c.manual = !0));
      function R() {
        c.manual || c.highlightAll();
      }
      if (!c.manual) {
        var C = document.readyState;
        C === "loading" || C === "interactive" && A && A.defer ? document.addEventListener("DOMContentLoaded", R) : window.requestAnimationFrame ? window.requestAnimationFrame(R) : window.setTimeout(R, 16);
      }
      return c;
    }(t);
    e.exports && (e.exports = n), typeof Lu < "u" && (Lu.Prism = n);
  }(sf)), sf.exports;
}
var lf, av;
function YB() {
  if (av) return lf;
  av = 1, lf = e, e.displayName = "markup", e.aliases = ["html", "mathml", "svg", "xml", "ssml", "atom", "rss"];
  function e(t) {
    t.languages.markup = {
      comment: {
        pattern: /<!--(?:(?!<!--)[\s\S])*?-->/,
        greedy: !0
      },
      prolog: {
        pattern: /<\?[\s\S]+?\?>/,
        greedy: !0
      },
      doctype: {
        // https://www.w3.org/TR/xml/#NT-doctypedecl
        pattern: /<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,
        greedy: !0,
        inside: {
          "internal-subset": {
            pattern: /(^[^\[]*\[)[\s\S]+(?=\]>$)/,
            lookbehind: !0,
            greedy: !0,
            inside: null
            // see below
          },
          string: {
            pattern: /"[^"]*"|'[^']*'/,
            greedy: !0
          },
          punctuation: /^<!|>$|[[\]]/,
          "doctype-tag": /^DOCTYPE/i,
          name: /[^\s<>'"]+/
        }
      },
      cdata: {
        pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
        greedy: !0
      },
      tag: {
        pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,
        greedy: !0,
        inside: {
          tag: {
            pattern: /^<\/?[^\s>\/]+/,
            inside: {
              punctuation: /^<\/?/,
              namespace: /^[^\s>\/:]+:/
            }
          },
          "special-attr": [],
          "attr-value": {
            pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,
            inside: {
              punctuation: [
                {
                  pattern: /^=/,
                  alias: "attr-equals"
                },
                /"|'/
              ]
            }
          },
          punctuation: /\/?>/,
          "attr-name": {
            pattern: /[^\s>\/]+/,
            inside: {
              namespace: /^[^\s>\/:]+:/
            }
          }
        }
      },
      entity: [
        {
          pattern: /&[\da-z]{1,8};/i,
          alias: "named-entity"
        },
        /&#x?[\da-f]{1,8};/i
      ]
    }, t.languages.markup.tag.inside["attr-value"].inside.entity = t.languages.markup.entity, t.languages.markup.doctype.inside["internal-subset"].inside = t.languages.markup, t.hooks.add("wrap", function(n) {
      n.type === "entity" && (n.attributes.title = n.content.value.replace(/&amp;/, "&"));
    }), Object.defineProperty(t.languages.markup.tag, "addInlined", {
      /**
       * Adds an inlined language to markup.
       *
       * An example of an inlined language is CSS with `<style>` tags.
       *
       * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as
       * case insensitive.
       * @param {string} lang The language key.
       * @example
       * addInlined('style', 'css');
       */
      value: function(r, o) {
        var s = {};
        s["language-" + o] = {
          pattern: /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,
          lookbehind: !0,
          inside: t.languages[o]
        }, s.cdata = /^<!\[CDATA\[|\]\]>$/i;
        var u = {
          "included-cdata": {
            pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
            inside: s
          }
        };
        u["language-" + o] = {
          pattern: /[\s\S]+/,
          inside: t.languages[o]
        };
        var c = {};
        c[r] = {
          pattern: RegExp(
            /(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(
              /__/g,
              function() {
                return r;
              }
            ),
            "i"
          ),
          lookbehind: !0,
          greedy: !0,
          inside: u
        }, t.languages.insertBefore("markup", "cdata", c);
      }
    }), Object.defineProperty(t.languages.markup.tag, "addAttribute", {
      /**
       * Adds an pattern to highlight languages embedded in HTML attributes.
       *
       * An example of an inlined language is CSS with `style` attributes.
       *
       * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as
       * case insensitive.
       * @param {string} lang The language key.
       * @example
       * addAttribute('style', 'css');
       */
      value: function(n, r) {
        t.languages.markup.tag.inside["special-attr"].push({
          pattern: RegExp(
            /(^|["'\s])/.source + "(?:" + n + ")" + /\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source,
            "i"
          ),
          lookbehind: !0,
          inside: {
            "attr-name": /^[^\s=]+/,
            "attr-value": {
              pattern: /=[\s\S]+/,
              inside: {
                value: {
                  pattern: /(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,
                  lookbehind: !0,
                  alias: [r, "language-" + r],
                  inside: t.languages[r]
                },
                punctuation: [
                  {
                    pattern: /^=/,
                    alias: "attr-equals"
                  },
                  /"|'/
                ]
              }
            }
          }
        });
      }
    }), t.languages.html = t.languages.markup, t.languages.mathml = t.languages.markup, t.languages.svg = t.languages.markup, t.languages.xml = t.languages.extend("markup", {}), t.languages.ssml = t.languages.xml, t.languages.atom = t.languages.xml, t.languages.rss = t.languages.xml;
  }
  return lf;
}
var uf, iv;
function KB() {
  if (iv) return uf;
  iv = 1, uf = e, e.displayName = "css", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;
      n.languages.css = {
        comment: /\/\*[\s\S]*?\*\//,
        atrule: {
          pattern: /@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/,
          inside: {
            rule: /^@[\w-]+/,
            "selector-function-argument": {
              pattern: /(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,
              lookbehind: !0,
              alias: "selector"
            },
            keyword: {
              pattern: /(^|[^\w-])(?:and|not|only|or)(?![\w-])/,
              lookbehind: !0
            }
            // See rest below
          }
        },
        url: {
          // https://drafts.csswg.org/css-values-3/#urls
          pattern: RegExp(
            "\\burl\\((?:" + r.source + "|" + /(?:[^\\\r\n()"']|\\[\s\S])*/.source + ")\\)",
            "i"
          ),
          greedy: !0,
          inside: {
            function: /^url/i,
            punctuation: /^\(|\)$/,
            string: {
              pattern: RegExp("^" + r.source + "$"),
              alias: "url"
            }
          }
        },
        selector: {
          pattern: RegExp(
            `(^|[{}\\s])[^{}\\s](?:[^{};"'\\s]|\\s+(?![\\s{])|` + r.source + ")*(?=\\s*\\{)"
          ),
          lookbehind: !0
        },
        string: {
          pattern: r,
          greedy: !0
        },
        property: {
          pattern: /(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,
          lookbehind: !0
        },
        important: /!important\b/i,
        function: {
          pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,
          lookbehind: !0
        },
        punctuation: /[(){};:,]/
      }, n.languages.css.atrule.inside.rest = n.languages.css;
      var o = n.languages.markup;
      o && (o.tag.addInlined("style", "css"), o.tag.addAttribute("style", "css"));
    })(t);
  }
  return uf;
}
var cf, ov;
function XB() {
  if (ov) return cf;
  ov = 1, cf = e, e.displayName = "clike", e.aliases = [];
  function e(t) {
    t.languages.clike = {
      comment: [
        {
          pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
          lookbehind: !0,
          greedy: !0
        },
        {
          pattern: /(^|[^\\:])\/\/.*/,
          lookbehind: !0,
          greedy: !0
        }
      ],
      string: {
        pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
        greedy: !0
      },
      "class-name": {
        pattern: /(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,
        lookbehind: !0,
        inside: {
          punctuation: /[.\\]/
        }
      },
      keyword: /\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,
      boolean: /\b(?:false|true)\b/,
      function: /\b\w+(?=\()/,
      number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
      operator: /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,
      punctuation: /[{}[\];(),.:]/
    };
  }
  return cf;
}
var df, sv;
function QB() {
  if (sv) return df;
  sv = 1, df = e, e.displayName = "javascript", e.aliases = ["js"];
  function e(t) {
    t.languages.javascript = t.languages.extend("clike", {
      "class-name": [
        t.languages.clike["class-name"],
        {
          pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,
          lookbehind: !0
        }
      ],
      keyword: [
        {
          pattern: /((?:^|\})\s*)catch\b/,
          lookbehind: !0
        },
        {
          pattern: /(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,
          lookbehind: !0
        }
      ],
      // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)
      function: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,
      number: {
        pattern: RegExp(
          /(^|[^\w$])/.source + "(?:" + // constant
          (/NaN|Infinity/.source + "|" + // binary integer
          /0[bB][01]+(?:_[01]+)*n?/.source + "|" + // octal integer
          /0[oO][0-7]+(?:_[0-7]+)*n?/.source + "|" + // hexadecimal integer
          /0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source + "|" + // decimal bigint
          /\d+(?:_\d+)*n/.source + "|" + // decimal number (integer or float) but no bigint
          /(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source) + ")" + /(?![\w$])/.source
        ),
        lookbehind: !0
      },
      operator: /--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/
    }), t.languages.javascript["class-name"][0].pattern = /(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/, t.languages.insertBefore("javascript", "keyword", {
      regex: {
        // eslint-disable-next-line regexp/no-dupe-characters-character-class
        pattern: /((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,
        lookbehind: !0,
        greedy: !0,
        inside: {
          "regex-source": {
            pattern: /^(\/)[\s\S]+(?=\/[a-z]*$)/,
            lookbehind: !0,
            alias: "language-regex",
            inside: t.languages.regex
          },
          "regex-delimiter": /^\/|\/$/,
          "regex-flags": /^[a-z]+$/
        }
      },
      // This must be declared before keyword because we use "function" inside the look-forward
      "function-variable": {
        pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,
        alias: "function"
      },
      parameter: [
        {
          pattern: /(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,
          lookbehind: !0,
          inside: t.languages.javascript
        },
        {
          pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,
          lookbehind: !0,
          inside: t.languages.javascript
        },
        {
          pattern: /(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,
          lookbehind: !0,
          inside: t.languages.javascript
        },
        {
          pattern: /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,
          lookbehind: !0,
          inside: t.languages.javascript
        }
      ],
      constant: /\b[A-Z](?:[A-Z_]|\dx?)*\b/
    }), t.languages.insertBefore("javascript", "string", {
      hashbang: {
        pattern: /^#!.*/,
        greedy: !0,
        alias: "comment"
      },
      "template-string": {
        pattern: /`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,
        greedy: !0,
        inside: {
          "template-punctuation": {
            pattern: /^`|`$/,
            alias: "string"
          },
          interpolation: {
            pattern: /((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,
            lookbehind: !0,
            inside: {
              "interpolation-punctuation": {
                pattern: /^\$\{|\}$/,
                alias: "punctuation"
              },
              rest: t.languages.javascript
            }
          },
          string: /[\s\S]+/
        }
      },
      "string-property": {
        pattern: /((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,
        lookbehind: !0,
        greedy: !0,
        alias: "property"
      }
    }), t.languages.insertBefore("javascript", "operator", {
      "literal-property": {
        pattern: /((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,
        lookbehind: !0,
        alias: "property"
      }
    }), t.languages.markup && (t.languages.markup.tag.addInlined("script", "javascript"), t.languages.markup.tag.addAttribute(
      /on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,
      "javascript"
    )), t.languages.js = t.languages.javascript;
  }
  return df;
}
var pf, lv;
function ZB() {
  if (lv) return pf;
  lv = 1;
  var e = typeof globalThis == "object" ? globalThis : typeof self == "object" ? self : typeof window == "object" ? window : typeof Lu == "object" ? Lu : {}, t = F();
  e.Prism = { manual: !0, disableWorkerMessageHandler: !0 };
  var n = $5(), r = VB(), o = WB(), s = YB(), u = KB(), c = XB(), p = QB();
  t();
  var f = {}.hasOwnProperty;
  function b() {
  }
  b.prototype = o;
  var g = new b();
  pf = g, g.highlight = _, g.register = T, g.alias = y, g.registered = A, g.listLanguages = R, T(s), T(u), T(c), T(p), g.util.encode = k, g.Token.stringify = C;
  function T(v) {
    if (typeof v != "function" || !v.displayName)
      throw new Error("Expected `function` for `grammar`, got `" + v + "`");
    g.languages[v.displayName] === void 0 && v(g);
  }
  function y(v, B) {
    var Y = g.languages, $ = v, M, V, ne, se;
    B && ($ = {}, $[v] = B);
    for (M in $)
      for (V = $[M], V = typeof V == "string" ? [V] : V, ne = V.length, se = -1; ++se < ne; )
        Y[V[se]] = Y[M];
  }
  function _(v, B) {
    var Y = o.highlight, $;
    if (typeof v != "string")
      throw new Error("Expected `string` for `value`, got `" + v + "`");
    if (g.util.type(B) === "Object")
      $ = B, B = null;
    else {
      if (typeof B != "string")
        throw new Error("Expected `string` for `name`, got `" + B + "`");
      if (f.call(g.languages, B))
        $ = g.languages[B];
      else
        throw new Error("Unknown language: `" + B + "` is not registered");
    }
    return Y.call(this, v, $, B);
  }
  function A(v) {
    if (typeof v != "string")
      throw new Error("Expected `string` for `language`, got `" + v + "`");
    return f.call(g.languages, v);
  }
  function R() {
    var v = g.languages, B = [], Y;
    for (Y in v)
      f.call(v, Y) && typeof v[Y] == "object" && B.push(Y);
    return B;
  }
  function C(v, B, Y) {
    var $;
    return typeof v == "string" ? { type: "text", value: v } : g.util.type(v) === "Array" ? w(v, B) : ($ = {
      type: v.type,
      content: g.Token.stringify(v.content, B, Y),
      tag: "span",
      classes: ["token", v.type],
      attributes: {},
      language: B,
      parent: Y
    }, v.alias && ($.classes = $.classes.concat(v.alias)), g.hooks.run("wrap", $), n(
      $.tag + "." + $.classes.join("."),
      O($.attributes),
      $.content
    ));
  }
  function w(v, B) {
    for (var Y = [], $ = v.length, M = -1, V; ++M < $; )
      V = v[M], V !== "" && V !== null && V !== void 0 && Y.push(V);
    for (M = -1, $ = Y.length; ++M < $; )
      V = Y[M], Y[M] = g.Token.stringify(V, B, Y);
    return Y;
  }
  function k(v) {
    return v;
  }
  function O(v) {
    var B;
    for (B in v)
      v[B] = r(v[B]);
    return v;
  }
  function F() {
    var v = "Prism" in e, B = v ? e.Prism : void 0;
    return Y;
    function Y() {
      v ? e.Prism = B : delete e.Prism, v = void 0, B = void 0;
    }
  }
  return pf;
}
const JB = {
  'code[class*="language-"]': {
    color: "black",
    background: "none",
    textShadow: "0 1px white",
    fontFamily: "Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",
    fontSize: "1em",
    textAlign: "left",
    whiteSpace: "pre",
    wordSpacing: "normal",
    wordBreak: "normal",
    wordWrap: "normal",
    lineHeight: "1.5",
    MozTabSize: "4",
    OTabSize: "4",
    tabSize: "4",
    WebkitHyphens: "none",
    MozHyphens: "none",
    msHyphens: "none",
    hyphens: "none"
  },
  'pre[class*="language-"]': {
    color: "black",
    background: "#f5f2f0",
    textShadow: "0 1px white",
    fontFamily: "Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",
    fontSize: "1em",
    textAlign: "left",
    whiteSpace: "pre",
    wordSpacing: "normal",
    wordBreak: "normal",
    wordWrap: "normal",
    lineHeight: "1.5",
    MozTabSize: "4",
    OTabSize: "4",
    tabSize: "4",
    WebkitHyphens: "none",
    MozHyphens: "none",
    msHyphens: "none",
    hyphens: "none",
    padding: "1em",
    margin: ".5em 0",
    overflow: "auto"
  },
  'pre[class*="language-"]::-moz-selection': {
    textShadow: "none",
    background: "#b3d4fc"
  },
  'pre[class*="language-"] ::-moz-selection': {
    textShadow: "none",
    background: "#b3d4fc"
  },
  'code[class*="language-"]::-moz-selection': {
    textShadow: "none",
    background: "#b3d4fc"
  },
  'code[class*="language-"] ::-moz-selection': {
    textShadow: "none",
    background: "#b3d4fc"
  },
  'pre[class*="language-"]::selection': {
    textShadow: "none",
    background: "#b3d4fc"
  },
  'pre[class*="language-"] ::selection': {
    textShadow: "none",
    background: "#b3d4fc"
  },
  'code[class*="language-"]::selection': {
    textShadow: "none",
    background: "#b3d4fc"
  },
  'code[class*="language-"] ::selection': {
    textShadow: "none",
    background: "#b3d4fc"
  },
  ':not(pre) > code[class*="language-"]': {
    background: "#f5f2f0",
    padding: ".1em",
    borderRadius: ".3em",
    whiteSpace: "normal"
  },
  comment: {
    color: "slategray"
  },
  prolog: {
    color: "slategray"
  },
  doctype: {
    color: "slategray"
  },
  cdata: {
    color: "slategray"
  },
  punctuation: {
    color: "#999"
  },
  namespace: {
    Opacity: ".7"
  },
  property: {
    color: "#905"
  },
  tag: {
    color: "#905"
  },
  boolean: {
    color: "#905"
  },
  number: {
    color: "#905"
  },
  constant: {
    color: "#905"
  },
  symbol: {
    color: "#905"
  },
  deleted: {
    color: "#905"
  },
  selector: {
    color: "#690"
  },
  "attr-name": {
    color: "#690"
  },
  string: {
    color: "#690"
  },
  char: {
    color: "#690"
  },
  builtin: {
    color: "#690"
  },
  inserted: {
    color: "#690"
  },
  operator: {
    color: "#9a6e3a",
    background: "hsla(0, 0%, 100%, .5)"
  },
  entity: {
    color: "#9a6e3a",
    background: "hsla(0, 0%, 100%, .5)",
    cursor: "help"
  },
  url: {
    color: "#9a6e3a",
    background: "hsla(0, 0%, 100%, .5)"
  },
  ".language-css .token.string": {
    color: "#9a6e3a",
    background: "hsla(0, 0%, 100%, .5)"
  },
  ".style .token.string": {
    color: "#9a6e3a",
    background: "hsla(0, 0%, 100%, .5)"
  },
  atrule: {
    color: "#07a"
  },
  "attr-value": {
    color: "#07a"
  },
  keyword: {
    color: "#07a"
  },
  function: {
    color: "#DD4A68"
  },
  "class-name": {
    color: "#DD4A68"
  },
  regex: {
    color: "#e90"
  },
  important: {
    color: "#e90",
    fontWeight: "bold"
  },
  variable: {
    color: "#e90"
  },
  bold: {
    fontWeight: "bold"
  },
  italic: {
    fontStyle: "italic"
  }
};
var ff, uv;
function eU() {
  if (uv) return ff;
  uv = 1, ff = e, e.displayName = "abap", e.aliases = [];
  function e(t) {
    t.languages.abap = {
      comment: /^\*.*/m,
      string: /(`|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
      "string-template": {
        pattern: /([|}])(?:\\.|[^\\|{\r\n])*(?=[|{])/,
        lookbehind: !0,
        alias: "string"
      },
      /* End Of Line comments should not interfere with strings when the
      quote character occurs within them. We assume a string being highlighted
      inside an EOL comment is more acceptable than the opposite.
      */
      "eol-comment": {
        pattern: /(^|\s)".*/m,
        lookbehind: !0,
        alias: "comment"
      },
      keyword: {
        pattern: /(\s|\.|^)(?:SCIENTIFIC_WITH_LEADING_ZERO|SCALE_PRESERVING_SCIENTIFIC|RMC_COMMUNICATION_FAILURE|END-ENHANCEMENT-SECTION|MULTIPLY-CORRESPONDING|SUBTRACT-CORRESPONDING|VERIFICATION-MESSAGE|DIVIDE-CORRESPONDING|ENHANCEMENT-SECTION|CURRENCY_CONVERSION|RMC_SYSTEM_FAILURE|START-OF-SELECTION|MOVE-CORRESPONDING|RMC_INVALID_STATUS|CUSTOMER-FUNCTION|END-OF-DEFINITION|ENHANCEMENT-POINT|SYSTEM-EXCEPTIONS|ADD-CORRESPONDING|SCALE_PRESERVING|SELECTION-SCREEN|CURSOR-SELECTION|END-OF-SELECTION|LOAD-OF-PROGRAM|SCROLL-BOUNDARY|SELECTION-TABLE|EXCEPTION-TABLE|IMPLEMENTATIONS|PARAMETER-TABLE|RIGHT-JUSTIFIED|UNIT_CONVERSION|AUTHORITY-CHECK|LIST-PROCESSING|SIGN_AS_POSTFIX|COL_BACKGROUND|IMPLEMENTATION|INTERFACE-POOL|TRANSFORMATION|IDENTIFICATION|ENDENHANCEMENT|LINE-SELECTION|INITIALIZATION|LEFT-JUSTIFIED|SELECT-OPTIONS|SELECTION-SETS|COMMUNICATION|CORRESPONDING|DECIMAL_SHIFT|PRINT-CONTROL|VALUE-REQUEST|CHAIN-REQUEST|FUNCTION-POOL|FIELD-SYMBOLS|FUNCTIONALITY|INVERTED-DATE|SELECTION-SET|CLASS-METHODS|OUTPUT-LENGTH|CLASS-CODING|COL_NEGATIVE|ERRORMESSAGE|FIELD-GROUPS|HELP-REQUEST|NO-EXTENSION|NO-TOPOFPAGE|REDEFINITION|DISPLAY-MODE|ENDINTERFACE|EXIT-COMMAND|FIELD-SYMBOL|NO-SCROLLING|SHORTDUMP-ID|ACCESSPOLICY|CLASS-EVENTS|COL_POSITIVE|DECLARATIONS|ENHANCEMENTS|FILTER-TABLE|SWITCHSTATES|SYNTAX-CHECK|TRANSPORTING|ASYNCHRONOUS|SYNTAX-TRACE|TOKENIZATION|USER-COMMAND|WITH-HEADING|ABAP-SOURCE|BREAK-POINT|CHAIN-INPUT|COMPRESSION|FIXED-POINT|NEW-SECTION|NON-UNICODE|OCCURRENCES|RESPONSIBLE|SYSTEM-CALL|TRACE-TABLE|ABBREVIATED|CHAR-TO-HEX|END-OF-FILE|ENDFUNCTION|ENVIRONMENT|ASSOCIATION|COL_HEADING|EDITOR-CALL|END-OF-PAGE|ENGINEERING|IMPLEMENTED|INTENSIFIED|RADIOBUTTON|SYSTEM-EXIT|TOP-OF-PAGE|TRANSACTION|APPLICATION|CONCATENATE|DESTINATION|ENHANCEMENT|IMMEDIATELY|NO-GROUPING|PRECOMPILED|REPLACEMENT|TITLE-LINES|ACTIVATION|BYTE-ORDER|CLASS-POOL|CONNECTION|CONVERSION|DEFINITION|DEPARTMENT|EXPIRATION|INHERITING|MESSAGE-ID|NO-HEADING|PERFORMING|QUEUE-ONLY|RIGHTSPACE|SCIENTIFIC|STATUSINFO|STRUCTURES|SYNCPOINTS|WITH-TITLE|ATTRIBUTES|BOUNDARIES|CLASS-DATA|COL_NORMAL|DD\/MM\/YYYY|DESCENDING|INTERFACES|LINE-COUNT|MM\/DD\/YYYY|NON-UNIQUE|PRESERVING|SELECTIONS|STATEMENTS|SUBROUTINE|TRUNCATION|TYPE-POOLS|ARITHMETIC|BACKGROUND|ENDPROVIDE|EXCEPTIONS|IDENTIFIER|INDEX-LINE|OBLIGATORY|PARAMETERS|PERCENTAGE|PUSHBUTTON|RESOLUTION|COMPONENTS|DEALLOCATE|DISCONNECT|DUPLICATES|FIRST-LINE|HEAD-LINES|NO-DISPLAY|OCCURRENCE|RESPECTING|RETURNCODE|SUBMATCHES|TRACE-FILE|ASCENDING|BYPASSING|ENDMODULE|EXCEPTION|EXCLUDING|EXPORTING|INCREMENT|MATCHCODE|PARAMETER|PARTIALLY|PREFERRED|REFERENCE|REPLACING|RETURNING|SELECTION|SEPARATED|SPECIFIED|STATEMENT|TIMESTAMP|TYPE-POOL|ACCEPTING|APPENDAGE|ASSIGNING|COL_GROUP|COMPARING|CONSTANTS|DANGEROUS|IMPORTING|INSTANCES|LEFTSPACE|LOG-POINT|QUICKINFO|READ-ONLY|SCROLLING|SQLSCRIPT|STEP-LOOP|TOP-LINES|TRANSLATE|APPENDING|AUTHORITY|CHARACTER|COMPONENT|CONDITION|DIRECTORY|DUPLICATE|MESSAGING|RECEIVING|SUBSCREEN|ACCORDING|COL_TOTAL|END-LINES|ENDMETHOD|ENDSELECT|EXPANDING|EXTENSION|INCLUDING|INFOTYPES|INTERFACE|INTERVALS|LINE-SIZE|PF-STATUS|PROCEDURE|PROTECTED|REQUESTED|RESUMABLE|RIGHTPLUS|SAP-SPOOL|SECONDARY|STRUCTURE|SUBSTRING|TABLEVIEW|NUMOFCHAR|ADJACENT|ANALYSIS|ASSIGNED|BACKWARD|CHANNELS|CHECKBOX|CONTINUE|CRITICAL|DATAINFO|DD\/MM\/YY|DURATION|ENCODING|ENDCLASS|FUNCTION|LEFTPLUS|LINEFEED|MM\/DD\/YY|OVERFLOW|RECEIVED|SKIPPING|SORTABLE|STANDARD|SUBTRACT|SUPPRESS|TABSTRIP|TITLEBAR|TRUNCATE|UNASSIGN|WHENEVER|ANALYZER|COALESCE|COMMENTS|CONDENSE|DECIMALS|DEFERRED|ENDWHILE|EXPLICIT|KEYWORDS|MESSAGES|POSITION|PRIORITY|RECEIVER|RENAMING|TIMEZONE|TRAILING|ALLOCATE|CENTERED|CIRCULAR|CONTROLS|CURRENCY|DELETING|DESCRIBE|DISTANCE|ENDCATCH|EXPONENT|EXTENDED|GENERATE|IGNORING|INCLUDES|INTERNAL|MAJOR-ID|MODIFIER|NEW-LINE|OPTIONAL|PROPERTY|ROLLBACK|STARTING|SUPPLIED|ABSTRACT|CHANGING|CONTEXTS|CREATING|CUSTOMER|DATABASE|DAYLIGHT|DEFINING|DISTINCT|DIVISION|ENABLING|ENDCHAIN|ESCAPING|HARMLESS|IMPLICIT|INACTIVE|LANGUAGE|MINOR-ID|MULTIPLY|NEW-PAGE|NO-TITLE|POS_HIGH|SEPARATE|TEXTPOOL|TRANSFER|SELECTOR|DBMAXLEN|ITERATOR|ARCHIVE|BIT-XOR|BYTE-CO|COLLECT|COMMENT|CURRENT|DEFAULT|DISPLAY|ENDFORM|EXTRACT|LEADING|LISTBOX|LOCATOR|MEMBERS|METHODS|NESTING|POS_LOW|PROCESS|PROVIDE|RAISING|RESERVE|SECONDS|SUMMARY|VISIBLE|BETWEEN|BIT-AND|BYTE-CS|CLEANUP|COMPUTE|CONTROL|CONVERT|DATASET|ENDCASE|FORWARD|HEADERS|HOTSPOT|INCLUDE|INVERSE|KEEPING|NO-ZERO|OBJECTS|OVERLAY|PADDING|PATTERN|PROGRAM|REFRESH|SECTION|SUMMING|TESTING|VERSION|WINDOWS|WITHOUT|BIT-NOT|BYTE-CA|BYTE-NA|CASTING|CONTEXT|COUNTRY|DYNAMIC|ENABLED|ENDLOOP|EXECUTE|FRIENDS|HANDLER|HEADING|INITIAL|\*-INPUT|LOGFILE|MAXIMUM|MINIMUM|NO-GAPS|NO-SIGN|PRAGMAS|PRIMARY|PRIVATE|REDUCED|REPLACE|REQUEST|RESULTS|UNICODE|WARNING|ALIASES|BYTE-CN|BYTE-NS|CALLING|COL_KEY|COLUMNS|CONNECT|ENDEXEC|ENTRIES|EXCLUDE|FILTERS|FURTHER|HELP-ID|LOGICAL|MAPPING|MESSAGE|NAMETAB|OPTIONS|PACKAGE|PERFORM|RECEIVE|STATICS|VARYING|BINDING|CHARLEN|GREATER|XSTRLEN|ACCEPT|APPEND|DETAIL|ELSEIF|ENDING|ENDTRY|FORMAT|FRAMES|GIVING|HASHED|HEADER|IMPORT|INSERT|MARGIN|MODULE|NATIVE|OBJECT|OFFSET|REMOTE|RESUME|SAVING|SIMPLE|SUBMIT|TABBED|TOKENS|UNIQUE|UNPACK|UPDATE|WINDOW|YELLOW|ACTUAL|ASPECT|CENTER|CURSOR|DELETE|DIALOG|DIVIDE|DURING|ERRORS|EVENTS|EXTEND|FILTER|HANDLE|HAVING|IGNORE|LITTLE|MEMORY|NO-GAP|OCCURS|OPTION|PERSON|PLACES|PUBLIC|REDUCE|REPORT|RESULT|SINGLE|SORTED|SWITCH|SYNTAX|TARGET|VALUES|WRITER|ASSERT|BLOCKS|BOUNDS|BUFFER|CHANGE|COLUMN|COMMIT|CONCAT|COPIES|CREATE|DDMMYY|DEFINE|ENDIAN|ESCAPE|EXPAND|KERNEL|LAYOUT|LEGACY|LEVELS|MMDDYY|NUMBER|OUTPUT|RANGES|READER|RETURN|SCREEN|SEARCH|SELECT|SHARED|SOURCE|STABLE|STATIC|SUBKEY|SUFFIX|TABLES|UNWIND|YYMMDD|ASSIGN|BACKUP|BEFORE|BINARY|BIT-OR|BLANKS|CLIENT|CODING|COMMON|DEMAND|DYNPRO|EXCEPT|EXISTS|EXPORT|FIELDS|GLOBAL|GROUPS|LENGTH|LOCALE|MEDIUM|METHOD|MODIFY|NESTED|OTHERS|REJECT|SCROLL|SUPPLY|SYMBOL|ENDFOR|STRLEN|ALIGN|BEGIN|BOUND|ENDAT|ENTRY|EVENT|FINAL|FLUSH|GRANT|INNER|SHORT|USING|WRITE|AFTER|BLACK|BLOCK|CLOCK|COLOR|COUNT|DUMMY|EMPTY|ENDDO|ENDON|GREEN|INDEX|INOUT|LEAVE|LEVEL|LINES|MODIF|ORDER|OUTER|RANGE|RESET|RETRY|RIGHT|SMART|SPLIT|STYLE|TABLE|THROW|UNDER|UNTIL|UPPER|UTF-8|WHERE|ALIAS|BLANK|CLEAR|CLOSE|EXACT|FETCH|FIRST|FOUND|GROUP|LLANG|LOCAL|OTHER|REGEX|SPOOL|TITLE|TYPES|VALID|WHILE|ALPHA|BOXED|CATCH|CHAIN|CHECK|CLASS|COVER|ENDIF|EQUIV|FIELD|FLOOR|FRAME|INPUT|LOWER|MATCH|NODES|PAGES|PRINT|RAISE|ROUND|SHIFT|SPACE|SPOTS|STAMP|STATE|TASKS|TIMES|TRMAC|ULINE|UNION|VALUE|WIDTH|EQUAL|LOG10|TRUNC|BLOB|CASE|CEIL|CLOB|COND|EXIT|FILE|GAPS|HOLD|INCL|INTO|KEEP|KEYS|LAST|LINE|LONG|LPAD|MAIL|MODE|OPEN|PINK|READ|ROWS|TEST|THEN|ZERO|AREA|BACK|BADI|BYTE|CAST|EDIT|EXEC|FAIL|FIND|FKEQ|FONT|FREE|GKEQ|HIDE|INIT|ITNO|LATE|LOOP|MAIN|MARK|MOVE|NEXT|NULL|RISK|ROLE|UNIT|WAIT|ZONE|BASE|CALL|CODE|DATA|DATE|FKGE|GKGE|HIGH|KIND|LEFT|LIST|MASK|MESH|NAME|NODE|PACK|PAGE|POOL|SEND|SIGN|SIZE|SOME|STOP|TASK|TEXT|TIME|USER|VARY|WITH|WORD|BLUE|CONV|COPY|DEEP|ELSE|FORM|FROM|HINT|ICON|JOIN|LIKE|LOAD|ONLY|PART|SCAN|SKIP|SORT|TYPE|UNIX|VIEW|WHEN|WORK|ACOS|ASIN|ATAN|COSH|EACH|FRAC|LESS|RTTI|SINH|SQRT|TANH|AVG|BIT|DIV|ISO|LET|OUT|PAD|SQL|ALL|CI_|CPI|END|LOB|LPI|MAX|MIN|NEW|OLE|RUN|SET|\?TO|YES|ABS|ADD|AND|BIG|FOR|HDB|JOB|LOW|NOT|SAP|TRY|VIA|XML|ANY|GET|IDS|KEY|MOD|OFF|PUT|RAW|RED|REF|SUM|TAB|XSD|CNT|COS|EXP|LOG|SIN|TAN|XOR|AT|CO|CP|DO|GT|ID|IF|NS|OR|BT|CA|CS|GE|NA|NB|EQ|IN|LT|NE|NO|OF|ON|PF|TO|AS|BY|CN|IS|LE|NP|UP|E|I|M|O|Z|C|X)\b/i,
        lookbehind: !0
      },
      /* Numbers can be only integers. Decimal or Hex appear only as strings */
      number: /\b\d+\b/,
      /* Operators must always be surrounded by whitespace, they cannot be put
      adjacent to operands.
      */
      operator: {
        pattern: /(\s)(?:\*\*?|<[=>]?|>=?|\?=|[-+\/=])(?=\s)/,
        lookbehind: !0
      },
      "string-operator": {
        pattern: /(\s)&&?(?=\s)/,
        lookbehind: !0,
        /* The official editor highlights */
        alias: "keyword"
      },
      "token-operator": [
        {
          /* Special operators used to access structure components, class methods/attributes, etc. */
          pattern: /(\w)(?:->?|=>|[~|{}])(?=\w)/,
          lookbehind: !0,
          alias: "punctuation"
        },
        {
          /* Special tokens used do delimit string templates */
          pattern: /[|{}]/,
          alias: "punctuation"
        }
      ],
      punctuation: /[,.:()]/
    };
  }
  return ff;
}
var hf, cv;
function tU() {
  if (cv) return hf;
  cv = 1, hf = e, e.displayName = "abnf", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = "(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)";
      n.languages.abnf = {
        comment: /;.*/,
        string: {
          pattern: /(?:%[is])?"[^"\n\r]*"/,
          greedy: !0,
          inside: {
            punctuation: /^%[is]/
          }
        },
        range: {
          pattern: /%(?:b[01]+-[01]+|d\d+-\d+|x[A-F\d]+-[A-F\d]+)/i,
          alias: "number"
        },
        terminal: {
          pattern: /%(?:b[01]+(?:\.[01]+)*|d\d+(?:\.\d+)*|x[A-F\d]+(?:\.[A-F\d]+)*)/i,
          alias: "number"
        },
        repetition: {
          pattern: /(^|[^\w-])(?:\d*\*\d*|\d+)/,
          lookbehind: !0,
          alias: "operator"
        },
        definition: {
          pattern: /(^[ \t]*)(?:[a-z][\w-]*|<[^<>\r\n]*>)(?=\s*=)/m,
          lookbehind: !0,
          alias: "keyword",
          inside: {
            punctuation: /<|>/
          }
        },
        "core-rule": {
          pattern: RegExp(
            "(?:(^|[^<\\w-])" + r + "|<" + r + ">)(?![\\w-])",
            "i"
          ),
          lookbehind: !0,
          alias: ["rule", "constant"],
          inside: {
            punctuation: /<|>/
          }
        },
        rule: {
          pattern: /(^|[^<\w-])[a-z][\w-]*|<[^<>\r\n]*>/i,
          lookbehind: !0,
          inside: {
            punctuation: /<|>/
          }
        },
        operator: /=\/?|\//,
        punctuation: /[()\[\]]/
      };
    })(t);
  }
  return hf;
}
var gf, dv;
function nU() {
  if (dv) return gf;
  dv = 1, gf = e, e.displayName = "actionscript", e.aliases = [];
  function e(t) {
    t.languages.actionscript = t.languages.extend("javascript", {
      keyword: /\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\b/,
      operator: /\+\+|--|(?:[+\-*\/%^]|&&?|\|\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/
    }), t.languages.actionscript["class-name"].alias = "function", delete t.languages.actionscript.parameter, delete t.languages.actionscript["literal-property"], t.languages.markup && t.languages.insertBefore("actionscript", "string", {
      xml: {
        pattern: /(^|[^.])<\/?\w+(?:\s+[^\s>\/=]+=("|')(?:\\[\s\S]|(?!\2)[^\\])*\2)*\s*\/?>/,
        lookbehind: !0,
        inside: t.languages.markup
      }
    });
  }
  return gf;
}
var mf, pv;
function rU() {
  if (pv) return mf;
  pv = 1, mf = e, e.displayName = "ada", e.aliases = [];
  function e(t) {
    t.languages.ada = {
      comment: /--.*/,
      string: /"(?:""|[^"\r\f\n])*"/,
      number: [
        {
          pattern: /\b\d(?:_?\d)*#[\dA-F](?:_?[\dA-F])*(?:\.[\dA-F](?:_?[\dA-F])*)?#(?:E[+-]?\d(?:_?\d)*)?/i
        },
        {
          pattern: /\b\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:E[+-]?\d(?:_?\d)*)?\b/i
        }
      ],
      "attr-name": /\b'\w+/,
      keyword: /\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|new|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|return|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\b/i,
      boolean: /\b(?:false|true)\b/i,
      operator: /<[=>]?|>=?|=>?|:=|\/=?|\*\*?|[&+-]/,
      punctuation: /\.\.?|[,;():]/,
      char: /'.'/,
      variable: /\b[a-z](?:\w)*\b/i
    };
  }
  return mf;
}
var bf, fv;
function aU() {
  if (fv) return bf;
  fv = 1, bf = e, e.displayName = "agda", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.agda = {
        comment: /\{-[\s\S]*?(?:-\}|$)|--.*/,
        string: {
          pattern: /"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,
          greedy: !0
        },
        punctuation: /[(){}⦃⦄.;@]/,
        "class-name": {
          pattern: /((?:data|record) +)\S+/,
          lookbehind: !0
        },
        function: {
          pattern: /(^[ \t]*)(?!\s)[^:\r\n]+(?=:)/m,
          lookbehind: !0
        },
        operator: {
          pattern: /(^\s*|\s)(?:[=|:∀→λ\\?_]|->)(?=\s)/,
          lookbehind: !0
        },
        keyword: /\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\b/
      };
    })(t);
  }
  return bf;
}
var Ef, hv;
function iU() {
  if (hv) return Ef;
  hv = 1, Ef = e, e.displayName = "al", e.aliases = [];
  function e(t) {
    t.languages.al = {
      comment: /\/\/.*|\/\*[\s\S]*?\*\//,
      string: {
        pattern: /'(?:''|[^'\r\n])*'(?!')|"(?:""|[^"\r\n])*"(?!")/,
        greedy: !0
      },
      function: {
        pattern: /(\b(?:event|procedure|trigger)\s+|(?:^|[^.])\.\s*)[a-z_]\w*(?=\s*\()/i,
        lookbehind: !0
      },
      keyword: [
        // keywords
        /\b(?:array|asserterror|begin|break|case|do|downto|else|end|event|exit|for|foreach|function|if|implements|in|indataset|interface|internal|local|of|procedure|program|protected|repeat|runonclient|securityfiltering|suppressdispose|temporary|then|to|trigger|until|var|while|with|withevents)\b/i,
        // objects and metadata that are used like keywords
        /\b(?:action|actions|addafter|addbefore|addfirst|addlast|area|assembly|chartpart|codeunit|column|controladdin|cuegroup|customizes|dataitem|dataset|dotnet|elements|enum|enumextension|extends|field|fieldattribute|fieldelement|fieldgroup|fieldgroups|fields|filter|fixed|grid|group|key|keys|label|labels|layout|modify|moveafter|movebefore|movefirst|movelast|page|pagecustomization|pageextension|part|profile|query|repeater|report|requestpage|schema|separator|systempart|table|tableelement|tableextension|textattribute|textelement|type|usercontrol|value|xmlport)\b/i
      ],
      number: /\b(?:0x[\da-f]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?)(?:F|LL?|U(?:LL?)?)?\b/i,
      boolean: /\b(?:false|true)\b/i,
      variable: /\b(?:Curr(?:FieldNo|Page|Report)|x?Rec|RequestOptionsPage)\b/,
      "class-name": /\b(?:automation|biginteger|bigtext|blob|boolean|byte|char|clienttype|code|completiontriggererrorlevel|connectiontype|database|dataclassification|datascope|date|dateformula|datetime|decimal|defaultlayout|dialog|dictionary|dotnetassembly|dotnettypedeclaration|duration|errorinfo|errortype|executioncontext|executionmode|fieldclass|fieldref|fieldtype|file|filterpagebuilder|guid|httpclient|httpcontent|httpheaders|httprequestmessage|httpresponsemessage|instream|integer|joker|jsonarray|jsonobject|jsontoken|jsonvalue|keyref|list|moduledependencyinfo|moduleinfo|none|notification|notificationscope|objecttype|option|outstream|pageresult|record|recordid|recordref|reportformat|securityfilter|sessionsettings|tableconnectiontype|tablefilter|testaction|testfield|testfilterfield|testpage|testpermissions|testrequestpage|text|textbuilder|textconst|textencoding|time|transactionmodel|transactiontype|variant|verbosity|version|view|views|webserviceactioncontext|webserviceactionresultcode|xmlattribute|xmlattributecollection|xmlcdata|xmlcomment|xmldeclaration|xmldocument|xmldocumenttype|xmlelement|xmlnamespacemanager|xmlnametable|xmlnode|xmlnodelist|xmlprocessinginstruction|xmlreadoptions|xmltext|xmlwriteoptions)\b/i,
      operator: /\.\.|:[=:]|[-+*/]=?|<>|[<>]=?|=|\b(?:and|div|mod|not|or|xor)\b/i,
      punctuation: /[()\[\]{}:.;,]/
    };
  }
  return Ef;
}
var yf, gv;
function oU() {
  if (gv) return yf;
  gv = 1, yf = e, e.displayName = "antlr4", e.aliases = ["g4"];
  function e(t) {
    t.languages.antlr4 = {
      comment: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,
      string: {
        pattern: /'(?:\\.|[^\\'\r\n])*'/,
        greedy: !0
      },
      "character-class": {
        pattern: /\[(?:\\.|[^\\\]\r\n])*\]/,
        greedy: !0,
        alias: "regex",
        inside: {
          range: {
            pattern: /([^[]|(?:^|[^\\])(?:\\\\)*\\\[)-(?!\])/,
            lookbehind: !0,
            alias: "punctuation"
          },
          escape: /\\(?:u(?:[a-fA-F\d]{4}|\{[a-fA-F\d]+\})|[pP]\{[=\w-]+\}|[^\r\nupP])/,
          punctuation: /[\[\]]/
        }
      },
      action: {
        pattern: /\{(?:[^{}]|\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\})*\}/,
        greedy: !0,
        inside: {
          content: {
            // this might be C, C++, Python, Java, C#, or any other language ANTLR4 compiles to
            pattern: /(\{)[\s\S]+(?=\})/,
            lookbehind: !0
          },
          punctuation: /[{}]/
        }
      },
      command: {
        pattern: /(->\s*(?!\s))(?:\s*(?:,\s*)?\b[a-z]\w*(?:\s*\([^()\r\n]*\))?)+(?=\s*;)/i,
        lookbehind: !0,
        inside: {
          function: /\b\w+(?=\s*(?:[,(]|$))/,
          punctuation: /[,()]/
        }
      },
      annotation: {
        pattern: /@\w+(?:::\w+)*/,
        alias: "keyword"
      },
      label: {
        pattern: /#[ \t]*\w+/,
        alias: "punctuation"
      },
      keyword: /\b(?:catch|channels|finally|fragment|grammar|import|lexer|locals|mode|options|parser|returns|throws|tokens)\b/,
      definition: [
        {
          pattern: /\b[a-z]\w*(?=\s*:)/,
          alias: ["rule", "class-name"]
        },
        {
          pattern: /\b[A-Z]\w*(?=\s*:)/,
          alias: ["token", "constant"]
        }
      ],
      constant: /\b[A-Z][A-Z_]*\b/,
      operator: /\.\.|->|[|~]|[*+?]\??/,
      punctuation: /[;:()=]/
    }, t.languages.g4 = t.languages.antlr4;
  }
  return yf;
}
var Tf, mv;
function sU() {
  if (mv) return Tf;
  mv = 1, Tf = e, e.displayName = "apacheconf", e.aliases = [];
  function e(t) {
    t.languages.apacheconf = {
      comment: /#.*/,
      "directive-inline": {
        pattern: /(^[\t ]*)\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|Add(?:Alt|AltByEncoding|AltByType|Charset|DefaultCharset|Description|Encoding|Handler|Icon|IconByEncoding|IconByType|InputFilter|Language|ModuleInfo|OutputFilter|OutputFilterByType|Type)|Alias|AliasMatch|Allow(?:CONNECT|EncodedSlashes|Methods|Override|OverrideList)?|Anonymous(?:_LogEmail|_MustGiveEmail|_NoUserID|_VerifyEmail)?|AsyncRequestWorkerFactor|Auth(?:BasicAuthoritative|BasicFake|BasicProvider|BasicUseDigestAlgorithm|DBDUserPWQuery|DBDUserRealmQuery|DBMGroupFile|DBMType|DBMUserFile|Digest(?:Algorithm|Domain|NonceLifetime|Provider|Qop|ShmemSize)|Form(?:Authoritative|Body|DisableNoStore|FakeBasicAuth|Location|LoginRequiredLocation|LoginSuccessLocation|LogoutLocation|Method|Mimetype|Password|Provider|SitePassphrase|Size|Username)|GroupFile|LDAP(?:AuthorizePrefix|BindAuthoritative|BindDN|BindPassword|CharsetConfig|CompareAsUser|CompareDNOnServer|DereferenceAliases|GroupAttribute|GroupAttributeIsDN|InitialBindAsUser|InitialBindPattern|MaxSubGroupDepth|RemoteUserAttribute|RemoteUserIsDN|SearchAsUser|SubGroupAttribute|SubGroupClass|Url)|Merging|Name|nCache(?:Context|Enable|ProvideFor|SOCache|Timeout)|nzFcgiCheckAuthnProvider|nzFcgiDefineProvider|Type|UserFile|zDBDLoginToReferer|zDBDQuery|zDBDRedirectQuery|zDBMType|zSendForbiddenOnFailure)|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|Cache(?:DefaultExpire|DetailHeader|DirLength|DirLevels|Disable|Enable|File|Header|IgnoreCacheControl|IgnoreHeaders|IgnoreNoLastMod|IgnoreQueryString|IgnoreURLSessionIdentifiers|KeyBaseURL|LastModifiedFactor|Lock|LockMaxAge|LockPath|MaxExpire|MaxFileSize|MinExpire|MinFileSize|NegotiatedDocs|QuickHandler|ReadSize|ReadTime|Root|Socache(?:MaxSize|MaxTime|MinTime|ReadSize|ReadTime)?|StaleOnError|StoreExpired|StoreNoStore|StorePrivate)|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|Deflate(?:BufferSize|CompressionLevel|FilterNote|InflateLimitRequestBody|InflateRatio(?:Burst|Limit)|MemLevel|WindowSize)|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|Heartbeat(?:Address|Listen|MaxServers|Storage)|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|Index(?:HeadInsert|Ignore|IgnoreReset|Options|OrderDefault|StyleSheet)|InputSed|ISAPI(?:AppendLogToErrors|AppendLogToQuery|CacheFile|FakeAsync|LogNotSupported|ReadAheadBuffer)|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAP(?:CacheEntries|CacheTTL|ConnectionPoolTTL|ConnectionTimeout|LibraryDebug|OpCacheEntries|OpCacheTTL|ReferralHopLimit|Referrals|Retries|RetryDelay|SharedCacheFile|SharedCacheSize|Timeout|TrustedClientCert|TrustedGlobalCert|TrustedMode|VerifyServerCert)|Limit(?:InternalRecursion|Request(?:Body|Fields|FieldSize|Line)|XMLRequestBody)|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|Lua(?:Hook(?:AccessChecker|AuthChecker|CheckUserID|Fixups|InsertFilter|Log|MapToStorage|TranslateName|TypeChecker)|Inherit|InputFilter|MapHandler|OutputFilter|PackageCPath|PackagePath|QuickHandler|Root|Scope)|Max(?:ConnectionsPerChild|KeepAliveRequests|MemFree|RangeOverlaps|RangeReversals|Ranges|RequestWorkers|SpareServers|SpareThreads|Threads)|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|Proxy(?:AddHeaders|BadHeader|Block|Domain|ErrorOverride|ExpressDBMFile|ExpressDBMType|ExpressEnable|FtpDirCharset|FtpEscapeWildcards|FtpListOnWildcard|HTML(?:BufSize|CharsetOut|DocType|Enable|Events|Extended|Fixups|Interp|Links|Meta|StripComments|URLMap)|IOBufferSize|MaxForwards|Pass(?:Inherit|InterpolateEnv|Match|Reverse|ReverseCookieDomain|ReverseCookiePath)?|PreserveHost|ReceiveBufferSize|Remote|RemoteMatch|Requests|SCGIInternalRedirect|SCGISendfile|Set|SourceAddress|Status|Timeout|Via)|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIP(?:Header|InternalProxy|InternalProxyList|ProxiesHeader|TrustedProxy|TrustedProxyList)|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|Rewrite(?:Base|Cond|Engine|Map|Options|Rule)|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script(?:Alias|AliasMatch|InterpreterSource|Log|LogBuffer|LogLength|Sock)?|SecureListen|SeeRequestTail|SendBufferSize|Server(?:Admin|Alias|Limit|Name|Path|Root|Signature|Tokens)|Session(?:Cookie(?:Name|Name2|Remove)|Crypto(?:Cipher|Driver|Passphrase|PassphraseFile)|DBD(?:CookieName|CookieName2|CookieRemove|DeleteLabel|InsertLabel|PerUser|SelectLabel|UpdateLabel)|Env|Exclude|Header|Include|MaxAge)?|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSL(?:CACertificateFile|CACertificatePath|CADNRequestFile|CADNRequestPath|CARevocationCheck|CARevocationFile|CARevocationPath|CertificateChainFile|CertificateFile|CertificateKeyFile|CipherSuite|Compression|CryptoDevice|Engine|FIPS|HonorCipherOrder|InsecureRenegotiation|OCSP(?:DefaultResponder|Enable|OverrideResponder|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|UseRequestNonce)|OpenSSLConfCmd|Options|PassPhraseDialog|Protocol|Proxy(?:CACertificateFile|CACertificatePath|CARevocation(?:Check|File|Path)|CheckPeer(?:CN|Expire|Name)|CipherSuite|Engine|MachineCertificate(?:ChainFile|File|Path)|Protocol|Verify|VerifyDepth)|RandomSeed|RenegBufferSize|Require|RequireSSL|Session(?:Cache|CacheTimeout|TicketKeyFile|Tickets)|SRPUnknownUserSeed|SRPVerifierFile|Stapling(?:Cache|ErrorCacheTimeout|FakeTryLater|ForceURL|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|ReturnResponderErrors|StandardCacheTimeout)|StrictSNIVHostCheck|UserName|UseStapling|VerifyClient|VerifyDepth)|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|Virtual(?:DocumentRoot|ScriptAlias)(?:IP)?|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\b/im,
        lookbehind: !0,
        alias: "property"
      },
      "directive-block": {
        pattern: /<\/?\b(?:Auth[nz]ProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|Require(?:All|Any|None)|VirtualHost)\b.*>/i,
        inside: {
          "directive-block": {
            pattern: /^<\/?\w+/,
            inside: {
              punctuation: /^<\/?/
            },
            alias: "tag"
          },
          "directive-block-parameter": {
            pattern: /.*[^>]/,
            inside: {
              punctuation: /:/,
              string: {
                pattern: /("|').*\1/,
                inside: {
                  variable: /[$%]\{?(?:\w\.?[-+:]?)+\}?/
                }
              }
            },
            alias: "attr-value"
          },
          punctuation: />/
        },
        alias: "tag"
      },
      "directive-flags": {
        pattern: /\[(?:[\w=],?)+\]/,
        alias: "keyword"
      },
      string: {
        pattern: /("|').*\1/,
        inside: {
          variable: /[$%]\{?(?:\w\.?[-+:]?)+\}?/
        }
      },
      variable: /[$%]\{?(?:\w\.?[-+:]?)+\}?/,
      regex: /\^?.*\$|\^.*\$?/
    };
  }
  return Tf;
}
var Sf, bv;
function WE() {
  if (bv) return Sf;
  bv = 1, Sf = e, e.displayName = "sql", e.aliases = [];
  function e(t) {
    t.languages.sql = {
      comment: {
        pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,
        lookbehind: !0
      },
      variable: [
        {
          pattern: /@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,
          greedy: !0
        },
        /@[\w.$]+/
      ],
      string: {
        pattern: /(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/,
        greedy: !0,
        lookbehind: !0
      },
      identifier: {
        pattern: /(^|[^@\\])`(?:\\[\s\S]|[^`\\]|``)*`/,
        greedy: !0,
        lookbehind: !0,
        inside: {
          punctuation: /^`|`$/
        }
      },
      function: /\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,
      // Should we highlight user defined functions too?
      keyword: /\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,
      boolean: /\b(?:FALSE|NULL|TRUE)\b/i,
      number: /\b0x[\da-f]+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,
      operator: /[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,
      punctuation: /[;[\]()`,.]/
    };
  }
  return Sf;
}
var _f, Ev;
function lU() {
  if (Ev) return _f;
  Ev = 1;
  var e = WE();
  _f = t, t.displayName = "apex", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      var o = /\b(?:(?:after|before)(?=\s+[a-z])|abstract|activate|and|any|array|as|asc|autonomous|begin|bigdecimal|blob|boolean|break|bulk|by|byte|case|cast|catch|char|class|collect|commit|const|continue|currency|date|datetime|decimal|default|delete|desc|do|double|else|end|enum|exception|exit|export|extends|final|finally|float|for|from|get(?=\s*[{};])|global|goto|group|having|hint|if|implements|import|in|inner|insert|instanceof|int|integer|interface|into|join|like|limit|list|long|loop|map|merge|new|not|null|nulls|number|object|of|on|or|outer|override|package|parallel|pragma|private|protected|public|retrieve|return|rollback|select|set|short|sObject|sort|static|string|super|switch|synchronized|system|testmethod|then|this|throw|time|transaction|transient|trigger|try|undelete|update|upsert|using|virtual|void|webservice|when|where|while|(?:inherited|with|without)\s+sharing)\b/i, s = /\b(?:(?=[a-z_]\w*\s*[<\[])|(?!<keyword>))[A-Z_]\w*(?:\s*\.\s*[A-Z_]\w*)*\b(?:\s*(?:\[\s*\]|<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>))*/.source.replace(
        /<keyword>/g,
        function() {
          return o.source;
        }
      );
      function u(p) {
        return RegExp(
          p.replace(/<CLASS-NAME>/g, function() {
            return s;
          }),
          "i"
        );
      }
      var c = {
        keyword: o,
        punctuation: /[()\[\]{};,:.<>]/
      };
      r.languages.apex = {
        comment: r.languages.clike.comment,
        string: r.languages.clike.string,
        sql: {
          pattern: /((?:[=,({:]|\breturn)\s*)\[[^\[\]]*\]/i,
          lookbehind: !0,
          greedy: !0,
          alias: "language-sql",
          inside: r.languages.sql
        },
        annotation: {
          pattern: /@\w+\b/,
          alias: "punctuation"
        },
        "class-name": [
          {
            pattern: u(
              /(\b(?:class|enum|extends|implements|instanceof|interface|new|trigger\s+\w+\s+on)\s+)<CLASS-NAME>/.source
            ),
            lookbehind: !0,
            inside: c
          },
          {
            // cast
            pattern: u(
              /(\(\s*)<CLASS-NAME>(?=\s*\)\s*[\w(])/.source
            ),
            lookbehind: !0,
            inside: c
          },
          {
            // variable/parameter declaration and return types
            pattern: u(/<CLASS-NAME>(?=\s*\w+\s*[;=,(){:])/.source),
            inside: c
          }
        ],
        trigger: {
          pattern: /(\btrigger\s+)\w+\b/i,
          lookbehind: !0,
          alias: "class-name"
        },
        keyword: o,
        function: /\b[a-z_]\w*(?=\s*\()/i,
        boolean: /\b(?:false|true)\b/i,
        number: /(?:\B\.\d+|\b\d+(?:\.\d+|L)?)\b/i,
        operator: /[!=](?:==?)?|\?\.?|&&|\|\||--|\+\+|[-+*/^&|]=?|:|<<?=?|>{1,3}=?/,
        punctuation: /[()\[\]{};,.]/
      };
    }(n);
  }
  return _f;
}
var vf, yv;
function uU() {
  if (yv) return vf;
  yv = 1, vf = e, e.displayName = "apl", e.aliases = [];
  function e(t) {
    t.languages.apl = {
      comment: /(?:⍝|#[! ]).*$/m,
      string: {
        pattern: /'(?:[^'\r\n]|'')*'/,
        greedy: !0
      },
      number: /¯?(?:\d*\.?\b\d+(?:e[+¯]?\d+)?|¯|∞)(?:j¯?(?:(?:\d+(?:\.\d+)?|\.\d+)(?:e[+¯]?\d+)?|¯|∞))?/i,
      statement: /:[A-Z][a-z][A-Za-z]*\b/,
      "system-function": {
        pattern: /⎕[A-Z]+/i,
        alias: "function"
      },
      constant: /[⍬⌾#⎕⍞]/,
      function: /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,
      "monadic-operator": {
        pattern: /[\\\/⌿⍀¨⍨⌶&∥]/,
        alias: "operator"
      },
      "dyadic-operator": {
        pattern: /[.⍣⍠⍤∘⌸@⌺⍥]/,
        alias: "operator"
      },
      assignment: {
        pattern: /←/,
        alias: "keyword"
      },
      punctuation: /[\[;\]()◇⋄]/,
      dfn: {
        pattern: /[{}⍺⍵⍶⍹∇⍫:]/,
        alias: "builtin"
      }
    };
  }
  return vf;
}
var Af, Tv;
function cU() {
  if (Tv) return Af;
  Tv = 1, Af = e, e.displayName = "applescript", e.aliases = [];
  function e(t) {
    t.languages.applescript = {
      comment: [
        // Allow one level of nesting
        /\(\*(?:\(\*(?:[^*]|\*(?!\)))*\*\)|(?!\(\*)[\s\S])*?\*\)/,
        /--.+/,
        /#.+/
      ],
      string: /"(?:\\.|[^"\\\r\n])*"/,
      number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e-?\d+)?\b/i,
      operator: [
        /[&=≠≤≥*+\-\/÷^]|[<>]=?/,
        /\b(?:(?:begin|end|start)s? with|(?:contains?|(?:does not|doesn't) contain)|(?:is|isn't|is not) (?:contained by|in)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:comes|(?:does not|doesn't) come) (?:after|before)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equal to|equals|is not|isn't)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|as|div|mod|not|or))\b/
      ],
      keyword: /\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\b/,
      "class-name": /\b(?:POSIX file|RGB color|alias|application|boolean|centimeters|centimetres|class|constant|cubic centimeters|cubic centimetres|cubic feet|cubic inches|cubic meters|cubic metres|cubic yards|date|degrees Celsius|degrees Fahrenheit|degrees Kelvin|feet|file|gallons|grams|inches|integer|kilograms|kilometers|kilometres|list|liters|litres|meters|metres|miles|number|ounces|pounds|quarts|real|record|reference|script|square feet|square kilometers|square kilometres|square meters|square metres|square miles|square yards|text|yards)\b/,
      punctuation: /[{}():,¬«»《》]/
    };
  }
  return Af;
}
var kf, Sv;
function dU() {
  if (Sv) return kf;
  Sv = 1, kf = e, e.displayName = "aql", e.aliases = [];
  function e(t) {
    t.languages.aql = {
      comment: /\/\/.*|\/\*[\s\S]*?\*\//,
      property: {
        pattern: /([{,]\s*)(?:(?!\d)\w+|(["'´`])(?:(?!\2)[^\\\r\n]|\\.)*\2)(?=\s*:)/,
        lookbehind: !0,
        greedy: !0
      },
      string: {
        pattern: /(["'])(?:(?!\1)[^\\\r\n]|\\.)*\1/,
        greedy: !0
      },
      identifier: {
        pattern: /([´`])(?:(?!\1)[^\\\r\n]|\\.)*\1/,
        greedy: !0
      },
      variable: /@@?\w+/,
      keyword: [
        {
          pattern: /(\bWITH\s+)COUNT(?=\s+INTO\b)/i,
          lookbehind: !0
        },
        /\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\b/i,
        // pseudo keywords get a lookbehind to avoid false positives
        {
          pattern: /(^|[^\w.[])(?:KEEP|PRUNE|SEARCH|TO)\b/i,
          lookbehind: !0
        },
        {
          pattern: /(^|[^\w.[])(?:CURRENT|NEW|OLD)\b/,
          lookbehind: !0
        },
        {
          pattern: /\bOPTIONS(?=\s*\{)/i
        }
      ],
      function: /\b(?!\d)\w+(?=\s*\()/,
      boolean: /\b(?:false|true)\b/i,
      range: {
        pattern: /\.\./,
        alias: "operator"
      },
      number: [
        /\b0b[01]+/i,
        /\b0x[0-9a-f]+/i,
        /(?:\B\.\d+|\b(?:0|[1-9]\d*)(?:\.\d+)?)(?:e[+-]?\d+)?/i
      ],
      operator: /\*{2,}|[=!]~|[!=<>]=?|&&|\|\||[-+*/%]/,
      punctuation: /::|[?.:,;()[\]{}]/
    };
  }
  return kf;
}
var Cf, _v;
function hi() {
  if (_v) return Cf;
  _v = 1, Cf = e, e.displayName = "c", e.aliases = [];
  function e(t) {
    t.languages.c = t.languages.extend("clike", {
      comment: {
        pattern: /\/\/(?:[^\r\n\\]|\\(?:\r\n?|\n|(?![\r\n])))*|\/\*[\s\S]*?(?:\*\/|$)/,
        greedy: !0
      },
      string: {
        // https://en.cppreference.com/w/c/language/string_literal
        pattern: /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
        greedy: !0
      },
      "class-name": {
        pattern: /(\b(?:enum|struct)\s+(?:__attribute__\s*\(\([\s\S]*?\)\)\s*)?)\w+|\b[a-z]\w*_t\b/,
        lookbehind: !0
      },
      keyword: /\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\b/,
      function: /\b[a-z_]\w*(?=\s*\()/i,
      number: /(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ful]{0,4}/i,
      operator: />>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/
    }), t.languages.insertBefore("c", "string", {
      char: {
        // https://en.cppreference.com/w/c/language/character_constant
        pattern: /'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n]){0,32}'/,
        greedy: !0
      }
    }), t.languages.insertBefore("c", "string", {
      macro: {
        // allow for multiline macro definitions
        // spaces after the # character compile fine with gcc
        pattern: /(^[\t ]*)#\s*[a-z](?:[^\r\n\\/]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|\\(?:\r\n|[\s\S]))*/im,
        lookbehind: !0,
        greedy: !0,
        alias: "property",
        inside: {
          string: [
            {
              // highlight the path of the include statement as a string
              pattern: /^(#\s*include\s*)<[^>]+>/,
              lookbehind: !0
            },
            t.languages.c.string
          ],
          char: t.languages.c.char,
          comment: t.languages.c.comment,
          "macro-name": [
            {
              pattern: /(^#\s*define\s+)\w+\b(?!\()/i,
              lookbehind: !0
            },
            {
              pattern: /(^#\s*define\s+)\w+\b(?=\()/i,
              lookbehind: !0,
              alias: "function"
            }
          ],
          // highlight macro directives as keywords
          directive: {
            pattern: /^(#\s*)[a-z]+/,
            lookbehind: !0,
            alias: "keyword"
          },
          "directive-hash": /^#/,
          punctuation: /##|\\(?=[\r\n])/,
          expression: {
            pattern: /\S[\s\S]*/,
            inside: t.languages.c
          }
        }
      }
    }), t.languages.insertBefore("c", "function", {
      // highlight predefined macros as constants
      constant: /\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\b/
    }), delete t.languages.c.boolean;
  }
  return Cf;
}
var wf, vv;
function YE() {
  if (vv) return wf;
  vv = 1;
  var e = hi();
  wf = t, t.displayName = "cpp", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      var o = /\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/, s = /\b(?!<keyword>)\w+(?:\s*\.\s*\w+)*\b/.source.replace(
        /<keyword>/g,
        function() {
          return o.source;
        }
      );
      r.languages.cpp = r.languages.extend("c", {
        "class-name": [
          {
            pattern: RegExp(
              /(\b(?:class|concept|enum|struct|typename)\s+)(?!<keyword>)\w+/.source.replace(
                /<keyword>/g,
                function() {
                  return o.source;
                }
              )
            ),
            lookbehind: !0
          },
          // This is intended to capture the class name of method implementations like:
          //   void foo::bar() const {}
          // However! The `foo` in the above example could also be a namespace, so we only capture the class name if
          // it starts with an uppercase letter. This approximation should give decent results.
          /\b[A-Z]\w*(?=\s*::\s*\w+\s*\()/,
          // This will capture the class name before destructors like:
          //   Foo::~Foo() {}
          /\b[A-Z_]\w*(?=\s*::\s*~\w+\s*\()/i,
          // This also intends to capture the class name of method implementations but here the class has template
          // parameters, so it can't be a namespace (until C++ adds generic namespaces).
          /\b\w+(?=\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\s*::\s*\w+\s*\()/
        ],
        keyword: o,
        number: {
          pattern: /(?:\b0b[01']+|\b0x(?:[\da-f']+(?:\.[\da-f']*)?|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+(?:\.[\d']*)?|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]{0,4}/i,
          greedy: !0
        },
        operator: />>=?|<<=?|->|--|\+\+|&&|\|\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,
        boolean: /\b(?:false|true)\b/
      }), r.languages.insertBefore("cpp", "string", {
        module: {
          // https://en.cppreference.com/w/cpp/language/modules
          pattern: RegExp(
            /(\b(?:import|module)\s+)/.source + "(?:" + // header-name
            /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|<[^<>\r\n]*>/.source + "|" + // module name or partition or both
            /<mod-name>(?:\s*:\s*<mod-name>)?|:\s*<mod-name>/.source.replace(
              /<mod-name>/g,
              function() {
                return s;
              }
            ) + ")"
          ),
          lookbehind: !0,
          greedy: !0,
          inside: {
            string: /^[<"][\s\S]+/,
            operator: /:/,
            punctuation: /\./
          }
        },
        "raw-string": {
          pattern: /R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,
          alias: "string",
          greedy: !0
        }
      }), r.languages.insertBefore("cpp", "keyword", {
        "generic-function": {
          pattern: /\b(?!operator\b)[a-z_]\w*\s*<(?:[^<>]|<[^<>]*>)*>(?=\s*\()/i,
          inside: {
            function: /^\w+/,
            generic: {
              pattern: /<[\s\S]+/,
              alias: "class-name",
              inside: r.languages.cpp
            }
          }
        }
      }), r.languages.insertBefore("cpp", "operator", {
        "double-colon": {
          pattern: /::/,
          alias: "punctuation"
        }
      }), r.languages.insertBefore("cpp", "class-name", {
        // the base clause is an optional list of parent classes
        // https://en.cppreference.com/w/cpp/language/class
        "base-clause": {
          pattern: /(\b(?:class|struct)\s+\w+\s*:\s*)[^;{}"'\s]+(?:\s+[^;{}"'\s]+)*(?=\s*[;{])/,
          lookbehind: !0,
          greedy: !0,
          inside: r.languages.extend("cpp", {})
        }
      }), r.languages.insertBefore(
        "inside",
        "double-colon",
        {
          // All untokenized words that are not namespaces should be class names
          "class-name": /\b[a-z_]\w*\b(?!\s*::)/i
        },
        r.languages.cpp["base-clause"]
      );
    }(n);
  }
  return wf;
}
var If, Av;
function pU() {
  if (Av) return If;
  Av = 1;
  var e = YE();
  If = t, t.displayName = "arduino", t.aliases = ["ino"];
  function t(n) {
    n.register(e), n.languages.arduino = n.languages.extend("cpp", {
      keyword: /\b(?:String|array|bool|boolean|break|byte|case|catch|continue|default|do|double|else|finally|for|function|goto|if|in|instanceof|int|integer|long|loop|new|null|return|setup|string|switch|throw|try|void|while|word)\b/,
      constant: /\b(?:ANALOG_MESSAGE|DEFAULT|DIGITAL_MESSAGE|EXTERNAL|FIRMATA_STRING|HIGH|INPUT|INPUT_PULLUP|INTERNAL|INTERNAL1V1|INTERNAL2V56|LED_BUILTIN|LOW|OUTPUT|REPORT_ANALOG|REPORT_DIGITAL|SET_PIN_MODE|SYSEX_START|SYSTEM_RESET)\b/,
      builtin: /\b(?:Audio|BSSID|Bridge|Client|Console|EEPROM|Esplora|EsploraTFT|Ethernet|EthernetClient|EthernetServer|EthernetUDP|File|FileIO|FileSystem|Firmata|GPRS|GSM|GSMBand|GSMClient|GSMModem|GSMPIN|GSMScanner|GSMServer|GSMVoiceCall|GSM_SMS|HttpClient|IPAddress|IRread|Keyboard|KeyboardController|LiquidCrystal|LiquidCrystal_I2C|Mailbox|Mouse|MouseController|PImage|Process|RSSI|RobotControl|RobotMotor|SD|SPI|SSID|Scheduler|Serial|Server|Servo|SoftwareSerial|Stepper|Stream|TFT|Task|USBHost|WiFi|WiFiClient|WiFiServer|WiFiUDP|Wire|YunClient|YunServer|abs|addParameter|analogRead|analogReadResolution|analogReference|analogWrite|analogWriteResolution|answerCall|attach|attachGPRS|attachInterrupt|attached|autoscroll|available|background|beep|begin|beginPacket|beginSD|beginSMS|beginSpeaker|beginTFT|beginTransmission|beginWrite|bit|bitClear|bitRead|bitSet|bitWrite|blink|blinkVersion|buffer|changePIN|checkPIN|checkPUK|checkReg|circle|cityNameRead|cityNameWrite|clear|clearScreen|click|close|compassRead|config|connect|connected|constrain|cos|countryNameRead|countryNameWrite|createChar|cursor|debugPrint|delay|delayMicroseconds|detach|detachInterrupt|digitalRead|digitalWrite|disconnect|display|displayLogos|drawBMP|drawCompass|encryptionType|end|endPacket|endSMS|endTransmission|endWrite|exists|exitValue|fill|find|findUntil|flush|gatewayIP|get|getAsynchronously|getBand|getButton|getCurrentCarrier|getIMEI|getKey|getModifiers|getOemKey|getPINUsed|getResult|getSignalStrength|getSocket|getVoiceCallStatus|getXChange|getYChange|hangCall|height|highByte|home|image|interrupts|isActionDone|isDirectory|isListening|isPIN|isPressed|isValid|keyPressed|keyReleased|keyboardRead|knobRead|leftToRight|line|lineFollowConfig|listen|listenOnLocalhost|loadImage|localIP|lowByte|macAddress|maintain|map|max|messageAvailable|micros|millis|min|mkdir|motorsStop|motorsWrite|mouseDragged|mouseMoved|mousePressed|mouseReleased|move|noAutoscroll|noBlink|noBuffer|noCursor|noDisplay|noFill|noInterrupts|noListenOnLocalhost|noStroke|noTone|onReceive|onRequest|open|openNextFile|overflow|parseCommand|parseFloat|parseInt|parsePacket|pauseMode|peek|pinMode|playFile|playMelody|point|pointTo|position|pow|prepare|press|print|printFirmwareVersion|printVersion|println|process|processInput|pulseIn|put|random|randomSeed|read|readAccelerometer|readBlue|readButton|readBytes|readBytesUntil|readGreen|readJoystickButton|readJoystickSwitch|readJoystickX|readJoystickY|readLightSensor|readMessage|readMicrophone|readNetworks|readRed|readSlider|readString|readStringUntil|readTemperature|ready|rect|release|releaseAll|remoteIP|remoteNumber|remotePort|remove|requestFrom|retrieveCallingNumber|rewindDirectory|rightToLeft|rmdir|robotNameRead|robotNameWrite|run|runAsynchronously|runShellCommand|runShellCommandAsynchronously|running|scanNetworks|scrollDisplayLeft|scrollDisplayRight|seek|sendAnalog|sendDigitalPortPair|sendDigitalPorts|sendString|sendSysex|serialEvent|setBand|setBitOrder|setClockDivider|setCursor|setDNS|setDataMode|setFirmwareVersion|setMode|setPINUsed|setSpeed|setTextSize|setTimeout|shiftIn|shiftOut|shutdown|sin|size|sqrt|startLoop|step|stop|stroke|subnetMask|switchPIN|tan|tempoWrite|text|tone|transfer|tuneWrite|turn|updateIR|userNameRead|userNameWrite|voiceCall|waitContinue|width|write|writeBlue|writeGreen|writeJSON|writeMessage|writeMicroseconds|writeRGB|writeRed|yield)\b/
    }), n.languages.ino = n.languages.arduino;
  }
  return If;
}
var Rf, kv;
function fU() {
  if (kv) return Rf;
  kv = 1, Rf = e, e.displayName = "arff", e.aliases = [];
  function e(t) {
    t.languages.arff = {
      comment: /%.*/,
      string: {
        pattern: /(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,
        greedy: !0
      },
      keyword: /@(?:attribute|data|end|relation)\b/i,
      number: /\b\d+(?:\.\d+)?\b/,
      punctuation: /[{},]/
    };
  }
  return Rf;
}
var xf, Cv;
function hU() {
  if (Cv) return xf;
  Cv = 1, xf = e, e.displayName = "asciidoc", e.aliases = ["adoc"];
  function e(t) {
    (function(n) {
      var r = {
        pattern: /(^[ \t]*)\[(?!\[)(?:(["'$`])(?:(?!\2)[^\\]|\\.)*\2|\[(?:[^\[\]\\]|\\.)*\]|[^\[\]\\"'$`]|\\.)*\]/m,
        lookbehind: !0,
        inside: {
          quoted: {
            pattern: /([$`])(?:(?!\1)[^\\]|\\.)*\1/,
            inside: {
              punctuation: /^[$`]|[$`]$/
            }
          },
          interpreted: {
            pattern: /'(?:[^'\\]|\\.)*'/,
            inside: {
              punctuation: /^'|'$/
              // See rest below
            }
          },
          string: /"(?:[^"\\]|\\.)*"/,
          variable: /\w+(?==)/,
          punctuation: /^\[|\]$|,/,
          operator: /=/,
          // The negative look-ahead prevents blank matches
          "attr-value": /(?!^\s+$).+/
        }
      }, o = n.languages.asciidoc = {
        "comment-block": {
          pattern: /^(\/{4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1/m,
          alias: "comment"
        },
        table: {
          pattern: /^\|={3,}(?:(?:\r?\n|\r(?!\n)).*)*?(?:\r?\n|\r)\|={3,}$/m,
          inside: {
            specifiers: {
              pattern: /(?:(?:(?:\d+(?:\.\d+)?|\.\d+)[+*](?:[<^>](?:\.[<^>])?|\.[<^>])?|[<^>](?:\.[<^>])?|\.[<^>])[a-z]*|[a-z]+)(?=\|)/,
              alias: "attr-value"
            },
            punctuation: {
              pattern: /(^|[^\\])[|!]=*/,
              lookbehind: !0
            }
            // See rest below
          }
        },
        "passthrough-block": {
          pattern: /^(\+{4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1$/m,
          inside: {
            punctuation: /^\++|\++$/
            // See rest below
          }
        },
        // Literal blocks and listing blocks
        "literal-block": {
          pattern: /^(-{4,}|\.{4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1$/m,
          inside: {
            punctuation: /^(?:-+|\.+)|(?:-+|\.+)$/
            // See rest below
          }
        },
        // Sidebar blocks, quote blocks, example blocks and open blocks
        "other-block": {
          pattern: /^(--|\*{4,}|_{4,}|={4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1$/m,
          inside: {
            punctuation: /^(?:-+|\*+|_+|=+)|(?:-+|\*+|_+|=+)$/
            // See rest below
          }
        },
        // list-punctuation and list-label must appear before indented-block
        "list-punctuation": {
          pattern: /(^[ \t]*)(?:-|\*{1,5}|\.{1,5}|(?:[a-z]|\d+)\.|[xvi]+\))(?= )/im,
          lookbehind: !0,
          alias: "punctuation"
        },
        "list-label": {
          pattern: /(^[ \t]*)[a-z\d].+(?::{2,4}|;;)(?=\s)/im,
          lookbehind: !0,
          alias: "symbol"
        },
        "indented-block": {
          pattern: /((\r?\n|\r)\2)([ \t]+)\S.*(?:(?:\r?\n|\r)\3.+)*(?=\2{2}|$)/,
          lookbehind: !0
        },
        comment: /^\/\/.*/m,
        title: {
          pattern: /^.+(?:\r?\n|\r)(?:={3,}|-{3,}|~{3,}|\^{3,}|\+{3,})$|^={1,5} .+|^\.(?![\s.]).*/m,
          alias: "important",
          inside: {
            punctuation: /^(?:\.|=+)|(?:=+|-+|~+|\^+|\++)$/
            // See rest below
          }
        },
        "attribute-entry": {
          pattern: /^:[^:\r\n]+:(?: .*?(?: \+(?:\r?\n|\r).*?)*)?$/m,
          alias: "tag"
        },
        attributes: r,
        hr: {
          pattern: /^'{3,}$/m,
          alias: "punctuation"
        },
        "page-break": {
          pattern: /^<{3,}$/m,
          alias: "punctuation"
        },
        admonition: {
          pattern: /^(?:CAUTION|IMPORTANT|NOTE|TIP|WARNING):/m,
          alias: "keyword"
        },
        callout: [
          {
            pattern: /(^[ \t]*)<?\d*>/m,
            lookbehind: !0,
            alias: "symbol"
          },
          {
            pattern: /<\d+>/,
            alias: "symbol"
          }
        ],
        macro: {
          pattern: /\b[a-z\d][a-z\d-]*::?(?:[^\s\[\]]*\[(?:[^\]\\"']|(["'])(?:(?!\1)[^\\]|\\.)*\1|\\.)*\])/,
          inside: {
            function: /^[a-z\d-]+(?=:)/,
            punctuation: /^::?/,
            attributes: {
              pattern: /(?:\[(?:[^\]\\"']|(["'])(?:(?!\1)[^\\]|\\.)*\1|\\.)*\])/,
              inside: r.inside
            }
          }
        },
        inline: {
          /*
          The initial look-behind prevents the highlighting of escaped quoted text.
          Quoted text can be multi-line but cannot span an empty line.
          All quoted text can have attributes before [foobar, 'foobar', baz="bar"].
          First, we handle the constrained quotes.
          Those must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.
          They are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#
          Then we handle the unconstrained quotes.
          Those do not have the restrictions of the constrained quotes.
          They are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))
          */
          pattern: /(^|[^\\])(?:(?:\B\[(?:[^\]\\"']|(["'])(?:(?!\2)[^\\]|\\.)*\2|\\.)*\])?(?:\b_(?!\s)(?: _|[^_\\\r\n]|\\.)+(?:(?:\r?\n|\r)(?: _|[^_\\\r\n]|\\.)+)*_\b|\B``(?!\s).+?(?:(?:\r?\n|\r).+?)*''\B|\B`(?!\s)(?:[^`'\s]|\s+\S)+['`]\B|\B(['*+#])(?!\s)(?: \3|(?!\3)[^\\\r\n]|\\.)+(?:(?:\r?\n|\r)(?: \3|(?!\3)[^\\\r\n]|\\.)+)*\3\B)|(?:\[(?:[^\]\\"']|(["'])(?:(?!\4)[^\\]|\\.)*\4|\\.)*\])?(?:(__|\*\*|\+\+\+?|##|\$\$|[~^]).+?(?:(?:\r?\n|\r).+?)*\5|\{[^}\r\n]+\}|\[\[\[?.+?(?:(?:\r?\n|\r).+?)*\]?\]\]|<<.+?(?:(?:\r?\n|\r).+?)*>>|\(\(\(?.+?(?:(?:\r?\n|\r).+?)*\)?\)\)))/m,
          lookbehind: !0,
          inside: {
            attributes: r,
            url: {
              pattern: /^(?:\[\[\[?.+?\]?\]\]|<<.+?>>)$/,
              inside: {
                punctuation: /^(?:\[\[\[?|<<)|(?:\]\]\]?|>>)$/
              }
            },
            "attribute-ref": {
              pattern: /^\{.+\}$/,
              inside: {
                variable: {
                  pattern: /(^\{)[a-z\d,+_-]+/,
                  lookbehind: !0
                },
                operator: /^[=?!#%@$]|!(?=[:}])/,
                punctuation: /^\{|\}$|::?/
              }
            },
            italic: {
              pattern: /^(['_])[\s\S]+\1$/,
              inside: {
                punctuation: /^(?:''?|__?)|(?:''?|__?)$/
              }
            },
            bold: {
              pattern: /^\*[\s\S]+\*$/,
              inside: {
                punctuation: /^\*\*?|\*\*?$/
              }
            },
            punctuation: /^(?:``?|\+{1,3}|##?|\$\$|[~^]|\(\(\(?)|(?:''?|\+{1,3}|##?|\$\$|[~^`]|\)?\)\))$/
          }
        },
        replacement: {
          pattern: /\((?:C|R|TM)\)/,
          alias: "builtin"
        },
        entity: /&#?[\da-z]{1,8};/i,
        "line-continuation": {
          pattern: /(^| )\+$/m,
          lookbehind: !0,
          alias: "punctuation"
        }
      };
      function s(u) {
        u = u.split(" ");
        for (var c = {}, p = 0, f = u.length; p < f; p++)
          c[u[p]] = o[u[p]];
        return c;
      }
      r.inside.interpreted.inside.rest = s(
        "macro inline replacement entity"
      ), o["passthrough-block"].inside.rest = s("macro"), o["literal-block"].inside.rest = s("callout"), o.table.inside.rest = s(
        "comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation"
      ), o["other-block"].inside.rest = s(
        "table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation"
      ), o.title.inside.rest = s(
        "macro inline replacement entity"
      ), n.hooks.add("wrap", function(u) {
        u.type === "entity" && (u.attributes.title = u.content.value.replace(/&amp;/, "&"));
      }), n.languages.adoc = n.languages.asciidoc;
    })(t);
  }
  return xf;
}
var Nf, wv;
function gU() {
  if (wv) return Nf;
  wv = 1, Nf = e, e.displayName = "asm6502", e.aliases = [];
  function e(t) {
    t.languages.asm6502 = {
      comment: /;.*/,
      directive: {
        pattern: /\.\w+(?= )/,
        alias: "property"
      },
      string: /(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,
      "op-code": {
        pattern: /\b(?:ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA|adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya)\b/,
        alias: "keyword"
      },
      "hex-number": {
        pattern: /#?\$[\da-f]{1,4}\b/i,
        alias: "number"
      },
      "binary-number": {
        pattern: /#?%[01]+\b/,
        alias: "number"
      },
      "decimal-number": {
        pattern: /#?\b\d+\b/,
        alias: "number"
      },
      register: {
        pattern: /\b[xya]\b/i,
        alias: "variable"
      },
      punctuation: /[(),:]/
    };
  }
  return Nf;
}
var Of, Iv;
function mU() {
  if (Iv) return Of;
  Iv = 1, Of = e, e.displayName = "asmatmel", e.aliases = [];
  function e(t) {
    t.languages.asmatmel = {
      comment: {
        pattern: /;.*/,
        greedy: !0
      },
      string: {
        pattern: /(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,
        greedy: !0
      },
      constant: /\b(?:PORT[A-Z]|DDR[A-Z]|(?:DD|P)[A-Z](?:\d|[0-2]\d|3[01]))\b/,
      directive: {
        pattern: /\.\w+(?= )/,
        alias: "property"
      },
      "r-register": {
        pattern: /\br(?:\d|[12]\d|3[01])\b/,
        alias: "variable"
      },
      "op-code": {
        pattern: /\b(?:ADC|ADD|ADIW|AND|ANDI|ASR|BCLR|BLD|BRBC|BRBS|BRCC|BRCS|BREAK|BREQ|BRGE|BRHC|BRHS|BRID|BRIE|BRLO|BRLT|BRMI|BRNE|BRPL|BRSH|BRTC|BRTS|BRVC|BRVS|BSET|BST|CALL|CBI|CBR|CLC|CLH|CLI|CLN|CLR|CLS|CLT|CLV|CLZ|COM|CP|CPC|CPI|CPSE|DEC|DES|EICALL|EIJMP|ELPM|EOR|FMUL|FMULS|FMULSU|ICALL|IJMP|IN|INC|JMP|LAC|LAS|LAT|LD|LD[A-Za-z0-9]|LPM|LSL|LSR|MOV|MOVW|MUL|MULS|MULSU|NEG|NOP|OR|ORI|OUT|POP|PUSH|RCALL|RET|RETI|RJMP|ROL|ROR|SBC|SBCI|SBI|SBIC|SBIS|SBIW|SBR|SBRC|SBRS|SEC|SEH|SEI|SEN|SER|SES|SET|SEV|SEZ|SLEEP|SPM|ST|ST[A-Z0-9]|SUB|SUBI|SWAP|TST|WDR|XCH|adc|add|adiw|and|andi|asr|bclr|bld|brbc|brbs|brcc|brcs|break|breq|brge|brhc|brhs|brid|brie|brlo|brlt|brmi|brne|brpl|brsh|brtc|brts|brvc|brvs|bset|bst|call|cbi|cbr|clc|clh|cli|cln|clr|cls|clt|clv|clz|com|cp|cpc|cpi|cpse|dec|des|eicall|eijmp|elpm|eor|fmul|fmuls|fmulsu|icall|ijmp|in|inc|jmp|lac|las|lat|ld|ld[a-z0-9]|lpm|lsl|lsr|mov|movw|mul|muls|mulsu|neg|nop|or|ori|out|pop|push|rcall|ret|reti|rjmp|rol|ror|sbc|sbci|sbi|sbic|sbis|sbiw|sbr|sbrc|sbrs|sec|seh|sei|sen|ser|ses|set|sev|sez|sleep|spm|st|st[a-zA-Z0-9]|sub|subi|swap|tst|wdr|xch)\b/,
        alias: "keyword"
      },
      "hex-number": {
        pattern: /#?\$[\da-f]{2,4}\b/i,
        alias: "number"
      },
      "binary-number": {
        pattern: /#?%[01]+\b/,
        alias: "number"
      },
      "decimal-number": {
        pattern: /#?\b\d+\b/,
        alias: "number"
      },
      register: {
        pattern: /\b[acznvshtixy]\b/i,
        alias: "variable"
      },
      operator: />>=?|<<=?|&&?|\|\|?|[-+*/%&|^!=<>?]=?/,
      punctuation: /[(),:]/
    };
  }
  return Of;
}
var Lf, Rv;
function pc() {
  if (Rv) return Lf;
  Rv = 1, Lf = e, e.displayName = "csharp", e.aliases = ["dotnet", "cs"];
  function e(t) {
    (function(n) {
      function r(H, W) {
        return H.replace(/<<(\d+)>>/g, function(x, Ee) {
          return "(?:" + W[+Ee] + ")";
        });
      }
      function o(H, W, x) {
        return RegExp(r(H, W), "");
      }
      function s(H, W) {
        for (var x = 0; x < W; x++)
          H = H.replace(/<<self>>/g, function() {
            return "(?:" + H + ")";
          });
        return H.replace(/<<self>>/g, "[^\\s\\S]");
      }
      var u = {
        // keywords which represent a return or variable type
        type: "bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void",
        // keywords which are used to declare a type
        typeDeclaration: "class enum interface record struct",
        // contextual keywords
        // ("var" and "dynamic" are missing because they are used like types)
        contextual: "add alias and ascending async await by descending from(?=\\s*(?:\\w|$)) get global group into init(?=\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\s*{)",
        // all other keywords
        other: "abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield"
      };
      function c(H) {
        return "\\b(?:" + H.trim().replace(/ /g, "|") + ")\\b";
      }
      var p = c(
        u.typeDeclaration
      ), f = RegExp(
        c(
          u.type + " " + u.typeDeclaration + " " + u.contextual + " " + u.other
        )
      ), b = c(
        u.typeDeclaration + " " + u.contextual + " " + u.other
      ), g = c(
        u.type + " " + u.typeDeclaration + " " + u.other
      ), T = s(/<(?:[^<>;=+\-*/%&|^]|<<self>>)*>/.source, 2), y = s(/\((?:[^()]|<<self>>)*\)/.source, 2), _ = /@?\b[A-Za-z_]\w*\b/.source, A = r(/<<0>>(?:\s*<<1>>)?/.source, [_, T]), R = r(/(?!<<0>>)<<1>>(?:\s*\.\s*<<1>>)*/.source, [
        b,
        A
      ]), C = /\[\s*(?:,\s*)*\]/.source, w = r(
        /<<0>>(?:\s*(?:\?\s*)?<<1>>)*(?:\s*\?)?/.source,
        [R, C]
      ), k = r(
        /[^,()<>[\];=+\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source,
        [T, y, C]
      ), O = r(/\(<<0>>+(?:,<<0>>+)+\)/.source, [k]), F = r(
        /(?:<<0>>|<<1>>)(?:\s*(?:\?\s*)?<<2>>)*(?:\s*\?)?/.source,
        [O, R, C]
      ), v = {
        keyword: f,
        punctuation: /[<>()?,.:[\]]/
      }, B = /'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'/.source, Y = /"(?:\\.|[^\\"\r\n])*"/.source, $ = /@"(?:""|\\[\s\S]|[^\\"])*"(?!")/.source;
      n.languages.csharp = n.languages.extend("clike", {
        string: [
          {
            pattern: o(/(^|[^$\\])<<0>>/.source, [$]),
            lookbehind: !0,
            greedy: !0
          },
          {
            pattern: o(/(^|[^@$\\])<<0>>/.source, [Y]),
            lookbehind: !0,
            greedy: !0
          }
        ],
        "class-name": [
          {
            // Using static
            // using static System.Math;
            pattern: o(/(\busing\s+static\s+)<<0>>(?=\s*;)/.source, [
              R
            ]),
            lookbehind: !0,
            inside: v
          },
          {
            // Using alias (type)
            // using Project = PC.MyCompany.Project;
            pattern: o(/(\busing\s+<<0>>\s*=\s*)<<1>>(?=\s*;)/.source, [
              _,
              F
            ]),
            lookbehind: !0,
            inside: v
          },
          {
            // Using alias (alias)
            // using Project = PC.MyCompany.Project;
            pattern: o(/(\busing\s+)<<0>>(?=\s*=)/.source, [_]),
            lookbehind: !0
          },
          {
            // Type declarations
            // class Foo<A, B>
            // interface Foo<out A, B>
            pattern: o(/(\b<<0>>\s+)<<1>>/.source, [
              p,
              A
            ]),
            lookbehind: !0,
            inside: v
          },
          {
            // Single catch exception declaration
            // catch(Foo)
            // (things like catch(Foo e) is covered by variable declaration)
            pattern: o(/(\bcatch\s*\(\s*)<<0>>/.source, [R]),
            lookbehind: !0,
            inside: v
          },
          {
            // Name of the type parameter of generic constraints
            // where Foo : class
            pattern: o(/(\bwhere\s+)<<0>>/.source, [_]),
            lookbehind: !0
          },
          {
            // Casts and checks via as and is.
            // as Foo<A>, is Bar<B>
            // (things like if(a is Foo b) is covered by variable declaration)
            pattern: o(/(\b(?:is(?:\s+not)?|as)\s+)<<0>>/.source, [
              w
            ]),
            lookbehind: !0,
            inside: v
          },
          {
            // Variable, field and parameter declaration
            // (Foo bar, Bar baz, Foo[,,] bay, Foo<Bar, FooBar<Bar>> bax)
            pattern: o(
              /\b<<0>>(?=\s+(?!<<1>>|with\s*\{)<<2>>(?:\s*[=,;:{)\]]|\s+(?:in|when)\b))/.source,
              [F, g, _]
            ),
            inside: v
          }
        ],
        keyword: f,
        // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#literals
        number: /(?:\b0(?:x[\da-f_]*[\da-f]|b[01_]*[01])|(?:\B\.\d+(?:_+\d+)*|\b\d+(?:_+\d+)*(?:\.\d+(?:_+\d+)*)?)(?:e[-+]?\d+(?:_+\d+)*)?)(?:[dflmu]|lu|ul)?\b/i,
        operator: />>=?|<<=?|[-=]>|([-+&|])\1|~|\?\?=?|[-+*/%&|^!=<>]=?/,
        punctuation: /\?\.?|::|[{}[\];(),.:]/
      }), n.languages.insertBefore("csharp", "number", {
        range: {
          pattern: /\.\./,
          alias: "operator"
        }
      }), n.languages.insertBefore("csharp", "punctuation", {
        "named-parameter": {
          pattern: o(/([(,]\s*)<<0>>(?=\s*:)/.source, [_]),
          lookbehind: !0,
          alias: "punctuation"
        }
      }), n.languages.insertBefore("csharp", "class-name", {
        namespace: {
          // namespace Foo.Bar {}
          // using Foo.Bar;
          pattern: o(
            /(\b(?:namespace|using)\s+)<<0>>(?:\s*\.\s*<<0>>)*(?=\s*[;{])/.source,
            [_]
          ),
          lookbehind: !0,
          inside: {
            punctuation: /\./
          }
        },
        "type-expression": {
          // default(Foo), typeof(Foo<Bar>), sizeof(int)
          pattern: o(
            /(\b(?:default|sizeof|typeof)\s*\(\s*(?!\s))(?:[^()\s]|\s(?!\s)|<<0>>)*(?=\s*\))/.source,
            [y]
          ),
          lookbehind: !0,
          alias: "class-name",
          inside: v
        },
        "return-type": {
          // Foo<Bar> ForBar(); Foo IFoo.Bar() => 0
          // int this[int index] => 0; T IReadOnlyList<T>.this[int index] => this[index];
          // int Foo => 0; int Foo { get; set } = 0;
          pattern: o(
            /<<0>>(?=\s+(?:<<1>>\s*(?:=>|[({]|\.\s*this\s*\[)|this\s*\[))/.source,
            [F, R]
          ),
          inside: v,
          alias: "class-name"
        },
        "constructor-invocation": {
          // new List<Foo<Bar[]>> { }
          pattern: o(/(\bnew\s+)<<0>>(?=\s*[[({])/.source, [F]),
          lookbehind: !0,
          inside: v,
          alias: "class-name"
        },
        /*'explicit-implementation': {
        // int IFoo<Foo>.Bar => 0; void IFoo<Foo<Foo>>.Foo<T>();
        pattern: replace(/\b<<0>>(?=\.<<1>>)/, className, methodOrPropertyDeclaration),
        inside: classNameInside,
        alias: 'class-name'
        },*/
        "generic-method": {
          // foo<Bar>()
          pattern: o(/<<0>>\s*<<1>>(?=\s*\()/.source, [_, T]),
          inside: {
            function: o(/^<<0>>/.source, [_]),
            generic: {
              pattern: RegExp(T),
              alias: "class-name",
              inside: v
            }
          }
        },
        "type-list": {
          // The list of types inherited or of generic constraints
          // class Foo<F> : Bar, IList<FooBar>
          // where F : Bar, IList<int>
          pattern: o(
            /\b((?:<<0>>\s+<<1>>|record\s+<<1>>\s*<<5>>|where\s+<<2>>)\s*:\s*)(?:<<3>>|<<4>>|<<1>>\s*<<5>>|<<6>>)(?:\s*,\s*(?:<<3>>|<<4>>|<<6>>))*(?=\s*(?:where|[{;]|=>|$))/.source,
            [
              p,
              A,
              _,
              F,
              f.source,
              y,
              /\bnew\s*\(\s*\)/.source
            ]
          ),
          lookbehind: !0,
          inside: {
            "record-arguments": {
              pattern: o(/(^(?!new\s*\()<<0>>\s*)<<1>>/.source, [
                A,
                y
              ]),
              lookbehind: !0,
              greedy: !0,
              inside: n.languages.csharp
            },
            keyword: f,
            "class-name": {
              pattern: RegExp(F),
              greedy: !0,
              inside: v
            },
            punctuation: /[,()]/
          }
        },
        preprocessor: {
          pattern: /(^[\t ]*)#.*/m,
          lookbehind: !0,
          alias: "property",
          inside: {
            // highlight preprocessor directives as keywords
            directive: {
              pattern: /(#)\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\b/,
              lookbehind: !0,
              alias: "keyword"
            }
          }
        }
      });
      var M = Y + "|" + B, V = r(
        /\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>/.source,
        [M]
      ), ne = s(
        r(/[^"'/()]|<<0>>|\(<<self>>*\)/.source, [
          V
        ]),
        2
      ), se = /\b(?:assembly|event|field|method|module|param|property|return|type)\b/.source, de = r(/<<0>>(?:\s*\(<<1>>*\))?/.source, [
        R,
        ne
      ]);
      n.languages.insertBefore("csharp", "class-name", {
        attribute: {
          // Attributes
          // [Foo], [Foo(1), Bar(2, Prop = "foo")], [return: Foo(1), Bar(2)], [assembly: Foo(Bar)]
          pattern: o(
            /((?:^|[^\s\w>)?])\s*\[\s*)(?:<<0>>\s*:\s*)?<<1>>(?:\s*,\s*<<1>>)*(?=\s*\])/.source,
            [se, de]
          ),
          lookbehind: !0,
          greedy: !0,
          inside: {
            target: {
              pattern: o(/^<<0>>(?=\s*:)/.source, [se]),
              alias: "keyword"
            },
            "attribute-arguments": {
              pattern: o(/\(<<0>>*\)/.source, [ne]),
              inside: n.languages.csharp
            },
            "class-name": {
              pattern: RegExp(R),
              inside: {
                punctuation: /\./
              }
            },
            punctuation: /[:,]/
          }
        }
      });
      var be = /:[^}\r\n]+/.source, Ne = s(
        r(/[^"'/()]|<<0>>|\(<<self>>*\)/.source, [
          V
        ]),
        2
      ), ve = r(/\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source, [
        Ne,
        be
      ]), J = s(
        r(
          /[^"'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>|\(<<self>>*\)/.source,
          [M]
        ),
        2
      ), oe = r(/\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source, [
        J,
        be
      ]);
      function I(H, W) {
        return {
          interpolation: {
            pattern: o(/((?:^|[^{])(?:\{\{)*)<<0>>/.source, [H]),
            lookbehind: !0,
            inside: {
              "format-string": {
                pattern: o(/(^\{(?:(?![}:])<<0>>)*)<<1>>(?=\}$)/.source, [
                  W,
                  be
                ]),
                lookbehind: !0,
                inside: {
                  punctuation: /^:/
                }
              },
              punctuation: /^\{|\}$/,
              expression: {
                pattern: /[\s\S]+/,
                alias: "language-csharp",
                inside: n.languages.csharp
              }
            }
          },
          string: /[\s\S]+/
        };
      }
      n.languages.insertBefore("csharp", "string", {
        "interpolation-string": [
          {
            pattern: o(
              /(^|[^\\])(?:\$@|@\$)"(?:""|\\[\s\S]|\{\{|<<0>>|[^\\{"])*"/.source,
              [ve]
            ),
            lookbehind: !0,
            greedy: !0,
            inside: I(ve, Ne)
          },
          {
            pattern: o(/(^|[^@\\])\$"(?:\\.|\{\{|<<0>>|[^\\"{])*"/.source, [
              oe
            ]),
            lookbehind: !0,
            greedy: !0,
            inside: I(oe, J)
          }
        ],
        char: {
          pattern: RegExp(B),
          greedy: !0
        }
      }), n.languages.dotnet = n.languages.cs = n.languages.csharp;
    })(t);
  }
  return Lf;
}
var Df, xv;
function bU() {
  if (xv) return Df;
  xv = 1;
  var e = pc();
  Df = t, t.displayName = "aspnet", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.aspnet = n.languages.extend("markup", {
      "page-directive": {
        pattern: /<%\s*@.*%>/,
        alias: "tag",
        inside: {
          "page-directive": {
            pattern: /<%\s*@\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,
            alias: "tag"
          },
          rest: n.languages.markup.tag.inside
        }
      },
      directive: {
        pattern: /<%.*%>/,
        alias: "tag",
        inside: {
          directive: {
            pattern: /<%\s*?[$=%#:]{0,2}|%>/,
            alias: "tag"
          },
          rest: n.languages.csharp
        }
      }
    }), n.languages.aspnet.tag.pattern = /<(?!%)\/?[^\s>\/]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/, n.languages.insertBefore(
      "inside",
      "punctuation",
      {
        directive: n.languages.aspnet.directive
      },
      n.languages.aspnet.tag.inside["attr-value"]
    ), n.languages.insertBefore("aspnet", "comment", {
      "asp-comment": {
        pattern: /<%--[\s\S]*?--%>/,
        alias: ["asp", "comment"]
      }
    }), n.languages.insertBefore(
      "aspnet",
      n.languages.javascript ? "script" : "tag",
      {
        "asp-script": {
          pattern: /(<script(?=.*runat=['"]?server\b)[^>]*>)[\s\S]*?(?=<\/script>)/i,
          lookbehind: !0,
          alias: ["asp", "script"],
          inside: n.languages.csharp || {}
        }
      }
    );
  }
  return Df;
}
var Mf, Nv;
function EU() {
  if (Nv) return Mf;
  Nv = 1, Mf = e, e.displayName = "autohotkey", e.aliases = [];
  function e(t) {
    t.languages.autohotkey = {
      comment: [
        {
          pattern: /(^|\s);.*/,
          lookbehind: !0
        },
        {
          pattern: /(^[\t ]*)\/\*(?:[\r\n](?![ \t]*\*\/)|[^\r\n])*(?:[\r\n][ \t]*\*\/)?/m,
          lookbehind: !0,
          greedy: !0
        }
      ],
      tag: {
        // labels
        pattern: /^([ \t]*)[^\s,`":]+(?=:[ \t]*$)/m,
        lookbehind: !0
      },
      string: /"(?:[^"\n\r]|"")*"/,
      variable: /%\w+%/,
      number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,
      operator: /\?|\/\/?=?|:=|\|[=|]?|&[=&]?|\+[=+]?|-[=-]?|\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\b(?:AND|NOT|OR)\b/,
      boolean: /\b(?:false|true)\b/,
      selector: /\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetRegView|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\b/i,
      constant: /\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_fileencoding|a_formatfloat|a_formatinteger|a_gui|a_guicontrol|a_guicontrolevent|a_guievent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_is64bitos|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|a_priorkey|a_programfiles|a_programs|a_programscommon|a_ptrsize|a_regview|a_screendpi|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scripthwnd|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel|programfiles)\b/i,
      builtin: /\b(?:abs|acos|asc|asin|atan|ceil|chr|class|comobjactive|comobjarray|comobjconnect|comobjcreate|comobjerror|comobjflags|comobjget|comobjquery|comobjtype|comobjvalue|cos|dllcall|exp|fileexist|Fileopen|floor|format|il_add|il_create|il_destroy|instr|isfunc|islabel|IsObject|ln|log|ltrim|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|numget|numput|onmessage|regexmatch|regexreplace|registercallback|round|rtrim|sb_seticon|sb_setparts|sb_settext|sin|sqrt|strlen|strreplace|strsplit|substr|tan|tv_add|tv_delete|tv_get|tv_getchild|tv_getcount|tv_getnext|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__Call|__Get|__New|__Set)\b/i,
      symbol: /\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\b/i,
      important: /#\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|DerefChar|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|If|IfTimeout|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InputLevel|InstallKeybdHook|InstallMouseHook|KeyHistory|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|MenuMaskKey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|Warn|WinActivateForce)\b/i,
      keyword: /\b(?:Abort|AboveNormal|Add|ahk_class|ahk_exe|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Catch|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|Finally|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|Region|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Throw|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|Try|TryAgain|Type|UnCheck|underline|Unicode|Unlock|Until|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\b/i,
      function: /[^(); \t,\n+*\-=?>:\\\/<&%\[\]]+(?=\()/,
      punctuation: /[{}[\]():,]/
    };
  }
  return Mf;
}
var Pf, Ov;
function yU() {
  if (Ov) return Pf;
  Ov = 1, Pf = e, e.displayName = "autoit", e.aliases = [];
  function e(t) {
    t.languages.autoit = {
      comment: [
        /;.*/,
        {
          // The multi-line comments delimiters can actually be commented out with ";"
          pattern: /(^[\t ]*)#(?:comments-start|cs)[\s\S]*?^[ \t]*#(?:ce|comments-end)/m,
          lookbehind: !0
        }
      ],
      url: {
        pattern: /(^[\t ]*#include\s+)(?:<[^\r\n>]+>|"[^\r\n"]+")/m,
        lookbehind: !0
      },
      string: {
        pattern: /(["'])(?:\1\1|(?!\1)[^\r\n])*\1/,
        greedy: !0,
        inside: {
          variable: /([%$@])\w+\1/
        }
      },
      directive: {
        pattern: /(^[\t ]*)#[\w-]+/m,
        lookbehind: !0,
        alias: "keyword"
      },
      function: /\b\w+(?=\()/,
      // Variables and macros
      variable: /[$@]\w+/,
      keyword: /\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\b/i,
      number: /\b(?:0x[\da-f]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/i,
      boolean: /\b(?:False|True)\b/i,
      operator: /<[=>]?|[-+*\/=&>]=?|[?^]|\b(?:And|Not|Or)\b/i,
      punctuation: /[\[\]().,:]/
    };
  }
  return Pf;
}
var Ff, Lv;
function TU() {
  if (Lv) return Ff;
  Lv = 1, Ff = e, e.displayName = "avisynth", e.aliases = ["avs"];
  function e(t) {
    (function(n) {
      function r(b, g) {
        return b.replace(/<<(\d+)>>/g, function(T, y) {
          return g[+y];
        });
      }
      function o(b, g, T) {
        return RegExp(r(b, g), T);
      }
      var s = /bool|clip|float|int|string|val/.source, u = [
        // bools
        /is(?:bool|clip|float|int|string)|defined|(?:(?:internal)?function|var)?exists?/.source,
        // control
        /apply|assert|default|eval|import|nop|select|undefined/.source,
        // global
        /opt_(?:allowfloataudio|avipadscanlines|dwchannelmask|enable_(?:b64a|planartopackedrgb|v210|y3_10_10|y3_10_16)|usewaveextensible|vdubplanarhack)|set(?:cachemode|maxcpu|memorymax|planarlegacyalignment|workingdir)/.source,
        // conv
        /hex(?:value)?|value/.source,
        // numeric
        /abs|ceil|continued(?:denominator|numerator)?|exp|floor|fmod|frac|log(?:10)?|max|min|muldiv|pi|pow|rand|round|sign|spline|sqrt/.source,
        // trig
        /a?sinh?|a?cosh?|a?tan[2h]?/.source,
        // bit
        /(?:bit(?:and|not|x?or|[lr]?shift[aslu]?|sh[lr]|sa[lr]|[lr]rotatel?|ro[rl]|te?st|set(?:count)?|cl(?:ea)?r|ch(?:an)?ge?))/.source,
        // runtime
        /average(?:[bgr]|chroma[uv]|luma)|(?:[rgb]|chroma[uv]|luma|rgb|[yuv](?=difference(?:fromprevious|tonext)))difference(?:fromprevious|tonext)?|[yuvrgb]plane(?:median|min|max|minmaxdifference)/.source,
        // script
        /getprocessinfo|logmsg|script(?:dir(?:utf8)?|file(?:utf8)?|name(?:utf8)?)|setlogparams/.source,
        // string
        /chr|(?:fill|find|left|mid|replace|rev|right)str|format|[lu]case|ord|str(?:cmpi?|fromutf8|len|toutf8)|time|trim(?:all|left|right)/.source,
        // version
        /isversionorgreater|version(?:number|string)/.source,
        // helper
        /buildpixeltype|colorspacenametopixeltype/.source,
        // avsplus
        /addautoloaddir|on(?:cpu|cuda)|prefetch|setfiltermtmode/.source
      ].join("|"), c = [
        // content
        /has(?:audio|video)/.source,
        // resolution
        /height|width/.source,
        // framerate
        /frame(?:count|rate)|framerate(?:denominator|numerator)/.source,
        // interlacing
        /getparity|is(?:field|frame)based/.source,
        // color format
        /bitspercomponent|componentsize|hasalpha|is(?:planar(?:rgba?)?|interleaved|rgb(?:24|32|48|64)?|y(?:8|u(?:va?|y2))?|yv(?:12|16|24|411)|420|422|444|packedrgb)|numcomponents|pixeltype/.source,
        // audio
        /audio(?:bits|channels|duration|length(?:[fs]|hi|lo)?|rate)|isaudio(?:float|int)/.source
      ].join("|"), p = [
        // source
        /avi(?:file)?source|directshowsource|image(?:reader|source|sourceanim)|opendmlsource|segmented(?:avisource|directshowsource)|wavsource/.source,
        // color
        /coloryuv|convertbacktoyuy2|convertto(?:RGB(?:24|32|48|64)|(?:planar)?RGBA?|Y8?|YV(?:12|16|24|411)|YUVA?(?:411|420|422|444)|YUY2)|fixluminance|gr[ae]yscale|invert|levels|limiter|mergea?rgb|merge(?:chroma|luma)|rgbadjust|show(?:alpha|blue|green|red)|swapuv|tweak|[uv]toy8?|ytouv/.source,
        // overlay
        /(?:colorkey|reset)mask|layer|mask(?:hs)?|merge|overlay|subtract/.source,
        // geometry
        /addborders|(?:bicubic|bilinear|blackman|gauss|lanczos4|lanczos|point|sinc|spline(?:16|36|64))resize|crop(?:bottom)?|flip(?:horizontal|vertical)|(?:horizontal|vertical)?reduceby2|letterbox|skewrows|turn(?:180|left|right)/.source,
        // pixel
        /blur|fixbrokenchromaupsampling|generalconvolution|(?:spatial|temporal)soften|sharpen/.source,
        // timeline
        /trim|(?:un)?alignedsplice|(?:assume|assumescaled|change|convert)FPS|(?:delete|duplicate)frame|dissolve|fade(?:in|io|out)[02]?|freezeframe|interleave|loop|reverse|select(?:even|odd|(?:range)?every)/.source,
        // interlace
        /assume[bt]ff|assume(?:field|frame)based|bob|complementparity|doubleweave|peculiarblend|pulldown|separate(?:columns|fields|rows)|swapfields|weave(?:columns|rows)?/.source,
        // audio
        /amplify(?:db)?|assumesamplerate|audiodub(?:ex)?|audiotrim|convertaudioto(?:(?:8|16|24|32)bit|float)|converttomono|delayaudio|ensurevbrmp3sync|get(?:left|right)?channel|kill(?:audio|video)|mergechannels|mixaudio|monotostereo|normalize|resampleaudio|ssrc|supereq|timestretch/.source,
        // conditional
        /animate|applyrange|conditional(?:filter|reader|select)|frameevaluate|scriptclip|tcp(?:server|source)|writefile(?:end|if|start)?/.source,
        // export
        /imagewriter/.source,
        // debug
        /blackness|blankclip|colorbars(?:hd)?|compare|dumpfiltergraph|echo|histogram|info|messageclip|preroll|setgraphanalysis|show(?:framenumber|smpte|time)|showfiveversions|stack(?:horizontal|vertical)|subtitle|tone|version/.source
      ].join("|"), f = [u, c, p].join("|");
      n.languages.avisynth = {
        comment: [
          {
            // Matches [* *] nestable block comments, but only supports 1 level of nested comments
            // /\[\*(?:[^\[*]|\[(?!\*)|\*(?!\])|<self>)*\*\]/
            pattern: /(^|[^\\])\[\*(?:[^\[*]|\[(?!\*)|\*(?!\])|\[\*(?:[^\[*]|\[(?!\*)|\*(?!\]))*\*\])*\*\]/,
            lookbehind: !0,
            greedy: !0
          },
          {
            // Matches /* */ block comments
            pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
            lookbehind: !0,
            greedy: !0
          },
          {
            // Matches # comments
            pattern: /(^|[^\\$])#.*/,
            lookbehind: !0,
            greedy: !0
          }
        ],
        // Handle before strings because optional arguments are surrounded by double quotes
        argument: {
          pattern: o(/\b(?:<<0>>)\s+("?)\w+\1/.source, [s], "i"),
          inside: {
            keyword: /^\w+/
          }
        },
        // Optional argument assignment
        "argument-label": {
          pattern: /([,(][\s\\]*)\w+\s*=(?!=)/,
          lookbehind: !0,
          inside: {
            "argument-name": {
              pattern: /^\w+/,
              alias: "punctuation"
            },
            punctuation: /=$/
          }
        },
        string: [
          {
            // triple double-quoted
            pattern: /"""[\s\S]*?"""/,
            greedy: !0
          },
          {
            // single double-quoted
            pattern: /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
            greedy: !0,
            inside: {
              constant: {
                // These *are* case-sensitive!
                pattern: /\b(?:DEFAULT_MT_MODE|(?:MAINSCRIPT|PROGRAM|SCRIPT)DIR|(?:MACHINE|USER)_(?:CLASSIC|PLUS)_PLUGINS)\b/
              }
            }
          }
        ],
        // The special "last" variable that takes the value of the last implicitly returned clip
        variable: /\b(?:last)\b/i,
        boolean: /\b(?:false|no|true|yes)\b/i,
        keyword: /\b(?:catch|else|for|function|global|if|return|try|while|__END__)\b/i,
        constant: /\bMT_(?:MULTI_INSTANCE|NICE_FILTER|SERIALIZED|SPECIAL_MT)\b/,
        // AviSynth's internal functions, filters, and properties
        "builtin-function": {
          pattern: o(/\b(?:<<0>>)\b/.source, [f], "i"),
          alias: "function"
        },
        "type-cast": {
          pattern: o(/\b(?:<<0>>)(?=\s*\()/.source, [s], "i"),
          alias: "keyword"
        },
        // External/user-defined filters
        function: {
          pattern: /\b[a-z_]\w*(?=\s*\()|(\.)[a-z_]\w*\b/i,
          lookbehind: !0
        },
        // Matches a \ as the first or last character on a line
        "line-continuation": {
          pattern: /(^[ \t]*)\\|\\(?=[ \t]*$)/m,
          lookbehind: !0,
          alias: "punctuation"
        },
        number: /\B\$(?:[\da-f]{6}|[\da-f]{8})\b|(?:(?:\b|\B-)\d+(?:\.\d*)?\b|\B\.\d+\b)/i,
        operator: /\+\+?|[!=<>]=?|&&|\|\||[?:*/%-]/,
        punctuation: /[{}\[\]();,.]/
      }, n.languages.avs = n.languages.avisynth;
    })(t);
  }
  return Ff;
}
var Bf, Dv;
function SU() {
  if (Dv) return Bf;
  Dv = 1, Bf = e, e.displayName = "avroIdl", e.aliases = [];
  function e(t) {
    t.languages["avro-idl"] = {
      comment: {
        pattern: /\/\/.*|\/\*[\s\S]*?\*\//,
        greedy: !0
      },
      string: {
        pattern: /(^|[^\\])"(?:[^\r\n"\\]|\\.)*"/,
        lookbehind: !0,
        greedy: !0
      },
      annotation: {
        pattern: /@(?:[$\w.-]|`[^\r\n`]+`)+/,
        greedy: !0,
        alias: "function"
      },
      "function-identifier": {
        pattern: /`[^\r\n`]+`(?=\s*\()/,
        greedy: !0,
        alias: "function"
      },
      identifier: {
        pattern: /`[^\r\n`]+`/,
        greedy: !0
      },
      "class-name": {
        pattern: /(\b(?:enum|error|protocol|record|throws)\b\s+)[$\w]+/,
        lookbehind: !0,
        greedy: !0
      },
      keyword: /\b(?:array|boolean|bytes|date|decimal|double|enum|error|false|fixed|float|idl|import|int|local_timestamp_ms|long|map|null|oneway|protocol|record|schema|string|throws|time_ms|timestamp_ms|true|union|uuid|void)\b/,
      function: /\b[a-z_]\w*(?=\s*\()/i,
      number: [
        {
          pattern: /(^|[^\w.])-?(?:(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|0x(?:[a-f0-9]+(?:\.[a-f0-9]*)?|\.[a-f0-9]+)(?:p[+-]?\d+)?)[dfl]?(?![\w.])/i,
          lookbehind: !0
        },
        /-?\b(?:Infinity|NaN)\b/
      ],
      operator: /=/,
      punctuation: /[()\[\]{}<>.:,;-]/
    }, t.languages.avdl = t.languages["avro-idl"];
  }
  return Bf;
}
var Uf, Mv;
function Yx() {
  if (Mv) return Uf;
  Mv = 1, Uf = e, e.displayName = "bash", e.aliases = ["shell"];
  function e(t) {
    (function(n) {
      var r = "\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b", o = {
        pattern: /(^(["']?)\w+\2)[ \t]+\S.*/,
        lookbehind: !0,
        alias: "punctuation",
        // this looks reasonably well in all themes
        inside: null
        // see below
      }, s = {
        bash: o,
        environment: {
          pattern: RegExp("\\$" + r),
          alias: "constant"
        },
        variable: [
          // [0]: Arithmetic Environment
          {
            pattern: /\$?\(\([\s\S]+?\)\)/,
            greedy: !0,
            inside: {
              // If there is a $ sign at the beginning highlight $(( and )) as variable
              variable: [
                {
                  pattern: /(^\$\(\([\s\S]+)\)\)/,
                  lookbehind: !0
                },
                /^\$\(\(/
              ],
              number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,
              // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic
              operator: /--|\+\+|\*\*=?|<<=?|>>=?|&&|\|\||[=!+\-*/%<>^&|]=?|[?~:]/,
              // If there is no $ sign at the beginning highlight (( and )) as punctuation
              punctuation: /\(\(?|\)\)?|,|;/
            }
          },
          // [1]: Command Substitution
          {
            pattern: /\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,
            greedy: !0,
            inside: {
              variable: /^\$\(|^`|\)$|`$/
            }
          },
          // [2]: Brace expansion
          {
            pattern: /\$\{[^}]+\}/,
            greedy: !0,
            inside: {
              operator: /:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,
              punctuation: /[\[\]]/,
              environment: {
                pattern: RegExp("(\\{)" + r),
                lookbehind: !0,
                alias: "constant"
              }
            }
          },
          /\$(?:\w+|[#?*!@$])/
        ],
        // Escape sequences from echo and printf's manuals, and escaped quotes.
        entity: /\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/
      };
      n.languages.bash = {
        shebang: {
          pattern: /^#!\s*\/.*/,
          alias: "important"
        },
        comment: {
          pattern: /(^|[^"{\\$])#.*/,
          lookbehind: !0
        },
        "function-name": [
          // a) function foo {
          // b) foo() {
          // c) function foo() {
          // but not “foo {”
          {
            // a) and c)
            pattern: /(\bfunction\s+)[\w-]+(?=(?:\s*\(?:\s*\))?\s*\{)/,
            lookbehind: !0,
            alias: "function"
          },
          {
            // b)
            pattern: /\b[\w-]+(?=\s*\(\s*\)\s*\{)/,
            alias: "function"
          }
        ],
        // Highlight variable names as variables in for and select beginnings.
        "for-or-select": {
          pattern: /(\b(?:for|select)\s+)\w+(?=\s+in\s)/,
          alias: "variable",
          lookbehind: !0
        },
        // Highlight variable names as variables in the left-hand part
        // of assignments (“=” and “+=”).
        "assign-left": {
          pattern: /(^|[\s;|&]|[<>]\()\w+(?=\+?=)/,
          inside: {
            environment: {
              pattern: RegExp("(^|[\\s;|&]|[<>]\\()" + r),
              lookbehind: !0,
              alias: "constant"
            }
          },
          alias: "variable",
          lookbehind: !0
        },
        string: [
          // Support for Here-documents https://en.wikipedia.org/wiki/Here_document
          {
            pattern: /((?:^|[^<])<<-?\s*)(\w+)\s[\s\S]*?(?:\r?\n|\r)\2/,
            lookbehind: !0,
            greedy: !0,
            inside: s
          },
          // Here-document with quotes around the tag
          // → No expansion (so no “inside”).
          {
            pattern: /((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s[\s\S]*?(?:\r?\n|\r)\3/,
            lookbehind: !0,
            greedy: !0,
            inside: {
              bash: o
            }
          },
          // “Normal” string
          {
            // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html
            pattern: /(^|[^\\](?:\\\\)*)"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/,
            lookbehind: !0,
            greedy: !0,
            inside: s
          },
          {
            // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html
            pattern: /(^|[^$\\])'[^']*'/,
            lookbehind: !0,
            greedy: !0
          },
          {
            // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html
            pattern: /\$'(?:[^'\\]|\\[\s\S])*'/,
            greedy: !0,
            inside: {
              entity: s.entity
            }
          }
        ],
        environment: {
          pattern: RegExp("\\$?" + r),
          alias: "constant"
        },
        variable: s.variable,
        function: {
          pattern: /(^|[\s;|&]|[<>]\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,
          lookbehind: !0
        },
        keyword: {
          pattern: /(^|[\s;|&]|[<>]\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\s;|&])/,
          lookbehind: !0
        },
        // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html
        builtin: {
          pattern: /(^|[\s;|&]|[<>]\()(?:\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\s;|&])/,
          lookbehind: !0,
          // Alias added to make those easier to distinguish from strings.
          alias: "class-name"
        },
        boolean: {
          pattern: /(^|[\s;|&]|[<>]\()(?:false|true)(?=$|[)\s;|&])/,
          lookbehind: !0
        },
        "file-descriptor": {
          pattern: /\B&\d\b/,
          alias: "important"
        },
        operator: {
          // Lots of redirections here, but not just that.
          pattern: /\d?<>|>\||\+=|=[=~]?|!=?|<<[<-]?|[&\d]?>>|\d[<>]&?|[<>][&=]?|&[>&]?|\|[&|]?/,
          inside: {
            "file-descriptor": {
              pattern: /^\d/,
              alias: "important"
            }
          }
        },
        punctuation: /\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,
        number: {
          pattern: /(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,
          lookbehind: !0
        }
      }, o.inside = n.languages.bash;
      for (var u = [
        "comment",
        "function-name",
        "for-or-select",
        "assign-left",
        "string",
        "environment",
        "function",
        "keyword",
        "builtin",
        "boolean",
        "file-descriptor",
        "operator",
        "punctuation",
        "number"
      ], c = s.variable[1].inside, p = 0; p < u.length; p++)
        c[u[p]] = n.languages.bash[u[p]];
      n.languages.shell = n.languages.bash;
    })(t);
  }
  return Uf;
}
var Hf, Pv;
function Kx() {
  if (Pv) return Hf;
  Pv = 1, Hf = e, e.displayName = "basic", e.aliases = [];
  function e(t) {
    t.languages.basic = {
      comment: {
        pattern: /(?:!|REM\b).+/i,
        inside: {
          keyword: /^REM/i
        }
      },
      string: {
        pattern: /"(?:""|[!#$%&'()*,\/:;<=>?^\w +\-.])*"/,
        greedy: !0
      },
      number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i,
      keyword: /\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SELECT CASE|SHARED|SHELL|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\$|\b)/i,
      function: /\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\$|\b)/i,
      operator: /<[=>]?|>=?|[+\-*\/^=&]|\b(?:AND|EQV|IMP|NOT|OR|XOR)\b/i,
      punctuation: /[,;:()]/
    };
  }
  return Hf;
}
var $f, Fv;
function _U() {
  if (Fv) return $f;
  Fv = 1, $f = e, e.displayName = "batch", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /%%?[~:\w]+%?|!\S+!/, o = {
        pattern: /\/[a-z?]+(?=[ :]|$):?|-[a-z]\b|--[a-z-]+\b/im,
        alias: "attr-name",
        inside: {
          punctuation: /:/
        }
      }, s = /"(?:[\\"]"|[^"])*"(?!")/, u = /(?:\b|-)\d+\b/;
      n.languages.batch = {
        comment: [
          /^::.*/m,
          {
            pattern: /((?:^|[&(])[ \t]*)rem\b(?:[^^&)\r\n]|\^(?:\r\n|[\s\S]))*/im,
            lookbehind: !0
          }
        ],
        label: {
          pattern: /^:.*/m,
          alias: "property"
        },
        command: [
          {
            // FOR command
            pattern: /((?:^|[&(])[ \t]*)for(?: \/[a-z?](?:[ :](?:"[^"]*"|[^\s"/]\S*))?)* \S+ in \([^)]+\) do/im,
            lookbehind: !0,
            inside: {
              keyword: /\b(?:do|in)\b|^for\b/i,
              string: s,
              parameter: o,
              variable: r,
              number: u,
              punctuation: /[()',]/
            }
          },
          {
            // IF command
            pattern: /((?:^|[&(])[ \t]*)if(?: \/[a-z?](?:[ :](?:"[^"]*"|[^\s"/]\S*))?)* (?:not )?(?:cmdextversion \d+|defined \w+|errorlevel \d+|exist \S+|(?:"[^"]*"|(?!")(?:(?!==)\S)+)?(?:==| (?:equ|geq|gtr|leq|lss|neq) )(?:"[^"]*"|[^\s"]\S*))/im,
            lookbehind: !0,
            inside: {
              keyword: /\b(?:cmdextversion|defined|errorlevel|exist|not)\b|^if\b/i,
              string: s,
              parameter: o,
              variable: r,
              number: u,
              operator: /\^|==|\b(?:equ|geq|gtr|leq|lss|neq)\b/i
            }
          },
          {
            // ELSE command
            pattern: /((?:^|[&()])[ \t]*)else\b/im,
            lookbehind: !0,
            inside: {
              keyword: /^else\b/i
            }
          },
          {
            // SET command
            pattern: /((?:^|[&(])[ \t]*)set(?: \/[a-z](?:[ :](?:"[^"]*"|[^\s"/]\S*))?)* (?:[^^&)\r\n]|\^(?:\r\n|[\s\S]))*/im,
            lookbehind: !0,
            inside: {
              keyword: /^set\b/i,
              string: s,
              parameter: o,
              variable: [r, /\w+(?=(?:[*\/%+\-&^|]|<<|>>)?=)/],
              number: u,
              operator: /[*\/%+\-&^|]=?|<<=?|>>=?|[!~_=]/,
              punctuation: /[()',]/
            }
          },
          {
            // Other commands
            pattern: /((?:^|[&(])[ \t]*@?)\w+\b(?:"(?:[\\"]"|[^"])*"(?!")|[^"^&)\r\n]|\^(?:\r\n|[\s\S]))*/m,
            lookbehind: !0,
            inside: {
              keyword: /^\w+\b/,
              string: s,
              parameter: o,
              label: {
                pattern: /(^\s*):\S+/m,
                lookbehind: !0,
                alias: "property"
              },
              variable: r,
              number: u,
              operator: /\^/
            }
          }
        ],
        operator: /[&@]/,
        punctuation: /[()']/
      };
    })(t);
  }
  return $f;
}
var zf, Bv;
function vU() {
  if (Bv) return zf;
  Bv = 1, zf = e, e.displayName = "bbcode", e.aliases = ["shortcode"];
  function e(t) {
    t.languages.bbcode = {
      tag: {
        pattern: /\[\/?[^\s=\]]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'"\]=]+))?(?:\s+[^\s=\]]+\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'"\]=]+))*\s*\]/,
        inside: {
          tag: {
            pattern: /^\[\/?[^\s=\]]+/,
            inside: {
              punctuation: /^\[\/?/
            }
          },
          "attr-value": {
            pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'"\]=]+)/,
            inside: {
              punctuation: [
                /^=/,
                {
                  pattern: /^(\s*)["']|["']$/,
                  lookbehind: !0
                }
              ]
            }
          },
          punctuation: /\]/,
          "attr-name": /[^\s=\]]+/
        }
      }
    }, t.languages.shortcode = t.languages.bbcode;
  }
  return zf;
}
var Gf, Uv;
function AU() {
  if (Uv) return Gf;
  Uv = 1, Gf = e, e.displayName = "bicep", e.aliases = [];
  function e(t) {
    t.languages.bicep = {
      comment: [
        {
          // multiline comments eg /* ASDF */
          pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
          lookbehind: !0,
          greedy: !0
        },
        {
          // singleline comments eg // ASDF
          pattern: /(^|[^\\:])\/\/.*/,
          lookbehind: !0,
          greedy: !0
        }
      ],
      property: [
        {
          pattern: /([\r\n][ \t]*)[a-z_]\w*(?=[ \t]*:)/i,
          lookbehind: !0
        },
        {
          pattern: /([\r\n][ \t]*)'(?:\\.|\$(?!\{)|[^'\\\r\n$])*'(?=[ \t]*:)/,
          lookbehind: !0,
          greedy: !0
        }
      ],
      string: [
        {
          pattern: /'''[^'][\s\S]*?'''/,
          greedy: !0
        },
        {
          pattern: /(^|[^\\'])'(?:\\.|\$(?!\{)|[^'\\\r\n$])*'/,
          lookbehind: !0,
          greedy: !0
        }
      ],
      "interpolated-string": {
        pattern: /(^|[^\\'])'(?:\\.|\$(?:(?!\{)|\{[^{}\r\n]*\})|[^'\\\r\n$])*'/,
        lookbehind: !0,
        greedy: !0,
        inside: {
          interpolation: {
            pattern: /\$\{[^{}\r\n]*\}/,
            inside: {
              expression: {
                pattern: /(^\$\{)[\s\S]+(?=\}$)/,
                lookbehind: !0
              },
              punctuation: /^\$\{|\}$/
            }
          },
          string: /[\s\S]+/
        }
      },
      datatype: {
        pattern: /(\b(?:output|param)\b[ \t]+\w+[ \t]+)\w+\b/,
        lookbehind: !0,
        alias: "class-name"
      },
      boolean: /\b(?:false|true)\b/,
      // https://github.com/Azure/bicep/blob/114a3251b4e6e30082a58729f19a8cc4e374ffa6/src/textmate/bicep.tmlanguage#L184
      keyword: /\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\b/,
      decorator: /@\w+\b/,
      function: /\b[a-z_]\w*(?=[ \t]*\()/i,
      number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i,
      operator: /--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/,
      punctuation: /[{}[\];(),.:]/
    }, t.languages.bicep["interpolated-string"].inside.interpolation.inside.expression.inside = t.languages.bicep;
  }
  return Gf;
}
var qf, Hv;
function kU() {
  if (Hv) return qf;
  Hv = 1, qf = e, e.displayName = "birb", e.aliases = [];
  function e(t) {
    t.languages.birb = t.languages.extend("clike", {
      string: {
        pattern: /r?("|')(?:\\.|(?!\1)[^\\])*\1/,
        greedy: !0
      },
      "class-name": [
        /\b[A-Z](?:[\d_]*[a-zA-Z]\w*)?\b/,
        // matches variable and function return types (parameters as well).
        /\b(?:[A-Z]\w*|(?!(?:var|void)\b)[a-z]\w*)(?=\s+\w+\s*[;,=()])/
      ],
      keyword: /\b(?:assert|break|case|class|const|default|else|enum|final|follows|for|grab|if|nest|new|next|noSeeb|return|static|switch|throw|var|void|while)\b/,
      operator: /\+\+|--|&&|\|\||<<=?|>>=?|~(?:\/=?)?|[+\-*\/%&^|=!<>]=?|\?|:/,
      variable: /\b[a-z_]\w*\b/
    }), t.languages.insertBefore("birb", "function", {
      metadata: {
        pattern: /<\w+>/,
        greedy: !0,
        alias: "symbol"
      }
    });
  }
  return qf;
}
var jf, $v;
function CU() {
  if ($v) return jf;
  $v = 1;
  var e = hi();
  jf = t, t.displayName = "bison", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.bison = n.languages.extend("c", {}), n.languages.insertBefore("bison", "comment", {
      bison: {
        // This should match all the beginning of the file
        // including the prologue(s), the bison declarations and
        // the grammar rules.
        pattern: /^(?:[^%]|%(?!%))*%%[\s\S]*?%%/,
        inside: {
          c: {
            // Allow for one level of nested braces
            pattern: /%\{[\s\S]*?%\}|\{(?:\{[^}]*\}|[^{}])*\}/,
            inside: {
              delimiter: {
                pattern: /^%?\{|%?\}$/,
                alias: "punctuation"
              },
              "bison-variable": {
                pattern: /[$@](?:<[^\s>]+>)?[\w$]+/,
                alias: "variable",
                inside: {
                  punctuation: /<|>/
                }
              },
              rest: n.languages.c
            }
          },
          comment: n.languages.c.comment,
          string: n.languages.c.string,
          property: /\S+(?=:)/,
          keyword: /%\w+/,
          number: {
            pattern: /(^|[^@])\b(?:0x[\da-f]+|\d+)/i,
            lookbehind: !0
          },
          punctuation: /%[%?]|[|:;\[\]<>]/
        }
      }
    });
  }
  return jf;
}
var Vf, zv;
function wU() {
  if (zv) return Vf;
  zv = 1, Vf = e, e.displayName = "bnf", e.aliases = ["rbnf"];
  function e(t) {
    t.languages.bnf = {
      string: {
        pattern: /"[^\r\n"]*"|'[^\r\n']*'/
      },
      definition: {
        pattern: /<[^<>\r\n\t]+>(?=\s*::=)/,
        alias: ["rule", "keyword"],
        inside: {
          punctuation: /^<|>$/
        }
      },
      rule: {
        pattern: /<[^<>\r\n\t]+>/,
        inside: {
          punctuation: /^<|>$/
        }
      },
      operator: /::=|[|()[\]{}*+?]|\.{3}/
    }, t.languages.rbnf = t.languages.bnf;
  }
  return Vf;
}
var Wf, Gv;
function IU() {
  if (Gv) return Wf;
  Gv = 1, Wf = e, e.displayName = "brainfuck", e.aliases = [];
  function e(t) {
    t.languages.brainfuck = {
      pointer: {
        pattern: /<|>/,
        alias: "keyword"
      },
      increment: {
        pattern: /\+/,
        alias: "inserted"
      },
      decrement: {
        pattern: /-/,
        alias: "deleted"
      },
      branching: {
        pattern: /\[|\]/,
        alias: "important"
      },
      operator: /[.,]/,
      comment: /\S+/
    };
  }
  return Wf;
}
var Yf, qv;
function RU() {
  if (qv) return Yf;
  qv = 1, Yf = e, e.displayName = "brightscript", e.aliases = [];
  function e(t) {
    t.languages.brightscript = {
      comment: /(?:\brem|').*/i,
      "directive-statement": {
        pattern: /(^[\t ]*)#(?:const|else(?:[\t ]+if)?|end[\t ]+if|error|if).*/im,
        lookbehind: !0,
        alias: "property",
        inside: {
          "error-message": {
            pattern: /(^#error).+/,
            lookbehind: !0
          },
          directive: {
            pattern: /^#(?:const|else(?:[\t ]+if)?|end[\t ]+if|error|if)/,
            alias: "keyword"
          },
          expression: {
            pattern: /[\s\S]+/,
            inside: null
            // see below
          }
        }
      },
      property: {
        pattern: /([\r\n{,][\t ]*)(?:(?!\d)\w+|"(?:[^"\r\n]|"")*"(?!"))(?=[ \t]*:)/,
        lookbehind: !0,
        greedy: !0
      },
      string: {
        pattern: /"(?:[^"\r\n]|"")*"(?!")/,
        greedy: !0
      },
      "class-name": {
        pattern: /(\bAs[\t ]+)\w+/i,
        lookbehind: !0
      },
      keyword: /\b(?:As|Dim|Each|Else|Elseif|End|Exit|For|Function|Goto|If|In|Print|Return|Step|Stop|Sub|Then|To|While)\b/i,
      boolean: /\b(?:false|true)\b/i,
      function: /\b(?!\d)\w+(?=[\t ]*\()/,
      number: /(?:\b\d+(?:\.\d+)?(?:[ed][+-]\d+)?|&h[a-f\d]+)\b[%&!#]?/i,
      operator: /--|\+\+|>>=?|<<=?|<>|[-+*/\\<>]=?|[:^=?]|\b(?:and|mod|not|or)\b/i,
      punctuation: /[.,;()[\]{}]/,
      constant: /\b(?:LINE_NUM)\b/i
    }, t.languages.brightscript["directive-statement"].inside.expression.inside = t.languages.brightscript;
  }
  return Yf;
}
var Kf, jv;
function xU() {
  if (jv) return Kf;
  jv = 1, Kf = e, e.displayName = "bro", e.aliases = [];
  function e(t) {
    t.languages.bro = {
      comment: {
        pattern: /(^|[^\\$])#.*/,
        lookbehind: !0,
        inside: {
          italic: /\b(?:FIXME|TODO|XXX)\b/
        }
      },
      string: {
        pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
        greedy: !0
      },
      boolean: /\b[TF]\b/,
      function: {
        pattern: /(\b(?:event|function|hook)[ \t]+)\w+(?:::\w+)?/,
        lookbehind: !0
      },
      builtin: /(?:@(?:load(?:-(?:plugin|sigs))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:add_func|create_expire|default|delete_func|encrypt|error_handler|expire_func|group|log|mergeable|optional|persistent|priority|raw_output|read_expire|redef|rotate_interval|rotate_size|synchronized|type_column|write_expire))/,
      constant: {
        pattern: /(\bconst[ \t]+)\w+/i,
        lookbehind: !0
      },
      keyword: /\b(?:add|addr|alarm|any|bool|break|const|continue|count|delete|double|else|enum|event|export|file|for|function|global|hook|if|in|int|interval|local|module|next|of|opaque|pattern|port|print|record|return|schedule|set|string|subnet|table|time|timeout|using|vector|when)\b/,
      operator: /--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&|\|\|?|\?|\*|\/|~|\^|%/,
      number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
      punctuation: /[{}[\];(),.:]/
    };
  }
  return Kf;
}
var Xf, Vv;
function NU() {
  if (Vv) return Xf;
  Vv = 1, Xf = e, e.displayName = "bsl", e.aliases = [];
  function e(t) {
    t.languages.bsl = {
      comment: /\/\/.*/,
      string: [
        // Строки
        // Strings
        {
          pattern: /"(?:[^"]|"")*"(?!")/,
          greedy: !0
        },
        // Дата и время
        // Date & time
        {
          pattern: /'(?:[^'\r\n\\]|\\.)*'/
        }
      ],
      keyword: [
        {
          // RU
          pattern: /(^|[^\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])(?:пока|для|новый|прервать|попытка|исключение|вызватьисключение|иначе|конецпопытки|неопределено|функция|перем|возврат|конецфункции|если|иначеесли|процедура|конецпроцедуры|тогда|знач|экспорт|конецесли|из|каждого|истина|ложь|по|цикл|конеццикла|выполнить)(?![\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])/i,
          lookbehind: !0
        },
        {
          // EN
          pattern: /\b(?:break|do|each|else|elseif|enddo|endfunction|endif|endprocedure|endtry|except|execute|export|false|for|function|if|in|new|null|procedure|raise|return|then|to|true|try|undefined|val|var|while)\b/i
        }
      ],
      number: {
        pattern: /(^(?=\d)|[^\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])(?:\d+(?:\.\d*)?|\.\d+)(?:E[+-]?\d+)?/i,
        lookbehind: !0
      },
      operator: [
        /[<>+\-*/]=?|[%=]/,
        // RU
        {
          pattern: /(^|[^\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])(?:и|или|не)(?![\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])/i,
          lookbehind: !0
        },
        // EN
        {
          pattern: /\b(?:and|not|or)\b/i
        }
      ],
      punctuation: /\(\.|\.\)|[()\[\]:;,.]/,
      directive: [
        // Теги препроцессора вида &Клиент, &Сервер, ...
        // Preprocessor tags of the type &Client, &Server, ...
        {
          pattern: /^([ \t]*)&.*/m,
          lookbehind: !0,
          greedy: !0,
          alias: "important"
        },
        // Инструкции препроцессора вида:
        // #Если Сервер Тогда
        // ...
        // #КонецЕсли
        // Preprocessor instructions of the form:
        // #If Server Then
        // ...
        // #EndIf
        {
          pattern: /^([ \t]*)#.*/gm,
          lookbehind: !0,
          greedy: !0,
          alias: "important"
        }
      ]
    }, t.languages.oscript = t.languages.bsl;
  }
  return Xf;
}
var Qf, Wv;
function OU() {
  if (Wv) return Qf;
  Wv = 1, Qf = e, e.displayName = "cfscript", e.aliases = [];
  function e(t) {
    t.languages.cfscript = t.languages.extend("clike", {
      comment: [
        {
          pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
          lookbehind: !0,
          inside: {
            annotation: {
              pattern: /(?:^|[^.])@[\w\.]+/,
              alias: "punctuation"
            }
          }
        },
        {
          pattern: /(^|[^\\:])\/\/.*/,
          lookbehind: !0,
          greedy: !0
        }
      ],
      keyword: /\b(?:abstract|break|catch|component|continue|default|do|else|extends|final|finally|for|function|if|in|include|package|private|property|public|remote|required|rethrow|return|static|switch|throw|try|var|while|xml)\b(?!\s*=)/,
      operator: [
        /\+\+|--|&&|\|\||::|=>|[!=]==|<=?|>=?|[-+*/%&|^!=<>]=?|\?(?:\.|:)?|[?:]/,
        /\b(?:and|contains|eq|equal|eqv|gt|gte|imp|is|lt|lte|mod|not|or|xor)\b/
      ],
      scope: {
        pattern: /\b(?:application|arguments|cgi|client|cookie|local|session|super|this|variables)\b/,
        alias: "global"
      },
      type: {
        pattern: /\b(?:any|array|binary|boolean|date|guid|numeric|query|string|struct|uuid|void|xml)\b/,
        alias: "builtin"
      }
    }), t.languages.insertBefore("cfscript", "keyword", {
      // This must be declared before keyword because we use "function" inside the lookahead
      "function-variable": {
        pattern: /[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,
        alias: "function"
      }
    }), delete t.languages.cfscript["class-name"], t.languages.cfc = t.languages.cfscript;
  }
  return Qf;
}
var Zf, Yv;
function LU() {
  if (Yv) return Zf;
  Yv = 1;
  var e = YE();
  Zf = t, t.displayName = "chaiscript", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.chaiscript = n.languages.extend("clike", {
      string: {
        pattern: /(^|[^\\])'(?:[^'\\]|\\[\s\S])*'/,
        lookbehind: !0,
        greedy: !0
      },
      "class-name": [
        {
          // e.g. class Rectangle { ... }
          pattern: /(\bclass\s+)\w+/,
          lookbehind: !0
        },
        {
          // e.g. attr Rectangle::height, def Rectangle::area() { ... }
          pattern: /(\b(?:attr|def)\s+)\w+(?=\s*::)/,
          lookbehind: !0
        }
      ],
      keyword: /\b(?:attr|auto|break|case|catch|class|continue|def|default|else|finally|for|fun|global|if|return|switch|this|try|var|while)\b/,
      number: [n.languages.cpp.number, /\b(?:Infinity|NaN)\b/],
      operator: />>=?|<<=?|\|\||&&|:[:=]?|--|\+\+|[=!<>+\-*/%|&^]=?|[?~]|`[^`\r\n]{1,4}`/
    }), n.languages.insertBefore("chaiscript", "operator", {
      "parameter-type": {
        // e.g. def foo(int x, Vector y) {...}
        pattern: /([,(]\s*)\w+(?=\s+\w)/,
        lookbehind: !0,
        alias: "class-name"
      }
    }), n.languages.insertBefore("chaiscript", "string", {
      "string-interpolation": {
        pattern: /(^|[^\\])"(?:[^"$\\]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\})*"/,
        lookbehind: !0,
        greedy: !0,
        inside: {
          interpolation: {
            pattern: /((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\}/,
            lookbehind: !0,
            inside: {
              "interpolation-expression": {
                pattern: /(^\$\{)[\s\S]+(?=\}$)/,
                lookbehind: !0,
                inside: n.languages.chaiscript
              },
              "interpolation-punctuation": {
                pattern: /^\$\{|\}$/,
                alias: "punctuation"
              }
            }
          },
          string: /[\s\S]+/
        }
      }
    });
  }
  return Zf;
}
var Jf, Kv;
function DU() {
  if (Kv) return Jf;
  Kv = 1, Jf = e, e.displayName = "cil", e.aliases = [];
  function e(t) {
    t.languages.cil = {
      comment: /\/\/.*/,
      string: {
        pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
        greedy: !0
      },
      directive: {
        pattern: /(^|\W)\.[a-z]+(?=\s)/,
        lookbehind: !0,
        alias: "class-name"
      },
      // Actually an assembly reference
      variable: /\[[\w\.]+\]/,
      keyword: /\b(?:abstract|ansi|assembly|auto|autochar|beforefieldinit|bool|bstr|byvalstr|catch|char|cil|class|currency|date|decimal|default|enum|error|explicit|extends|extern|famandassem|family|famorassem|final(?:ly)?|float32|float64|hidebysig|u?int(?:8|16|32|64)?|iant|idispatch|implements|import|initonly|instance|interface|iunknown|literal|lpstr|lpstruct|lptstr|lpwstr|managed|method|native(?:Type)?|nested|newslot|object(?:ref)?|pinvokeimpl|private|privatescope|public|reqsecobj|rtspecialname|runtime|sealed|sequential|serializable|specialname|static|string|struct|syschar|tbstr|unicode|unmanagedexp|unsigned|value(?:type)?|variant|virtual|void)\b/,
      function: /\b(?:(?:constrained|no|readonly|tail|unaligned|volatile)\.)?(?:conv\.(?:[iu][1248]?|ovf\.[iu][1248]?(?:\.un)?|r\.un|r4|r8)|ldc\.(?:i4(?:\.\d+|\.[mM]1|\.s)?|i8|r4|r8)|ldelem(?:\.[iu][1248]?|\.r[48]|\.ref|a)?|ldind\.(?:[iu][1248]?|r[48]|ref)|stelem\.?(?:i[1248]?|r[48]|ref)?|stind\.(?:i[1248]?|r[48]|ref)?|end(?:fault|filter|finally)|ldarg(?:\.[0-3s]|a(?:\.s)?)?|ldloc(?:\.\d+|\.s)?|sub(?:\.ovf(?:\.un)?)?|mul(?:\.ovf(?:\.un)?)?|add(?:\.ovf(?:\.un)?)?|stloc(?:\.[0-3s])?|refany(?:type|val)|blt(?:\.un)?(?:\.s)?|ble(?:\.un)?(?:\.s)?|bgt(?:\.un)?(?:\.s)?|bge(?:\.un)?(?:\.s)?|unbox(?:\.any)?|init(?:blk|obj)|call(?:i|virt)?|brfalse(?:\.s)?|bne\.un(?:\.s)?|ldloca(?:\.s)?|brzero(?:\.s)?|brtrue(?:\.s)?|brnull(?:\.s)?|brinst(?:\.s)?|starg(?:\.s)?|leave(?:\.s)?|shr(?:\.un)?|rem(?:\.un)?|div(?:\.un)?|clt(?:\.un)?|alignment|castclass|ldvirtftn|beq(?:\.s)?|ckfinite|ldsflda|ldtoken|localloc|mkrefany|rethrow|cgt\.un|arglist|switch|stsfld|sizeof|newobj|newarr|ldsfld|ldnull|ldflda|isinst|throw|stobj|stfld|ldstr|ldobj|ldlen|ldftn|ldfld|cpobj|cpblk|break|br\.s|xor|shl|ret|pop|not|nop|neg|jmp|dup|cgt|ceq|box|and|or|br)\b/,
      boolean: /\b(?:false|true)\b/,
      number: /\b-?(?:0x[0-9a-f]+|\d+)(?:\.[0-9a-f]+)?\b/i,
      punctuation: /[{}[\];(),:=]|IL_[0-9A-Za-z]+/
    };
  }
  return Jf;
}
var eh, Xv;
function MU() {
  if (Xv) return eh;
  Xv = 1, eh = e, e.displayName = "clojure", e.aliases = [];
  function e(t) {
    t.languages.clojure = {
      comment: {
        pattern: /;.*/,
        greedy: !0
      },
      string: {
        pattern: /"(?:[^"\\]|\\.)*"/,
        greedy: !0
      },
      char: /\\\w+/,
      symbol: {
        pattern: /(^|[\s()\[\]{},])::?[\w*+!?'<>=/.-]+/,
        lookbehind: !0
      },
      keyword: {
        pattern: /(\()(?:-|->|->>|\.|\.\.|\*|\/|\+|<|<=|=|==|>|>=|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|cond|conj|cons|constantly|construct-proxy|contains\?|count|create-ns|create-struct|cycle|dec|declare|def|def-|definline|definterface|defmacro|defmethod|defmulti|defn|defn-|defonce|defproject|defprotocol|defrecord|defstruct|deftype|deref|difference|disj|dissoc|distinct|do|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\?|ensure|eval|every\?|false\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|fn|fnseq|for|frest|gensym|get|get-proxy-class|hash-map|hash-set|identical\?|identity|if|if-let|if-not|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\?|last|lazy-cat|lazy-cons|left|lefts|let|line-seq|list|list\*|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|monitor-enter|name|namespace|neg\?|new|newline|next|nil\?|node|not|not-any\?|not-every\?|not=|ns|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|quote|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|recur|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\?|set|set!|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\?|split-at|split-with|str|string\?|struct|struct-map|subs|subvec|symbol|symbol\?|sync|take|take-nth|take-while|test|throw|time|to-array|to-array-2d|tree-seq|true\?|try|union|up|update-proxy|val|vals|var|var-get|var-set|var\?|vector|vector-zip|vector\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\?|zipmap|zipper)(?=[\s)]|$)/,
        lookbehind: !0
      },
      boolean: /\b(?:false|nil|true)\b/,
      number: {
        pattern: /(^|[^\w$@])(?:\d+(?:[/.]\d+)?(?:e[+-]?\d+)?|0x[a-f0-9]+|[1-9]\d?r[a-z0-9]+)[lmn]?(?![\w$@])/i,
        lookbehind: !0
      },
      function: {
        pattern: /((?:^|[^'])\()[\w*+!?'<>=/.-]+(?=[\s)]|$)/,
        lookbehind: !0
      },
      operator: /[#@^`~]/,
      punctuation: /[{}\[\](),]/
    };
  }
  return eh;
}
var th, Qv;
function PU() {
  if (Qv) return th;
  Qv = 1, th = e, e.displayName = "cmake", e.aliases = [];
  function e(t) {
    t.languages.cmake = {
      comment: /#.*/,
      string: {
        pattern: /"(?:[^\\"]|\\.)*"/,
        greedy: !0,
        inside: {
          interpolation: {
            pattern: /\$\{(?:[^{}$]|\$\{[^{}$]*\})*\}/,
            inside: {
              punctuation: /\$\{|\}/,
              variable: /\w+/
            }
          }
        }
      },
      variable: /\b(?:CMAKE_\w+|\w+_(?:(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT|VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?)|(?:ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_(?:BINARY_DIR|DESCRIPTION|HOMEPAGE_URL|NAME|SOURCE_DIR|VERSION|VERSION_(?:MAJOR|MINOR|PATCH|TWEAK))|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE|XCODE_VERSION))\b/,
      property: /\b(?:cxx_\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\w+|\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|GLOBAL_KEYWORD|GLOBAL_PROJECT_TYPES|GLOBAL_ROOTNAMESPACE|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\b/,
      keyword: /\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\s*\()\b/,
      boolean: /\b(?:FALSE|OFF|ON|TRUE)\b/,
      namespace: /\b(?:INTERFACE|PRIVATE|PROPERTIES|PUBLIC|SHARED|STATIC|TARGET_OBJECTS)\b/,
      operator: /\b(?:AND|DEFINED|EQUAL|GREATER|LESS|MATCHES|NOT|OR|STREQUAL|STRGREATER|STRLESS|VERSION_EQUAL|VERSION_GREATER|VERSION_LESS)\b/,
      inserted: {
        pattern: /\b\w+::\w+\b/,
        alias: "class-name"
      },
      number: /\b\d+(?:\.\d+)*\b/,
      function: /\b[a-z_]\w*(?=\s*\()\b/i,
      punctuation: /[()>}]|\$[<{]/
    };
  }
  return th;
}
var nh, Zv;
function FU() {
  if (Zv) return nh;
  Zv = 1, nh = e, e.displayName = "cobol", e.aliases = [];
  function e(t) {
    t.languages.cobol = {
      comment: {
        pattern: /\*>.*|(^[ \t]*)\*.*/m,
        lookbehind: !0,
        greedy: !0
      },
      string: {
        pattern: /[xzgn]?(?:"(?:[^\r\n"]|"")*"(?!")|'(?:[^\r\n']|'')*'(?!'))/i,
        greedy: !0
      },
      level: {
        pattern: /(^[ \t]*)\d+\b/m,
        lookbehind: !0,
        greedy: !0,
        alias: "number"
      },
      "class-name": {
        // https://github.com/antlr/grammars-v4/blob/42edd5b687d183b5fa679e858a82297bd27141e7/cobol85/Cobol85.g4#L1015
        pattern: /(\bpic(?:ture)?\s+)(?:(?:[-\w$/,:*+<>]|\.(?!\s|$))(?:\(\d+\))?)+/i,
        lookbehind: !0,
        inside: {
          number: {
            pattern: /(\()\d+/,
            lookbehind: !0
          },
          punctuation: /[()]/
        }
      },
      keyword: {
        pattern: /(^|[^\w-])(?:ABORT|ACCEPT|ACCESS|ADD|ADDRESS|ADVANCING|AFTER|ALIGNED|ALL|ALPHABET|ALPHABETIC|ALPHABETIC-LOWER|ALPHABETIC-UPPER|ALPHANUMERIC|ALPHANUMERIC-EDITED|ALSO|ALTER|ALTERNATE|ANY|ARE|AREA|AREAS|AS|ASCENDING|ASCII|ASSIGN|ASSOCIATED-DATA|ASSOCIATED-DATA-LENGTH|AT|ATTRIBUTE|AUTHOR|AUTO|AUTO-SKIP|BACKGROUND-COLOR|BACKGROUND-COLOUR|BASIS|BEEP|BEFORE|BEGINNING|BELL|BINARY|BIT|BLANK|BLINK|BLOCK|BOTTOM|BOUNDS|BY|BYFUNCTION|BYTITLE|CALL|CANCEL|CAPABLE|CCSVERSION|CD|CF|CH|CHAINING|CHANGED|CHANNEL|CHARACTER|CHARACTERS|CLASS|CLASS-ID|CLOCK-UNITS|CLOSE|CLOSE-DISPOSITION|COBOL|CODE|CODE-SET|COL|COLLATING|COLUMN|COM-REG|COMMA|COMMITMENT|COMMON|COMMUNICATION|COMP|COMP-1|COMP-2|COMP-3|COMP-4|COMP-5|COMPUTATIONAL|COMPUTATIONAL-1|COMPUTATIONAL-2|COMPUTATIONAL-3|COMPUTATIONAL-4|COMPUTATIONAL-5|COMPUTE|CONFIGURATION|CONTAINS|CONTENT|CONTINUE|CONTROL|CONTROL-POINT|CONTROLS|CONVENTION|CONVERTING|COPY|CORR|CORRESPONDING|COUNT|CRUNCH|CURRENCY|CURSOR|DATA|DATA-BASE|DATE|DATE-COMPILED|DATE-WRITTEN|DAY|DAY-OF-WEEK|DBCS|DE|DEBUG-CONTENTS|DEBUG-ITEM|DEBUG-LINE|DEBUG-NAME|DEBUG-SUB-1|DEBUG-SUB-2|DEBUG-SUB-3|DEBUGGING|DECIMAL-POINT|DECLARATIVES|DEFAULT|DEFAULT-DISPLAY|DEFINITION|DELETE|DELIMITED|DELIMITER|DEPENDING|DESCENDING|DESTINATION|DETAIL|DFHRESP|DFHVALUE|DISABLE|DISK|DISPLAY|DISPLAY-1|DIVIDE|DIVISION|DONTCARE|DOUBLE|DOWN|DUPLICATES|DYNAMIC|EBCDIC|EGCS|EGI|ELSE|EMI|EMPTY-CHECK|ENABLE|END|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-OF-PAGE|END-PERFORM|END-READ|END-RECEIVE|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ENDING|ENTER|ENTRY|ENTRY-PROCEDURE|ENVIRONMENT|EOL|EOP|EOS|ERASE|ERROR|ESCAPE|ESI|EVALUATE|EVENT|EVERY|EXCEPTION|EXCLUSIVE|EXHIBIT|EXIT|EXPORT|EXTEND|EXTENDED|EXTERNAL|FD|FILE|FILE-CONTROL|FILLER|FINAL|FIRST|FOOTING|FOR|FOREGROUND-COLOR|FOREGROUND-COLOUR|FROM|FULL|FUNCTION|FUNCTION-POINTER|FUNCTIONNAME|GENERATE|GIVING|GLOBAL|GO|GOBACK|GRID|GROUP|HEADING|HIGH-VALUE|HIGH-VALUES|HIGHLIGHT|I-O|I-O-CONTROL|ID|IDENTIFICATION|IF|IMPLICIT|IMPORT|IN|INDEX|INDEXED|INDICATE|INITIAL|INITIALIZE|INITIATE|INPUT|INPUT-OUTPUT|INSPECT|INSTALLATION|INTEGER|INTO|INVALID|INVOKE|IS|JUST|JUSTIFIED|KANJI|KEPT|KEY|KEYBOARD|LABEL|LANGUAGE|LAST|LB|LD|LEADING|LEFT|LEFTLINE|LENGTH|LENGTH-CHECK|LIBACCESS|LIBPARAMETER|LIBRARY|LIMIT|LIMITS|LINAGE|LINAGE-COUNTER|LINE|LINE-COUNTER|LINES|LINKAGE|LIST|LOCAL|LOCAL-STORAGE|LOCK|LONG-DATE|LONG-TIME|LOW-VALUE|LOW-VALUES|LOWER|LOWLIGHT|MEMORY|MERGE|MESSAGE|MMDDYYYY|MODE|MODULES|MORE-LABELS|MOVE|MULTIPLE|MULTIPLY|NAMED|NATIONAL|NATIONAL-EDITED|NATIVE|NEGATIVE|NETWORK|NEXT|NO|NO-ECHO|NULL|NULLS|NUMBER|NUMERIC|NUMERIC-DATE|NUMERIC-EDITED|NUMERIC-TIME|OBJECT-COMPUTER|OCCURS|ODT|OF|OFF|OMITTED|ON|OPEN|OPTIONAL|ORDER|ORDERLY|ORGANIZATION|OTHER|OUTPUT|OVERFLOW|OVERLINE|OWN|PACKED-DECIMAL|PADDING|PAGE|PAGE-COUNTER|PASSWORD|PERFORM|PF|PH|PIC|PICTURE|PLUS|POINTER|PORT|POSITION|POSITIVE|PRINTER|PRINTING|PRIVATE|PROCEDURE|PROCEDURE-POINTER|PROCEDURES|PROCEED|PROCESS|PROGRAM|PROGRAM-ID|PROGRAM-LIBRARY|PROMPT|PURGE|QUEUE|QUOTE|QUOTES|RANDOM|RD|READ|READER|REAL|RECEIVE|RECEIVED|RECORD|RECORDING|RECORDS|RECURSIVE|REDEFINES|REEL|REF|REFERENCE|REFERENCES|RELATIVE|RELEASE|REMAINDER|REMARKS|REMOTE|REMOVAL|REMOVE|RENAMES|REPLACE|REPLACING|REPORT|REPORTING|REPORTS|REQUIRED|RERUN|RESERVE|RESET|RETURN|RETURN-CODE|RETURNING|REVERSE-VIDEO|REVERSED|REWIND|REWRITE|RF|RH|RIGHT|ROUNDED|RUN|SAME|SAVE|SCREEN|SD|SEARCH|SECTION|SECURE|SECURITY|SEGMENT|SEGMENT-LIMIT|SELECT|SEND|SENTENCE|SEPARATE|SEQUENCE|SEQUENTIAL|SET|SHARED|SHAREDBYALL|SHAREDBYRUNUNIT|SHARING|SHIFT-IN|SHIFT-OUT|SHORT-DATE|SIGN|SIZE|SORT|SORT-CONTROL|SORT-CORE-SIZE|SORT-FILE-SIZE|SORT-MERGE|SORT-MESSAGE|SORT-MODE-SIZE|SORT-RETURN|SOURCE|SOURCE-COMPUTER|SPACE|SPACES|SPECIAL-NAMES|STANDARD|STANDARD-1|STANDARD-2|START|STATUS|STOP|STRING|SUB-QUEUE-1|SUB-QUEUE-2|SUB-QUEUE-3|SUBTRACT|SUM|SUPPRESS|SYMBOL|SYMBOLIC|SYNC|SYNCHRONIZED|TABLE|TALLY|TALLYING|TAPE|TASK|TERMINAL|TERMINATE|TEST|TEXT|THEN|THREAD|THREAD-LOCAL|THROUGH|THRU|TIME|TIMER|TIMES|TITLE|TO|TODAYS-DATE|TODAYS-NAME|TOP|TRAILING|TRUNCATED|TYPE|TYPEDEF|UNDERLINE|UNIT|UNSTRING|UNTIL|UP|UPON|USAGE|USE|USING|VALUE|VALUES|VARYING|VIRTUAL|WAIT|WHEN|WHEN-COMPILED|WITH|WORDS|WORKING-STORAGE|WRITE|YEAR|YYYYDDD|YYYYMMDD|ZERO-FILL|ZEROES|ZEROS)(?![\w-])/i,
        lookbehind: !0
      },
      boolean: {
        pattern: /(^|[^\w-])(?:false|true)(?![\w-])/i,
        lookbehind: !0
      },
      number: {
        pattern: /(^|[^\w-])(?:[+-]?(?:(?:\d+(?:[.,]\d+)?|[.,]\d+)(?:e[+-]?\d+)?|zero))(?![\w-])/i,
        lookbehind: !0
      },
      operator: [
        /<>|[<>]=?|[=+*/&]/,
        {
          pattern: /(^|[^\w-])(?:-|and|equal|greater|less|not|or|than)(?![\w-])/i,
          lookbehind: !0
        }
      ],
      punctuation: /[.:,()]/
    };
  }
  return nh;
}
var rh, Jv;
function BU() {
  if (Jv) return rh;
  Jv = 1, rh = e, e.displayName = "coffeescript", e.aliases = ["coffee"];
  function e(t) {
    (function(n) {
      var r = /#(?!\{).+/, o = {
        pattern: /#\{[^}]+\}/,
        alias: "variable"
      };
      n.languages.coffeescript = n.languages.extend("javascript", {
        comment: r,
        string: [
          // Strings are multiline
          {
            pattern: /'(?:\\[\s\S]|[^\\'])*'/,
            greedy: !0
          },
          {
            // Strings are multiline
            pattern: /"(?:\\[\s\S]|[^\\"])*"/,
            greedy: !0,
            inside: {
              interpolation: o
            }
          }
        ],
        keyword: /\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\b/,
        "class-member": {
          pattern: /@(?!\d)\w+/,
          alias: "variable"
        }
      }), n.languages.insertBefore("coffeescript", "comment", {
        "multiline-comment": {
          pattern: /###[\s\S]+?###/,
          alias: "comment"
        },
        // Block regexp can contain comments and interpolation
        "block-regex": {
          pattern: /\/{3}[\s\S]*?\/{3}/,
          alias: "regex",
          inside: {
            comment: r,
            interpolation: o
          }
        }
      }), n.languages.insertBefore("coffeescript", "string", {
        "inline-javascript": {
          pattern: /`(?:\\[\s\S]|[^\\`])*`/,
          inside: {
            delimiter: {
              pattern: /^`|`$/,
              alias: "punctuation"
            },
            script: {
              pattern: /[\s\S]+/,
              alias: "language-javascript",
              inside: n.languages.javascript
            }
          }
        },
        // Block strings
        "multiline-string": [
          {
            pattern: /'''[\s\S]*?'''/,
            greedy: !0,
            alias: "string"
          },
          {
            pattern: /"""[\s\S]*?"""/,
            greedy: !0,
            alias: "string",
            inside: {
              interpolation: o
            }
          }
        ]
      }), n.languages.insertBefore("coffeescript", "keyword", {
        // Object property
        property: /(?!\d)\w+(?=\s*:(?!:))/
      }), delete n.languages.coffeescript["template-string"], n.languages.coffee = n.languages.coffeescript;
    })(t);
  }
  return rh;
}
var ah, eA;
function UU() {
  if (eA) return ah;
  eA = 1, ah = e, e.displayName = "concurnas", e.aliases = ["conc"];
  function e(t) {
    t.languages.concurnas = {
      comment: {
        pattern: /(^|[^\\])(?:\/\*[\s\S]*?(?:\*\/|$)|\/\/.*)/,
        lookbehind: !0,
        greedy: !0
      },
      langext: {
        pattern: /\b\w+\s*\|\|[\s\S]+?\|\|/,
        greedy: !0,
        inside: {
          "class-name": /^\w+/,
          string: {
            pattern: /(^\s*\|\|)[\s\S]+(?=\|\|$)/,
            lookbehind: !0
          },
          punctuation: /\|\|/
        }
      },
      function: {
        pattern: /((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/,
        lookbehind: !0
      },
      keyword: /\b(?:abstract|actor|also|annotation|assert|async|await|bool|boolean|break|byte|case|catch|changed|char|class|closed|constant|continue|def|default|del|double|elif|else|enum|every|extends|false|finally|float|for|from|global|gpudef|gpukernel|if|import|in|init|inject|int|lambda|local|long|loop|match|new|nodefault|null|of|onchange|open|out|override|package|parfor|parforsync|post|pre|private|protected|provide|provider|public|return|shared|short|single|size_t|sizeof|super|sync|this|throw|trait|trans|transient|true|try|typedef|unchecked|using|val|var|void|while|with)\b/,
      boolean: /\b(?:false|true)\b/,
      number: /\b0b[01][01_]*L?\b|\b0x(?:[\da-f_]*\.)?[\da-f_p+-]+\b|(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?\d[\d_]*)?[dfls]?/i,
      punctuation: /[{}[\];(),.:]/,
      operator: /<==|>==|=>|->|<-|<>|&==|&<>|\?:?|\.\?|\+\+|--|[-+*/=<>]=?|[!^~]|\b(?:and|as|band|bor|bxor|comp|is|isnot|mod|or)\b=?/,
      annotation: {
        pattern: /@(?:\w+:)?(?:\w+|\[[^\]]+\])?/,
        alias: "builtin"
      }
    }, t.languages.insertBefore("concurnas", "langext", {
      "regex-literal": {
        pattern: /\br("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
        greedy: !0,
        inside: {
          interpolation: {
            pattern: /((?:^|[^\\])(?:\\{2})*)\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,
            lookbehind: !0,
            inside: t.languages.concurnas
          },
          regex: /[\s\S]+/
        }
      },
      "string-literal": {
        pattern: /(?:\B|\bs)("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
        greedy: !0,
        inside: {
          interpolation: {
            pattern: /((?:^|[^\\])(?:\\{2})*)\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,
            lookbehind: !0,
            inside: t.languages.concurnas
          },
          string: /[\s\S]+/
        }
      }
    }), t.languages.conc = t.languages.concurnas;
  }
  return ah;
}
var ih, tA;
function HU() {
  if (tA) return ih;
  tA = 1, ih = e, e.displayName = "coq", e.aliases = [];
  function e(t) {
    (function(n) {
      for (var r = /\(\*(?:[^(*]|\((?!\*)|\*(?!\))|<self>)*\*\)/.source, o = 0; o < 2; o++)
        r = r.replace(/<self>/g, function() {
          return r;
        });
      r = r.replace(/<self>/g, "[]"), n.languages.coq = {
        comment: RegExp(r),
        string: {
          pattern: /"(?:[^"]|"")*"(?!")/,
          greedy: !0
        },
        attribute: [
          {
            pattern: RegExp(
              /#\[(?:[^\[\]("]|"(?:[^"]|"")*"(?!")|\((?!\*)|<comment>)*\]/.source.replace(
                /<comment>/g,
                function() {
                  return r;
                }
              )
            ),
            greedy: !0,
            alias: "attr-name",
            inside: {
              comment: RegExp(r),
              string: {
                pattern: /"(?:[^"]|"")*"(?!")/,
                greedy: !0
              },
              operator: /=/,
              punctuation: /^#\[|\]$|[,()]/
            }
          },
          {
            pattern: /\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\b/,
            alias: "attr-name"
          }
        ],
        keyword: /\b(?:Abort|About|Add|Admit|Admitted|All|Arguments|As|Assumptions|Axiom|Axioms|Back|BackTo|Backtrace|BinOp|BinOpSpec|BinRel|Bind|Blacklist|Canonical|Case|Cd|Check|Class|Classes|Close|CoFixpoint|CoInductive|Coercion|Coercions|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|Fixpoint|Flags|Focus|From|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|IF|Identity|Immediate|Implicit|Implicits|Import|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|ML|Match|Method|Minimality|Module|Modules|Morphism|Next|NoInline|Notation|Number|OCaml|Obligation|Obligations|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|PropOp|PropUOp|Property|Proposition|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|Require|Reserved|Reset|Resolve|Restart|Rewrite|Right|Ring|Rings|SProp|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|Step|Strategies|Strategy|String|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|UnOp|UnOpSpec|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|Unshelve|Variable|Variables|Variant|Verbose|View|Visibility|Zify|_|apply|as|at|by|cofix|else|end|exists|exists2|fix|for|forall|fun|if|in|let|match|measure|move|removed|return|struct|then|using|wf|where|with)\b/,
        number: /\b(?:0x[a-f0-9][a-f0-9_]*(?:\.[a-f0-9_]+)?(?:p[+-]?\d[\d_]*)?|\d[\d_]*(?:\.[\d_]+)?(?:e[+-]?\d[\d_]*)?)\b/i,
        punct: {
          pattern: /@\{|\{\||\[=|:>/,
          alias: "punctuation"
        },
        operator: /\/\\|\\\/|\.{2,3}|:{1,2}=|\*\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\|[-|]?|[-!%&*+/<=>?@^~']/,
        punctuation: /\.\(|`\(|@\{|`\{|\{\||\[=|:>|[:.,;(){}\[\]]/
      };
    })(t);
  }
  return ih;
}
var oh, nA;
function fc() {
  if (nA) return oh;
  nA = 1, oh = e, e.displayName = "ruby", e.aliases = ["rb"];
  function e(t) {
    (function(n) {
      n.languages.ruby = n.languages.extend("clike", {
        comment: {
          pattern: /#.*|^=begin\s[\s\S]*?^=end/m,
          greedy: !0
        },
        "class-name": {
          pattern: /(\b(?:class|module)\s+|\bcatch\s+\()[\w.\\]+|\b[A-Z_]\w*(?=\s*\.\s*new\b)/,
          lookbehind: !0,
          inside: {
            punctuation: /[.\\]/
          }
        },
        keyword: /\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\b/,
        operator: /\.{2,3}|&\.|===|<?=>|[!=]?~|(?:&&|\|\||<<|>>|\*\*|[+\-*/%<>!^&|=])=?|[?:]/,
        punctuation: /[(){}[\].,;]/
      }), n.languages.insertBefore("ruby", "operator", {
        "double-colon": {
          pattern: /::/,
          alias: "punctuation"
        }
      });
      var r = {
        pattern: /((?:^|[^\\])(?:\\{2})*)#\{(?:[^{}]|\{[^{}]*\})*\}/,
        lookbehind: !0,
        inside: {
          content: {
            pattern: /^(#\{)[\s\S]+(?=\}$)/,
            lookbehind: !0,
            inside: n.languages.ruby
          },
          delimiter: {
            pattern: /^#\{|\}$/,
            alias: "punctuation"
          }
        }
      };
      delete n.languages.ruby.function;
      var o = "(?:" + [
        /([^a-zA-Z0-9\s{(\[<=])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,
        /\((?:[^()\\]|\\[\s\S]|\((?:[^()\\]|\\[\s\S])*\))*\)/.source,
        /\{(?:[^{}\\]|\\[\s\S]|\{(?:[^{}\\]|\\[\s\S])*\})*\}/.source,
        /\[(?:[^\[\]\\]|\\[\s\S]|\[(?:[^\[\]\\]|\\[\s\S])*\])*\]/.source,
        /<(?:[^<>\\]|\\[\s\S]|<(?:[^<>\\]|\\[\s\S])*>)*>/.source
      ].join("|") + ")", s = /(?:"(?:\\.|[^"\\\r\n])*"|(?:\b[a-zA-Z_]\w*|[^\s\0-\x7F]+)[?!]?|\$.)/.source;
      n.languages.insertBefore("ruby", "keyword", {
        "regex-literal": [
          {
            pattern: RegExp(
              /%r/.source + o + /[egimnosux]{0,6}/.source
            ),
            greedy: !0,
            inside: {
              interpolation: r,
              regex: /[\s\S]+/
            }
          },
          {
            pattern: /(^|[^/])\/(?!\/)(?:\[[^\r\n\]]+\]|\\.|[^[/\\\r\n])+\/[egimnosux]{0,6}(?=\s*(?:$|[\r\n,.;})#]))/,
            lookbehind: !0,
            greedy: !0,
            inside: {
              interpolation: r,
              regex: /[\s\S]+/
            }
          }
        ],
        variable: /[@$]+[a-zA-Z_]\w*(?:[?!]|\b)/,
        symbol: [
          {
            pattern: RegExp(/(^|[^:]):/.source + s),
            lookbehind: !0,
            greedy: !0
          },
          {
            pattern: RegExp(
              /([\r\n{(,][ \t]*)/.source + s + /(?=:(?!:))/.source
            ),
            lookbehind: !0,
            greedy: !0
          }
        ],
        "method-definition": {
          pattern: /(\bdef\s+)\w+(?:\s*\.\s*\w+)?/,
          lookbehind: !0,
          inside: {
            function: /\b\w+$/,
            keyword: /^self\b/,
            "class-name": /^\w+/,
            punctuation: /\./
          }
        }
      }), n.languages.insertBefore("ruby", "string", {
        "string-literal": [
          {
            pattern: RegExp(/%[qQiIwWs]?/.source + o),
            greedy: !0,
            inside: {
              interpolation: r,
              string: /[\s\S]+/
            }
          },
          {
            pattern: /("|')(?:#\{[^}]+\}|#(?!\{)|\\(?:\r\n|[\s\S])|(?!\1)[^\\#\r\n])*\1/,
            greedy: !0,
            inside: {
              interpolation: r,
              string: /[\s\S]+/
            }
          },
          {
            pattern: /<<[-~]?([a-z_]\w*)[\r\n](?:.*[\r\n])*?[\t ]*\1/i,
            alias: "heredoc-string",
            greedy: !0,
            inside: {
              delimiter: {
                pattern: /^<<[-~]?[a-z_]\w*|\b[a-z_]\w*$/i,
                inside: {
                  symbol: /\b\w+/,
                  punctuation: /^<<[-~]?/
                }
              },
              interpolation: r,
              string: /[\s\S]+/
            }
          },
          {
            pattern: /<<[-~]?'([a-z_]\w*)'[\r\n](?:.*[\r\n])*?[\t ]*\1/i,
            alias: "heredoc-string",
            greedy: !0,
            inside: {
              delimiter: {
                pattern: /^<<[-~]?'[a-z_]\w*'|\b[a-z_]\w*$/i,
                inside: {
                  symbol: /\b\w+/,
                  punctuation: /^<<[-~]?'|'$/
                }
              },
              string: /[\s\S]+/
            }
          }
        ],
        "command-literal": [
          {
            pattern: RegExp(/%x/.source + o),
            greedy: !0,
            inside: {
              interpolation: r,
              command: {
                pattern: /[\s\S]+/,
                alias: "string"
              }
            }
          },
          {
            pattern: /`(?:#\{[^}]+\}|#(?!\{)|\\(?:\r\n|[\s\S])|[^\\`#\r\n])*`/,
            greedy: !0,
            inside: {
              interpolation: r,
              command: {
                pattern: /[\s\S]+/,
                alias: "string"
              }
            }
          }
        ]
      }), delete n.languages.ruby.string, n.languages.insertBefore("ruby", "number", {
        builtin: /\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\b/,
        constant: /\b[A-Z][A-Z0-9_]*(?:[?!]|\b)/
      }), n.languages.rb = n.languages.ruby;
    })(t);
  }
  return oh;
}
var sh, rA;
function $U() {
  if (rA) return sh;
  rA = 1;
  var e = fc();
  sh = t, t.displayName = "crystal", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      r.languages.crystal = r.languages.extend("ruby", {
        keyword: [
          /\b(?:__DIR__|__END_LINE__|__FILE__|__LINE__|abstract|alias|annotation|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|ifdef|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|ptr|require|rescue|return|select|self|sizeof|struct|super|then|type|typeof|undef|uninitialized|union|unless|until|when|while|with|yield)\b/,
          {
            pattern: /(\.\s*)(?:is_a|responds_to)\?/,
            lookbehind: !0
          }
        ],
        number: /\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\da-fA-F_]*[\da-fA-F]|(?:\d(?:[\d_]*\d)?)(?:\.[\d_]*\d)?(?:[eE][+-]?[\d_]*\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\b/,
        operator: [/->/, r.languages.ruby.operator],
        punctuation: /[(){}[\].,;\\]/
      }), r.languages.insertBefore("crystal", "string-literal", {
        attribute: {
          pattern: /@\[.*?\]/,
          inside: {
            delimiter: {
              pattern: /^@\[|\]$/,
              alias: "punctuation"
            },
            attribute: {
              pattern: /^(\s*)\w+/,
              lookbehind: !0,
              alias: "class-name"
            },
            args: {
              pattern: /\S(?:[\s\S]*\S)?/,
              inside: r.languages.crystal
            }
          }
        },
        expansion: {
          pattern: /\{(?:\{.*?\}|%.*?%)\}/,
          inside: {
            content: {
              pattern: /^(\{.)[\s\S]+(?=.\}$)/,
              lookbehind: !0,
              inside: r.languages.crystal
            },
            delimiter: {
              pattern: /^\{[\{%]|[\}%]\}$/,
              alias: "operator"
            }
          }
        },
        char: {
          pattern: /'(?:[^\\\r\n]{1,2}|\\(?:.|u(?:[A-Fa-f0-9]{1,4}|\{[A-Fa-f0-9]{1,6}\})))'/,
          greedy: !0
        }
      });
    }(n);
  }
  return sh;
}
var lh, aA;
function zU() {
  if (aA) return lh;
  aA = 1;
  var e = pc();
  lh = t, t.displayName = "cshtml", t.aliases = ["razor"];
  function t(n) {
    n.register(e), function(r) {
      var o = /\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\//.source, s = /@(?!")|"(?:[^\r\n\\"]|\\.)*"|@"(?:[^\\"]|""|\\[\s\S])*"(?!")/.source + "|" + /'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!')))/.source;
      function u(R, C) {
        for (var w = 0; w < C; w++)
          R = R.replace(/<self>/g, function() {
            return "(?:" + R + ")";
          });
        return R.replace(/<self>/g, "[^\\s\\S]").replace(/<str>/g, "(?:" + s + ")").replace(/<comment>/g, "(?:" + o + ")");
      }
      var c = u(/\((?:[^()'"@/]|<str>|<comment>|<self>)*\)/.source, 2), p = u(/\[(?:[^\[\]'"@/]|<str>|<comment>|<self>)*\]/.source, 2), f = u(/\{(?:[^{}'"@/]|<str>|<comment>|<self>)*\}/.source, 2), b = u(/<(?:[^<>'"@/]|<str>|<comment>|<self>)*>/.source, 2), g = /(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?/.source, T = /(?!\d)[^\s>\/=$<%]+/.source + g + /\s*\/?>/.source, y = /\B@?/.source + "(?:" + /<([a-zA-Z][\w:]*)/.source + g + /\s*>/.source + "(?:" + (/[^<]/.source + "|" + // all tags that are not the start tag
      // eslint-disable-next-line regexp/strict
      /<\/?(?!\1\b)/.source + T + "|" + // nested start tag
      u(
        // eslint-disable-next-line regexp/strict
        /<\1/.source + g + /\s*>/.source + "(?:" + (/[^<]/.source + "|" + // all tags that are not the start tag
        // eslint-disable-next-line regexp/strict
        /<\/?(?!\1\b)/.source + T + "|<self>") + ")*" + // eslint-disable-next-line regexp/strict
        /<\/\1\s*>/.source,
        2
      )) + ")*" + // eslint-disable-next-line regexp/strict
      /<\/\1\s*>/.source + "|" + /</.source + T + ")";
      r.languages.cshtml = r.languages.extend("markup", {});
      var _ = r.languages.insertBefore(
        "csharp",
        "string",
        {
          html: {
            pattern: RegExp(y),
            greedy: !0,
            inside: r.languages.cshtml
          }
        },
        {
          csharp: r.languages.extend("csharp", {})
        }
      ), A = {
        pattern: /\S[\s\S]*/,
        alias: "language-csharp",
        inside: _
      };
      r.languages.insertBefore("cshtml", "prolog", {
        "razor-comment": {
          pattern: /@\*[\s\S]*?\*@/,
          greedy: !0,
          alias: "comment"
        },
        block: {
          pattern: RegExp(
            /(^|[^@])@/.source + "(?:" + [
              // @{ ... }
              f,
              // @code{ ... }
              /(?:code|functions)\s*/.source + f,
              // @for (...) { ... }
              /(?:for|foreach|lock|switch|using|while)\s*/.source + c + /\s*/.source + f,
              // @do { ... } while (...);
              /do\s*/.source + f + /\s*while\s*/.source + c + /(?:\s*;)?/.source,
              // @try { ... } catch (...) { ... } finally { ... }
              /try\s*/.source + f + /\s*catch\s*/.source + c + /\s*/.source + f + /\s*finally\s*/.source + f,
              // @if (...) {...} else if (...) {...} else {...}
              /if\s*/.source + c + /\s*/.source + f + "(?:" + /\s*else/.source + "(?:" + /\s+if\s*/.source + c + ")?" + /\s*/.source + f + ")*"
            ].join("|") + ")"
          ),
          lookbehind: !0,
          greedy: !0,
          inside: {
            keyword: /^@\w*/,
            csharp: A
          }
        },
        directive: {
          pattern: /^([ \t]*)@(?:addTagHelper|attribute|implements|inherits|inject|layout|model|namespace|page|preservewhitespace|removeTagHelper|section|tagHelperPrefix|using)(?=\s).*/m,
          lookbehind: !0,
          greedy: !0,
          inside: {
            keyword: /^@\w+/,
            csharp: A
          }
        },
        value: {
          pattern: RegExp(
            /(^|[^@])@/.source + /(?:await\b\s*)?/.source + "(?:" + /\w+\b/.source + "|" + c + ")(?:" + /[?!]?\.\w+\b/.source + "|" + c + "|" + p + "|" + b + c + ")*"
          ),
          lookbehind: !0,
          greedy: !0,
          alias: "variable",
          inside: {
            keyword: /^@/,
            csharp: A
          }
        },
        "delegate-operator": {
          pattern: /(^|[^@])@(?=<)/,
          lookbehind: !0,
          alias: "operator"
        }
      }), r.languages.razor = r.languages.cshtml;
    }(n);
  }
  return lh;
}
var uh, iA;
function GU() {
  if (iA) return uh;
  iA = 1, uh = e, e.displayName = "csp", e.aliases = [];
  function e(t) {
    (function(n) {
      function r(o) {
        return RegExp(
          /([ \t])/.source + "(?:" + o + ")" + /(?=[\s;]|$)/.source,
          "i"
        );
      }
      n.languages.csp = {
        directive: {
          pattern: /(^|[\s;])(?:base-uri|block-all-mixed-content|(?:child|connect|default|font|frame|img|manifest|media|object|prefetch|script|style|worker)-src|disown-opener|form-action|frame-(?:ancestors|options)|input-protection(?:-(?:clip|selectors))?|navigate-to|plugin-types|policy-uri|referrer|reflected-xss|report-(?:to|uri)|require-sri-for|sandbox|(?:script|style)-src-(?:attr|elem)|upgrade-insecure-requests)(?=[\s;]|$)/i,
          lookbehind: !0,
          alias: "property"
        },
        scheme: {
          pattern: r(/[a-z][a-z0-9.+-]*:/.source),
          lookbehind: !0
        },
        none: {
          pattern: r(/'none'/.source),
          lookbehind: !0,
          alias: "keyword"
        },
        nonce: {
          pattern: r(/'nonce-[-+/\w=]+'/.source),
          lookbehind: !0,
          alias: "number"
        },
        hash: {
          pattern: r(/'sha(?:256|384|512)-[-+/\w=]+'/.source),
          lookbehind: !0,
          alias: "number"
        },
        host: {
          pattern: r(
            /[a-z][a-z0-9.+-]*:\/\/[^\s;,']*/.source + "|" + /\*[^\s;,']*/.source + "|" + /[a-z0-9-]+(?:\.[a-z0-9-]+)+(?::[\d*]+)?(?:\/[^\s;,']*)?/.source
          ),
          lookbehind: !0,
          alias: "url",
          inside: {
            important: /\*/
          }
        },
        keyword: [
          {
            pattern: r(/'unsafe-[a-z-]+'/.source),
            lookbehind: !0,
            alias: "unsafe"
          },
          {
            pattern: r(/'[a-z-]+'/.source),
            lookbehind: !0,
            alias: "safe"
          }
        ],
        punctuation: /;/
      };
    })(t);
  }
  return uh;
}
var ch, oA;
function qU() {
  if (oA) return ch;
  oA = 1, ch = e, e.displayName = "cssExtras", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, o;
      n.languages.css.selector = {
        pattern: n.languages.css.selector.pattern,
        lookbehind: !0,
        inside: o = {
          "pseudo-element": /:(?:after|before|first-letter|first-line|selection)|::[-\w]+/,
          "pseudo-class": /:[-\w]+/,
          class: /\.[-\w]+/,
          id: /#[-\w]+/,
          attribute: {
            pattern: RegExp(`\\[(?:[^[\\]"']|` + r.source + ")*\\]"),
            greedy: !0,
            inside: {
              punctuation: /^\[|\]$/,
              "case-sensitivity": {
                pattern: /(\s)[si]$/i,
                lookbehind: !0,
                alias: "keyword"
              },
              namespace: {
                pattern: /^(\s*)(?:(?!\s)[-*\w\xA0-\uFFFF])*\|(?!=)/,
                lookbehind: !0,
                inside: {
                  punctuation: /\|$/
                }
              },
              "attr-name": {
                pattern: /^(\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+/,
                lookbehind: !0
              },
              "attr-value": [
                r,
                {
                  pattern: /(=\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+(?=\s*$)/,
                  lookbehind: !0
                }
              ],
              operator: /[|~*^$]?=/
            }
          },
          "n-th": [
            {
              pattern: /(\(\s*)[+-]?\d*[\dn](?:\s*[+-]\s*\d+)?(?=\s*\))/,
              lookbehind: !0,
              inside: {
                number: /[\dn]+/,
                operator: /[+-]/
              }
            },
            {
              pattern: /(\(\s*)(?:even|odd)(?=\s*\))/i,
              lookbehind: !0
            }
          ],
          combinator: />|\+|~|\|\|/,
          // the `tag` token has been existed and removed.
          // because we can't find a perfect tokenize to match it.
          // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.
          punctuation: /[(),]/
        }
      }, n.languages.css.atrule.inside["selector-function-argument"].inside = o, n.languages.insertBefore("css", "property", {
        variable: {
          pattern: /(^|[^-\w\xA0-\uFFFF])--(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*/i,
          lookbehind: !0
        }
      });
      var s = {
        pattern: /(\b\d+)(?:%|[a-z]+(?![\w-]))/,
        lookbehind: !0
      }, u = {
        pattern: /(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,
        lookbehind: !0
      };
      n.languages.insertBefore("css", "function", {
        operator: {
          pattern: /(\s)[+\-*\/](?=\s)/,
          lookbehind: !0
        },
        // CAREFUL!
        // Previewers and Inline color use hexcode and color.
        hexcode: {
          pattern: /\B#[\da-f]{3,8}\b/i,
          alias: "color"
        },
        color: [
          {
            pattern: /(^|[^\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\w-])/i,
            lookbehind: !0
          },
          {
            pattern: /\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,
            inside: {
              unit: s,
              number: u,
              function: /[\w-]+(?=\()/,
              punctuation: /[(),]/
            }
          }
        ],
        // it's important that there is no boundary assertion after the hex digits
        entity: /\\[\da-f]{1,8}/i,
        unit: s,
        number: u
      });
    })(t);
  }
  return ch;
}
var dh, sA;
function jU() {
  if (sA) return dh;
  sA = 1, dh = e, e.displayName = "csv", e.aliases = [];
  function e(t) {
    t.languages.csv = {
      value: /[^\r\n,"]+|"(?:[^"]|"")*"(?!")/,
      punctuation: /,/
    };
  }
  return dh;
}
var ph, lA;
function VU() {
  if (lA) return ph;
  lA = 1, ph = e, e.displayName = "cypher", e.aliases = [];
  function e(t) {
    t.languages.cypher = {
      // https://neo4j.com/docs/cypher-manual/current/syntax/comments/
      comment: /\/\/.*/,
      string: {
        pattern: /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/,
        greedy: !0
      },
      "class-name": {
        pattern: /(:\s*)(?:\w+|`(?:[^`\\\r\n])*`)(?=\s*[{):])/,
        lookbehind: !0,
        greedy: !0
      },
      relationship: {
        pattern: /(-\[\s*(?:\w+\s*|`(?:[^`\\\r\n])*`\s*)?:\s*|\|\s*:\s*)(?:\w+|`(?:[^`\\\r\n])*`)/,
        lookbehind: !0,
        greedy: !0,
        alias: "property"
      },
      identifier: {
        pattern: /`(?:[^`\\\r\n])*`/,
        greedy: !0
      },
      variable: /\$\w+/,
      // https://neo4j.com/docs/cypher-manual/current/syntax/reserved/
      keyword: /\b(?:ADD|ALL|AND|AS|ASC|ASCENDING|ASSERT|BY|CALL|CASE|COMMIT|CONSTRAINT|CONTAINS|CREATE|CSV|DELETE|DESC|DESCENDING|DETACH|DISTINCT|DO|DROP|ELSE|END|ENDS|EXISTS|FOR|FOREACH|IN|INDEX|IS|JOIN|KEY|LIMIT|LOAD|MANDATORY|MATCH|MERGE|NODE|NOT|OF|ON|OPTIONAL|OR|ORDER(?=\s+BY)|PERIODIC|REMOVE|REQUIRE|RETURN|SCALAR|SCAN|SET|SKIP|START|STARTS|THEN|UNION|UNIQUE|UNWIND|USING|WHEN|WHERE|WITH|XOR|YIELD)\b/i,
      function: /\b\w+\b(?=\s*\()/,
      boolean: /\b(?:false|null|true)\b/i,
      number: /\b(?:0x[\da-fA-F]+|\d+(?:\.\d+)?(?:[eE][+-]?\d+)?)\b/,
      // https://neo4j.com/docs/cypher-manual/current/syntax/operators/
      operator: /:|<--?|--?>?|<>|=~?|[<>]=?|[+*/%^|]|\.\.\.?/,
      punctuation: /[()[\]{},;.]/
    };
  }
  return ph;
}
var fh, uA;
function WU() {
  if (uA) return fh;
  uA = 1, fh = e, e.displayName = "d", e.aliases = [];
  function e(t) {
    t.languages.d = t.languages.extend("clike", {
      comment: [
        {
          // Shebang
          pattern: /^\s*#!.+/,
          greedy: !0
        },
        {
          pattern: RegExp(
            /(^|[^\\])/.source + "(?:" + [
              // /+ comment +/
              // Allow one level of nesting
              /\/\+(?:\/\+(?:[^+]|\+(?!\/))*\+\/|(?!\/\+)[\s\S])*?\+\//.source,
              // // comment
              /\/\/.*/.source,
              // /* comment */
              /\/\*[\s\S]*?\*\//.source
            ].join("|") + ")"
          ),
          lookbehind: !0,
          greedy: !0
        }
      ],
      string: [
        {
          pattern: RegExp(
            [
              // r"", x""
              /\b[rx]"(?:\\[\s\S]|[^\\"])*"[cwd]?/.source,
              // q"[]", q"()", q"<>", q"{}"
              /\bq"(?:\[[\s\S]*?\]|\([\s\S]*?\)|<[\s\S]*?>|\{[\s\S]*?\})"/.source,
              // q"IDENT
              // ...
              // IDENT"
              /\bq"((?!\d)\w+)$[\s\S]*?^\1"/.source,
              // q"//", q"||", etc.
              // eslint-disable-next-line regexp/strict
              /\bq"(.)[\s\S]*?\2"/.source,
              // eslint-disable-next-line regexp/strict
              /(["`])(?:\\[\s\S]|(?!\3)[^\\])*\3[cwd]?/.source
            ].join("|"),
            "m"
          ),
          greedy: !0
        },
        {
          pattern: /\bq\{(?:\{[^{}]*\}|[^{}])*\}/,
          greedy: !0,
          alias: "token-string"
        }
      ],
      // In order: $, keywords and special tokens, globally defined symbols
      keyword: /\$|\b(?:__(?:(?:DATE|EOF|FILE|FUNCTION|LINE|MODULE|PRETTY_FUNCTION|TIMESTAMP|TIME|VENDOR|VERSION)__|gshared|parameters|traits|vector)|abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|dstring|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|ptrdiff_t|public|pure|real|ref|return|scope|shared|short|size_t|static|string|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|wstring)\b/,
      number: [
        // The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator
        // Hexadecimal numbers must be handled separately to avoid problems with exponent "e"
        /\b0x\.?[a-f\d_]+(?:(?!\.\.)\.[a-f\d_]*)?(?:p[+-]?[a-f\d_]+)?[ulfi]{0,4}/i,
        {
          pattern: /((?:\.\.)?)(?:\b0b\.?|\b|\.)\d[\d_]*(?:(?!\.\.)\.[\d_]*)?(?:e[+-]?\d[\d_]*)?[ulfi]{0,4}/i,
          lookbehind: !0
        }
      ],
      operator: /\|[|=]?|&[&=]?|\+[+=]?|-[-=]?|\.?\.\.|=[>=]?|!(?:i[ns]\b|<>?=?|>=?|=)?|\bi[ns]\b|(?:<[<>]?|>>?>?|\^\^|[*\/%^~])=?/
    }), t.languages.insertBefore("d", "string", {
      // Characters
      // 'a', '\\', '\n', '\xFF', '\377', '\uFFFF', '\U0010FFFF', '\quot'
      char: /'(?:\\(?:\W|\w+)|[^\\])'/
    }), t.languages.insertBefore("d", "keyword", {
      property: /\B@\w*/
    }), t.languages.insertBefore("d", "function", {
      register: {
        // Iasm registers
        pattern: /\b(?:[ABCD][LHX]|E?(?:BP|DI|SI|SP)|[BS]PL|[ECSDGF]S|CR[0234]|[DS]IL|DR[012367]|E[ABCD]X|X?MM[0-7]|R(?:1[0-5]|[89])[BWD]?|R[ABCD]X|R[BS]P|R[DS]I|TR[3-7]|XMM(?:1[0-5]|[89])|YMM(?:1[0-5]|\d))\b|\bST(?:\([0-7]\)|\b)/,
        alias: "variable"
      }
    });
  }
  return fh;
}
var hh, cA;
function YU() {
  if (cA) return hh;
  cA = 1, hh = e, e.displayName = "dart", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = [
        /\b(?:async|sync|yield)\*/,
        /\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extends|extension|external|factory|final|finally|for|get|hide|if|implements|import|in|interface|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\b/
      ], o = /(^|[^\w.])(?:[a-z]\w*\s*\.\s*)*(?:[A-Z]\w*\s*\.\s*)*/.source, s = {
        pattern: RegExp(o + /[A-Z](?:[\d_A-Z]*[a-z]\w*)?\b/.source),
        lookbehind: !0,
        inside: {
          namespace: {
            pattern: /^[a-z]\w*(?:\s*\.\s*[a-z]\w*)*(?:\s*\.)?/,
            inside: {
              punctuation: /\./
            }
          }
        }
      };
      n.languages.dart = n.languages.extend("clike", {
        "class-name": [
          s,
          {
            // variables and parameters
            // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)
            pattern: RegExp(
              o + /[A-Z]\w*(?=\s+\w+\s*[;,=()])/.source
            ),
            lookbehind: !0,
            inside: s.inside
          }
        ],
        keyword: r,
        operator: /\bis!|\b(?:as|is)\b|\+\+|--|&&|\|\||<<=?|>>=?|~(?:\/=?)?|[+\-*\/%&^|=!<>]=?|\?/
      }), n.languages.insertBefore("dart", "string", {
        "string-literal": {
          pattern: /r?(?:("""|''')[\s\S]*?\1|(["'])(?:\\.|(?!\2)[^\\\r\n])*\2(?!\2))/,
          greedy: !0,
          inside: {
            interpolation: {
              pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:\w+|\{(?:[^{}]|\{[^{}]*\})*\})/,
              lookbehind: !0,
              inside: {
                punctuation: /^\$\{?|\}$/,
                expression: {
                  pattern: /[\s\S]+/,
                  inside: n.languages.dart
                }
              }
            },
            string: /[\s\S]+/
          }
        },
        string: void 0
      }), n.languages.insertBefore("dart", "class-name", {
        metadata: {
          pattern: /@\w+/,
          alias: "function"
        }
      }), n.languages.insertBefore("dart", "class-name", {
        generics: {
          pattern: /<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<[\w\s,.&?]*>)*>)*>)*>/,
          inside: {
            "class-name": s,
            keyword: r,
            punctuation: /[<>(),.:]/,
            operator: /[?&|]/
          }
        }
      });
    })(t);
  }
  return hh;
}
var gh, dA;
function KU() {
  if (dA) return gh;
  dA = 1, gh = e, e.displayName = "dataweave", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.dataweave = {
        url: /\b[A-Za-z]+:\/\/[\w/:.?=&-]+|\burn:[\w:.?=&-]+/,
        property: {
          pattern: /(?:\b\w+#)?(?:"(?:\\.|[^\\"\r\n])*"|\b\w+)(?=\s*[:@])/,
          greedy: !0
        },
        string: {
          pattern: /(["'`])(?:\\[\s\S]|(?!\1)[^\\])*\1/,
          greedy: !0
        },
        "mime-type": /\b(?:application|audio|image|multipart|text|video)\/[\w+-]+/,
        date: {
          pattern: /\|[\w:+-]+\|/,
          greedy: !0
        },
        comment: [
          {
            pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
            lookbehind: !0,
            greedy: !0
          },
          {
            pattern: /(^|[^\\:])\/\/.*/,
            lookbehind: !0,
            greedy: !0
          }
        ],
        regex: {
          pattern: /\/(?:[^\\\/\r\n]|\\[^\r\n])+\//,
          greedy: !0
        },
        keyword: /\b(?:and|as|at|case|do|else|fun|if|input|is|match|not|ns|null|or|output|type|unless|update|using|var)\b/,
        function: /\b[A-Z_]\w*(?=\s*\()/i,
        number: /-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
        punctuation: /[{}[\];(),.:@]/,
        operator: /<<|>>|->|[<>~=]=?|!=|--?-?|\+\+?|!|\?/,
        boolean: /\b(?:false|true)\b/
      };
    })(t);
  }
  return gh;
}
var mh, pA;
function XU() {
  if (pA) return mh;
  pA = 1, mh = e, e.displayName = "dax", e.aliases = [];
  function e(t) {
    t.languages.dax = {
      comment: {
        pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/).*)/,
        lookbehind: !0
      },
      "data-field": {
        pattern: /'(?:[^']|'')*'(?!')(?:\[[ \w\xA0-\uFFFF]+\])?|\w+\[[ \w\xA0-\uFFFF]+\]/,
        alias: "symbol"
      },
      measure: {
        pattern: /\[[ \w\xA0-\uFFFF]+\]/,
        alias: "constant"
      },
      string: {
        pattern: /"(?:[^"]|"")*"(?!")/,
        greedy: !0
      },
      function: /\b(?:ABS|ACOS|ACOSH|ACOT|ACOTH|ADDCOLUMNS|ADDMISSINGITEMS|ALL|ALLCROSSFILTERED|ALLEXCEPT|ALLNOBLANKROW|ALLSELECTED|AND|APPROXIMATEDISTINCTCOUNT|ASIN|ASINH|ATAN|ATANH|AVERAGE|AVERAGEA|AVERAGEX|BETA\.DIST|BETA\.INV|BLANK|CALCULATE|CALCULATETABLE|CALENDAR|CALENDARAUTO|CEILING|CHISQ\.DIST|CHISQ\.DIST\.RT|CHISQ\.INV|CHISQ\.INV\.RT|CLOSINGBALANCEMONTH|CLOSINGBALANCEQUARTER|CLOSINGBALANCEYEAR|COALESCE|COMBIN|COMBINA|COMBINEVALUES|CONCATENATE|CONCATENATEX|CONFIDENCE\.NORM|CONFIDENCE\.T|CONTAINS|CONTAINSROW|CONTAINSSTRING|CONTAINSSTRINGEXACT|CONVERT|COS|COSH|COT|COTH|COUNT|COUNTA|COUNTAX|COUNTBLANK|COUNTROWS|COUNTX|CROSSFILTER|CROSSJOIN|CURRENCY|CURRENTGROUP|CUSTOMDATA|DATATABLE|DATE|DATEADD|DATEDIFF|DATESBETWEEN|DATESINPERIOD|DATESMTD|DATESQTD|DATESYTD|DATEVALUE|DAY|DEGREES|DETAILROWS|DISTINCT|DISTINCTCOUNT|DISTINCTCOUNTNOBLANK|DIVIDE|EARLIER|EARLIEST|EDATE|ENDOFMONTH|ENDOFQUARTER|ENDOFYEAR|EOMONTH|ERROR|EVEN|EXACT|EXCEPT|EXP|EXPON\.DIST|FACT|FALSE|FILTER|FILTERS|FIND|FIRSTDATE|FIRSTNONBLANK|FIRSTNONBLANKVALUE|FIXED|FLOOR|FORMAT|GCD|GENERATE|GENERATEALL|GENERATESERIES|GEOMEAN|GEOMEANX|GROUPBY|HASONEFILTER|HASONEVALUE|HOUR|IF|IF\.EAGER|IFERROR|IGNORE|INT|INTERSECT|ISBLANK|ISCROSSFILTERED|ISEMPTY|ISERROR|ISEVEN|ISFILTERED|ISINSCOPE|ISLOGICAL|ISNONTEXT|ISNUMBER|ISO\.CEILING|ISODD|ISONORAFTER|ISSELECTEDMEASURE|ISSUBTOTAL|ISTEXT|KEEPFILTERS|KEYWORDMATCH|LASTDATE|LASTNONBLANK|LASTNONBLANKVALUE|LCM|LEFT|LEN|LN|LOG|LOG10|LOOKUPVALUE|LOWER|MAX|MAXA|MAXX|MEDIAN|MEDIANX|MID|MIN|MINA|MINUTE|MINX|MOD|MONTH|MROUND|NATURALINNERJOIN|NATURALLEFTOUTERJOIN|NEXTDAY|NEXTMONTH|NEXTQUARTER|NEXTYEAR|NONVISUAL|NORM\.DIST|NORM\.INV|NORM\.S\.DIST|NORM\.S\.INV|NOT|NOW|ODD|OPENINGBALANCEMONTH|OPENINGBALANCEQUARTER|OPENINGBALANCEYEAR|OR|PARALLELPERIOD|PATH|PATHCONTAINS|PATHITEM|PATHITEMREVERSE|PATHLENGTH|PERCENTILE\.EXC|PERCENTILE\.INC|PERCENTILEX\.EXC|PERCENTILEX\.INC|PERMUT|PI|POISSON\.DIST|POWER|PREVIOUSDAY|PREVIOUSMONTH|PREVIOUSQUARTER|PREVIOUSYEAR|PRODUCT|PRODUCTX|QUARTER|QUOTIENT|RADIANS|RAND|RANDBETWEEN|RANK\.EQ|RANKX|RELATED|RELATEDTABLE|REMOVEFILTERS|REPLACE|REPT|RIGHT|ROLLUP|ROLLUPADDISSUBTOTAL|ROLLUPGROUP|ROLLUPISSUBTOTAL|ROUND|ROUNDDOWN|ROUNDUP|ROW|SAMEPERIODLASTYEAR|SAMPLE|SEARCH|SECOND|SELECTCOLUMNS|SELECTEDMEASURE|SELECTEDMEASUREFORMATSTRING|SELECTEDMEASURENAME|SELECTEDVALUE|SIGN|SIN|SINH|SQRT|SQRTPI|STARTOFMONTH|STARTOFQUARTER|STARTOFYEAR|STDEV\.P|STDEV\.S|STDEVX\.P|STDEVX\.S|SUBSTITUTE|SUBSTITUTEWITHINDEX|SUM|SUMMARIZE|SUMMARIZECOLUMNS|SUMX|SWITCH|T\.DIST|T\.DIST\.2T|T\.DIST\.RT|T\.INV|T\.INV\.2T|TAN|TANH|TIME|TIMEVALUE|TODAY|TOPN|TOPNPERLEVEL|TOPNSKIP|TOTALMTD|TOTALQTD|TOTALYTD|TREATAS|TRIM|TRUE|TRUNC|UNICHAR|UNICODE|UNION|UPPER|USERELATIONSHIP|USERNAME|USEROBJECTID|USERPRINCIPALNAME|UTCNOW|UTCTODAY|VALUE|VALUES|VAR\.P|VAR\.S|VARX\.P|VARX\.S|WEEKDAY|WEEKNUM|XIRR|XNPV|YEAR|YEARFRAC)(?=\s*\()/i,
      keyword: /\b(?:DEFINE|EVALUATE|MEASURE|ORDER\s+BY|RETURN|VAR|START\s+AT|ASC|DESC)\b/i,
      boolean: {
        pattern: /\b(?:FALSE|NULL|TRUE)\b/i,
        alias: "constant"
      },
      number: /\b\d+(?:\.\d*)?|\B\.\d+\b/,
      operator: /:=|[-+*\/=^]|&&?|\|\||<(?:=>?|<|>)?|>[>=]?|\b(?:IN|NOT)\b/i,
      punctuation: /[;\[\](){}`,.]/
    };
  }
  return mh;
}
var bh, fA;
function QU() {
  if (fA) return bh;
  fA = 1, bh = e, e.displayName = "dhall", e.aliases = [];
  function e(t) {
    t.languages.dhall = {
      // Multi-line comments can be nested. E.g. {- foo {- bar -} -}
      // The multi-line pattern is essentially this:
      //   \{-(?:[^-{]|-(?!\})|\{(?!-)|<SELF>)*-\}
      comment: /--.*|\{-(?:[^-{]|-(?!\})|\{(?!-)|\{-(?:[^-{]|-(?!\})|\{(?!-))*-\})*-\}/,
      string: {
        pattern: /"(?:[^"\\]|\\.)*"|''(?:[^']|'(?!')|'''|''\$\{)*''(?!'|\$)/,
        greedy: !0,
        inside: {
          interpolation: {
            pattern: /\$\{[^{}]*\}/,
            inside: {
              expression: {
                pattern: /(^\$\{)[\s\S]+(?=\}$)/,
                lookbehind: !0,
                alias: "language-dhall",
                inside: null
                // see blow
              },
              punctuation: /\$\{|\}/
            }
          }
        }
      },
      label: {
        pattern: /`[^`]*`/,
        greedy: !0
      },
      url: {
        // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L596
        pattern: /\bhttps?:\/\/[\w.:%!$&'*+;=@~-]+(?:\/[\w.:%!$&'*+;=@~-]*)*(?:\?[/?\w.:%!$&'*+;=@~-]*)?/,
        greedy: !0
      },
      env: {
        // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L661
        pattern: /\benv:(?:(?!\d)\w+|"(?:[^"\\=]|\\.)*")/,
        greedy: !0,
        inside: {
          function: /^env/,
          operator: /^:/,
          variable: /[\s\S]+/
        }
      },
      hash: {
        // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L725
        pattern: /\bsha256:[\da-fA-F]{64}\b/,
        inside: {
          function: /sha256/,
          operator: /:/,
          number: /[\da-fA-F]{64}/
        }
      },
      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L359
      keyword: /\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\b|\u2200/,
      builtin: /\b(?:None|Some)\b/,
      boolean: /\b(?:False|True)\b/,
      number: /\bNaN\b|-?\bInfinity\b|[+-]?\b(?:0x[\da-fA-F]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/,
      operator: /\/\\|\/\/\\\\|&&|\|\||===|[!=]=|\/\/|->|\+\+|::|[+*#@=:?<>|\\\u2227\u2a53\u2261\u2afd\u03bb\u2192]/,
      punctuation: /\.\.|[{}\[\](),./]/,
      // we'll just assume that every capital word left is a type name
      "class-name": /\b[A-Z]\w*\b/
    }, t.languages.dhall.string.inside.interpolation.inside.expression.inside = t.languages.dhall;
  }
  return bh;
}
var Eh, hA;
function ZU() {
  if (hA) return Eh;
  hA = 1, Eh = e, e.displayName = "diff", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.diff = {
        coord: [
          // Match all kinds of coord lines (prefixed by "+++", "---" or "***").
          /^(?:\*{3}|-{3}|\+{3}).*$/m,
          // Match "@@ ... @@" coord lines in unified diff.
          /^@@.*@@$/m,
          // Match coord lines in normal diff (starts with a number).
          /^\d.*$/m
        ]
        // deleted, inserted, unchanged, diff
      };
      var r = {
        "deleted-sign": "-",
        "deleted-arrow": "<",
        "inserted-sign": "+",
        "inserted-arrow": ">",
        unchanged: " ",
        diff: "!"
      };
      Object.keys(r).forEach(function(o) {
        var s = r[o], u = [];
        /^\w+$/.test(o) || u.push(/\w+/.exec(o)[0]), o === "diff" && u.push("bold"), n.languages.diff[o] = {
          pattern: RegExp(
            "^(?:[" + s + `].*(?:\r
?|
|(?![\\s\\S])))+`,
            "m"
          ),
          alias: u,
          inside: {
            line: {
              pattern: /(.)(?=[\s\S]).*(?:\r\n?|\n)?/,
              lookbehind: !0
            },
            prefix: {
              pattern: /[\s\S]/,
              alias: /\w+/.exec(o)[0]
            }
          }
        };
      }), Object.defineProperty(n.languages.diff, "PREFIXES", {
        value: r
      });
    })(t);
  }
  return Eh;
}
var yh, gA;
function On() {
  if (gA) return yh;
  gA = 1, yh = e, e.displayName = "markupTemplating", e.aliases = [];
  function e(t) {
    (function(n) {
      function r(o, s) {
        return "___" + o.toUpperCase() + s + "___";
      }
      Object.defineProperties(n.languages["markup-templating"] = {}, {
        buildPlaceholders: {
          /**
           * Tokenize all inline templating expressions matching `placeholderPattern`.
           *
           * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns
           * `true` will be replaced.
           *
           * @param {object} env The environment of the `before-tokenize` hook.
           * @param {string} language The language id.
           * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.
           * @param {(match: string) => boolean} [replaceFilter]
           */
          value: function(o, s, u, c) {
            if (o.language === s) {
              var p = o.tokenStack = [];
              o.code = o.code.replace(u, function(f) {
                if (typeof c == "function" && !c(f))
                  return f;
                for (var b = p.length, g; o.code.indexOf(g = r(s, b)) !== -1; )
                  ++b;
                return p[b] = f, g;
              }), o.grammar = n.languages.markup;
            }
          }
        },
        tokenizePlaceholders: {
          /**
           * Replace placeholders with proper tokens after tokenizing.
           *
           * @param {object} env The environment of the `after-tokenize` hook.
           * @param {string} language The language id.
           */
          value: function(o, s) {
            if (o.language !== s || !o.tokenStack)
              return;
            o.grammar = n.languages[s];
            var u = 0, c = Object.keys(o.tokenStack);
            function p(f) {
              for (var b = 0; b < f.length && !(u >= c.length); b++) {
                var g = f[b];
                if (typeof g == "string" || g.content && typeof g.content == "string") {
                  var T = c[u], y = o.tokenStack[T], _ = typeof g == "string" ? g : g.content, A = r(s, T), R = _.indexOf(A);
                  if (R > -1) {
                    ++u;
                    var C = _.substring(0, R), w = new n.Token(
                      s,
                      n.tokenize(y, o.grammar),
                      "language-" + s,
                      y
                    ), k = _.substring(R + A.length), O = [];
                    C && O.push.apply(O, p([C])), O.push(w), k && O.push.apply(O, p([k])), typeof g == "string" ? f.splice.apply(f, [b, 1].concat(O)) : g.content = O;
                  }
                } else g.content && p(g.content);
              }
              return f;
            }
            p(o.tokens);
          }
        }
      });
    })(t);
  }
  return yh;
}
var Th, mA;
function JU() {
  if (mA) return Th;
  mA = 1;
  var e = On();
  Th = t, t.displayName = "django", t.aliases = ["jinja2"];
  function t(n) {
    n.register(e), function(r) {
      r.languages.django = {
        comment: /^\{#[\s\S]*?#\}$/,
        tag: {
          pattern: /(^\{%[+-]?\s*)\w+/,
          lookbehind: !0,
          alias: "keyword"
        },
        delimiter: {
          pattern: /^\{[{%][+-]?|[+-]?[}%]\}$/,
          alias: "punctuation"
        },
        string: {
          pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
          greedy: !0
        },
        filter: {
          pattern: /(\|)\w+/,
          lookbehind: !0,
          alias: "function"
        },
        test: {
          pattern: /(\bis\s+(?:not\s+)?)(?!not\b)\w+/,
          lookbehind: !0,
          alias: "function"
        },
        function: /\b[a-z_]\w+(?=\s*\()/i,
        keyword: /\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\b/,
        operator: /[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
        number: /\b\d+(?:\.\d+)?\b/,
        boolean: /[Ff]alse|[Nn]one|[Tt]rue/,
        variable: /\b\w+\b/,
        punctuation: /[{}[\](),.:;]/
      };
      var o = /\{\{[\s\S]*?\}\}|\{%[\s\S]*?%\}|\{#[\s\S]*?#\}/g, s = r.languages["markup-templating"];
      r.hooks.add("before-tokenize", function(u) {
        s.buildPlaceholders(u, "django", o);
      }), r.hooks.add("after-tokenize", function(u) {
        s.tokenizePlaceholders(u, "django");
      }), r.languages.jinja2 = r.languages.django, r.hooks.add("before-tokenize", function(u) {
        s.buildPlaceholders(u, "jinja2", o);
      }), r.hooks.add("after-tokenize", function(u) {
        s.tokenizePlaceholders(u, "jinja2");
      });
    }(n);
  }
  return Th;
}
var Sh, bA;
function e9() {
  if (bA) return Sh;
  bA = 1, Sh = e, e.displayName = "dnsZoneFile", e.aliases = [];
  function e(t) {
    t.languages["dns-zone-file"] = {
      comment: /;.*/,
      string: {
        pattern: /"(?:\\.|[^"\\\r\n])*"/,
        greedy: !0
      },
      variable: [
        {
          pattern: /(^\$ORIGIN[ \t]+)\S+/m,
          lookbehind: !0
        },
        {
          pattern: /(^|\s)@(?=\s|$)/,
          lookbehind: !0
        }
      ],
      keyword: /^\$(?:INCLUDE|ORIGIN|TTL)(?=\s|$)/m,
      class: {
        // https://tools.ietf.org/html/rfc1035#page-13
        pattern: /(^|\s)(?:CH|CS|HS|IN)(?=\s|$)/,
        lookbehind: !0,
        alias: "keyword"
      },
      type: {
        // https://en.wikipedia.org/wiki/List_of_DNS_record_types
        pattern: /(^|\s)(?:A|A6|AAAA|AFSDB|APL|ATMA|CAA|CDNSKEY|CDS|CERT|CNAME|DHCID|DLV|DNAME|DNSKEY|DS|EID|GID|GPOS|HINFO|HIP|IPSECKEY|ISDN|KEY|KX|LOC|MAILA|MAILB|MB|MD|MF|MG|MINFO|MR|MX|NAPTR|NB|NBSTAT|NIMLOC|NINFO|NS|NSAP|NSAP-PTR|NSEC|NSEC3|NSEC3PARAM|NULL|NXT|OPENPGPKEY|PTR|PX|RKEY|RP|RRSIG|RT|SIG|SINK|SMIMEA|SOA|SPF|SRV|SSHFP|TA|TKEY|TLSA|TSIG|TXT|UID|UINFO|UNSPEC|URI|WKS|X25)(?=\s|$)/,
        lookbehind: !0,
        alias: "keyword"
      },
      punctuation: /[()]/
    }, t.languages["dns-zone"] = t.languages["dns-zone-file"];
  }
  return Sh;
}
var _h, EA;
function t9() {
  if (EA) return _h;
  EA = 1, _h = e, e.displayName = "docker", e.aliases = ["dockerfile"];
  function e(t) {
    (function(n) {
      var r = /\\[\r\n](?:\s|\\[\r\n]|#.*(?!.))*(?![\s#]|\\[\r\n])/.source, o = /(?:[ \t]+(?![ \t])(?:<SP_BS>)?|<SP_BS>)/.source.replace(
        /<SP_BS>/g,
        function() {
          return r;
        }
      ), s = /"(?:[^"\\\r\n]|\\(?:\r\n|[\s\S]))*"|'(?:[^'\\\r\n]|\\(?:\r\n|[\s\S]))*'/.source, u = /--[\w-]+=(?:<STR>|(?!["'])(?:[^\s\\]|\\.)+)/.source.replace(
        /<STR>/g,
        function() {
          return s;
        }
      ), c = {
        pattern: RegExp(s),
        greedy: !0
      }, p = {
        pattern: /(^[ \t]*)#.*/m,
        lookbehind: !0,
        greedy: !0
      };
      function f(b, g) {
        return b = b.replace(/<OPT>/g, function() {
          return u;
        }).replace(/<SP>/g, function() {
          return o;
        }), RegExp(b, g);
      }
      n.languages.docker = {
        instruction: {
          pattern: /(^[ \t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\s)(?:\\.|[^\r\n\\])*(?:\\$(?:\s|#.*$)*(?![\s#])(?:\\.|[^\r\n\\])*)*/im,
          lookbehind: !0,
          greedy: !0,
          inside: {
            options: {
              pattern: f(
                /(^(?:ONBUILD<SP>)?\w+<SP>)<OPT>(?:<SP><OPT>)*/.source,
                "i"
              ),
              lookbehind: !0,
              greedy: !0,
              inside: {
                property: {
                  pattern: /(^|\s)--[\w-]+/,
                  lookbehind: !0
                },
                string: [
                  c,
                  {
                    pattern: /(=)(?!["'])(?:[^\s\\]|\\.)+/,
                    lookbehind: !0
                  }
                ],
                operator: /\\$/m,
                punctuation: /=/
              }
            },
            keyword: [
              {
                // https://docs.docker.com/engine/reference/builder/#healthcheck
                pattern: f(
                  /(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\b/.source,
                  "i"
                ),
                lookbehind: !0,
                greedy: !0
              },
              {
                // https://docs.docker.com/engine/reference/builder/#from
                pattern: f(
                  /(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \t\\]+<SP>)AS/.source,
                  "i"
                ),
                lookbehind: !0,
                greedy: !0
              },
              {
                // https://docs.docker.com/engine/reference/builder/#onbuild
                pattern: f(/(^ONBUILD<SP>)\w+/.source, "i"),
                lookbehind: !0,
                greedy: !0
              },
              {
                pattern: /^\w+/,
                greedy: !0
              }
            ],
            comment: p,
            string: c,
            variable: /\$(?:\w+|\{[^{}"'\\]*\})/,
            operator: /\\$/m
          }
        },
        comment: p
      }, n.languages.dockerfile = n.languages.docker;
    })(t);
  }
  return _h;
}
var vh, yA;
function n9() {
  if (yA) return vh;
  yA = 1, vh = e, e.displayName = "dot", e.aliases = ["gv"];
  function e(t) {
    (function(n) {
      var r = "(?:" + [
        // an identifier
        /[a-zA-Z_\x80-\uFFFF][\w\x80-\uFFFF]*/.source,
        // a number
        /-?(?:\.\d+|\d+(?:\.\d*)?)/.source,
        // a double-quoted string
        /"[^"\\]*(?:\\[\s\S][^"\\]*)*"/.source,
        // HTML-like string
        /<(?:[^<>]|(?!<!--)<(?:[^<>"']|"[^"]*"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/.source
      ].join("|") + ")", o = {
        markup: {
          pattern: /(^<)[\s\S]+(?=>$)/,
          lookbehind: !0,
          alias: ["language-markup", "language-html", "language-xml"],
          inside: n.languages.markup
        }
      };
      function s(u, c) {
        return RegExp(
          u.replace(/<ID>/g, function() {
            return r;
          }),
          c
        );
      }
      n.languages.dot = {
        comment: {
          pattern: /\/\/.*|\/\*[\s\S]*?\*\/|^#.*/m,
          greedy: !0
        },
        "graph-name": {
          pattern: s(
            /(\b(?:digraph|graph|subgraph)[ \t\r\n]+)<ID>/.source,
            "i"
          ),
          lookbehind: !0,
          greedy: !0,
          alias: "class-name",
          inside: o
        },
        "attr-value": {
          pattern: s(/(=[ \t\r\n]*)<ID>/.source),
          lookbehind: !0,
          greedy: !0,
          inside: o
        },
        "attr-name": {
          pattern: s(/([\[;, \t\r\n])<ID>(?=[ \t\r\n]*=)/.source),
          lookbehind: !0,
          greedy: !0,
          inside: o
        },
        keyword: /\b(?:digraph|edge|graph|node|strict|subgraph)\b/i,
        "compass-point": {
          pattern: /(:[ \t\r\n]*)(?:[ewc_]|[ns][ew]?)(?![\w\x80-\uFFFF])/,
          lookbehind: !0,
          alias: "builtin"
        },
        node: {
          pattern: s(/(^|[^-.\w\x80-\uFFFF\\])<ID>/.source),
          lookbehind: !0,
          greedy: !0,
          inside: o
        },
        operator: /[=:]|-[->]/,
        punctuation: /[\[\]{};,]/
      }, n.languages.gv = n.languages.dot;
    })(t);
  }
  return vh;
}
var Ah, TA;
function r9() {
  if (TA) return Ah;
  TA = 1, Ah = e, e.displayName = "ebnf", e.aliases = [];
  function e(t) {
    t.languages.ebnf = {
      comment: /\(\*[\s\S]*?\*\)/,
      string: {
        pattern: /"[^"\r\n]*"|'[^'\r\n]*'/,
        greedy: !0
      },
      special: {
        pattern: /\?[^?\r\n]*\?/,
        greedy: !0,
        alias: "class-name"
      },
      definition: {
        pattern: /^([\t ]*)[a-z]\w*(?:[ \t]+[a-z]\w*)*(?=\s*=)/im,
        lookbehind: !0,
        alias: ["rule", "keyword"]
      },
      rule: /\b[a-z]\w*(?:[ \t]+[a-z]\w*)*\b/i,
      punctuation: /\([:/]|[:/]\)|[.,;()[\]{}]/,
      operator: /[-=|*/!]/
    };
  }
  return Ah;
}
var kh, SA;
function a9() {
  if (SA) return kh;
  SA = 1, kh = e, e.displayName = "editorconfig", e.aliases = [];
  function e(t) {
    t.languages.editorconfig = {
      // https://editorconfig-specification.readthedocs.io
      comment: /[;#].*/,
      section: {
        pattern: /(^[ \t]*)\[.+\]/m,
        lookbehind: !0,
        alias: "selector",
        inside: {
          regex: /\\\\[\[\]{},!?.*]/,
          // Escape special characters with '\\'
          operator: /[!?]|\.\.|\*{1,2}/,
          punctuation: /[\[\]{},]/
        }
      },
      key: {
        pattern: /(^[ \t]*)[^\s=]+(?=[ \t]*=)/m,
        lookbehind: !0,
        alias: "attr-name"
      },
      value: {
        pattern: /=.*/,
        alias: "attr-value",
        inside: {
          punctuation: /^=/
        }
      }
    };
  }
  return kh;
}
var Ch, _A;
function i9() {
  if (_A) return Ch;
  _A = 1, Ch = e, e.displayName = "eiffel", e.aliases = [];
  function e(t) {
    t.languages.eiffel = {
      comment: /--.*/,
      string: [
        // Aligned-verbatim-strings
        {
          pattern: /"([^[]*)\[[\s\S]*?\]\1"/,
          greedy: !0
        },
        // Non-aligned-verbatim-strings
        {
          pattern: /"([^{]*)\{[\s\S]*?\}\1"/,
          greedy: !0
        },
        // Single-line string
        {
          pattern: /"(?:%(?:(?!\n)\s)*\n\s*%|%\S|[^%"\r\n])*"/,
          greedy: !0
        }
      ],
      // normal char | special char | char code
      char: /'(?:%.|[^%'\r\n])+'/,
      keyword: /\b(?:across|agent|alias|all|and|as|assign|attached|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\b/i,
      boolean: /\b(?:False|True)\b/i,
      // Convention: class-names are always all upper-case characters
      "class-name": /\b[A-Z][\dA-Z_]*\b/,
      number: [
        // hexa | octal | bin
        /\b0[xcb][\da-f](?:_*[\da-f])*\b/i,
        // Decimal
        /(?:\b\d(?:_*\d)*)?\.(?:(?:\d(?:_*\d)*)?e[+-]?)?\d(?:_*\d)*\b|\b\d(?:_*\d)*\b\.?/i
      ],
      punctuation: /:=|<<|>>|\(\||\|\)|->|\.(?=\w)|[{}[\];(),:?]/,
      operator: /\\\\|\|\.\.\||\.\.|\/[~\/=]?|[><]=?|[-+*^=~]/
    };
  }
  return Ch;
}
var wh, vA;
function o9() {
  if (vA) return wh;
  vA = 1;
  var e = On();
  wh = t, t.displayName = "ejs", t.aliases = ["eta"];
  function t(n) {
    n.register(e), function(r) {
      r.languages.ejs = {
        delimiter: {
          pattern: /^<%[-_=]?|[-_]?%>$/,
          alias: "punctuation"
        },
        comment: /^#[\s\S]*/,
        "language-javascript": {
          pattern: /[\s\S]+/,
          inside: r.languages.javascript
        }
      }, r.hooks.add("before-tokenize", function(o) {
        var s = /<%(?!%)[\s\S]+?%>/g;
        r.languages["markup-templating"].buildPlaceholders(
          o,
          "ejs",
          s
        );
      }), r.hooks.add("after-tokenize", function(o) {
        r.languages["markup-templating"].tokenizePlaceholders(o, "ejs");
      }), r.languages.eta = r.languages.ejs;
    }(n);
  }
  return wh;
}
var Ih, AA;
function s9() {
  if (AA) return Ih;
  AA = 1, Ih = e, e.displayName = "elixir", e.aliases = [];
  function e(t) {
    t.languages.elixir = {
      doc: {
        pattern: /@(?:doc|moduledoc)\s+(?:("""|''')[\s\S]*?\1|("|')(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2)/,
        inside: {
          attribute: /^@\w+/,
          string: /['"][\s\S]+/
        }
      },
      comment: {
        pattern: /#.*/,
        greedy: !0
      },
      // ~r"""foo""" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r"foo", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>
      regex: {
        pattern: /~[rR](?:("""|''')(?:\\[\s\S]|(?!\1)[^\\])+\1|([\/|"'])(?:\\.|(?!\2)[^\\\r\n])+\2|\((?:\\.|[^\\)\r\n])+\)|\[(?:\\.|[^\\\]\r\n])+\]|\{(?:\\.|[^\\}\r\n])+\}|<(?:\\.|[^\\>\r\n])+>)[uismxfr]*/,
        greedy: !0
      },
      string: [
        {
          // ~s"""foo""" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s"foo", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>
          pattern: /~[cCsSwW](?:("""|''')(?:\\[\s\S]|(?!\1)[^\\])+\1|([\/|"'])(?:\\.|(?!\2)[^\\\r\n])+\2|\((?:\\.|[^\\)\r\n])+\)|\[(?:\\.|[^\\\]\r\n])+\]|\{(?:\\.|#\{[^}]+\}|#(?!\{)|[^#\\}\r\n])+\}|<(?:\\.|[^\\>\r\n])+>)[csa]?/,
          greedy: !0,
          inside: {
            // See interpolation below
          }
        },
        {
          pattern: /("""|''')[\s\S]*?\1/,
          greedy: !0,
          inside: {
            // See interpolation below
          }
        },
        {
          // Multi-line strings are allowed
          pattern: /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
          greedy: !0,
          inside: {
            // See interpolation below
          }
        }
      ],
      atom: {
        // Look-behind prevents bad highlighting of the :: operator
        pattern: /(^|[^:]):\w+/,
        lookbehind: !0,
        alias: "symbol"
      },
      module: {
        pattern: /\b[A-Z]\w*\b/,
        alias: "class-name"
      },
      // Look-ahead prevents bad highlighting of the :: operator
      "attr-name": /\b\w+\??:(?!:)/,
      argument: {
        // Look-behind prevents bad highlighting of the && operator
        pattern: /(^|[^&])&\d+/,
        lookbehind: !0,
        alias: "variable"
      },
      attribute: {
        pattern: /@\w+/,
        alias: "variable"
      },
      function: /\b[_a-zA-Z]\w*[?!]?(?:(?=\s*(?:\.\s*)?\()|(?=\/\d))/,
      number: /\b(?:0[box][a-f\d_]+|\d[\d_]*)(?:\.[\d_]+)?(?:e[+-]?[\d_]+)?\b/i,
      keyword: /\b(?:after|alias|and|case|catch|cond|def(?:callback|delegate|exception|impl|macro|module|n|np|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|quote|raise|require|rescue|try|unless|unquote|use|when)\b/,
      boolean: /\b(?:false|nil|true)\b/,
      operator: [
        /\bin\b|&&?|\|[|>]?|\\\\|::|\.\.\.?|\+\+?|-[->]?|<[-=>]|>=|!==?|\B!|=(?:==?|[>~])?|[*\/^]/,
        {
          // We don't want to match <<
          pattern: /([^<])<(?!<)/,
          lookbehind: !0
        },
        {
          // We don't want to match >>
          pattern: /([^>])>(?!>)/,
          lookbehind: !0
        }
      ],
      punctuation: /<<|>>|[.,%\[\]{}()]/
    }, t.languages.elixir.string.forEach(function(n) {
      n.inside = {
        interpolation: {
          pattern: /#\{[^}]+\}/,
          inside: {
            delimiter: {
              pattern: /^#\{|\}$/,
              alias: "punctuation"
            },
            rest: t.languages.elixir
          }
        }
      };
    });
  }
  return Ih;
}
var Rh, kA;
function l9() {
  if (kA) return Rh;
  kA = 1, Rh = e, e.displayName = "elm", e.aliases = [];
  function e(t) {
    t.languages.elm = {
      comment: /--.*|\{-[\s\S]*?-\}/,
      char: {
        pattern: /'(?:[^\\'\r\n]|\\(?:[abfnrtv\\']|\d+|x[0-9a-fA-F]+|u\{[0-9a-fA-F]+\}))'/,
        greedy: !0
      },
      string: [
        {
          // Multiline strings are wrapped in triple ". Quotes may appear unescaped.
          pattern: /"""[\s\S]*?"""/,
          greedy: !0
        },
        {
          pattern: /"(?:[^\\"\r\n]|\\.)*"/,
          greedy: !0
        }
      ],
      "import-statement": {
        // The imported or hidden names are not included in this import
        // statement. This is because we want to highlight those exactly like
        // we do for the names in the program.
        pattern: /(^[\t ]*)import\s+[A-Z]\w*(?:\.[A-Z]\w*)*(?:\s+as\s+(?:[A-Z]\w*)(?:\.[A-Z]\w*)*)?(?:\s+exposing\s+)?/m,
        lookbehind: !0,
        inside: {
          keyword: /\b(?:as|exposing|import)\b/
        }
      },
      keyword: /\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\b/,
      // These are builtin variables only. Constructors are highlighted later as a constant.
      builtin: /\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\b/,
      // decimal integers and floating point numbers | hexadecimal integers
      number: /\b(?:\d+(?:\.\d+)?(?:e[+-]?\d+)?|0x[0-9a-f]+)\b/i,
      // Most of this is needed because of the meaning of a single '.'.
      // If it stands alone freely, it is the function composition.
      // It may also be a separator between a module name and an identifier => no
      // operator. If it comes together with other special characters it is an
      // operator too.
      // Valid operator characters in 0.18: +-/*=.$<>:&|^?%#@~!
      // Ref: https://groups.google.com/forum/#!msg/elm-dev/0AHSnDdkSkQ/E0SVU70JEQAJ
      operator: /\s\.\s|[+\-/*=.$<>:&|^?%#@~!]{2,}|[+\-/*=$<>:&|^?%#@~!]/,
      // In Elm, nearly everything is a variable, do not highlight these.
      hvariable: /\b(?:[A-Z]\w*\.)*[a-z]\w*\b/,
      constant: /\b(?:[A-Z]\w*\.)*[A-Z]\w*\b/,
      punctuation: /[{}[\]|(),.:]/
    };
  }
  return Rh;
}
var xh, CA;
function u9() {
  if (CA) return xh;
  CA = 1;
  var e = fc(), t = On();
  xh = n, n.displayName = "erb", n.aliases = [];
  function n(r) {
    r.register(e), r.register(t), function(o) {
      o.languages.erb = {
        delimiter: {
          pattern: /^(\s*)<%=?|%>(?=\s*$)/,
          lookbehind: !0,
          alias: "punctuation"
        },
        ruby: {
          pattern: /\s*\S[\s\S]*/,
          alias: "language-ruby",
          inside: o.languages.ruby
        }
      }, o.hooks.add("before-tokenize", function(s) {
        var u = /<%=?(?:[^\r\n]|[\r\n](?!=begin)|[\r\n]=begin\s(?:[^\r\n]|[\r\n](?!=end))*[\r\n]=end)+?%>/g;
        o.languages["markup-templating"].buildPlaceholders(
          s,
          "erb",
          u
        );
      }), o.hooks.add("after-tokenize", function(s) {
        o.languages["markup-templating"].tokenizePlaceholders(s, "erb");
      });
    }(r);
  }
  return xh;
}
var Nh, wA;
function c9() {
  if (wA) return Nh;
  wA = 1, Nh = e, e.displayName = "erlang", e.aliases = [];
  function e(t) {
    t.languages.erlang = {
      comment: /%.+/,
      string: {
        pattern: /"(?:\\.|[^\\"\r\n])*"/,
        greedy: !0
      },
      "quoted-function": {
        pattern: /'(?:\\.|[^\\'\r\n])+'(?=\()/,
        alias: "function"
      },
      "quoted-atom": {
        pattern: /'(?:\\.|[^\\'\r\n])+'/,
        alias: "atom"
      },
      boolean: /\b(?:false|true)\b/,
      keyword: /\b(?:after|case|catch|end|fun|if|of|receive|try|when)\b/,
      number: [
        /\$\\?./,
        /\b\d+#[a-z0-9]+/i,
        /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i
      ],
      function: /\b[a-z][\w@]*(?=\()/,
      variable: {
        // Look-behind is used to prevent wrong highlighting of atoms containing "@"
        pattern: /(^|[^@])(?:\b|\?)[A-Z_][\w@]*/,
        lookbehind: !0
      },
      operator: [
        /[=\/<>:]=|=[:\/]=|\+\+?|--?|[=*\/!]|\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\b/,
        {
          // We don't want to match <<
          pattern: /(^|[^<])<(?!<)/,
          lookbehind: !0
        },
        {
          // We don't want to match >>
          pattern: /(^|[^>])>(?!>)/,
          lookbehind: !0
        }
      ],
      atom: /\b[a-z][\w@]*/,
      punctuation: /[()[\]{}:;,.#|]|<<|>>/
    };
  }
  return Nh;
}
var Oh, IA;
function Xx() {
  if (IA) return Oh;
  IA = 1, Oh = e, e.displayName = "lua", e.aliases = [];
  function e(t) {
    t.languages.lua = {
      comment: /^#!.+|--(?:\[(=*)\[[\s\S]*?\]\1\]|.*)/m,
      // \z may be used to skip the following space
      string: {
        pattern: /(["'])(?:(?!\1)[^\\\r\n]|\\z(?:\r\n|\s)|\\(?:\r\n|[^z]))*\1|\[(=*)\[[\s\S]*?\]\2\]/,
        greedy: !0
      },
      number: /\b0x[a-f\d]+(?:\.[a-f\d]*)?(?:p[+-]?\d+)?\b|\b\d+(?:\.\B|(?:\.\d*)?(?:e[+-]?\d+)?\b)|\B\.\d+(?:e[+-]?\d+)?\b/i,
      keyword: /\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\b/,
      function: /(?!\d)\w+(?=\s*(?:[({]))/,
      operator: [
        /[-+*%^&|#]|\/\/?|<[<=]?|>[>=]?|[=~]=?/,
        {
          // Match ".." but don't break "..."
          pattern: /(^|[^.])\.\.(?!\.)/,
          lookbehind: !0
        }
      ],
      punctuation: /[\[\](){},;]|\.+|:+/
    };
  }
  return Oh;
}
var Lh, RA;
function d9() {
  if (RA) return Lh;
  RA = 1;
  var e = Xx(), t = On();
  Lh = n, n.displayName = "etlua", n.aliases = [];
  function n(r) {
    r.register(e), r.register(t), function(o) {
      o.languages.etlua = {
        delimiter: {
          pattern: /^<%[-=]?|-?%>$/,
          alias: "punctuation"
        },
        "language-lua": {
          pattern: /[\s\S]+/,
          inside: o.languages.lua
        }
      }, o.hooks.add("before-tokenize", function(s) {
        var u = /<%[\s\S]+?%>/g;
        o.languages["markup-templating"].buildPlaceholders(
          s,
          "etlua",
          u
        );
      }), o.hooks.add("after-tokenize", function(s) {
        o.languages["markup-templating"].tokenizePlaceholders(s, "etlua");
      });
    }(r);
  }
  return Lh;
}
var Dh, xA;
function p9() {
  if (xA) return Dh;
  xA = 1, Dh = e, e.displayName = "excelFormula", e.aliases = [];
  function e(t) {
    t.languages["excel-formula"] = {
      comment: {
        pattern: /(\bN\(\s*)"(?:[^"]|"")*"(?=\s*\))/i,
        lookbehind: !0,
        greedy: !0
      },
      string: {
        pattern: /"(?:[^"]|"")*"(?!")/,
        greedy: !0
      },
      reference: {
        // https://www.ablebits.com/office-addins-blog/2015/12/08/excel-reference-another-sheet-workbook/
        // Sales!B2
        // 'Winter sales'!B2
        // [Sales.xlsx]Jan!B2:B5
        // D:\Reports\[Sales.xlsx]Jan!B2:B5
        // '[Sales.xlsx]Jan sales'!B2:B5
        // 'D:\Reports\[Sales.xlsx]Jan sales'!B2:B5
        pattern: /(?:'[^']*'|(?:[^\s()[\]{}<>*?"';,$&]*\[[^^\s()[\]{}<>*?"']+\])?\w+)!/,
        greedy: !0,
        alias: "string",
        inside: {
          operator: /!$/,
          punctuation: /'/,
          sheet: {
            pattern: /[^[\]]+$/,
            alias: "function"
          },
          file: {
            pattern: /\[[^[\]]+\]$/,
            inside: {
              punctuation: /[[\]]/
            }
          },
          path: /[\s\S]+/
        }
      },
      "function-name": {
        pattern: /\b[A-Z]\w*(?=\()/i,
        alias: "keyword"
      },
      range: {
        pattern: /\$?\b(?:[A-Z]+\$?\d+:\$?[A-Z]+\$?\d+|[A-Z]+:\$?[A-Z]+|\d+:\$?\d+)\b/i,
        alias: "property",
        inside: {
          operator: /:/,
          cell: /\$?[A-Z]+\$?\d+/i,
          column: /\$?[A-Z]+/i,
          row: /\$?\d+/
        }
      },
      cell: {
        // Excel is case insensitive, so the string "foo1" could be either a variable or a cell.
        // To combat this, we match cells case insensitive, if the contain at least one "$", and case sensitive otherwise.
        pattern: /\b[A-Z]+\d+\b|\$[A-Za-z]+\$?\d+\b|\b[A-Za-z]+\$\d+\b/,
        alias: "property"
      },
      number: /(?:\b\d+(?:\.\d+)?|\B\.\d+)(?:e[+-]?\d+)?\b/i,
      boolean: /\b(?:FALSE|TRUE)\b/i,
      operator: /[-+*/^%=&,]|<[=>]?|>=?/,
      punctuation: /[[\]();{}|]/
    }, t.languages.xlsx = t.languages.xls = t.languages["excel-formula"];
  }
  return Dh;
}
var Mh, NA;
function f9() {
  if (NA) return Mh;
  NA = 1, Mh = e, e.displayName = "factor", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = {
        function: /\b(?:BUGS?|FIX(?:MES?)?|NOTES?|TODOS?|XX+|HACKS?|WARN(?:ING)?|\?{2,}|!{2,})\b/
      }, o = {
        number: /\\[^\s']|%\w/
      }, s = {
        comment: [
          {
            // ! single-line exclamation point comments with whitespace after/around the !
            pattern: /(^|\s)(?:! .*|!$)/,
            lookbehind: !0,
            inside: r
          },
          /* from basis/multiline: */
          {
            // /* comment */, /* comment*/
            pattern: /(^|\s)\/\*\s[\s\S]*?\*\/(?=\s|$)/,
            lookbehind: !0,
            greedy: !0,
            inside: r
          },
          {
            // ![[ comment ]] , ![===[ comment]===]
            pattern: /(^|\s)!\[(={0,6})\[\s[\s\S]*?\]\2\](?=\s|$)/,
            lookbehind: !0,
            greedy: !0,
            inside: r
          }
        ],
        number: [
          {
            // basic base 10 integers 9, -9
            pattern: /(^|\s)[+-]?\d+(?=\s|$)/,
            lookbehind: !0
          },
          {
            // base prefix integers 0b010 0o70 0xad 0d10 0XAD -0xa9
            pattern: /(^|\s)[+-]?0(?:b[01]+|o[0-7]+|d\d+|x[\dA-F]+)(?=\s|$)/i,
            lookbehind: !0
          },
          {
            // fractional ratios 1/5 -1/5 and the literal float approximations 1/5. -1/5.
            pattern: /(^|\s)[+-]?\d+\/\d+\.?(?=\s|$)/,
            lookbehind: !0
          },
          {
            // positive mixed numbers 23+1/5 +23+1/5
            pattern: /(^|\s)\+?\d+\+\d+\/\d+(?=\s|$)/,
            lookbehind: !0
          },
          {
            // negative mixed numbers -23-1/5
            pattern: /(^|\s)-\d+-\d+\/\d+(?=\s|$)/,
            lookbehind: !0
          },
          {
            // basic decimal floats -0.01 0. .0 .1 -.1 -1. -12.13 +12.13
            // and scientific notation with base 10 exponents 3e4 3e-4 .3e-4
            pattern: /(^|\s)[+-]?(?:\d*\.\d+|\d+\.\d*|\d+)(?:e[+-]?\d+)?(?=\s|$)/i,
            lookbehind: !0
          },
          {
            // NAN literal syntax NAN: 80000deadbeef, NAN: a
            pattern: /(^|\s)NAN:\s+[\da-fA-F]+(?=\s|$)/,
            lookbehind: !0
          },
          {
            /*
            base prefix floats 0x1.0p3 (8.0) 0b1.010p2 (5.0) 0x1.p1 0b1.11111111p11111...
            "The normalized hex form ±0x1.MMMMMMMMMMMMM[pP]±EEEE allows any floating-point number to be specified precisely.
            The values of MMMMMMMMMMMMM and EEEE map directly to the mantissa and exponent fields of the binary IEEE 754 representation."
            <https://docs.factorcode.org/content/article-syntax-floats.html>
            */
            pattern: /(^|\s)[+-]?0(?:b1\.[01]*|o1\.[0-7]*|d1\.\d*|x1\.[\dA-F]*)p\d+(?=\s|$)/i,
            lookbehind: !0
          }
        ],
        // R/ regexp?\/\\/
        regexp: {
          pattern: /(^|\s)R\/\s(?:\\\S|[^\\/])*\/(?:[idmsr]*|[idmsr]+-[idmsr]+)(?=\s|$)/,
          lookbehind: !0,
          alias: "number",
          inside: {
            variable: /\\\S/,
            keyword: /[+?*\[\]^$(){}.|]/,
            operator: {
              pattern: /(\/)[idmsr]+(?:-[idmsr]+)?/,
              lookbehind: !0
            }
          }
        },
        boolean: {
          pattern: /(^|\s)[tf](?=\s|$)/,
          lookbehind: !0
        },
        // SBUF" asd", URL" ://...", P" /etc/"
        "custom-string": {
          pattern: /(^|\s)[A-Z0-9\-]+"\s(?:\\\S|[^"\\])*"/,
          lookbehind: !0,
          greedy: !0,
          alias: "string",
          inside: {
            number: /\\\S|%\w|\//
          }
        },
        "multiline-string": [
          {
            // STRING: name \n content \n ; -> CONSTANT: name "content" (symbol)
            pattern: /(^|\s)STRING:\s+\S+(?:\n|\r\n).*(?:\n|\r\n)\s*;(?=\s|$)/,
            lookbehind: !0,
            greedy: !0,
            alias: "string",
            inside: {
              number: o.number,
              // trailing semicolon on its own line
              "semicolon-or-setlocal": {
                pattern: /([\r\n][ \t]*);(?=\s|$)/,
                lookbehind: !0,
                alias: "function"
              }
            }
          },
          {
            // HEREDOC: marker \n content \n marker ; -> "content" (immediate)
            pattern: /(^|\s)HEREDOC:\s+\S+(?:\n|\r\n).*(?:\n|\r\n)\s*\S+(?=\s|$)/,
            lookbehind: !0,
            greedy: !0,
            alias: "string",
            inside: o
          },
          {
            // [[ string ]], [==[ string]==]
            pattern: /(^|\s)\[(={0,6})\[\s[\s\S]*?\]\2\](?=\s|$)/,
            lookbehind: !0,
            greedy: !0,
            alias: "string",
            inside: o
          }
        ],
        "special-using": {
          pattern: /(^|\s)USING:(?:\s\S+)*(?=\s+;(?:\s|$))/,
          lookbehind: !0,
          alias: "function",
          inside: {
            // this is essentially a regex for vocab names, which i don't want to specify
            // but the USING: gets picked up as a vocab name
            string: {
              pattern: /(\s)[^:\s]+/,
              lookbehind: !0
            }
          }
        },
        /* this description of stack effect literal syntax is not complete and not as specific as theoretically possible
        trying to do better is more work and regex-computation-time than it's worth though.
        - we'd like to have the "delimiter" parts of the stack effect [ (, --, and ) ] be a different (less-important or comment-like) colour to the stack effect contents
        - we'd like if nested stack effects were treated as such rather than just appearing flat (with `inside`)
        - we'd like if the following variable name conventions were recognised specifically:
        special row variables = ..a b..
        type and stack effect annotations end with a colon = ( quot: ( a: ( -- ) -- b ) -- x ), ( x: number -- )
        word throws unconditional error = *
        any other word-like variable name = a ? q' etc
        https://docs.factorcode.org/content/article-effects.html
        these are pretty complicated to highlight properly without a real parser, and therefore out of scope
        the old pattern, which may be later useful, was: (^|\s)(?:call|execute|eval)?\((?:\s+[^"\r\n\t ]\S*)*?\s+--(?:\s+[^"\n\t ]\S*)*?\s+\)(?=\s|$)
        */
        // current solution is not great
        "stack-effect-delimiter": [
          {
            // opening parenthesis
            pattern: /(^|\s)(?:call|eval|execute)?\((?=\s)/,
            lookbehind: !0,
            alias: "operator"
          },
          {
            // middle --
            pattern: /(\s)--(?=\s)/,
            lookbehind: !0,
            alias: "operator"
          },
          {
            // closing parenthesis
            pattern: /(\s)\)(?=\s|$)/,
            lookbehind: !0,
            alias: "operator"
          }
        ],
        combinators: {
          pattern: null,
          lookbehind: !0,
          alias: "keyword"
        },
        "kernel-builtin": {
          pattern: null,
          lookbehind: !0,
          alias: "variable"
        },
        "sequences-builtin": {
          pattern: null,
          lookbehind: !0,
          alias: "variable"
        },
        "math-builtin": {
          pattern: null,
          lookbehind: !0,
          alias: "variable"
        },
        "constructor-word": {
          // <array> but not <=>
          pattern: /(^|\s)<(?!=+>|-+>)\S+>(?=\s|$)/,
          lookbehind: !0,
          alias: "keyword"
        },
        "other-builtin-syntax": {
          pattern: null,
          lookbehind: !0,
          alias: "operator"
        },
        /*
        full list of supported word naming conventions: (the convention appears outside of the [brackets])
        set-[x]
        change-[x]
        with-[x]
        new-[x]
        >[string]
        [base]>
        [string]>[number]
        +[symbol]+
        [boolean-word]?
        ?[of]
        [slot-reader]>>
        >>[slot-setter]
        [slot-writer]<<
        ([implementation-detail])
        [mutater]!
        [variant]*
        [prettyprint].
        $[help-markup]
        <constructors>, SYNTAX:, etc are supported by their own patterns.
        `with` and `new` from `kernel` are their own builtins.
        see <https://docs.factorcode.org/content/article-conventions.html>
        */
        "conventionally-named-word": {
          pattern: /(^|\s)(?!")(?:(?:change|new|set|with)-\S+|\$\S+|>[^>\s]+|[^:>\s]+>|[^>\s]+>[^>\s]+|\+[^+\s]+\+|[^?\s]+\?|\?[^?\s]+|[^>\s]+>>|>>[^>\s]+|[^<\s]+<<|\([^()\s]+\)|[^!\s]+!|[^*\s]\S*\*|[^.\s]\S*\.)(?=\s|$)/,
          lookbehind: !0,
          alias: "keyword"
        },
        "colon-syntax": {
          pattern: /(^|\s)(?:[A-Z0-9\-]+#?)?:{1,2}\s+(?:;\S+|(?!;)\S+)(?=\s|$)/,
          lookbehind: !0,
          greedy: !0,
          alias: "function"
        },
        "semicolon-or-setlocal": {
          pattern: /(\s)(?:;|:>)(?=\s|$)/,
          lookbehind: !0,
          alias: "function"
        },
        // do not highlight leading } or trailing X{ at the begin/end of the file as it's invalid syntax
        "curly-brace-literal-delimiter": [
          {
            // opening
            pattern: /(^|\s)[a-z]*\{(?=\s)/i,
            lookbehind: !0,
            alias: "operator"
          },
          {
            // closing
            pattern: /(\s)\}(?=\s|$)/,
            lookbehind: !0,
            alias: "operator"
          }
        ],
        // do not highlight leading ] or trailing [ at the begin/end of the file as it's invalid syntax
        "quotation-delimiter": [
          {
            // opening
            pattern: /(^|\s)\[(?=\s)/,
            lookbehind: !0,
            alias: "operator"
          },
          {
            // closing
            pattern: /(\s)\](?=\s|$)/,
            lookbehind: !0,
            alias: "operator"
          }
        ],
        "normal-word": {
          pattern: /(^|\s)[^"\s]\S*(?=\s|$)/,
          lookbehind: !0
        },
        /*
        basic first-class string "a"
        with escaped double-quote "a\""
        escaped backslash "\\"
        and general escapes since Factor has so many "\N"
        syntax that works in the reference implementation that isn't fully
        supported because it's an implementation detail:
        "string 1""string 2" -> 2 strings (works anyway)
        "string"5 -> string, 5
        "string"[ ] -> string, quotation
        { "a"} -> array<string>
        the rest of those examples all properly recognise the string, but not
        the other object (number, quotation, etc)
        this is fine for a regex-only implementation.
        */
        string: {
          pattern: /"(?:\\\S|[^"\\])*"/,
          greedy: !0,
          inside: o
        }
      }, u = function(b) {
        return (b + "").replace(/([.?*+\^$\[\]\\(){}|\-])/g, "\\$1");
      }, c = function(b) {
        return new RegExp("(^|\\s)(?:" + b.map(u).join("|") + ")(?=\\s|$)");
      }, p = {
        "kernel-builtin": [
          "or",
          "2nipd",
          "4drop",
          "tuck",
          "wrapper",
          "nip",
          "wrapper?",
          "callstack>array",
          "die",
          "dupd",
          "callstack",
          "callstack?",
          "3dup",
          "hashcode",
          "pick",
          "4nip",
          "build",
          ">boolean",
          "nipd",
          "clone",
          "5nip",
          "eq?",
          "?",
          "=",
          "swapd",
          "2over",
          "clear",
          "2dup",
          "get-retainstack",
          "not",
          "tuple?",
          "dup",
          "3nipd",
          "call",
          "-rotd",
          "object",
          "drop",
          "assert=",
          "assert?",
          "-rot",
          "execute",
          "boa",
          "get-callstack",
          "curried?",
          "3drop",
          "pickd",
          "overd",
          "over",
          "roll",
          "3nip",
          "swap",
          "and",
          "2nip",
          "rotd",
          "throw",
          "(clone)",
          "hashcode*",
          "spin",
          "reach",
          "4dup",
          "equal?",
          "get-datastack",
          "assert",
          "2drop",
          "<wrapper>",
          "boolean?",
          "identity-hashcode",
          "identity-tuple?",
          "null",
          "composed?",
          "new",
          "5drop",
          "rot",
          "-roll",
          "xor",
          "identity-tuple",
          "boolean"
        ],
        "other-builtin-syntax": [
          // syntax
          "=======",
          "recursive",
          "flushable",
          ">>",
          "<<<<<<",
          "M\\",
          "B",
          "PRIVATE>",
          "\\",
          "======",
          "final",
          "inline",
          "delimiter",
          "deprecated",
          "<PRIVATE",
          ">>>>>>",
          "<<<<<<<",
          "parse-complex",
          "malformed-complex",
          "read-only",
          ">>>>>>>",
          "call-next-method",
          "<<",
          "foldable",
          // literals
          "$",
          "$[",
          "${"
        ],
        "sequences-builtin": [
          "member-eq?",
          "mismatch",
          "append",
          "assert-sequence=",
          "longer",
          "repetition",
          "clone-like",
          "3sequence",
          "assert-sequence?",
          "last-index-from",
          "reversed",
          "index-from",
          "cut*",
          "pad-tail",
          "join-as",
          "remove-eq!",
          "concat-as",
          "but-last",
          "snip",
          "nths",
          "nth",
          "sequence",
          "longest",
          "slice?",
          "<slice>",
          "remove-nth",
          "tail-slice",
          "empty?",
          "tail*",
          "member?",
          "virtual-sequence?",
          "set-length",
          "drop-prefix",
          "iota",
          "unclip",
          "bounds-error?",
          "unclip-last-slice",
          "non-negative-integer-expected",
          "non-negative-integer-expected?",
          "midpoint@",
          "longer?",
          "?set-nth",
          "?first",
          "rest-slice",
          "prepend-as",
          "prepend",
          "fourth",
          "sift",
          "subseq-start",
          "new-sequence",
          "?last",
          "like",
          "first4",
          "1sequence",
          "reverse",
          "slice",
          "virtual@",
          "repetition?",
          "set-last",
          "index",
          "4sequence",
          "max-length",
          "set-second",
          "immutable-sequence",
          "first2",
          "first3",
          "supremum",
          "unclip-slice",
          "suffix!",
          "insert-nth",
          "tail",
          "3append",
          "short",
          "suffix",
          "concat",
          "flip",
          "immutable?",
          "reverse!",
          "2sequence",
          "sum",
          "delete-all",
          "indices",
          "snip-slice",
          "<iota>",
          "check-slice",
          "sequence?",
          "head",
          "append-as",
          "halves",
          "sequence=",
          "collapse-slice",
          "?second",
          "slice-error?",
          "product",
          "bounds-check?",
          "bounds-check",
          "immutable",
          "virtual-exemplar",
          "harvest",
          "remove",
          "pad-head",
          "last",
          "set-fourth",
          "cartesian-product",
          "remove-eq",
          "shorten",
          "shorter",
          "reversed?",
          "shorter?",
          "shortest",
          "head-slice",
          "pop*",
          "tail-slice*",
          "but-last-slice",
          "iota?",
          "append!",
          "cut-slice",
          "new-resizable",
          "head-slice*",
          "sequence-hashcode",
          "pop",
          "set-nth",
          "?nth",
          "second",
          "join",
          "immutable-sequence?",
          "<reversed>",
          "3append-as",
          "virtual-sequence",
          "subseq?",
          "remove-nth!",
          "length",
          "last-index",
          "lengthen",
          "assert-sequence",
          "copy",
          "move",
          "third",
          "first",
          "tail?",
          "set-first",
          "prefix",
          "bounds-error",
          "<repetition>",
          "exchange",
          "surround",
          "cut",
          "min-length",
          "set-third",
          "push-all",
          "head?",
          "subseq-start-from",
          "delete-slice",
          "rest",
          "sum-lengths",
          "head*",
          "infimum",
          "remove!",
          "glue",
          "slice-error",
          "subseq",
          "push",
          "replace-slice",
          "subseq-as",
          "unclip-last"
        ],
        "math-builtin": [
          "number=",
          "next-power-of-2",
          "?1+",
          "fp-special?",
          "imaginary-part",
          "float>bits",
          "number?",
          "fp-infinity?",
          "bignum?",
          "fp-snan?",
          "denominator",
          "gcd",
          "*",
          "+",
          "fp-bitwise=",
          "-",
          "u>=",
          "/",
          ">=",
          "bitand",
          "power-of-2?",
          "log2-expects-positive",
          "neg?",
          "<",
          "log2",
          ">",
          "integer?",
          "number",
          "bits>double",
          "2/",
          "zero?",
          "bits>float",
          "float?",
          "shift",
          "ratio?",
          "rect>",
          "even?",
          "ratio",
          "fp-sign",
          "bitnot",
          ">fixnum",
          "complex?",
          "/i",
          "integer>fixnum",
          "/f",
          "sgn",
          ">bignum",
          "next-float",
          "u<",
          "u>",
          "mod",
          "recip",
          "rational",
          ">float",
          "2^",
          "integer",
          "fixnum?",
          "neg",
          "fixnum",
          "sq",
          "bignum",
          ">rect",
          "bit?",
          "fp-qnan?",
          "simple-gcd",
          "complex",
          "<fp-nan>",
          "real",
          ">fraction",
          "double>bits",
          "bitor",
          "rem",
          "fp-nan-payload",
          "real-part",
          "log2-expects-positive?",
          "prev-float",
          "align",
          "unordered?",
          "float",
          "fp-nan?",
          "abs",
          "bitxor",
          "integer>fixnum-strict",
          "u<=",
          "odd?",
          "<=",
          "/mod",
          ">integer",
          "real?",
          "rational?",
          "numerator"
        ]
        // that's all for now
      };
      Object.keys(p).forEach(function(b) {
        s[b].pattern = c(p[b]);
      });
      var f = [
        // kernel
        "2bi",
        "while",
        "2tri",
        "bi*",
        "4dip",
        "both?",
        "same?",
        "tri@",
        "curry",
        "prepose",
        "3bi",
        "?if",
        "tri*",
        "2keep",
        "3keep",
        "curried",
        "2keepd",
        "when",
        "2bi*",
        "2tri*",
        "4keep",
        "bi@",
        "keepdd",
        "do",
        "unless*",
        "tri-curry",
        "if*",
        "loop",
        "bi-curry*",
        "when*",
        "2bi@",
        "2tri@",
        "with",
        "2with",
        "either?",
        "bi",
        "until",
        "3dip",
        "3curry",
        "tri-curry*",
        "tri-curry@",
        "bi-curry",
        "keepd",
        "compose",
        "2dip",
        "if",
        "3tri",
        "unless",
        "tuple",
        "keep",
        "2curry",
        "tri",
        "most",
        "while*",
        "dip",
        "composed",
        "bi-curry@",
        // sequences
        "find-last-from",
        "trim-head-slice",
        "map-as",
        "each-from",
        "none?",
        "trim-tail",
        "partition",
        "if-empty",
        "accumulate*",
        "reject!",
        "find-from",
        "accumulate-as",
        "collector-for-as",
        "reject",
        "map",
        "map-sum",
        "accumulate!",
        "2each-from",
        "follow",
        "supremum-by",
        "map!",
        "unless-empty",
        "collector",
        "padding",
        "reduce-index",
        "replicate-as",
        "infimum-by",
        "trim-tail-slice",
        "count",
        "find-index",
        "filter",
        "accumulate*!",
        "reject-as",
        "map-integers",
        "map-find",
        "reduce",
        "selector",
        "interleave",
        "2map",
        "filter-as",
        "binary-reduce",
        "map-index-as",
        "find",
        "produce",
        "filter!",
        "replicate",
        "cartesian-map",
        "cartesian-each",
        "find-index-from",
        "map-find-last",
        "3map-as",
        "3map",
        "find-last",
        "selector-as",
        "2map-as",
        "2map-reduce",
        "accumulate",
        "each",
        "each-index",
        "accumulate*-as",
        "when-empty",
        "all?",
        "collector-as",
        "push-either",
        "new-like",
        "collector-for",
        "2selector",
        "push-if",
        "2all?",
        "map-reduce",
        "3each",
        "any?",
        "trim-slice",
        "2reduce",
        "change-nth",
        "produce-as",
        "2each",
        "trim",
        "trim-head",
        "cartesian-find",
        "map-index",
        // math
        "if-zero",
        "each-integer",
        "unless-zero",
        "(find-integer)",
        "when-zero",
        "find-last-integer",
        "(all-integers?)",
        "times",
        "(each-integer)",
        "find-integer",
        "all-integers?",
        // math.combinators
        "unless-negative",
        "if-positive",
        "when-positive",
        "when-negative",
        "unless-positive",
        "if-negative",
        // combinators
        "case",
        "2cleave",
        "cond>quot",
        "case>quot",
        "3cleave",
        "wrong-values",
        "to-fixed-point",
        "alist>quot",
        "cond",
        "cleave",
        "call-effect",
        "recursive-hashcode",
        "spread",
        "deep-spread>quot",
        // combinators.short-circuit
        "2||",
        "0||",
        "n||",
        "0&&",
        "2&&",
        "3||",
        "1||",
        "1&&",
        "n&&",
        "3&&",
        // combinators.smart
        "smart-unless*",
        "keep-inputs",
        "reduce-outputs",
        "smart-when*",
        "cleave>array",
        "smart-with",
        "smart-apply",
        "smart-if",
        "inputs/outputs",
        "output>sequence-n",
        "map-outputs",
        "map-reduce-outputs",
        "dropping",
        "output>array",
        "smart-map-reduce",
        "smart-2map-reduce",
        "output>array-n",
        "nullary",
        "input<sequence",
        "append-outputs",
        "drop-inputs",
        "inputs",
        "smart-2reduce",
        "drop-outputs",
        "smart-reduce",
        "preserving",
        "smart-when",
        "outputs",
        "append-outputs-as",
        "smart-unless",
        "smart-if*",
        "sum-outputs",
        "input<sequence-unsafe",
        "output>sequence"
        // tafn
      ];
      s.combinators.pattern = c(f), n.languages.factor = s;
    })(t);
  }
  return Mh;
}
var Ph, OA;
function h9() {
  if (OA) return Ph;
  OA = 1, Ph = e, e.displayName = "$false", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.false = {
        comment: {
          pattern: /\{[^}]*\}/
        },
        string: {
          pattern: /"[^"]*"/,
          greedy: !0
        },
        "character-code": {
          pattern: /'(?:[^\r]|\r\n?)/,
          alias: "number"
        },
        "assembler-code": {
          pattern: /\d+`/,
          alias: "important"
        },
        number: /\d+/,
        operator: /[-!#$%&'*+,./:;=>?@\\^_`|~ßø]/,
        punctuation: /\[|\]/,
        variable: /[a-z]/,
        "non-standard": {
          pattern: /[()<BDO®]/,
          alias: "bold"
        }
      };
    })(t);
  }
  return Ph;
}
var Fh, LA;
function g9() {
  if (LA) return Fh;
  LA = 1, Fh = e, e.displayName = "firestoreSecurityRules", e.aliases = [];
  function e(t) {
    t.languages["firestore-security-rules"] = t.languages.extend(
      "clike",
      {
        comment: /\/\/.*/,
        keyword: /\b(?:allow|function|if|match|null|return|rules_version|service)\b/,
        operator: /&&|\|\||[<>!=]=?|[-+*/%]|\b(?:in|is)\b/
      }
    ), delete t.languages["firestore-security-rules"]["class-name"], t.languages.insertBefore("firestore-security-rules", "keyword", {
      path: {
        pattern: /(^|[\s(),])(?:\/(?:[\w\xA0-\uFFFF]+|\{[\w\xA0-\uFFFF]+(?:=\*\*)?\}|\$\([\w\xA0-\uFFFF.]+\)))+/,
        lookbehind: !0,
        greedy: !0,
        inside: {
          variable: {
            pattern: /\{[\w\xA0-\uFFFF]+(?:=\*\*)?\}|\$\([\w\xA0-\uFFFF.]+\)/,
            inside: {
              operator: /=/,
              keyword: /\*\*/,
              punctuation: /[.$(){}]/
            }
          },
          punctuation: /\//
        }
      },
      method: {
        // to make the pattern shorter, the actual method names are omitted
        pattern: /(\ballow\s+)[a-z]+(?:\s*,\s*[a-z]+)*(?=\s*[:;])/,
        lookbehind: !0,
        alias: "builtin",
        inside: {
          punctuation: /,/
        }
      }
    });
  }
  return Fh;
}
var Bh, DA;
function m9() {
  if (DA) return Bh;
  DA = 1, Bh = e, e.displayName = "flow", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.flow = n.languages.extend("javascript", {}), n.languages.insertBefore("flow", "keyword", {
        type: [
          {
            pattern: /\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|any|mixed|null|void)\b/,
            alias: "tag"
          }
        ]
      }), n.languages.flow["function-variable"].pattern = /(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=\s*(?:function\b|(?:\([^()]*\)(?:\s*:\s*\w+)?|(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/i, delete n.languages.flow.parameter, n.languages.insertBefore("flow", "operator", {
        "flow-punctuation": {
          pattern: /\{\||\|\}/,
          alias: "punctuation"
        }
      }), Array.isArray(n.languages.flow.keyword) || (n.languages.flow.keyword = [n.languages.flow.keyword]), n.languages.flow.keyword.unshift(
        {
          pattern: /(^|[^$]\b)(?:Class|declare|opaque|type)\b(?!\$)/,
          lookbehind: !0
        },
        {
          pattern: /(^|[^$]\B)\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\b(?!\$)/,
          lookbehind: !0
        }
      );
    })(t);
  }
  return Bh;
}
var Uh, MA;
function b9() {
  if (MA) return Uh;
  MA = 1, Uh = e, e.displayName = "fortran", e.aliases = [];
  function e(t) {
    t.languages.fortran = {
      "quoted-number": {
        pattern: /[BOZ](['"])[A-F0-9]+\1/i,
        alias: "number"
      },
      string: {
        pattern: /(?:\b\w+_)?(['"])(?:\1\1|&(?:\r\n?|\n)(?:[ \t]*!.*(?:\r\n?|\n)|(?![ \t]*!))|(?!\1).)*(?:\1|&)/,
        inside: {
          comment: {
            pattern: /(&(?:\r\n?|\n)\s*)!.*/,
            lookbehind: !0
          }
        }
      },
      comment: {
        pattern: /!.*/,
        greedy: !0
      },
      boolean: /\.(?:FALSE|TRUE)\.(?:_\w+)?/i,
      number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[ED][+-]?\d+)?(?:_\w+)?/i,
      keyword: [
        // Types
        /\b(?:CHARACTER|COMPLEX|DOUBLE ?PRECISION|INTEGER|LOGICAL|REAL)\b/i,
        // END statements
        /\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\b/i,
        // Statements
        /\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\b/i,
        // Others
        /\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEIF|ELSEWHERE|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\b/i
      ],
      operator: [
        /\*\*|\/\/|=>|[=\/]=|[<>]=?|::|[+\-*=%]|\.[A-Z]+\./i,
        {
          // Use lookbehind to prevent confusion with (/ /)
          pattern: /(^|(?!\().)\/(?!\))/,
          lookbehind: !0
        }
      ],
      punctuation: /\(\/|\/\)|[(),;:&]/
    };
  }
  return Uh;
}
var Hh, PA;
function E9() {
  if (PA) return Hh;
  PA = 1, Hh = e, e.displayName = "fsharp", e.aliases = [];
  function e(t) {
    t.languages.fsharp = t.languages.extend("clike", {
      comment: [
        {
          pattern: /(^|[^\\])\(\*(?!\))[\s\S]*?\*\)/,
          lookbehind: !0,
          greedy: !0
        },
        {
          pattern: /(^|[^\\:])\/\/.*/,
          lookbehind: !0,
          greedy: !0
        }
      ],
      string: {
        pattern: /(?:"""[\s\S]*?"""|@"(?:""|[^"])*"|"(?:\\[\s\S]|[^\\"])*")B?/,
        greedy: !0
      },
      "class-name": {
        pattern: /(\b(?:exception|inherit|interface|new|of|type)\s+|\w\s*:\s*|\s:\??>\s*)[.\w]+\b(?:\s*(?:->|\*)\s*[.\w]+\b)*(?!\s*[:.])/,
        lookbehind: !0,
        inside: {
          operator: /->|\*/,
          punctuation: /\./
        }
      },
      keyword: /\b(?:let|return|use|yield)(?:!\B|\b)|\b(?:abstract|and|as|asr|assert|atomic|base|begin|break|checked|class|component|const|constraint|constructor|continue|default|delegate|do|done|downcast|downto|eager|elif|else|end|event|exception|extern|external|false|finally|fixed|for|fun|function|functor|global|if|in|include|inherit|inline|interface|internal|land|lazy|lor|lsl|lsr|lxor|match|member|method|mixin|mod|module|mutable|namespace|new|not|null|object|of|open|or|override|parallel|private|process|protected|public|pure|rec|sealed|select|sig|static|struct|tailcall|then|to|trait|true|try|type|upcast|val|virtual|void|volatile|when|while|with)\b/,
      number: [
        /\b0x[\da-fA-F]+(?:LF|lf|un)?\b/,
        /\b0b[01]+(?:uy|y)?\b/,
        /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[fm]|e[+-]?\d+)?\b/i,
        /\b\d+(?:[IlLsy]|UL|u[lsy]?)?\b/
      ],
      operator: /([<>~&^])\1\1|([*.:<>&])\2|<-|->|[!=:]=|<?\|{1,3}>?|\??(?:<=|>=|<>|[-+*/%=<>])\??|[!?^&]|~[+~-]|:>|:\?>?/
    }), t.languages.insertBefore("fsharp", "keyword", {
      preprocessor: {
        pattern: /(^[\t ]*)#.*/m,
        lookbehind: !0,
        alias: "property",
        inside: {
          directive: {
            pattern: /(^#)\b(?:else|endif|if|light|line|nowarn)\b/,
            lookbehind: !0,
            alias: "keyword"
          }
        }
      }
    }), t.languages.insertBefore("fsharp", "punctuation", {
      "computation-expression": {
        pattern: /\b[_a-z]\w*(?=\s*\{)/i,
        alias: "keyword"
      }
    }), t.languages.insertBefore("fsharp", "string", {
      annotation: {
        pattern: /\[<.+?>\]/,
        greedy: !0,
        inside: {
          punctuation: /^\[<|>\]$/,
          "class-name": {
            pattern: /^\w+$|(^|;\s*)[A-Z]\w*(?=\()/,
            lookbehind: !0
          },
          "annotation-content": {
            pattern: /[\s\S]+/,
            inside: t.languages.fsharp
          }
        }
      },
      char: {
        pattern: /'(?:[^\\']|\\(?:.|\d{3}|x[a-fA-F\d]{2}|u[a-fA-F\d]{4}|U[a-fA-F\d]{8}))'B?/,
        greedy: !0
      }
    });
  }
  return Hh;
}
var $h, FA;
function y9() {
  if (FA) return $h;
  FA = 1;
  var e = On();
  $h = t, t.displayName = "ftl", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      for (var o = /[^<()"']|\((?:<expr>)*\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|"(?:[^\\"]|\\.)*"|'(?:[^\\']|\\.)*'/.source, s = 0; s < 2; s++)
        o = o.replace(/<expr>/g, function() {
          return o;
        });
      o = o.replace(/<expr>/g, /[^\s\S]/.source);
      var u = {
        comment: /<#--[\s\S]*?-->/,
        string: [
          {
            // raw string
            pattern: /\br("|')(?:(?!\1)[^\\]|\\.)*\1/,
            greedy: !0
          },
          {
            pattern: RegExp(
              /("|')(?:(?!\1|\$\{)[^\\]|\\.|\$\{(?:(?!\})(?:<expr>))*\})*\1/.source.replace(
                /<expr>/g,
                function() {
                  return o;
                }
              )
            ),
            greedy: !0,
            inside: {
              interpolation: {
                pattern: RegExp(
                  /((?:^|[^\\])(?:\\\\)*)\$\{(?:(?!\})(?:<expr>))*\}/.source.replace(
                    /<expr>/g,
                    function() {
                      return o;
                    }
                  )
                ),
                lookbehind: !0,
                inside: {
                  "interpolation-punctuation": {
                    pattern: /^\$\{|\}$/,
                    alias: "punctuation"
                  },
                  rest: null
                }
              }
            }
          }
        ],
        keyword: /\b(?:as)\b/,
        boolean: /\b(?:false|true)\b/,
        "builtin-function": {
          pattern: /((?:^|[^?])\?\s*)\w+/,
          lookbehind: !0,
          alias: "function"
        },
        function: /\b\w+(?=\s*\()/,
        number: /\b\d+(?:\.\d+)?\b/,
        operator: /\.\.[<*!]?|->|--|\+\+|&&|\|\||\?{1,2}|[-+*/%!=<>]=?|\b(?:gt|gte|lt|lte)\b/,
        punctuation: /[,;.:()[\]{}]/
      };
      u.string[1].inside.interpolation.inside.rest = u, r.languages.ftl = {
        "ftl-comment": {
          // the pattern is shortened to be more efficient
          pattern: /^<#--[\s\S]*/,
          alias: "comment"
        },
        "ftl-directive": {
          pattern: /^<[\s\S]+>$/,
          inside: {
            directive: {
              pattern: /(^<\/?)[#@][a-z]\w*/i,
              lookbehind: !0,
              alias: "keyword"
            },
            punctuation: /^<\/?|\/?>$/,
            content: {
              pattern: /\s*\S[\s\S]*/,
              alias: "ftl",
              inside: u
            }
          }
        },
        "ftl-interpolation": {
          pattern: /^\$\{[\s\S]*\}$/,
          inside: {
            punctuation: /^\$\{|\}$/,
            content: {
              pattern: /\s*\S[\s\S]*/,
              alias: "ftl",
              inside: u
            }
          }
        }
      }, r.hooks.add("before-tokenize", function(c) {
        var p = RegExp(
          /<#--[\s\S]*?-->|<\/?[#@][a-zA-Z](?:<expr>)*?>|\$\{(?:<expr>)*?\}/.source.replace(
            /<expr>/g,
            function() {
              return o;
            }
          ),
          "gi"
        );
        r.languages["markup-templating"].buildPlaceholders(
          c,
          "ftl",
          p
        );
      }), r.hooks.add("after-tokenize", function(c) {
        r.languages["markup-templating"].tokenizePlaceholders(c, "ftl");
      });
    }(n);
  }
  return $h;
}
var zh, BA;
function T9() {
  if (BA) return zh;
  BA = 1, zh = e, e.displayName = "gap", e.aliases = [];
  function e(t) {
    t.languages.gap = {
      shell: {
        pattern: /^gap>[\s\S]*?(?=^gap>|$(?![\s\S]))/m,
        greedy: !0,
        inside: {
          gap: {
            pattern: /^(gap>).+(?:(?:\r(?:\n|(?!\n))|\n)>.*)*/,
            lookbehind: !0,
            inside: null
            // see below
          },
          punctuation: /^gap>/
        }
      },
      comment: {
        pattern: /#.*/,
        greedy: !0
      },
      string: {
        pattern: /(^|[^\\'"])(?:'(?:[^\r\n\\']|\\.){1,10}'|"(?:[^\r\n\\"]|\\.)*"(?!")|"""[\s\S]*?""")/,
        lookbehind: !0,
        greedy: !0,
        inside: {
          continuation: {
            pattern: /([\r\n])>/,
            lookbehind: !0,
            alias: "punctuation"
          }
        }
      },
      keyword: /\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\b/,
      boolean: /\b(?:false|true)\b/,
      function: /\b[a-z_]\w*(?=\s*\()/i,
      number: {
        pattern: /(^|[^\w.]|\.\.)(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?(?:_[a-z]?)?(?=$|[^\w.]|\.\.)/,
        lookbehind: !0
      },
      continuation: {
        pattern: /([\r\n])>/,
        lookbehind: !0,
        alias: "punctuation"
      },
      operator: /->|[-+*/^~=!]|<>|[<>]=?|:=|\.\./,
      punctuation: /[()[\]{},;.:]/
    }, t.languages.gap.shell.inside.gap.inside = t.languages.gap;
  }
  return zh;
}
var Gh, UA;
function S9() {
  if (UA) return Gh;
  UA = 1, Gh = e, e.displayName = "gcode", e.aliases = [];
  function e(t) {
    t.languages.gcode = {
      comment: /;.*|\B\(.*?\)\B/,
      string: {
        pattern: /"(?:""|[^"])*"/,
        greedy: !0
      },
      keyword: /\b[GM]\d+(?:\.\d+)?\b/,
      property: /\b[A-Z]/,
      checksum: {
        pattern: /(\*)\d+/,
        lookbehind: !0,
        alias: "number"
      },
      // T0:0:0
      punctuation: /[:*]/
    };
  }
  return Gh;
}
var qh, HA;
function _9() {
  if (HA) return qh;
  HA = 1, qh = e, e.displayName = "gdscript", e.aliases = [];
  function e(t) {
    t.languages.gdscript = {
      comment: /#.*/,
      string: {
        pattern: /@?(?:("|')(?:(?!\1)[^\n\\]|\\[\s\S])*\1(?!"|')|"""(?:[^\\]|\\[\s\S])*?""")/,
        greedy: !0
      },
      "class-name": {
        // class_name Foo, extends Bar, class InnerClass
        // export(int) var baz, export(int, 0) var i
        // as Node
        // const FOO: int = 9, var bar: bool = true
        // func add(reference: Item, amount: int) -> Item:
        pattern: /(^(?:class|class_name|extends)[ \t]+|^export\([ \t]*|\bas[ \t]+|(?:\b(?:const|var)[ \t]|[,(])[ \t]*\w+[ \t]*:[ \t]*|->[ \t]*)[a-zA-Z_]\w*/m,
        lookbehind: !0
      },
      keyword: /\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\b/,
      function: /\b[a-z_]\w*(?=[ \t]*\()/i,
      variable: /\$\w+/,
      number: [
        /\b0b[01_]+\b|\b0x[\da-fA-F_]+\b|(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.[\d_]+)(?:e[+-]?[\d_]+)?\b/,
        /\b(?:INF|NAN|PI|TAU)\b/
      ],
      constant: /\b[A-Z][A-Z_\d]*\b/,
      boolean: /\b(?:false|true)\b/,
      operator: /->|:=|&&|\|\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,
      punctuation: /[.:,;()[\]{}]/
    };
  }
  return qh;
}
var jh, $A;
function v9() {
  if ($A) return jh;
  $A = 1, jh = e, e.displayName = "gedcom", e.aliases = [];
  function e(t) {
    t.languages.gedcom = {
      "line-value": {
        // Preceded by level, optional pointer, and tag
        pattern: /(^[\t ]*\d+ +(?:@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@ +)?\w+ ).+/m,
        lookbehind: !0,
        inside: {
          pointer: {
            pattern: /^@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@$/,
            alias: "variable"
          }
        }
      },
      tag: {
        // Preceded by level and optional pointer
        pattern: /(^[\t ]*\d+ +(?:@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@ +)?)\w+/m,
        lookbehind: !0,
        alias: "string"
      },
      level: {
        pattern: /(^[\t ]*)\d+/m,
        lookbehind: !0,
        alias: "number"
      },
      pointer: {
        pattern: /@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@/,
        alias: "variable"
      }
    };
  }
  return jh;
}
var Vh, zA;
function A9() {
  if (zA) return Vh;
  zA = 1, Vh = e, e.displayName = "gherkin", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /(?:\r?\n|\r)[ \t]*\|.+\|(?:(?!\|).)*/.source;
      n.languages.gherkin = {
        pystring: {
          pattern: /("""|''')[\s\S]+?\1/,
          alias: "string"
        },
        comment: {
          pattern: /(^[ \t]*)#.*/m,
          lookbehind: !0
        },
        tag: {
          pattern: /(^[ \t]*)@\S*/m,
          lookbehind: !0
        },
        feature: {
          pattern: /((?:^|\r?\n|\r)[ \t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|Lastnost|Mak|Mogucnost|laH|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|Potrzeba biznesowa|perbogh|poQbogh malja'|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:\r\n]+(?:\r?\n|\r|$))*/,
          lookbehind: !0,
          inside: {
            important: {
              pattern: /(:)[^\r\n]+/,
              lookbehind: !0
            },
            keyword: /[^:\r\n]+:/
          }
        },
        scenario: {
          pattern: /(^[ \t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram Senaryo|Dyagram senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|EXAMPLZ|Examples|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|Grundlage|Hannergrond|ghantoH|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut chovnatlh|lut|lutmey|Lýsing Atburðarásar|Lýsing Dæma|MISHUN SRSLY|MISHUN|Menggariskan Senario|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan Senaryo|Plan senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo Deskripsyon|Senaryo deskripsyon|Senaryo|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie Uiteensetting|Situasie|Skenario konsep|Skenario|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa hwaer swa|Swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo-ho-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\r\n]*/m,
          lookbehind: !0,
          inside: {
            important: {
              pattern: /(:)[^\r\n]*/,
              lookbehind: !0
            },
            keyword: /[^:\r\n]+:/
          }
        },
        "table-body": {
          // Look-behind is used to skip the table head, which has the same format as any table row
          pattern: RegExp("(" + r + ")(?:" + r + ")+"),
          lookbehind: !0,
          inside: {
            outline: {
              pattern: /<[^>]+>/,
              alias: "variable"
            },
            td: {
              pattern: /\s*[^\s|][^|]*/,
              alias: "string"
            },
            punctuation: /\|/
          }
        },
        "table-head": {
          pattern: RegExp(r),
          inside: {
            th: {
              pattern: /\s*[^\s|][^|]*/,
              alias: "variable"
            },
            punctuation: /\|/
          }
        },
        atrule: {
          pattern: /(^[ \t]+)(?:'a|'ach|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cand|Cando|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|DEN|Dato|De|Den youse gotta|Dengan|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|E|En|Entonces|Epi|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kad|Kada|Kadar|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Ma|Majd|Maka|Manawa|Mas|Men|Menawa|Mutta|Nalika|Nalikaning|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Och|Og|Oletetaan|Ond|Onda|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|Quan|Quand|Quando|qaSDI'|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|Un|Und|ugeholl|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadan|Zadani|Zadano|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \t])/m,
          lookbehind: !0
        },
        string: {
          pattern: /"(?:\\.|[^"\\\r\n])*"|'(?:\\.|[^'\\\r\n])*'/,
          inside: {
            outline: {
              pattern: /<[^>]+>/,
              alias: "variable"
            }
          }
        },
        outline: {
          pattern: /<[^>]+>/,
          alias: "variable"
        }
      };
    })(t);
  }
  return Vh;
}
var Wh, GA;
function k9() {
  if (GA) return Wh;
  GA = 1, Wh = e, e.displayName = "git", e.aliases = [];
  function e(t) {
    t.languages.git = {
      /*
       * A simple one line comment like in a git status command
       * For instance:
       * $ git status
       * # On branch infinite-scroll
       * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,
       * # and have 1 and 2 different commits each, respectively.
       * nothing to commit (working directory clean)
       */
      comment: /^#.*/m,
      /*
       * Regexp to match the changed lines in a git diff output. Check the example below.
       */
      deleted: /^[-–].*/m,
      inserted: /^\+.*/m,
      /*
       * a string (double and simple quote)
       */
      string: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
      /*
       * a git command. It starts with a random prompt finishing by a $, then "git" then some other parameters
       * For instance:
       * $ git add file.txt
       */
      command: {
        pattern: /^.*\$ git .*$/m,
        inside: {
          /*
           * A git command can contain a parameter starting by a single or a double dash followed by a string
           * For instance:
           * $ git diff --cached
           * $ git log -p
           */
          parameter: /\s--?\w+/
        }
      },
      /*
       * Coordinates displayed in a git diff command
       * For instance:
       * $ git diff
       * diff --git file.txt file.txt
       * index 6214953..1d54a52 100644
       * --- file.txt
       * +++ file.txt
       * @@ -1 +1,2 @@
       * -Here's my tetx file
       * +Here's my text file
       * +And this is the second line
       */
      coord: /^@@.*@@$/m,
      /*
       * Match a "commit [SHA1]" line in a git log output.
       * For instance:
       * $ git log
       * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09
       * Author: lgiraudel
       * Date:   Mon Feb 17 11:18:34 2014 +0100
       *
       *     Add of a new line
       */
      "commit-sha1": /^commit \w{40}$/m
    };
  }
  return Wh;
}
var Yh, qA;
function C9() {
  if (qA) return Yh;
  qA = 1;
  var e = hi();
  Yh = t, t.displayName = "glsl", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.glsl = n.languages.extend("c", {
      keyword: /\b(?:active|asm|atomic_uint|attribute|[ibdu]?vec[234]|bool|break|buffer|case|cast|centroid|class|coherent|common|const|continue|d?mat[234](?:x[234])?|default|discard|do|double|else|enum|extern|external|false|filter|fixed|flat|float|for|fvec[234]|goto|half|highp|hvec[234]|[iu]?sampler2DMS(?:Array)?|[iu]?sampler2DRect|[iu]?samplerBuffer|[iu]?samplerCube|[iu]?samplerCubeArray|[iu]?sampler[123]D|[iu]?sampler[12]DArray|[iu]?image2DMS(?:Array)?|[iu]?image2DRect|[iu]?imageBuffer|[iu]?imageCube|[iu]?imageCubeArray|[iu]?image[123]D|[iu]?image[12]DArray|if|in|inline|inout|input|int|interface|invariant|layout|long|lowp|mediump|namespace|noinline|noperspective|out|output|partition|patch|precise|precision|public|readonly|resource|restrict|return|sample|sampler[12]DArrayShadow|sampler[12]DShadow|sampler2DRectShadow|sampler3DRect|samplerCubeArrayShadow|samplerCubeShadow|shared|short|sizeof|smooth|static|struct|subroutine|superp|switch|template|this|true|typedef|uint|uniform|union|unsigned|using|varying|void|volatile|while|writeonly)\b/
    });
  }
  return Yh;
}
var Kh, jA;
function w9() {
  if (jA) return Kh;
  jA = 1, Kh = e, e.displayName = "gml", e.aliases = [];
  function e(t) {
    t.languages.gamemakerlanguage = t.languages.gml = t.languages.extend("clike", {
      keyword: /\b(?:break|case|continue|default|do|else|enum|exit|for|globalvar|if|repeat|return|switch|until|var|while)\b/,
      number: /(?:\b0x[\da-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ulf]{0,4}/i,
      operator: /--|\+\+|[-+%/=]=?|!=|\*\*?=?|<[<=>]?|>[=>]?|&&?|\^\^?|\|\|?|~|\b(?:and|at|not|or|with|xor)\b/,
      constant: /\b(?:GM_build_date|GM_version|action_(?:continue|restart|reverse|stop)|all|gamespeed_(?:fps|microseconds)|global|local|noone|other|pi|pointer_(?:invalid|null)|self|timezone_(?:local|utc)|undefined|ev_(?:create|destroy|step|alarm|keyboard|mouse|collision|other|draw|draw_(?:begin|end|post|pre)|keypress|keyrelease|trigger|(?:left|middle|no|right)_button|(?:left|middle|right)_press|(?:left|middle|right)_release|mouse_(?:enter|leave|wheel_down|wheel_up)|global_(?:left|middle|right)_button|global_(?:left|middle|right)_press|global_(?:left|middle|right)_release|joystick(?:1|2)_(?:button1|button2|button3|button4|button5|button6|button7|button8|down|left|right|up)|outside|boundary|game_start|game_end|room_start|room_end|no_more_lives|animation_end|end_of_path|no_more_health|user\d|gui|gui_begin|gui_end|step_(?:begin|end|normal))|vk_(?:alt|anykey|backspace|control|delete|down|end|enter|escape|home|insert|left|nokey|pagedown|pageup|pause|printscreen|return|right|shift|space|tab|up|f\d|numpad\d|add|decimal|divide|lalt|lcontrol|lshift|multiply|ralt|rcontrol|rshift|subtract)|achievement_(?:filter_(?:all_players|favorites_only|friends_only)|friends_info|info|leaderboard_info|our_info|pic_loaded|show_(?:achievement|bank|friend_picker|leaderboard|profile|purchase_prompt|ui)|type_challenge|type_score_challenge)|asset_(?:font|object|path|room|script|shader|sound|sprite|tiles|timeline|unknown)|audio_(?:3d|falloff_(?:exponent_distance|exponent_distance_clamped|inverse_distance|inverse_distance_clamped|linear_distance|linear_distance_clamped|none)|mono|new_system|old_system|stereo)|bm_(?:add|complex|dest_alpha|dest_color|dest_colour|inv_dest_alpha|inv_dest_color|inv_dest_colour|inv_src_alpha|inv_src_color|inv_src_colour|max|normal|one|src_alpha|src_alpha_sat|src_color|src_colour|subtract|zero)|browser_(?:chrome|firefox|ie|ie_mobile|not_a_browser|opera|safari|safari_mobile|tizen|unknown|windows_store)|buffer_(?:bool|f16|f32|f64|fast|fixed|generalerror|grow|invalidtype|network|outofbounds|outofspace|s16|s32|s8|seek_end|seek_relative|seek_start|string|text|u16|u32|u64|u8|vbuffer|wrap)|c_(?:aqua|black|blue|dkgray|fuchsia|gray|green|lime|ltgray|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)|cmpfunc_(?:always|equal|greater|greaterequal|less|lessequal|never|notequal)|cr_(?:appstart|arrow|beam|cross|default|drag|handpoint|hourglass|none|size_all|size_nesw|size_ns|size_nwse|size_we|uparrow)|cull_(?:clockwise|counterclockwise|noculling)|device_(?:emulator|tablet)|device_ios_(?:ipad|ipad_retina|iphone|iphone5|iphone6|iphone6plus|iphone_retina|unknown)|display_(?:landscape|landscape_flipped|portrait|portrait_flipped)|dll_(?:cdecl|cdel|stdcall)|ds_type_(?:grid|list|map|priority|queue|stack)|ef_(?:cloud|ellipse|explosion|firework|flare|rain|ring|smoke|smokeup|snow|spark|star)|fa_(?:archive|bottom|center|directory|hidden|left|middle|readonly|right|sysfile|top|volumeid)|fb_login_(?:default|fallback_to_webview|forcing_safari|forcing_webview|no_fallback_to_webview|use_system_account)|iap_(?:available|canceled|ev_consume|ev_product|ev_purchase|ev_restore|ev_storeload|failed|purchased|refunded|status_available|status_loading|status_processing|status_restoring|status_unavailable|status_uninitialised|storeload_failed|storeload_ok|unavailable)|leaderboard_type_(?:number|time_mins_secs)|lighttype_(?:dir|point)|matrix_(?:projection|view|world)|mb_(?:any|left|middle|none|right)|network_(?:config_(?:connect_timeout|disable_reliable_udp|enable_reliable_udp|use_non_blocking_socket)|socket_(?:bluetooth|tcp|udp)|type_(?:connect|data|disconnect|non_blocking_connect))|of_challenge_(?:lose|tie|win)|os_(?:android|ios|linux|macosx|ps3|ps4|psvita|unknown|uwp|win32|win8native|windows|winphone|xboxone)|phy_debug_render_(?:aabb|collision_pairs|coms|core_shapes|joints|obb|shapes)|phy_joint_(?:anchor_1_x|anchor_1_y|anchor_2_x|anchor_2_y|angle|angle_limits|damping_ratio|frequency|length_1|length_2|lower_angle_limit|max_force|max_length|max_motor_force|max_motor_torque|max_torque|motor_force|motor_speed|motor_torque|reaction_force_x|reaction_force_y|reaction_torque|speed|translation|upper_angle_limit)|phy_particle_data_flag_(?:category|color|colour|position|typeflags|velocity)|phy_particle_flag_(?:colormixing|colourmixing|elastic|powder|spring|tensile|viscous|wall|water|zombie)|phy_particle_group_flag_(?:rigid|solid)|pr_(?:linelist|linestrip|pointlist|trianglefan|trianglelist|trianglestrip)|ps_(?:distr|shape)_(?:diamond|ellipse|gaussian|invgaussian|line|linear|rectangle)|pt_shape_(?:circle|cloud|disk|explosion|flare|line|pixel|ring|smoke|snow|spark|sphere|square|star)|ty_(?:real|string)|gp_(?:face\d|axislh|axislv|axisrh|axisrv|padd|padl|padr|padu|select|shoulderl|shoulderlb|shoulderr|shoulderrb|start|stickl|stickr)|lb_disp_(?:none|numeric|time_ms|time_sec)|lb_sort_(?:ascending|descending|none)|ov_(?:achievements|community|friends|gamegroup|players|settings)|ugc_(?:filetype_(?:community|microtrans)|list_(?:Favorited|Followed|Published|Subscribed|UsedOrPlayed|VotedDown|VotedOn|VotedUp|WillVoteLater)|match_(?:AllGuides|Artwork|Collections|ControllerBindings|IntegratedGuides|Items|Items_Mtx|Items_ReadyToUse|Screenshots|UsableInGame|Videos|WebGuides)|query_(?:AcceptedForGameRankedByAcceptanceDate|CreatedByFriendsRankedByPublicationDate|FavoritedByFriendsRankedByPublicationDate|NotYetRated)|query_RankedBy(?:NumTimesReported|PublicationDate|TextSearch|TotalVotesAsc|Trend|Vote|VotesUp)|result_success|sortorder_CreationOrder(?:Asc|Desc)|sortorder_(?:ForModeration|LastUpdatedDesc|SubscriptionDateDesc|TitleAsc|VoteScoreDesc)|visibility_(?:friends_only|private|public))|vertex_usage_(?:binormal|blendindices|blendweight|color|colour|depth|fog|normal|position|psize|sample|tangent|texcoord|textcoord)|vertex_type_(?:float\d|color|colour|ubyte4)|input_type|layerelementtype_(?:background|instance|oldtilemap|particlesystem|sprite|tile|tilemap|undefined)|se_(?:chorus|compressor|echo|equalizer|flanger|gargle|none|reverb)|text_type|tile_(?:flip|index_mask|mirror|rotate)|(?:obj|rm|scr|spr)\w+)\b/,
      variable: /\b(?:alarm|application_surface|async_load|background_(?:alpha|blend|color|colour|foreground|height|hspeed|htiled|index|showcolor|showcolour|visible|vspeed|vtiled|width|x|xscale|y|yscale)|bbox_(?:bottom|left|right|top)|browser_(?:height|width)|caption_(?:health|lives|score)|current_(?:day|hour|minute|month|second|time|weekday|year)|cursor_sprite|debug_mode|delta_time|direction|display_aa|error_(?:last|occurred)|event_(?:action|number|object|type)|fps|fps_real|friction|game_(?:display|project|save)_(?:id|name)|gamemaker_(?:pro|registered|version)|gravity|gravity_direction|(?:h|v)speed|health|iap_data|id|image_(?:alpha|angle|blend|depth|index|number|speed|xscale|yscale)|instance_(?:count|id)|keyboard_(?:key|lastchar|lastkey|string)|layer|lives|mask_index|mouse_(?:button|lastbutton|x|y)|object_index|os_(?:browser|device|type|version)|path_(?:endaction|index|orientation|position|positionprevious|scale|speed)|persistent|phy_(?:rotation|(?:col_normal|collision|com|linear_velocity|position|speed)_(?:x|y)|angular_(?:damping|velocity)|position_(?:x|y)previous|speed|linear_damping|bullet|fixed_rotation|active|mass|inertia|dynamic|kinematic|sleeping|collision_points)|pointer_(?:invalid|null)|room|room_(?:caption|first|height|last|persistent|speed|width)|score|secure_mode|show_(?:health|lives|score)|solid|speed|sprite_(?:height|index|width|xoffset|yoffset)|temp_directory|timeline_(?:index|loop|position|running|speed)|transition_(?:color|kind|steps)|undefined|view_(?:angle|current|enabled|(?:h|v)(?:border|speed)|(?:h|w|x|y)port|(?:h|w|x|y)view|object|surface_id|visible)|visible|webgl_enabled|working_directory|(?:x|y)(?:previous|start)|x|y|argument(?:_relitive|_count|\d)|argument|global|local|other|self)\b/
    });
  }
  return Kh;
}
var Xh, VA;
function I9() {
  if (VA) return Xh;
  VA = 1, Xh = e, e.displayName = "gn", e.aliases = ["gni"];
  function e(t) {
    t.languages.gn = {
      comment: {
        pattern: /#.*/,
        greedy: !0
      },
      "string-literal": {
        pattern: /(^|[^\\"])"(?:[^\r\n"\\]|\\.)*"/,
        lookbehind: !0,
        greedy: !0,
        inside: {
          interpolation: {
            pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:\{[\s\S]*?\}|[a-zA-Z_]\w*|0x[a-fA-F0-9]{2})/,
            lookbehind: !0,
            inside: {
              number: /^\$0x[\s\S]{2}$/,
              variable: /^\$\w+$/,
              "interpolation-punctuation": {
                pattern: /^\$\{|\}$/,
                alias: "punctuation"
              },
              expression: {
                pattern: /[\s\S]+/,
                inside: null
                // see below
              }
            }
          },
          string: /[\s\S]+/
        }
      },
      keyword: /\b(?:else|if)\b/,
      boolean: /\b(?:false|true)\b/,
      "builtin-function": {
        // a few functions get special highlighting to improve readability
        pattern: /\b(?:assert|defined|foreach|import|pool|print|template|tool|toolchain)(?=\s*\()/i,
        alias: "keyword"
      },
      function: /\b[a-z_]\w*(?=\s*\()/i,
      constant: /\b(?:current_cpu|current_os|current_toolchain|default_toolchain|host_cpu|host_os|root_build_dir|root_gen_dir|root_out_dir|target_cpu|target_gen_dir|target_os|target_out_dir)\b/,
      number: /-?\b\d+\b/,
      operator: /[-+!=<>]=?|&&|\|\|/,
      punctuation: /[(){}[\],.]/
    }, t.languages.gn["string-literal"].inside.interpolation.inside.expression.inside = t.languages.gn, t.languages.gni = t.languages.gn;
  }
  return Xh;
}
var Qh, WA;
function R9() {
  if (WA) return Qh;
  WA = 1, Qh = e, e.displayName = "goModule", e.aliases = [];
  function e(t) {
    t.languages["go-mod"] = t.languages["go-module"] = {
      comment: {
        pattern: /\/\/.*/,
        greedy: !0
      },
      version: {
        pattern: /(^|[\s()[\],])v\d+\.\d+\.\d+(?:[+-][-+.\w]*)?(?![^\s()[\],])/,
        lookbehind: !0,
        alias: "number"
      },
      "go-version": {
        pattern: /((?:^|\s)go\s+)\d+(?:\.\d+){1,2}/,
        lookbehind: !0,
        alias: "number"
      },
      keyword: {
        pattern: /^([ \t]*)(?:exclude|go|module|replace|require|retract)\b/m,
        lookbehind: !0
      },
      operator: /=>/,
      punctuation: /[()[\],]/
    };
  }
  return Qh;
}
var Zh, YA;
function x9() {
  if (YA) return Zh;
  YA = 1, Zh = e, e.displayName = "go", e.aliases = [];
  function e(t) {
    t.languages.go = t.languages.extend("clike", {
      string: {
        pattern: /(^|[^\\])"(?:\\.|[^"\\\r\n])*"|`[^`]*`/,
        lookbehind: !0,
        greedy: !0
      },
      keyword: /\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,
      boolean: /\b(?:_|false|iota|nil|true)\b/,
      number: [
        // binary and octal integers
        /\b0(?:b[01_]+|o[0-7_]+)i?\b/i,
        // hexadecimal integers and floats
        /\b0x(?:[a-f\d_]+(?:\.[a-f\d_]*)?|\.[a-f\d_]+)(?:p[+-]?\d+(?:_\d+)*)?i?(?!\w)/i,
        // decimal integers and floats
        /(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?[\d_]+)?i?(?!\w)/i
      ],
      operator: /[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,
      builtin: /\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\b/
    }), t.languages.insertBefore("go", "string", {
      char: {
        pattern: /'(?:\\.|[^'\\\r\n]){0,10}'/,
        greedy: !0
      }
    }), delete t.languages.go["class-name"];
  }
  return Zh;
}
var Jh, KA;
function N9() {
  if (KA) return Jh;
  KA = 1, Jh = e, e.displayName = "graphql", e.aliases = [];
  function e(t) {
    t.languages.graphql = {
      comment: /#.*/,
      description: {
        pattern: /(?:"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*")(?=\s*[a-z_])/i,
        greedy: !0,
        alias: "string",
        inside: {
          "language-markdown": {
            pattern: /(^"(?:"")?)(?!\1)[\s\S]+(?=\1$)/,
            lookbehind: !0,
            inside: t.languages.markdown
          }
        }
      },
      string: {
        pattern: /"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*"/,
        greedy: !0
      },
      number: /(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
      boolean: /\b(?:false|true)\b/,
      variable: /\$[a-z_]\w*/i,
      directive: {
        pattern: /@[a-z_]\w*/i,
        alias: "function"
      },
      "attr-name": {
        pattern: /\b[a-z_]\w*(?=\s*(?:\((?:[^()"]|"(?:\\.|[^\\"\r\n])*")*\))?:)/i,
        greedy: !0
      },
      "atom-input": {
        pattern: /\b[A-Z]\w*Input\b/,
        alias: "class-name"
      },
      scalar: /\b(?:Boolean|Float|ID|Int|String)\b/,
      constant: /\b[A-Z][A-Z_\d]*\b/,
      "class-name": {
        pattern: /(\b(?:enum|implements|interface|on|scalar|type|union)\s+|&\s*|:\s*|\[)[A-Z_]\w*/,
        lookbehind: !0
      },
      fragment: {
        pattern: /(\bfragment\s+|\.{3}\s*(?!on\b))[a-zA-Z_]\w*/,
        lookbehind: !0,
        alias: "function"
      },
      "definition-mutation": {
        pattern: /(\bmutation\s+)[a-zA-Z_]\w*/,
        lookbehind: !0,
        alias: "function"
      },
      "definition-query": {
        pattern: /(\bquery\s+)[a-zA-Z_]\w*/,
        lookbehind: !0,
        alias: "function"
      },
      keyword: /\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\b/,
      operator: /[!=|&]|\.{3}/,
      "property-query": /\w+(?=\s*\()/,
      object: /\w+(?=\s*\{)/,
      punctuation: /[!(){}\[\]:=,]/,
      property: /\w+/
    }, t.hooks.add("after-tokenize", function(r) {
      if (r.language !== "graphql")
        return;
      var o = r.tokens.filter(function(C) {
        return typeof C != "string" && C.type !== "comment" && C.type !== "scalar";
      }), s = 0;
      function u(C) {
        return o[s + C];
      }
      function c(C, w) {
        w = w || 0;
        for (var k = 0; k < C.length; k++) {
          var O = u(k + w);
          if (!O || O.type !== C[k])
            return !1;
        }
        return !0;
      }
      function p(C, w) {
        for (var k = 1, O = s; O < o.length; O++) {
          var F = o[O], v = F.content;
          if (F.type === "punctuation" && typeof v == "string") {
            if (C.test(v))
              k++;
            else if (w.test(v) && (k--, k === 0))
              return O;
          }
        }
        return -1;
      }
      function f(C, w) {
        var k = C.alias;
        k ? Array.isArray(k) || (C.alias = k = [k]) : C.alias = k = [], k.push(w);
      }
      for (; s < o.length; ) {
        var b = o[s++];
        if (b.type === "keyword" && b.content === "mutation") {
          var g = [];
          if (c(["definition-mutation", "punctuation"]) && u(1).content === "(") {
            s += 2;
            var T = p(/^\($/, /^\)$/);
            if (T === -1)
              continue;
            for (; s < T; s++) {
              var y = u(0);
              y.type === "variable" && (f(y, "variable-input"), g.push(y.content));
            }
            s = T + 1;
          }
          if (c(["punctuation", "property-query"]) && u(0).content === "{" && (s++, f(u(0), "property-mutation"), g.length > 0)) {
            var _ = p(/^\{$/, /^\}$/);
            if (_ === -1)
              continue;
            for (var A = s; A < _; A++) {
              var R = o[A];
              R.type === "variable" && g.indexOf(R.content) >= 0 && f(R, "variable-input");
            }
          }
        }
      }
    });
  }
  return Jh;
}
var eg, XA;
function O9() {
  if (XA) return eg;
  XA = 1, eg = e, e.displayName = "groovy", e.aliases = [];
  function e(t) {
    t.languages.groovy = t.languages.extend("clike", {
      string: [
        {
          // https://groovy-lang.org/syntax.html#_dollar_slashy_string
          pattern: /("""|''')(?:[^\\]|\\[\s\S])*?\1|\$\/(?:[^/$]|\$(?:[/$]|(?![/$]))|\/(?!\$))*\/\$/,
          greedy: !0
        },
        {
          // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with
          // simple division (see JS regex), so find a fix maybe?
          pattern: /(["'/])(?:\\.|(?!\1)[^\\\r\n])*\1/,
          greedy: !0
        }
      ],
      keyword: /\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\b/,
      number: /\b(?:0b[01_]+|0x[\da-f_]+(?:\.[\da-f_p\-]+)?|[\d_]+(?:\.[\d_]+)?(?:e[+-]?\d+)?)[glidf]?\b/i,
      operator: {
        pattern: /(^|[^.])(?:~|==?~?|\?[.:]?|\*(?:[.=]|\*=?)?|\.[@&]|\.\.<|\.\.(?!\.)|-[-=>]?|\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\|[|=]?|\/=?|\^=?|%=?)/,
        lookbehind: !0
      },
      punctuation: /\.+|[{}[\];(),:$]/
    }), t.languages.insertBefore("groovy", "string", {
      shebang: {
        pattern: /#!.+/,
        alias: "comment"
      }
    }), t.languages.insertBefore("groovy", "punctuation", {
      "spock-block": /\b(?:and|cleanup|expect|given|setup|then|when|where):/
    }), t.languages.insertBefore("groovy", "function", {
      annotation: {
        pattern: /(^|[^.])@\w+/,
        lookbehind: !0,
        alias: "punctuation"
      }
    }), t.hooks.add("wrap", function(n) {
      if (n.language === "groovy" && n.type === "string") {
        var r = n.content.value[0];
        if (r != "'") {
          var o = /([^\\])(?:\$(?:\{.*?\}|[\w.]+))/;
          r === "$" && (o = /([^\$])(?:\$(?:\{.*?\}|[\w.]+))/), n.content.value = n.content.value.replace(/&lt;/g, "<").replace(/&amp;/g, "&"), n.content = t.highlight(n.content.value, {
            expression: {
              pattern: o,
              lookbehind: !0,
              inside: t.languages.groovy
            }
          }), n.classes.push(r === "/" ? "regex" : "gstring");
        }
      }
    });
  }
  return eg;
}
var tg, QA;
function L9() {
  if (QA) return tg;
  QA = 1;
  var e = fc();
  tg = t, t.displayName = "haml", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      r.languages.haml = {
        // Multiline stuff should appear before the rest
        "multiline-comment": {
          pattern: /((?:^|\r?\n|\r)([\t ]*))(?:\/|-#).*(?:(?:\r?\n|\r)\2[\t ].+)*/,
          lookbehind: !0,
          alias: "comment"
        },
        "multiline-code": [
          {
            pattern: /((?:^|\r?\n|\r)([\t ]*)(?:[~-]|[&!]?=)).*,[\t ]*(?:(?:\r?\n|\r)\2[\t ].*,[\t ]*)*(?:(?:\r?\n|\r)\2[\t ].+)/,
            lookbehind: !0,
            inside: r.languages.ruby
          },
          {
            pattern: /((?:^|\r?\n|\r)([\t ]*)(?:[~-]|[&!]?=)).*\|[\t ]*(?:(?:\r?\n|\r)\2[\t ].*\|[\t ]*)*/,
            lookbehind: !0,
            inside: r.languages.ruby
          }
        ],
        // See at the end of the file for known filters
        filter: {
          pattern: /((?:^|\r?\n|\r)([\t ]*)):[\w-]+(?:(?:\r?\n|\r)(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/,
          lookbehind: !0,
          inside: {
            "filter-name": {
              pattern: /^:[\w-]+/,
              alias: "symbol"
            }
          }
        },
        markup: {
          pattern: /((?:^|\r?\n|\r)[\t ]*)<.+/,
          lookbehind: !0,
          inside: r.languages.markup
        },
        doctype: {
          pattern: /((?:^|\r?\n|\r)[\t ]*)!!!(?: .+)?/,
          lookbehind: !0
        },
        tag: {
          // Allows for one nested group of braces
          pattern: /((?:^|\r?\n|\r)[\t ]*)[%.#][\w\-#.]*[\w\-](?:\([^)]+\)|\{(?:\{[^}]+\}|[^{}])+\}|\[[^\]]+\])*[\/<>]*/,
          lookbehind: !0,
          inside: {
            attributes: [
              {
                // Lookbehind tries to prevent interpolations from breaking it all
                // Allows for one nested group of braces
                pattern: /(^|[^#])\{(?:\{[^}]+\}|[^{}])+\}/,
                lookbehind: !0,
                inside: r.languages.ruby
              },
              {
                pattern: /\([^)]+\)/,
                inside: {
                  "attr-value": {
                    pattern: /(=\s*)(?:"(?:\\.|[^\\"\r\n])*"|[^)\s]+)/,
                    lookbehind: !0
                  },
                  "attr-name": /[\w:-]+(?=\s*!?=|\s*[,)])/,
                  punctuation: /[=(),]/
                }
              },
              {
                pattern: /\[[^\]]+\]/,
                inside: r.languages.ruby
              }
            ],
            punctuation: /[<>]/
          }
        },
        code: {
          pattern: /((?:^|\r?\n|\r)[\t ]*(?:[~-]|[&!]?=)).+/,
          lookbehind: !0,
          inside: r.languages.ruby
        },
        // Interpolations in plain text
        interpolation: {
          pattern: /#\{[^}]+\}/,
          inside: {
            delimiter: {
              pattern: /^#\{|\}$/,
              alias: "punctuation"
            },
            ruby: {
              pattern: /[\s\S]+/,
              inside: r.languages.ruby
            }
          }
        },
        punctuation: {
          pattern: /((?:^|\r?\n|\r)[\t ]*)[~=\-&!]+/,
          lookbehind: !0
        }
      };
      for (var o = "((?:^|\\r?\\n|\\r)([\\t ]*)):{{filter_name}}(?:(?:\\r?\\n|\\r)(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+", s = [
        "css",
        {
          filter: "coffee",
          language: "coffeescript"
        },
        "erb",
        "javascript",
        "less",
        "markdown",
        "ruby",
        "scss",
        "textile"
      ], u = {}, c = 0, p = s.length; c < p; c++) {
        var f = s[c];
        f = typeof f == "string" ? {
          filter: f,
          language: f
        } : f, r.languages[f.language] && (u["filter-" + f.filter] = {
          pattern: RegExp(
            o.replace("{{filter_name}}", function() {
              return f.filter;
            })
          ),
          lookbehind: !0,
          inside: {
            "filter-name": {
              pattern: /^:[\w-]+/,
              alias: "symbol"
            },
            text: {
              pattern: /[\s\S]+/,
              alias: [f.language, "language-" + f.language],
              inside: r.languages[f.language]
            }
          }
        });
      }
      r.languages.insertBefore("haml", "filter", u);
    }(n);
  }
  return tg;
}
var ng, ZA;
function D9() {
  if (ZA) return ng;
  ZA = 1;
  var e = On();
  ng = t, t.displayName = "handlebars", t.aliases = ["hbs"];
  function t(n) {
    n.register(e), function(r) {
      r.languages.handlebars = {
        comment: /\{\{![\s\S]*?\}\}/,
        delimiter: {
          pattern: /^\{\{\{?|\}\}\}?$/,
          alias: "punctuation"
        },
        string: /(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,
        number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][+-]?\d+)?/,
        boolean: /\b(?:false|true)\b/,
        block: {
          pattern: /^(\s*(?:~\s*)?)[#\/]\S+?(?=\s*(?:~\s*)?$|\s)/,
          lookbehind: !0,
          alias: "keyword"
        },
        brackets: {
          pattern: /\[[^\]]+\]/,
          inside: {
            punctuation: /\[|\]/,
            variable: /[\s\S]+/
          }
        },
        punctuation: /[!"#%&':()*+,.\/;<=>@\[\\\]^`{|}~]/,
        variable: /[^!"#%&'()*+,\/;<=>@\[\\\]^`{|}~\s]+/
      }, r.hooks.add("before-tokenize", function(o) {
        var s = /\{\{\{[\s\S]+?\}\}\}|\{\{[\s\S]+?\}\}/g;
        r.languages["markup-templating"].buildPlaceholders(
          o,
          "handlebars",
          s
        );
      }), r.hooks.add("after-tokenize", function(o) {
        r.languages["markup-templating"].tokenizePlaceholders(
          o,
          "handlebars"
        );
      }), r.languages.hbs = r.languages.handlebars;
    }(n);
  }
  return ng;
}
var rg, JA;
function KE() {
  if (JA) return rg;
  JA = 1, rg = e, e.displayName = "haskell", e.aliases = ["hs"];
  function e(t) {
    t.languages.haskell = {
      comment: {
        pattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\/])(?:--(?:(?=.)[^-!#$%*+=?&@|~.:<>^\\\/].*|$)|\{-[\s\S]*?-\})/m,
        lookbehind: !0
      },
      char: {
        pattern: /'(?:[^\\']|\\(?:[abfnrtv\\"'&]|\^[A-Z@[\]^_]|ACK|BEL|BS|CAN|CR|DC1|DC2|DC3|DC4|DEL|DLE|EM|ENQ|EOT|ESC|ETB|ETX|FF|FS|GS|HT|LF|NAK|NUL|RS|SI|SO|SOH|SP|STX|SUB|SYN|US|VT|\d+|o[0-7]+|x[0-9a-fA-F]+))'/,
        alias: "string"
      },
      string: {
        pattern: /"(?:[^\\"]|\\(?:\S|\s+\\))*"/,
        greedy: !0
      },
      keyword: /\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\b/,
      "import-statement": {
        // The imported or hidden names are not included in this import
        // statement. This is because we want to highlight those exactly like
        // we do for the names in the program.
        pattern: /(^[\t ]*)import\s+(?:qualified\s+)?(?:[A-Z][\w']*)(?:\.[A-Z][\w']*)*(?:\s+as\s+(?:[A-Z][\w']*)(?:\.[A-Z][\w']*)*)?(?:\s+hiding\b)?/m,
        lookbehind: !0,
        inside: {
          keyword: /\b(?:as|hiding|import|qualified)\b/,
          punctuation: /\./
        }
      },
      // These are builtin variables only. Constructors are highlighted later as a constant.
      builtin: /\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\b/,
      // decimal integers and floating point numbers | octal integers | hexadecimal integers
      number: /\b(?:\d+(?:\.\d+)?(?:e[+-]?\d+)?|0o[0-7]+|0x[0-9a-f]+)\b/i,
      operator: [
        {
          // infix operator
          pattern: /`(?:[A-Z][\w']*\.)*[_a-z][\w']*`/,
          greedy: !0
        },
        {
          // function composition
          pattern: /(\s)\.(?=\s)/,
          lookbehind: !0
        },
        // Most of this is needed because of the meaning of a single '.'.
        // If it stands alone freely, it is the function composition.
        // It may also be a separator between a module name and an identifier => no
        // operator. If it comes together with other special characters it is an
        // operator too.
        //
        // This regex means: /[-!#$%*+=?&@|~.:<>^\\\/]+/ without /\./.
        /[-!#$%*+=?&@|~:<>^\\\/][-!#$%*+=?&@|~.:<>^\\\/]*|\.[-!#$%*+=?&@|~.:<>^\\\/]+/
      ],
      // In Haskell, nearly everything is a variable, do not highlight these.
      hvariable: {
        pattern: /\b(?:[A-Z][\w']*\.)*[_a-z][\w']*/,
        inside: {
          punctuation: /\./
        }
      },
      constant: {
        pattern: /\b(?:[A-Z][\w']*\.)*[A-Z][\w']*/,
        inside: {
          punctuation: /\./
        }
      },
      punctuation: /[{}[\];(),.:]/
    }, t.languages.hs = t.languages.haskell;
  }
  return rg;
}
var ag, ek;
function M9() {
  if (ek) return ag;
  ek = 1, ag = e, e.displayName = "haxe", e.aliases = [];
  function e(t) {
    t.languages.haxe = t.languages.extend("clike", {
      string: {
        // Strings can be multi-line
        pattern: /"(?:[^"\\]|\\[\s\S])*"/,
        greedy: !0
      },
      "class-name": [
        {
          pattern: /(\b(?:abstract|class|enum|extends|implements|interface|new|typedef)\s+)[A-Z_]\w*/,
          lookbehind: !0
        },
        // based on naming convention
        /\b[A-Z]\w*/
      ],
      // The final look-ahead prevents highlighting of keywords if expressions such as "haxe.macro.Expr"
      keyword: /\bthis\b|\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|final|for|from|function|if|implements|import|in|inline|interface|macro|new|null|operator|overload|override|package|private|public|return|static|super|switch|throw|to|try|typedef|untyped|using|var|while)(?!\.)\b/,
      function: {
        pattern: /\b[a-z_]\w*(?=\s*(?:<[^<>]*>\s*)?\()/i,
        greedy: !0
      },
      operator: /\.{3}|\+\+|--|&&|\|\||->|=>|(?:<<?|>{1,3}|[-+*/%!=&|^])=?|[?:~]/
    }), t.languages.insertBefore("haxe", "string", {
      "string-interpolation": {
        pattern: /'(?:[^'\\]|\\[\s\S])*'/,
        greedy: !0,
        inside: {
          interpolation: {
            pattern: /(^|[^\\])\$(?:\w+|\{[^{}]+\})/,
            lookbehind: !0,
            inside: {
              "interpolation-punctuation": {
                pattern: /^\$\{?|\}$/,
                alias: "punctuation"
              },
              expression: {
                pattern: /[\s\S]+/,
                inside: t.languages.haxe
              }
            }
          },
          string: /[\s\S]+/
        }
      }
    }), t.languages.insertBefore("haxe", "class-name", {
      regex: {
        pattern: /~\/(?:[^\/\\\r\n]|\\.)+\/[a-z]*/,
        greedy: !0,
        inside: {
          "regex-flags": /\b[a-z]+$/,
          "regex-source": {
            pattern: /^(~\/)[\s\S]+(?=\/$)/,
            lookbehind: !0,
            alias: "language-regex",
            inside: t.languages.regex
          },
          "regex-delimiter": /^~\/|\/$/
        }
      }
    }), t.languages.insertBefore("haxe", "keyword", {
      preprocessor: {
        pattern: /#(?:else|elseif|end|if)\b.*/,
        alias: "property"
      },
      metadata: {
        pattern: /@:?[\w.]+/,
        alias: "symbol"
      },
      reification: {
        pattern: /\$(?:\w+|(?=\{))/,
        alias: "important"
      }
    });
  }
  return ag;
}
var ig, tk;
function P9() {
  if (tk) return ig;
  tk = 1, ig = e, e.displayName = "hcl", e.aliases = [];
  function e(t) {
    t.languages.hcl = {
      comment: /(?:\/\/|#).*|\/\*[\s\S]*?(?:\*\/|$)/,
      heredoc: {
        pattern: /<<-?(\w+\b)[\s\S]*?^[ \t]*\1/m,
        greedy: !0,
        alias: "string"
      },
      keyword: [
        {
          pattern: /(?:data|resource)\s+(?:"(?:\\[\s\S]|[^\\"])*")(?=\s+"[\w-]+"\s+\{)/i,
          inside: {
            type: {
              pattern: /(resource|data|\s+)(?:"(?:\\[\s\S]|[^\\"])*")/i,
              lookbehind: !0,
              alias: "variable"
            }
          }
        },
        {
          pattern: /(?:backend|module|output|provider|provisioner|variable)\s+(?:[\w-]+|"(?:\\[\s\S]|[^\\"])*")\s+(?=\{)/i,
          inside: {
            type: {
              pattern: /(backend|module|output|provider|provisioner|variable)\s+(?:[\w-]+|"(?:\\[\s\S]|[^\\"])*")\s+/i,
              lookbehind: !0,
              alias: "variable"
            }
          }
        },
        /[\w-]+(?=\s+\{)/
      ],
      property: [/[-\w\.]+(?=\s*=(?!=))/, /"(?:\\[\s\S]|[^\\"])+"(?=\s*[:=])/],
      string: {
        pattern: /"(?:[^\\$"]|\\[\s\S]|\$(?:(?=")|\$+(?!\$)|[^"${])|\$\{(?:[^{}"]|"(?:[^\\"]|\\[\s\S])*")*\})*"/,
        greedy: !0,
        inside: {
          interpolation: {
            pattern: /(^|[^$])\$\{(?:[^{}"]|"(?:[^\\"]|\\[\s\S])*")*\}/,
            lookbehind: !0,
            inside: {
              type: {
                pattern: /(\b(?:count|data|local|module|path|self|terraform|var)\b\.)[\w\*]+/i,
                lookbehind: !0,
                alias: "variable"
              },
              keyword: /\b(?:count|data|local|module|path|self|terraform|var)\b/i,
              function: /\w+(?=\()/,
              string: {
                pattern: /"(?:\\[\s\S]|[^\\"])*"/,
                greedy: !0
              },
              number: /\b0x[\da-f]+\b|\b\d+(?:\.\d*)?(?:e[+-]?\d+)?/i,
              punctuation: /[!\$#%&'()*+,.\/;<=>@\[\\\]^`{|}~?:]/
            }
          }
        }
      },
      number: /\b0x[\da-f]+\b|\b\d+(?:\.\d*)?(?:e[+-]?\d+)?/i,
      boolean: /\b(?:false|true)\b/i,
      punctuation: /[=\[\]{}]/
    };
  }
  return ig;
}
var og, nk;
function F9() {
  if (nk) return og;
  nk = 1;
  var e = hi();
  og = t, t.displayName = "hlsl", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.hlsl = n.languages.extend("c", {
      // Regarding keywords and class names:
      // The list of all keywords was split into 'keyword' and 'class-name' tokens based on whether they are capitalized.
      // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-keywords
      // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-reserved-words
      "class-name": [
        n.languages.c["class-name"],
        /\b(?:AppendStructuredBuffer|BlendState|Buffer|ByteAddressBuffer|CompileShader|ComputeShader|ConsumeStructuredBuffer|DepthStencilState|DepthStencilView|DomainShader|GeometryShader|Hullshader|InputPatch|LineStream|OutputPatch|PixelShader|PointStream|RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture(?:1D|1DArray|2D|2DArray|3D)|RasterizerState|RenderTargetView|SamplerComparisonState|SamplerState|StructuredBuffer|Texture(?:1D|1DArray|2D|2DArray|2DMS|2DMSArray|3D|Cube|CubeArray)|TriangleStream|VertexShader)\b/
      ],
      keyword: [
        // HLSL keyword
        /\b(?:asm|asm_fragment|auto|break|case|catch|cbuffer|centroid|char|class|column_major|compile|compile_fragment|const|const_cast|continue|default|delete|discard|do|dynamic_cast|else|enum|explicit|export|extern|for|friend|fxgroup|goto|groupshared|if|in|inline|inout|interface|line|lineadj|linear|long|matrix|mutable|namespace|new|nointerpolation|noperspective|operator|out|packoffset|pass|pixelfragment|point|precise|private|protected|public|register|reinterpret_cast|return|row_major|sample|sampler|shared|short|signed|sizeof|snorm|stateblock|stateblock_state|static|static_cast|string|struct|switch|tbuffer|technique|technique10|technique11|template|texture|this|throw|triangle|triangleadj|try|typedef|typename|uniform|union|unorm|unsigned|using|vector|vertexfragment|virtual|void|volatile|while)\b/,
        // scalar, vector, and matrix types
        /\b(?:bool|double|dword|float|half|int|min(?:10float|12int|16(?:float|int|uint))|uint)(?:[1-4](?:x[1-4])?)?\b/
      ],
      // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-grammar#floating-point-numbers
      number: /(?:(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[eE][+-]?\d+)?|\b0x[\da-fA-F]+)[fFhHlLuU]?\b/,
      boolean: /\b(?:false|true)\b/
    });
  }
  return og;
}
var sg, rk;
function B9() {
  if (rk) return sg;
  rk = 1, sg = e, e.displayName = "hoon", e.aliases = [];
  function e(t) {
    t.languages.hoon = {
      comment: {
        pattern: /::.*/,
        greedy: !0
      },
      string: {
        pattern: /"[^"]*"|'[^']*'/,
        greedy: !0
      },
      constant: /%(?:\.[ny]|[\w-]+)/,
      "class-name": /@(?:[a-z0-9-]*[a-z0-9])?|\*/i,
      function: /(?:\+[-+] {2})?(?:[a-z](?:[a-z0-9-]*[a-z0-9])?)/,
      keyword: /\.[\^\+\*=\?]|![><:\.=\?!]|=[>|:,\.\-\^<+;/~\*\?]|\?[>|:\.\-\^<\+&~=@!]|\|[\$_%:\.\-\^~\*=@\?]|\+[|\$\+\*]|:[_\-\^\+~\*]|%[_:\.\-\^\+~\*=]|\^[|:\.\-\+&~\*=\?]|\$[|_%:<>\-\^&~@=\?]|;[:<\+;\/~\*=]|~[>|\$_%<\+\/&=\?!]|--|==/
    };
  }
  return sg;
}
var lg, ak;
function U9() {
  if (ak) return lg;
  ak = 1, lg = e, e.displayName = "hpkp", e.aliases = [];
  function e(t) {
    t.languages.hpkp = {
      directive: {
        pattern: /\b(?:includeSubDomains|max-age|pin-sha256|preload|report-to|report-uri|strict)(?=[\s;=]|$)/i,
        alias: "property"
      },
      operator: /=/,
      punctuation: /;/
    };
  }
  return lg;
}
var ug, ik;
function H9() {
  if (ik) return ug;
  ik = 1, ug = e, e.displayName = "hsts", e.aliases = [];
  function e(t) {
    t.languages.hsts = {
      directive: {
        pattern: /\b(?:includeSubDomains|max-age|preload)(?=[\s;=]|$)/i,
        alias: "property"
      },
      operator: /=/,
      punctuation: /;/
    };
  }
  return ug;
}
var cg, ok;
function $9() {
  if (ok) return cg;
  ok = 1, cg = e, e.displayName = "http", e.aliases = [];
  function e(t) {
    (function(n) {
      function r(g) {
        return RegExp("(^(?:" + g + "):[ 	]*(?![ 	]))[^]+", "i");
      }
      n.languages.http = {
        "request-line": {
          pattern: /^(?:CONNECT|DELETE|GET|HEAD|OPTIONS|PATCH|POST|PRI|PUT|SEARCH|TRACE)\s(?:https?:\/\/|\/)\S*\sHTTP\/[\d.]+/m,
          inside: {
            // HTTP Method
            method: {
              pattern: /^[A-Z]+\b/,
              alias: "property"
            },
            // Request Target e.g. http://example.com, /path/to/file
            "request-target": {
              pattern: /^(\s)(?:https?:\/\/|\/)\S*(?=\s)/,
              lookbehind: !0,
              alias: "url",
              inside: n.languages.uri
            },
            // HTTP Version
            "http-version": {
              pattern: /^(\s)HTTP\/[\d.]+/,
              lookbehind: !0,
              alias: "property"
            }
          }
        },
        "response-status": {
          pattern: /^HTTP\/[\d.]+ \d+ .+/m,
          inside: {
            // HTTP Version
            "http-version": {
              pattern: /^HTTP\/[\d.]+/,
              alias: "property"
            },
            // Status Code
            "status-code": {
              pattern: /^(\s)\d+(?=\s)/,
              lookbehind: !0,
              alias: "number"
            },
            // Reason Phrase
            "reason-phrase": {
              pattern: /^(\s).+/,
              lookbehind: !0,
              alias: "string"
            }
          }
        },
        header: {
          pattern: /^[\w-]+:.+(?:(?:\r\n?|\n)[ \t].+)*/m,
          inside: {
            "header-value": [
              {
                pattern: r(/Content-Security-Policy/.source),
                lookbehind: !0,
                alias: ["csp", "languages-csp"],
                inside: n.languages.csp
              },
              {
                pattern: r(/Public-Key-Pins(?:-Report-Only)?/.source),
                lookbehind: !0,
                alias: ["hpkp", "languages-hpkp"],
                inside: n.languages.hpkp
              },
              {
                pattern: r(/Strict-Transport-Security/.source),
                lookbehind: !0,
                alias: ["hsts", "languages-hsts"],
                inside: n.languages.hsts
              },
              {
                pattern: r(/[^:]+/.source),
                lookbehind: !0
              }
            ],
            "header-name": {
              pattern: /^[^:]+/,
              alias: "keyword"
            },
            punctuation: /^:/
          }
        }
      };
      var o = n.languages, s = {
        "application/javascript": o.javascript,
        "application/json": o.json || o.javascript,
        "application/xml": o.xml,
        "text/xml": o.xml,
        "text/html": o.html,
        "text/css": o.css,
        "text/plain": o.plain
      }, u = {
        "application/json": !0,
        "application/xml": !0
      };
      function c(g) {
        var T = g.replace(/^[a-z]+\//, ""), y = "\\w+/(?:[\\w.-]+\\+)+" + T + "(?![+\\w.-])";
        return "(?:" + g + "|" + y + ")";
      }
      var p;
      for (var f in s)
        if (s[f]) {
          p = p || {};
          var b = u[f] ? c(f) : f;
          p[f.replace(/\//g, "-")] = {
            pattern: RegExp(
              "(" + /content-type:\s*/.source + b + /(?:(?:\r\n?|\n)[\w-].*)*(?:\r(?:\n|(?!\n))|\n)/.source + ")" + // This is a little interesting:
              // The HTTP format spec required 1 empty line before the body to make everything unambiguous.
              // However, when writing code by hand (e.g. to display on a website) people can forget about this,
              // so we want to be liberal here. We will allow the empty line to be omitted if the first line of
              // the body does not start with a [\w-] character (as headers do).
              /[^ \t\w-][\s\S]*/.source,
              "i"
            ),
            lookbehind: !0,
            inside: s[f]
          };
        }
      p && n.languages.insertBefore("http", "header", p);
    })(t);
  }
  return cg;
}
var dg, sk;
function z9() {
  if (sk) return dg;
  sk = 1, dg = e, e.displayName = "ichigojam", e.aliases = [];
  function e(t) {
    t.languages.ichigojam = {
      comment: /(?:\B'|REM)(?:[^\n\r]*)/i,
      string: {
        pattern: /"(?:""|[!#$%&'()*,\/:;<=>?^\w +\-.])*"/,
        greedy: !0
      },
      number: /\B#[0-9A-F]+|\B`[01]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i,
      keyword: /\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GOTO|GSB|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RIGHT|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\$|\b)/i,
      function: /\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\$|\b)/i,
      label: /(?:\B@\S+)/,
      operator: /<[=>]?|>=?|\|\||&&|[+\-*\/=|&^~!]|\b(?:AND|NOT|OR)\b/i,
      punctuation: /[\[,;:()\]]/
    };
  }
  return dg;
}
var pg, lk;
function G9() {
  if (lk) return pg;
  lk = 1, pg = e, e.displayName = "icon", e.aliases = [];
  function e(t) {
    t.languages.icon = {
      comment: /#.*/,
      string: {
        pattern: /(["'])(?:(?!\1)[^\\\r\n_]|\\.|_(?!\1)(?:\r\n|[\s\S]))*\1/,
        greedy: !0
      },
      number: /\b(?:\d+r[a-z\d]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b|\.\d+\b/i,
      "builtin-keyword": {
        pattern: /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\b/,
        alias: "variable"
      },
      directive: {
        pattern: /\$\w+/,
        alias: "builtin"
      },
      keyword: /\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\b/,
      function: /\b(?!\d)\w+(?=\s*[({]|\s*!\s*\[)/,
      operator: /[+-]:(?!=)|(?:[\/?@^%&]|\+\+?|--?|==?=?|~==?=?|\*\*?|\|\|\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\|~]/,
      punctuation: /[\[\](){},;]/
    };
  }
  return pg;
}
var fg, uk;
function q9() {
  if (uk) return fg;
  uk = 1, fg = e, e.displayName = "icuMessageFormat", e.aliases = [];
  function e(t) {
    (function(n) {
      function r(f, b) {
        return b <= 0 ? /[]/.source : f.replace(/<SELF>/g, function() {
          return r(f, b - 1);
        });
      }
      var o = /'[{}:=,](?:[^']|'')*'(?!')/, s = {
        pattern: /''/,
        greedy: !0,
        alias: "operator"
      }, u = {
        pattern: o,
        greedy: !0,
        inside: {
          escape: s
        }
      }, c = r(
        /\{(?:[^{}']|'(?![{},'])|''|<STR>|<SELF>)*\}/.source.replace(
          /<STR>/g,
          function() {
            return o.source;
          }
        ),
        8
      ), p = {
        pattern: RegExp(c),
        inside: {
          message: {
            pattern: /^(\{)[\s\S]+(?=\}$)/,
            lookbehind: !0,
            inside: null
            // see below
          },
          "message-delimiter": {
            pattern: /./,
            alias: "punctuation"
          }
        }
      };
      n.languages["icu-message-format"] = {
        argument: {
          pattern: RegExp(c),
          greedy: !0,
          inside: {
            content: {
              pattern: /^(\{)[\s\S]+(?=\}$)/,
              lookbehind: !0,
              inside: {
                "argument-name": {
                  pattern: /^(\s*)[^{}:=,\s]+/,
                  lookbehind: !0
                },
                "choice-style": {
                  // https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classicu_1_1ChoiceFormat.html#details
                  pattern: /^(\s*,\s*choice\s*,\s*)\S(?:[\s\S]*\S)?/,
                  lookbehind: !0,
                  inside: {
                    punctuation: /\|/,
                    range: {
                      pattern: /^(\s*)[+-]?(?:\d+(?:\.\d*)?|\u221e)\s*[<#\u2264]/,
                      lookbehind: !0,
                      inside: {
                        operator: /[<#\u2264]/,
                        number: /\S+/
                      }
                    },
                    rest: null
                    // see below
                  }
                },
                "plural-style": {
                  // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/PluralFormat.html#:~:text=Patterns%20and%20Their%20Interpretation
                  pattern: /^(\s*,\s*(?:plural|selectordinal)\s*,\s*)\S(?:[\s\S]*\S)?/,
                  lookbehind: !0,
                  inside: {
                    offset: /^offset:\s*\d+/,
                    "nested-message": p,
                    selector: {
                      pattern: /=\d+|[^{}:=,\s]+/,
                      inside: {
                        keyword: /^(?:few|many|one|other|two|zero)$/
                      }
                    }
                  }
                },
                "select-style": {
                  // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/SelectFormat.html#:~:text=Patterns%20and%20Their%20Interpretation
                  pattern: /^(\s*,\s*select\s*,\s*)\S(?:[\s\S]*\S)?/,
                  lookbehind: !0,
                  inside: {
                    "nested-message": p,
                    selector: {
                      pattern: /[^{}:=,\s]+/,
                      inside: {
                        keyword: /^other$/
                      }
                    }
                  }
                },
                keyword: /\b(?:choice|plural|select|selectordinal)\b/,
                "arg-type": {
                  pattern: /\b(?:date|duration|number|ordinal|spellout|time)\b/,
                  alias: "keyword"
                },
                "arg-skeleton": {
                  pattern: /(,\s*)::[^{}:=,\s]+/,
                  lookbehind: !0
                },
                "arg-style": {
                  pattern: /(,\s*)(?:currency|full|integer|long|medium|percent|short)(?=\s*$)/,
                  lookbehind: !0
                },
                "arg-style-text": {
                  pattern: RegExp(
                    /(^\s*,\s*(?=\S))/.source + r(/(?:[^{}']|'[^']*'|\{(?:<SELF>)?\})+/.source, 8) + "$"
                  ),
                  lookbehind: !0,
                  alias: "string"
                },
                punctuation: /,/
              }
            },
            "argument-delimiter": {
              pattern: /./,
              alias: "operator"
            }
          }
        },
        escape: s,
        string: u
      }, p.inside.message.inside = n.languages["icu-message-format"], n.languages["icu-message-format"].argument.inside.content.inside["choice-style"].inside.rest = n.languages["icu-message-format"];
    })(t);
  }
  return fg;
}
var hg, ck;
function j9() {
  if (ck) return hg;
  ck = 1;
  var e = KE();
  hg = t, t.displayName = "idris", t.aliases = ["idr"];
  function t(n) {
    n.register(e), n.languages.idris = n.languages.extend("haskell", {
      comment: {
        pattern: /(?:(?:--|\|\|\|).*$|\{-[\s\S]*?-\})/m
      },
      keyword: /\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\b/,
      builtin: void 0
    }), n.languages.insertBefore("idris", "keyword", {
      "import-statement": {
        pattern: /(^\s*import\s+)(?:[A-Z][\w']*)(?:\.[A-Z][\w']*)*/m,
        lookbehind: !0,
        inside: {
          punctuation: /\./
        }
      }
    }), n.languages.idr = n.languages.idris;
  }
  return hg;
}
var gg, dk;
function V9() {
  if (dk) return gg;
  dk = 1, gg = e, e.displayName = "iecst", e.aliases = [];
  function e(t) {
    t.languages.iecst = {
      comment: [
        {
          pattern: /(^|[^\\])(?:\/\*[\s\S]*?(?:\*\/|$)|\(\*[\s\S]*?(?:\*\)|$)|\{[\s\S]*?(?:\}|$))/,
          lookbehind: !0,
          greedy: !0
        },
        {
          pattern: /(^|[^\\:])\/\/.*/,
          lookbehind: !0,
          greedy: !0
        }
      ],
      string: {
        pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
        greedy: !0
      },
      keyword: [
        /\b(?:END_)?(?:PROGRAM|CONFIGURATION|INTERFACE|FUNCTION_BLOCK|FUNCTION|ACTION|TRANSITION|TYPE|STRUCT|(?:INITIAL_)?STEP|NAMESPACE|LIBRARY|CHANNEL|FOLDER|RESOURCE|VAR_(?:ACCESS|CONFIG|EXTERNAL|GLOBAL|INPUT|IN_OUT|OUTPUT|TEMP)|VAR|METHOD|PROPERTY)\b/i,
        /\b(?:AT|BY|(?:END_)?(?:CASE|FOR|IF|REPEAT|WHILE)|CONSTANT|CONTINUE|DO|ELSE|ELSIF|EXIT|EXTENDS|FROM|GET|GOTO|IMPLEMENTS|JMP|NON_RETAIN|OF|PRIVATE|PROTECTED|PUBLIC|RETAIN|RETURN|SET|TASK|THEN|TO|UNTIL|USING|WITH|__CATCH|__ENDTRY|__FINALLY|__TRY)\b/
      ],
      "class-name": /\b(?:ANY|ARRAY|BOOL|BYTE|U?(?:D|L|S)?INT|(?:D|L)?WORD|DATE(?:_AND_TIME)?|DT|L?REAL|POINTER|STRING|TIME(?:_OF_DAY)?|TOD)\b/,
      address: {
        pattern: /%[IQM][XBWDL][\d.]*|%[IQ][\d.]*/,
        alias: "symbol"
      },
      number: /\b(?:16#[\da-f]+|2#[01_]+|0x[\da-f]+)\b|\b(?:D|DT|T|TOD)#[\d_shmd:]*|\b[A-Z]*#[\d.,_]*|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
      boolean: /\b(?:FALSE|NULL|TRUE)\b/,
      operator: /S?R?:?=>?|&&?|\*\*?|<[=>]?|>=?|[-:^/+#]|\b(?:AND|EQ|EXPT|GE|GT|LE|LT|MOD|NE|NOT|OR|XOR)\b/,
      function: /\b[a-z_]\w*(?=\s*\()/i,
      punctuation: /[()[\].,;]/
    };
  }
  return gg;
}
var mg, pk;
function W9() {
  if (pk) return mg;
  pk = 1, mg = e, e.displayName = "ignore", e.aliases = ["gitignore", "hgignore", "npmignore"];
  function e(t) {
    (function(n) {
      n.languages.ignore = {
        // https://git-scm.com/docs/gitignore
        comment: /^#.*/m,
        entry: {
          pattern: /\S(?:.*(?:(?:\\ )|\S))?/,
          alias: "string",
          inside: {
            operator: /^!|\*\*?|\?/,
            regex: {
              pattern: /(^|[^\\])\[[^\[\]]*\]/,
              lookbehind: !0
            },
            punctuation: /\//
          }
        }
      }, n.languages.gitignore = n.languages.ignore, n.languages.hgignore = n.languages.ignore, n.languages.npmignore = n.languages.ignore;
    })(t);
  }
  return mg;
}
var bg, fk;
function Y9() {
  if (fk) return bg;
  fk = 1, bg = e, e.displayName = "inform7", e.aliases = [];
  function e(t) {
    t.languages.inform7 = {
      string: {
        pattern: /"[^"]*"/,
        inside: {
          substitution: {
            pattern: /\[[^\[\]]+\]/,
            inside: {
              delimiter: {
                pattern: /\[|\]/,
                alias: "punctuation"
              }
              // See rest below
            }
          }
        }
      },
      comment: {
        pattern: /\[[^\[\]]+\]/,
        greedy: !0
      },
      title: {
        pattern: /^[ \t]*(?:book|chapter|part(?! of)|section|table|volume)\b.+/im,
        alias: "important"
      },
      number: {
        pattern: /(^|[^-])(?:\b\d+(?:\.\d+)?(?:\^\d+)?(?:(?!\d)\w+)?|\b(?:eight|eleven|five|four|nine|one|seven|six|ten|three|twelve|two))\b(?!-)/i,
        lookbehind: !0
      },
      verb: {
        pattern: /(^|[^-])\b(?:answering|applying to|are|asking|attacking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:ing|s)?|consulting|contain(?:ing|s)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:s|ve|ving)|hold(?:ing|s)?|impl(?:ies|y)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:ing|s)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:ing|s)?|setting|showing|singing|sleeping|smelling|squeezing|support(?:ing|s)?|swearing|switching|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:ing|s)?|var(?:ies|y|ying)|waiting|waking|waving|wear(?:ing|s)?)\b(?!-)/i,
        lookbehind: !0,
        alias: "operator"
      },
      keyword: {
        pattern: /(^|[^-])\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|the story|unless)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\b(?!-)/i,
        lookbehind: !0
      },
      property: {
        pattern: /(^|[^-])\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: off| on)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\b(?!-)/i,
        lookbehind: !0,
        alias: "symbol"
      },
      position: {
        pattern: /(^|[^-])\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\b(?!-)/i,
        lookbehind: !0,
        alias: "keyword"
      },
      type: {
        pattern: /(^|[^-])\b(?:actions?|activit(?:ies|y)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\b(?!-)/i,
        lookbehind: !0,
        alias: "variable"
      },
      punctuation: /[.,:;(){}]/
    }, t.languages.inform7.string.inside.substitution.inside.rest = t.languages.inform7, t.languages.inform7.string.inside.substitution.inside.rest.text = {
      pattern: /\S(?:\s*\S)*/,
      alias: "comment"
    };
  }
  return bg;
}
var Eg, hk;
function K9() {
  if (hk) return Eg;
  hk = 1, Eg = e, e.displayName = "ini", e.aliases = [];
  function e(t) {
    t.languages.ini = {
      /**
       * The component mimics the behavior of the Win32 API parser.
       *
       * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}
       */
      comment: {
        pattern: /(^[ \f\t\v]*)[#;][^\n\r]*/m,
        lookbehind: !0
      },
      section: {
        pattern: /(^[ \f\t\v]*)\[[^\n\r\]]*\]?/m,
        lookbehind: !0,
        inside: {
          "section-name": {
            pattern: /(^\[[ \f\t\v]*)[^ \f\t\v\]]+(?:[ \f\t\v]+[^ \f\t\v\]]+)*/,
            lookbehind: !0,
            alias: "selector"
          },
          punctuation: /\[|\]/
        }
      },
      key: {
        pattern: /(^[ \f\t\v]*)[^ \f\n\r\t\v=]+(?:[ \f\t\v]+[^ \f\n\r\t\v=]+)*(?=[ \f\t\v]*=)/m,
        lookbehind: !0,
        alias: "attr-name"
      },
      value: {
        pattern: /(=[ \f\t\v]*)[^ \f\n\r\t\v]+(?:[ \f\t\v]+[^ \f\n\r\t\v]+)*/,
        lookbehind: !0,
        alias: "attr-value",
        inside: {
          "inner-value": {
            pattern: /^("|').+(?=\1$)/,
            lookbehind: !0
          }
        }
      },
      punctuation: /=/
    };
  }
  return Eg;
}
var yg, gk;
function X9() {
  if (gk) return yg;
  gk = 1, yg = e, e.displayName = "io", e.aliases = [];
  function e(t) {
    t.languages.io = {
      comment: {
        pattern: /(^|[^\\])(?:\/\*[\s\S]*?(?:\*\/|$)|\/\/.*|#.*)/,
        lookbehind: !0,
        greedy: !0
      },
      "triple-quoted-string": {
        pattern: /"""(?:\\[\s\S]|(?!""")[^\\])*"""/,
        greedy: !0,
        alias: "string"
      },
      string: {
        pattern: /"(?:\\.|[^\\\r\n"])*"/,
        greedy: !0
      },
      keyword: /\b(?:activate|activeCoroCount|asString|block|break|call|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getEnvironmentVariable|getSlot|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|try|type|uniqueId|updateSlot|wait|while|write|yield)\b/,
      builtin: /\b(?:Array|AudioDevice|AudioMixer|BigNum|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Random|Regex|SGML|SGMLElement|SGMLParser|SQLite|Sequence|Server|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink)\b/,
      boolean: /\b(?:false|nil|true)\b/,
      number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e-?\d+)?/i,
      operator: /[=!*/%+\-^&|]=|>>?=?|<<?=?|:?:?=|\+\+?|--?|\*\*?|\/\/?|%|\|\|?|&&?|\b(?:and|not|or|return)\b|@@?|\?\??|\.\./,
      punctuation: /[{}[\];(),.:]/
    };
  }
  return yg;
}
var Tg, mk;
function Q9() {
  if (mk) return Tg;
  mk = 1, Tg = e, e.displayName = "j", e.aliases = [];
  function e(t) {
    t.languages.j = {
      comment: {
        pattern: /\bNB\..*/,
        greedy: !0
      },
      string: {
        pattern: /'(?:''|[^'\r\n])*'/,
        greedy: !0
      },
      keyword: /\b(?:(?:CR|LF|adverb|conjunction|def|define|dyad|monad|noun|verb)\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\w+|goto_\w+|if|label_\w+|return|select|throw|try|while|whilst)\.)/,
      verb: {
        // Negative look-ahead prevents bad highlighting
        // of ^: ;. =. =: !. !:
        pattern: /(?!\^:|;\.|[=!][.:])(?:\{(?:\.|::?)?|p(?:\.\.?|:)|[=!\]]|[<>+*\-%$|,#][.:]?|[?^]\.?|[;\[]:?|[~}"i][.:]|[ACeEIjLor]\.|(?:[_\/\\qsux]|_?\d):)/,
        alias: "keyword"
      },
      number: /\b_?(?:(?!\d:)\d+(?:\.\d+)?(?:(?:ad|ar|[ejpx])_?\d+(?:\.\d+)?)*(?:b_?[\da-z]+(?:\.[\da-z]+)?)?|_\b(?!\.))/,
      adverb: {
        pattern: /[~}]|[\/\\]\.?|[bfM]\.|t[.:]/,
        alias: "builtin"
      },
      operator: /[=a][.:]|_\./,
      conjunction: {
        pattern: /&(?:\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\.|`:?|[\^LS]:|"/,
        alias: "variable"
      },
      punctuation: /[()]/
    };
  }
  return Tg;
}
var Sg, bk;
function XE() {
  if (bk) return Sg;
  bk = 1, Sg = e, e.displayName = "java", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\b/, o = /(^|[^\w.])(?:[a-z]\w*\s*\.\s*)*(?:[A-Z]\w*\s*\.\s*)*/.source, s = {
        pattern: RegExp(o + /[A-Z](?:[\d_A-Z]*[a-z]\w*)?\b/.source),
        lookbehind: !0,
        inside: {
          namespace: {
            pattern: /^[a-z]\w*(?:\s*\.\s*[a-z]\w*)*(?:\s*\.)?/,
            inside: {
              punctuation: /\./
            }
          },
          punctuation: /\./
        }
      };
      n.languages.java = n.languages.extend("clike", {
        string: {
          pattern: /(^|[^\\])"(?:\\.|[^"\\\r\n])*"/,
          lookbehind: !0,
          greedy: !0
        },
        "class-name": [
          s,
          {
            // variables and parameters
            // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)
            pattern: RegExp(
              o + /[A-Z]\w*(?=\s+\w+\s*[;,=()])/.source
            ),
            lookbehind: !0,
            inside: s.inside
          }
        ],
        keyword: r,
        function: [
          n.languages.clike.function,
          {
            pattern: /(::\s*)[a-z_]\w*/,
            lookbehind: !0
          }
        ],
        number: /\b0b[01][01_]*L?\b|\b0x(?:\.[\da-f_p+-]+|[\da-f_]+(?:\.[\da-f_p+-]+)?)\b|(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?\d[\d_]*)?[dfl]?/i,
        operator: {
          pattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\+\+|&&|\|\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,
          lookbehind: !0
        }
      }), n.languages.insertBefore("java", "string", {
        "triple-quoted-string": {
          // http://openjdk.java.net/jeps/355#Description
          pattern: /"""[ \t]*[\r\n](?:(?:"|"")?(?:\\.|[^"\\]))*"""/,
          greedy: !0,
          alias: "string"
        },
        char: {
          pattern: /'(?:\\.|[^'\\\r\n]){1,6}'/,
          greedy: !0
        }
      }), n.languages.insertBefore("java", "class-name", {
        annotation: {
          pattern: /(^|[^.])@\w+(?:\s*\.\s*\w+)*/,
          lookbehind: !0,
          alias: "punctuation"
        },
        generics: {
          pattern: /<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&))*>)*>)*>)*>/,
          inside: {
            "class-name": s,
            keyword: r,
            punctuation: /[<>(),.:]/,
            operator: /[?&|]/
          }
        },
        namespace: {
          pattern: RegExp(
            /(\b(?:exports|import(?:\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\s+)(?!<keyword>)[a-z]\w*(?:\.[a-z]\w*)*\.?/.source.replace(
              /<keyword>/g,
              function() {
                return r.source;
              }
            )
          ),
          lookbehind: !0,
          inside: {
            punctuation: /\./
          }
        }
      });
    })(t);
  }
  return Sg;
}
var _g, Ek;
function hc() {
  if (Ek) return _g;
  Ek = 1, _g = e, e.displayName = "javadoclike", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = n.languages.javadoclike = {
        parameter: {
          pattern: /(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*@(?:arg|arguments|param)\s+)\w+/m,
          lookbehind: !0
        },
        keyword: {
          // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.
          // @word, {@word}
          pattern: /(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*|\{)@[a-z][a-zA-Z-]+\b/m,
          lookbehind: !0
        },
        punctuation: /[{}]/
      };
      function o(u, c) {
        var p = "doc-comment", f = n.languages[u];
        if (f) {
          var b = f[p];
          if (!b) {
            var g = {};
            g[p] = {
              pattern: /(^|[^\\])\/\*\*[^/][\s\S]*?(?:\*\/|$)/,
              lookbehind: !0,
              alias: "comment"
            }, f = n.languages.insertBefore(u, "comment", g), b = f[p];
          }
          if (b instanceof RegExp && (b = f[p] = {
            pattern: b
          }), Array.isArray(b))
            for (var T = 0, y = b.length; T < y; T++)
              b[T] instanceof RegExp && (b[T] = {
                pattern: b[T]
              }), c(b[T]);
          else
            c(b);
        }
      }
      function s(u, c) {
        typeof u == "string" && (u = [u]), u.forEach(function(p) {
          o(p, function(f) {
            f.inside || (f.inside = {}), f.inside.rest = c;
          });
        });
      }
      Object.defineProperty(r, "addSupport", {
        value: s
      }), r.addSupport(["java", "javascript", "php"], r);
    })(t);
  }
  return _g;
}
var vg, yk;
function Z9() {
  if (yk) return vg;
  yk = 1;
  var e = XE(), t = hc();
  vg = n, n.displayName = "javadoc", n.aliases = [];
  function n(r) {
    r.register(e), r.register(t), function(o) {
      var s = /(^(?:[\t ]*(?:\*\s*)*))[^*\s].*$/m, u = /#\s*\w+(?:\s*\([^()]*\))?/.source, c = /(?:\b[a-zA-Z]\w+\s*\.\s*)*\b[A-Z]\w*(?:\s*<mem>)?|<mem>/.source.replace(
        /<mem>/g,
        function() {
          return u;
        }
      );
      o.languages.javadoc = o.languages.extend("javadoclike", {}), o.languages.insertBefore("javadoc", "keyword", {
        reference: {
          pattern: RegExp(
            /(@(?:exception|link|linkplain|see|throws|value)\s+(?:\*\s*)?)/.source + "(?:" + c + ")"
          ),
          lookbehind: !0,
          inside: {
            function: {
              pattern: /(#\s*)\w+(?=\s*\()/,
              lookbehind: !0
            },
            field: {
              pattern: /(#\s*)\w+/,
              lookbehind: !0
            },
            namespace: {
              pattern: /\b(?:[a-z]\w*\s*\.\s*)+/,
              inside: {
                punctuation: /\./
              }
            },
            "class-name": /\b[A-Z]\w*/,
            keyword: o.languages.java.keyword,
            punctuation: /[#()[\],.]/
          }
        },
        "class-name": {
          // @param <T> the first generic type parameter
          pattern: /(@param\s+)<[A-Z]\w*>/,
          lookbehind: !0,
          inside: {
            punctuation: /[.<>]/
          }
        },
        "code-section": [
          {
            pattern: /(\{@code\s+(?!\s))(?:[^\s{}]|\s+(?![\s}])|\{(?:[^{}]|\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\})*\})+(?=\s*\})/,
            lookbehind: !0,
            inside: {
              code: {
                // there can't be any HTML inside of {@code} tags
                pattern: s,
                lookbehind: !0,
                inside: o.languages.java,
                alias: "language-java"
              }
            }
          },
          {
            pattern: /(<(code|pre|tt)>(?!<code>)\s*)\S(?:\S|\s+\S)*?(?=\s*<\/\2>)/,
            lookbehind: !0,
            inside: {
              line: {
                pattern: s,
                lookbehind: !0,
                inside: {
                  // highlight HTML tags and entities
                  tag: o.languages.markup.tag,
                  entity: o.languages.markup.entity,
                  code: {
                    // everything else is Java code
                    pattern: /.+/,
                    inside: o.languages.java,
                    alias: "language-java"
                  }
                }
              }
            }
          }
        ],
        tag: o.languages.markup.tag,
        entity: o.languages.markup.entity
      }), o.languages.javadoclike.addSupport("java", o.languages.javadoc);
    }(r);
  }
  return vg;
}
var Ag, Tk;
function J9() {
  if (Tk) return Ag;
  Tk = 1, Ag = e, e.displayName = "javastacktrace", e.aliases = [];
  function e(t) {
    t.languages.javastacktrace = {
      // java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]
      // Caused by: java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]
      // Caused by: com.example.myproject.MyProjectServletException
      // Caused by: MidLevelException: LowLevelException
      // Suppressed: Resource$CloseFailException: Resource ID = 0
      summary: {
        pattern: /^([\t ]*)(?:(?:Caused by:|Suppressed:|Exception in thread "[^"]*")[\t ]+)?[\w$.]+(?::.*)?$/m,
        lookbehind: !0,
        inside: {
          keyword: {
            pattern: /^([\t ]*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,
            lookbehind: !0
          },
          // the current thread if the summary starts with 'Exception in thread'
          string: {
            pattern: /^(\s*)"[^"]*"/,
            lookbehind: !0
          },
          exceptions: {
            pattern: /^(:?\s*)[\w$.]+(?=:|$)/,
            lookbehind: !0,
            inside: {
              "class-name": /[\w$]+$/,
              namespace: /\b[a-z]\w*\b/,
              punctuation: /\./
            }
          },
          message: {
            pattern: /(:\s*)\S.*/,
            lookbehind: !0,
            alias: "string"
          },
          punctuation: /:/
        }
      },
      // at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)
      // at org.hsqldb.jdbc.Util.throwError(Unknown Source) here could be some notes
      // at java.base/java.lang.Class.forName0(Native Method)
      // at Util.<init>(Unknown Source)
      // at com.foo.loader/foo@9.0/com.foo.Main.run(Main.java:101)
      // at com.foo.loader//com.foo.bar.App.run(App.java:12)
      // at acme@2.1/org.acme.Lib.test(Lib.java:80)
      // at MyClass.mash(MyClass.java:9)
      //
      // More information:
      // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/StackTraceElement.html#toString()
      //
      // A valid Java module name is defined as:
      //   "A module name consists of one or more Java identifiers (§3.8) separated by "." tokens."
      // https://docs.oracle.com/javase/specs/jls/se9/html/jls-6.html#jls-ModuleName
      //
      // A Java module version is defined by this class:
      // https://docs.oracle.com/javase/9/docs/api/java/lang/module/ModuleDescriptor.Version.html
      // This is the implementation of the `parse` method in JDK13:
      // https://github.com/matcdac/jdk/blob/2305df71d1b7710266ae0956d73927a225132c0f/src/java.base/share/classes/java/lang/module/ModuleDescriptor.java#L1108
      // However, to keep this simple, a version will be matched by the pattern /@[\w$.+-]*/.
      "stack-frame": {
        pattern: /^([\t ]*)at (?:[\w$./]|@[\w$.+-]*\/)+(?:<init>)?\([^()]*\)/m,
        lookbehind: !0,
        inside: {
          keyword: {
            pattern: /^(\s*)at(?= )/,
            lookbehind: !0
          },
          source: [
            // (Main.java:15)
            // (Main.scala:15)
            {
              pattern: /(\()\w+\.\w+:\d+(?=\))/,
              lookbehind: !0,
              inside: {
                file: /^\w+\.\w+/,
                punctuation: /:/,
                "line-number": {
                  pattern: /\b\d+\b/,
                  alias: "number"
                }
              }
            },
            // (Unknown Source)
            // (Native Method)
            // (...something...)
            {
              pattern: /(\()[^()]*(?=\))/,
              lookbehind: !0,
              inside: {
                keyword: /^(?:Native Method|Unknown Source)$/
              }
            }
          ],
          "class-name": /[\w$]+(?=\.(?:<init>|[\w$]+)\()/,
          function: /(?:<init>|[\w$]+)(?=\()/,
          "class-loader": {
            pattern: /(\s)[a-z]\w*(?:\.[a-z]\w*)*(?=\/[\w@$.]*\/)/,
            lookbehind: !0,
            alias: "namespace",
            inside: {
              punctuation: /\./
            }
          },
          module: {
            pattern: /([\s/])[a-z]\w*(?:\.[a-z]\w*)*(?:@[\w$.+-]*)?(?=\/)/,
            lookbehind: !0,
            inside: {
              version: {
                pattern: /(@)[\s\S]+/,
                lookbehind: !0,
                alias: "number"
              },
              punctuation: /[@.]/
            }
          },
          namespace: {
            pattern: /(?:\b[a-z]\w*\.)+/,
            inside: {
              punctuation: /\./
            }
          },
          punctuation: /[()/.]/
        }
      },
      // ... 32 more
      // ... 32 common frames omitted
      more: {
        pattern: /^([\t ]*)\.{3} \d+ [a-z]+(?: [a-z]+)*/m,
        lookbehind: !0,
        inside: {
          punctuation: /\.{3}/,
          number: /\d+/,
          keyword: /\b[a-z]+(?: [a-z]+)*\b/
        }
      }
    };
  }
  return Ag;
}
var kg, Sk;
function e7() {
  if (Sk) return kg;
  Sk = 1, kg = e, e.displayName = "jexl", e.aliases = [];
  function e(t) {
    t.languages.jexl = {
      string: /(["'])(?:\\[\s\S]|(?!\1)[^\\])*\1/,
      transform: {
        pattern: /(\|\s*)[a-zA-Zа-яА-Я_\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$][\wа-яА-Я\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$]*/,
        alias: "function",
        lookbehind: !0
      },
      function: /[a-zA-Zа-яА-Я_\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$][\wа-яА-Я\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$]*\s*(?=\()/,
      number: /\b\d+(?:\.\d+)?\b|\B\.\d+\b/,
      operator: /[<>!]=?|-|\+|&&|==|\|\|?|\/\/?|[?:*^%]/,
      boolean: /\b(?:false|true)\b/,
      keyword: /\bin\b/,
      punctuation: /[{}[\](),.]/
    };
  }
  return kg;
}
var Cg, _k;
function t7() {
  if (_k) return Cg;
  _k = 1, Cg = e, e.displayName = "jolie", e.aliases = [];
  function e(t) {
    t.languages.jolie = t.languages.extend("clike", {
      string: {
        pattern: /(^|[^\\])"(?:\\[\s\S]|[^"\\])*"/,
        lookbehind: !0,
        greedy: !0
      },
      "class-name": {
        pattern: /((?:\b(?:as|courier|embed|in|inputPort|outputPort|service)\b|@)[ \t]*)\w+/,
        lookbehind: !0
      },
      keyword: /\b(?:as|cH|comp|concurrent|constants|courier|cset|csets|default|define|else|embed|embedded|execution|exit|extender|for|foreach|forward|from|global|if|import|in|include|init|inputPort|install|instanceof|interface|is_defined|linkIn|linkOut|main|new|nullProcess|outputPort|over|private|provide|public|scope|sequential|service|single|spawn|synchronized|this|throw|throws|type|undef|until|while|with)\b/,
      function: /\b[a-z_]\w*(?=[ \t]*[@(])/i,
      number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?l?/i,
      operator: /-[-=>]?|\+[+=]?|<[<=]?|[>=*!]=?|&&|\|\||[?\/%^@|]/,
      punctuation: /[()[\]{},;.:]/,
      builtin: /\b(?:Byte|any|bool|char|double|enum|float|int|length|long|ranges|regex|string|undefined|void)\b/
    }), t.languages.insertBefore("jolie", "keyword", {
      aggregates: {
        pattern: /(\bAggregates\s*:\s*)(?:\w+(?:\s+with\s+\w+)?\s*,\s*)*\w+(?:\s+with\s+\w+)?/,
        lookbehind: !0,
        inside: {
          keyword: /\bwith\b/,
          "class-name": /\w+/,
          punctuation: /,/
        }
      },
      redirects: {
        pattern: /(\bRedirects\s*:\s*)(?:\w+\s*=>\s*\w+\s*,\s*)*(?:\w+\s*=>\s*\w+)/,
        lookbehind: !0,
        inside: {
          punctuation: /,/,
          "class-name": /\w+/,
          operator: /=>/
        }
      },
      property: {
        pattern: /\b(?:Aggregates|[Ii]nterfaces|Java|Javascript|Jolie|[Ll]ocation|OneWay|[Pp]rotocol|Redirects|RequestResponse)\b(?=[ \t]*:)/
      }
    });
  }
  return Cg;
}
var wg, vk;
function n7() {
  if (vk) return wg;
  vk = 1, wg = e, e.displayName = "jq", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /\\\((?:[^()]|\([^()]*\))*\)/.source, o = RegExp(
        /(^|[^\\])"(?:[^"\r\n\\]|\\[^\r\n(]|__)*"/.source.replace(
          /__/g,
          function() {
            return r;
          }
        )
      ), s = {
        interpolation: {
          pattern: RegExp(/((?:^|[^\\])(?:\\{2})*)/.source + r),
          lookbehind: !0,
          inside: {
            content: {
              pattern: /^(\\\()[\s\S]+(?=\)$)/,
              lookbehind: !0,
              inside: null
              // see below
            },
            punctuation: /^\\\(|\)$/
          }
        }
      }, u = n.languages.jq = {
        comment: /#.*/,
        property: {
          pattern: RegExp(o.source + /(?=\s*:(?!:))/.source),
          lookbehind: !0,
          greedy: !0,
          inside: s
        },
        string: {
          pattern: o,
          lookbehind: !0,
          greedy: !0,
          inside: s
        },
        function: {
          pattern: /(\bdef\s+)[a-z_]\w+/i,
          lookbehind: !0
        },
        variable: /\B\$\w+/,
        "property-literal": {
          pattern: /\b[a-z_]\w*(?=\s*:(?!:))/i,
          alias: "property"
        },
        keyword: /\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\b/,
        boolean: /\b(?:false|true)\b/,
        number: /(?:\b\d+\.|\B\.)?\b\d+(?:[eE][+-]?\d+)?\b/,
        operator: [
          {
            pattern: /\|=?/,
            alias: "pipe"
          },
          /\.\.|[!=<>]?=|\?\/\/|\/\/=?|[-+*/%]=?|[<>?]|\b(?:and|not|or)\b/
        ],
        "c-style-function": {
          pattern: /\b[a-z_]\w*(?=\s*\()/i,
          alias: "function"
        },
        punctuation: /::|[()\[\]{},:;]|\.(?=\s*[\[\w$])/,
        dot: {
          pattern: /\./,
          alias: "important"
        }
      };
      s.interpolation.inside.content.inside = u;
    })(t);
  }
  return wg;
}
var Ig, Ak;
function r7() {
  if (Ak) return Ig;
  Ak = 1, Ig = e, e.displayName = "jsExtras", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.insertBefore("javascript", "function-variable", {
        "method-variable": {
          pattern: RegExp(
            "(\\.\\s*)" + n.languages.javascript["function-variable"].pattern.source
          ),
          lookbehind: !0,
          alias: ["function-variable", "method", "function", "property-access"]
        }
      }), n.languages.insertBefore("javascript", "function", {
        method: {
          pattern: RegExp(
            "(\\.\\s*)" + n.languages.javascript.function.source
          ),
          lookbehind: !0,
          alias: ["function", "property-access"]
        }
      }), n.languages.insertBefore("javascript", "constant", {
        "known-class-name": [
          {
            // standard built-ins
            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects
            pattern: /\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\b/,
            alias: "class-name"
          },
          {
            // errors
            pattern: /\b(?:[A-Z]\w*)Error\b/,
            alias: "class-name"
          }
        ]
      });
      function r(f, b) {
        return RegExp(
          f.replace(/<ID>/g, function() {
            return /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/.source;
          }),
          b
        );
      }
      n.languages.insertBefore("javascript", "keyword", {
        imports: {
          // https://tc39.es/ecma262/#sec-imports
          pattern: r(
            /(\bimport\b\s*)(?:<ID>(?:\s*,\s*(?:\*\s*as\s+<ID>|\{[^{}]*\}))?|\*\s*as\s+<ID>|\{[^{}]*\})(?=\s*\bfrom\b)/.source
          ),
          lookbehind: !0,
          inside: n.languages.javascript
        },
        exports: {
          // https://tc39.es/ecma262/#sec-exports
          pattern: r(
            /(\bexport\b\s*)(?:\*(?:\s*as\s+<ID>)?(?=\s*\bfrom\b)|\{[^{}]*\})/.source
          ),
          lookbehind: !0,
          inside: n.languages.javascript
        }
      }), n.languages.javascript.keyword.unshift(
        {
          pattern: /\b(?:as|default|export|from|import)\b/,
          alias: "module"
        },
        {
          pattern: /\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\b/,
          alias: "control-flow"
        },
        {
          pattern: /\bnull\b/,
          alias: ["null", "nil"]
        },
        {
          pattern: /\bundefined\b/,
          alias: "nil"
        }
      ), n.languages.insertBefore("javascript", "operator", {
        spread: {
          pattern: /\.{3}/,
          alias: "operator"
        },
        arrow: {
          pattern: /=>/,
          alias: "operator"
        }
      }), n.languages.insertBefore("javascript", "punctuation", {
        "property-access": {
          pattern: r(/(\.\s*)#?<ID>/.source),
          lookbehind: !0
        },
        "maybe-class-name": {
          pattern: /(^|[^$\w\xA0-\uFFFF])[A-Z][$\w\xA0-\uFFFF]+/,
          lookbehind: !0
        },
        dom: {
          // this contains only a few commonly used DOM variables
          pattern: /\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\b/,
          alias: "variable"
        },
        console: {
          pattern: /\bconsole(?=\s*\.)/,
          alias: "class-name"
        }
      });
      for (var o = [
        "function",
        "function-variable",
        "method",
        "method-variable",
        "property-access"
      ], s = 0; s < o.length; s++) {
        var u = o[s], c = n.languages.javascript[u];
        n.util.type(c) === "RegExp" && (c = n.languages.javascript[u] = {
          pattern: c
        });
        var p = c.inside || {};
        c.inside = p, p["maybe-class-name"] = /^[A-Z][\s\S]*/;
      }
    })(t);
  }
  return Ig;
}
var Rg, kk;
function a7() {
  if (kk) return Rg;
  kk = 1, Rg = e, e.displayName = "jsTemplates", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = n.languages.javascript["template-string"], o = r.pattern.source, s = r.inside.interpolation, u = s.inside["interpolation-punctuation"], c = s.pattern.source;
      function p(A, R) {
        if (n.languages[A])
          return {
            pattern: RegExp("((?:" + R + ")\\s*)" + o),
            lookbehind: !0,
            greedy: !0,
            inside: {
              "template-punctuation": {
                pattern: /^`|`$/,
                alias: "string"
              },
              "embedded-code": {
                pattern: /[\s\S]+/,
                alias: A
              }
            }
          };
      }
      n.languages.javascript["template-string"] = [
        // styled-jsx:
        //   css`a { color: #25F; }`
        // styled-components:
        //   styled.h1`color: red;`
        p(
          "css",
          /\b(?:styled(?:\([^)]*\))?(?:\s*\.\s*\w+(?:\([^)]*\))*)*|css(?:\s*\.\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source
        ),
        // html`<p></p>`
        // div.innerHTML = `<p></p>`
        p("html", /\bhtml|\.\s*(?:inner|outer)HTML\s*\+?=/.source),
        // svg`<path fill="#fff" d="M55.37 ..."/>`
        p("svg", /\bsvg/.source),
        // md`# h1`, markdown`## h2`
        p("markdown", /\b(?:markdown|md)/.source),
        // gql`...`, graphql`...`, graphql.experimental`...`
        p(
          "graphql",
          /\b(?:gql|graphql(?:\s*\.\s*experimental)?)/.source
        ),
        // sql`...`
        p("sql", /\bsql/.source),
        // vanilla template string
        r
      ].filter(Boolean);
      function f(A, R) {
        return "___" + R.toUpperCase() + "_" + A + "___";
      }
      function b(A, R, C) {
        var w = {
          code: A,
          grammar: R,
          language: C
        };
        return n.hooks.run("before-tokenize", w), w.tokens = n.tokenize(w.code, w.grammar), n.hooks.run("after-tokenize", w), w.tokens;
      }
      function g(A) {
        var R = {};
        R["interpolation-punctuation"] = u;
        var C = n.tokenize(A, R);
        if (C.length === 3) {
          var w = [1, 1];
          w.push.apply(
            w,
            b(C[1], n.languages.javascript, "javascript")
          ), C.splice.apply(C, w);
        }
        return new n.Token(
          "interpolation",
          C,
          s.alias,
          A
        );
      }
      function T(A, R, C) {
        var w = n.tokenize(A, {
          interpolation: {
            pattern: RegExp(c),
            lookbehind: !0
          }
        }), k = 0, O = {}, F = w.map(function($) {
          if (typeof $ == "string")
            return $;
          for (var M = $.content, V; A.indexOf(
            V = f(k++, C)
          ) !== -1; )
            ;
          return O[V] = M, V;
        }).join(""), v = b(F, R, C), B = Object.keys(O);
        k = 0;
        function Y($) {
          for (var M = 0; M < $.length; M++) {
            if (k >= B.length)
              return;
            var V = $[M];
            if (typeof V == "string" || typeof V.content == "string") {
              var ne = B[k], se = typeof V == "string" ? V : (
                /** @type {string} */
                V.content
              ), de = se.indexOf(ne);
              if (de !== -1) {
                ++k;
                var be = se.substring(0, de), Ne = g(
                  O[ne]
                ), ve = se.substring(de + ne.length), J = [];
                if (be && J.push(be), J.push(Ne), ve) {
                  var oe = [ve];
                  Y(oe), J.push.apply(J, oe);
                }
                typeof V == "string" ? ($.splice.apply($, [M, 1].concat(J)), M += J.length - 1) : V.content = J;
              }
            } else {
              var I = V.content;
              Array.isArray(I) ? Y(I) : Y([I]);
            }
          }
        }
        return Y(v), new n.Token(
          C,
          v,
          "language-" + C,
          A
        );
      }
      var y = {
        javascript: !0,
        js: !0,
        typescript: !0,
        ts: !0,
        jsx: !0,
        tsx: !0
      };
      n.hooks.add("after-tokenize", function(A) {
        if (!(A.language in y))
          return;
        function R(C) {
          for (var w = 0, k = C.length; w < k; w++) {
            var O = C[w];
            if (typeof O != "string") {
              var F = O.content;
              if (!Array.isArray(F)) {
                typeof F != "string" && R([F]);
                continue;
              }
              if (O.type === "template-string") {
                var v = F[1];
                if (F.length === 3 && typeof v != "string" && v.type === "embedded-code") {
                  var B = _(v), Y = v.alias, $ = Array.isArray(Y) ? Y[0] : Y, M = n.languages[$];
                  if (!M)
                    continue;
                  F[1] = T(B, M, $);
                }
              } else
                R(F);
            }
          }
        }
        R(A.tokens);
      });
      function _(A) {
        return typeof A == "string" ? A : Array.isArray(A) ? A.map(_).join("") : _(A.content);
      }
    })(t);
  }
  return Rg;
}
var xg, Ck;
function QE() {
  if (Ck) return xg;
  Ck = 1, xg = e, e.displayName = "typescript", e.aliases = ["ts"];
  function e(t) {
    (function(n) {
      n.languages.typescript = n.languages.extend("javascript", {
        "class-name": {
          pattern: /(\b(?:class|extends|implements|instanceof|interface|new|type)\s+)(?!keyof\b)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,
          lookbehind: !0,
          greedy: !0,
          inside: null
          // see below
        },
        builtin: /\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\b/
      }), n.languages.typescript.keyword.push(
        /\b(?:abstract|declare|is|keyof|readonly|require)\b/,
        // keywords that have to be followed by an identifier
        /\b(?:asserts|infer|interface|module|namespace|type)\b(?=\s*(?:[{_$a-zA-Z\xA0-\uFFFF]|$))/,
        // This is for `import type *, {}`
        /\btype\b(?=\s*(?:[\{*]|$))/
      ), delete n.languages.typescript.parameter, delete n.languages.typescript["literal-property"];
      var r = n.languages.extend("typescript", {});
      delete r["class-name"], n.languages.typescript["class-name"].inside = r, n.languages.insertBefore("typescript", "function", {
        decorator: {
          pattern: /@[$\w\xA0-\uFFFF]+/,
          inside: {
            at: {
              pattern: /^@/,
              alias: "operator"
            },
            function: /^[\s\S]+/
          }
        },
        "generic-function": {
          // e.g. foo<T extends "bar" | "baz">( ...
          pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\s*\()/,
          greedy: !0,
          inside: {
            function: /^#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/,
            generic: {
              pattern: /<[\s\S]+/,
              // everything after the first <
              alias: "class-name",
              inside: r
            }
          }
        }
      }), n.languages.ts = n.languages.typescript;
    })(t);
  }
  return xg;
}
var Ng, wk;
function i7() {
  if (wk) return Ng;
  wk = 1;
  var e = hc(), t = QE();
  Ng = n, n.displayName = "jsdoc", n.aliases = [];
  function n(r) {
    r.register(e), r.register(t), function(o) {
      var s = o.languages.javascript, u = /\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})+\}/.source, c = "(@(?:arg|argument|param|property)\\s+(?:" + u + "\\s+)?)";
      o.languages.jsdoc = o.languages.extend("javadoclike", {
        parameter: {
          // @param {string} foo - foo bar
          pattern: RegExp(
            c + /(?:(?!\s)[$\w\xA0-\uFFFF.])+(?=\s|$)/.source
          ),
          lookbehind: !0,
          inside: {
            punctuation: /\./
          }
        }
      }), o.languages.insertBefore("jsdoc", "keyword", {
        "optional-parameter": {
          // @param {string} [baz.foo="bar"] foo bar
          pattern: RegExp(
            c + /\[(?:(?!\s)[$\w\xA0-\uFFFF.])+(?:=[^[\]]+)?\](?=\s|$)/.source
          ),
          lookbehind: !0,
          inside: {
            parameter: {
              pattern: /(^\[)[$\w\xA0-\uFFFF\.]+/,
              lookbehind: !0,
              inside: {
                punctuation: /\./
              }
            },
            code: {
              pattern: /(=)[\s\S]*(?=\]$)/,
              lookbehind: !0,
              inside: s,
              alias: "language-javascript"
            },
            punctuation: /[=[\]]/
          }
        },
        "class-name": [
          {
            pattern: RegExp(
              /(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\s+(?:<TYPE>\s+)?)[A-Z]\w*(?:\.[A-Z]\w*)*/.source.replace(
                /<TYPE>/g,
                function() {
                  return u;
                }
              )
            ),
            lookbehind: !0,
            inside: {
              punctuation: /\./
            }
          },
          {
            pattern: RegExp("(@[a-z]+\\s+)" + u),
            lookbehind: !0,
            inside: {
              string: s.string,
              number: s.number,
              boolean: s.boolean,
              keyword: o.languages.typescript.keyword,
              operator: /=>|\.\.\.|[&|?:*]/,
              punctuation: /[.,;=<>{}()[\]]/
            }
          }
        ],
        example: {
          pattern: /(@example\s+(?!\s))(?:[^@\s]|\s+(?!\s))+?(?=\s*(?:\*\s*)?(?:@\w|\*\/))/,
          lookbehind: !0,
          inside: {
            code: {
              pattern: /^([\t ]*(?:\*\s*)?)\S.*$/m,
              lookbehind: !0,
              inside: s,
              alias: "language-javascript"
            }
          }
        }
      }), o.languages.javadoclike.addSupport("javascript", o.languages.jsdoc);
    }(r);
  }
  return Ng;
}
var Og, Ik;
function ZE() {
  if (Ik) return Og;
  Ik = 1, Og = e, e.displayName = "json", e.aliases = ["webmanifest"];
  function e(t) {
    t.languages.json = {
      property: {
        pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,
        lookbehind: !0,
        greedy: !0
      },
      string: {
        pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,
        lookbehind: !0,
        greedy: !0
      },
      comment: {
        pattern: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,
        greedy: !0
      },
      number: /-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
      punctuation: /[{}[\],]/,
      operator: /:/,
      boolean: /\b(?:false|true)\b/,
      null: {
        pattern: /\bnull\b/,
        alias: "keyword"
      }
    }, t.languages.webmanifest = t.languages.json;
  }
  return Og;
}
var Lg, Rk;
function o7() {
  if (Rk) return Lg;
  Rk = 1;
  var e = ZE();
  Lg = t, t.displayName = "json5", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      var o = /("|')(?:\\(?:\r\n?|\n|.)|(?!\1)[^\\\r\n])*\1/;
      r.languages.json5 = r.languages.extend("json", {
        property: [
          {
            pattern: RegExp(o.source + "(?=\\s*:)"),
            greedy: !0
          },
          {
            pattern: /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/,
            alias: "unquoted"
          }
        ],
        string: {
          pattern: o,
          greedy: !0
        },
        number: /[+-]?\b(?:NaN|Infinity|0x[a-fA-F\d]+)\b|[+-]?(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[eE][+-]?\d+\b)?/
      });
    }(n);
  }
  return Lg;
}
var Dg, xk;
function s7() {
  if (xk) return Dg;
  xk = 1;
  var e = ZE();
  Dg = t, t.displayName = "jsonp", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.jsonp = n.languages.extend("json", {
      punctuation: /[{}[\]();,.]/
    }), n.languages.insertBefore("jsonp", "punctuation", {
      function: /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*\()/
    });
  }
  return Dg;
}
var Mg, Nk;
function l7() {
  if (Nk) return Mg;
  Nk = 1, Mg = e, e.displayName = "jsstacktrace", e.aliases = [];
  function e(t) {
    t.languages.jsstacktrace = {
      "error-message": {
        pattern: /^\S.*/m,
        alias: "string"
      },
      "stack-frame": {
        pattern: /(^[ \t]+)at[ \t].*/m,
        lookbehind: !0,
        inside: {
          "not-my-code": {
            pattern: /^at[ \t]+(?!\s)(?:node\.js|<unknown>|.*(?:node_modules|\(<anonymous>\)|\(<unknown>|<anonymous>$|\(internal\/|\(node\.js)).*/m,
            alias: "comment"
          },
          filename: {
            pattern: /(\bat\s+(?!\s)|\()(?:[a-zA-Z]:)?[^():]+(?=:)/,
            lookbehind: !0,
            alias: "url"
          },
          function: {
            pattern: /(\bat\s+(?:new\s+)?)(?!\s)[_$a-zA-Z\xA0-\uFFFF<][.$\w\xA0-\uFFFF<>]*/,
            lookbehind: !0,
            inside: {
              punctuation: /\./
            }
          },
          punctuation: /[()]/,
          keyword: /\b(?:at|new)\b/,
          alias: {
            pattern: /\[(?:as\s+)?(?!\s)[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*\]/,
            alias: "variable"
          },
          "line-number": {
            pattern: /:\d+(?::\d+)?\b/,
            alias: "number",
            inside: {
              punctuation: /:/
            }
          }
        }
      }
    };
  }
  return Mg;
}
var Pg, Ok;
function Qx() {
  if (Ok) return Pg;
  Ok = 1, Pg = e, e.displayName = "jsx", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = n.util.clone(n.languages.javascript), o = /(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/.source, s = /(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/.source, u = /(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/.source;
      function c(b, g) {
        return b = b.replace(/<S>/g, function() {
          return o;
        }).replace(/<BRACES>/g, function() {
          return s;
        }).replace(/<SPREAD>/g, function() {
          return u;
        }), RegExp(b, g);
      }
      u = c(u).source, n.languages.jsx = n.languages.extend("markup", r), n.languages.jsx.tag.pattern = c(
        /<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/.source
      ), n.languages.jsx.tag.inside.tag.pattern = /^<\/?[^\s>\/]*/, n.languages.jsx.tag.inside["attr-value"].pattern = /=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/, n.languages.jsx.tag.inside.tag.inside["class-name"] = /^[A-Z]\w*(?:\.[A-Z]\w*)*$/, n.languages.jsx.tag.inside.comment = r.comment, n.languages.insertBefore(
        "inside",
        "attr-name",
        {
          spread: {
            pattern: c(/<SPREAD>/.source),
            inside: n.languages.jsx
          }
        },
        n.languages.jsx.tag
      ), n.languages.insertBefore(
        "inside",
        "special-attr",
        {
          script: {
            // Allow for two levels of nesting
            pattern: c(/=<BRACES>/.source),
            alias: "language-javascript",
            inside: {
              "script-punctuation": {
                pattern: /^=(?=\{)/,
                alias: "punctuation"
              },
              rest: n.languages.jsx
            }
          }
        },
        n.languages.jsx.tag
      );
      var p = function(b) {
        return b ? typeof b == "string" ? b : typeof b.content == "string" ? b.content : b.content.map(p).join("") : "";
      }, f = function(b) {
        for (var g = [], T = 0; T < b.length; T++) {
          var y = b[T], _ = !1;
          if (typeof y != "string" && (y.type === "tag" && y.content[0] && y.content[0].type === "tag" ? y.content[0].content[0].content === "</" ? g.length > 0 && g[g.length - 1].tagName === p(y.content[0].content[1]) && g.pop() : y.content[y.content.length - 1].content === "/>" || g.push({
            tagName: p(y.content[0].content[1]),
            openedBraces: 0
          }) : g.length > 0 && y.type === "punctuation" && y.content === "{" ? g[g.length - 1].openedBraces++ : g.length > 0 && g[g.length - 1].openedBraces > 0 && y.type === "punctuation" && y.content === "}" ? g[g.length - 1].openedBraces-- : _ = !0), (_ || typeof y == "string") && g.length > 0 && g[g.length - 1].openedBraces === 0) {
            var A = p(y);
            T < b.length - 1 && (typeof b[T + 1] == "string" || b[T + 1].type === "plain-text") && (A += p(b[T + 1]), b.splice(T + 1, 1)), T > 0 && (typeof b[T - 1] == "string" || b[T - 1].type === "plain-text") && (A = p(b[T - 1]) + A, b.splice(T - 1, 1), T--), b[T] = new n.Token(
              "plain-text",
              A,
              null,
              A
            );
          }
          y.content && typeof y.content != "string" && f(y.content);
        }
      };
      n.hooks.add("after-tokenize", function(b) {
        b.language !== "jsx" && b.language !== "tsx" || f(b.tokens);
      });
    })(t);
  }
  return Pg;
}
var Fg, Lk;
function u7() {
  if (Lk) return Fg;
  Lk = 1, Fg = e, e.displayName = "julia", e.aliases = [];
  function e(t) {
    t.languages.julia = {
      comment: {
        // support one level of nested comments
        // https://github.com/JuliaLang/julia/pull/6128
        pattern: /(^|[^\\])(?:#=(?:[^#=]|=(?!#)|#(?!=)|#=(?:[^#=]|=(?!#)|#(?!=))*=#)*=#|#.*)/,
        lookbehind: !0
      },
      regex: {
        // https://docs.julialang.org/en/v1/manual/strings/#Regular-Expressions-1
        pattern: /r"(?:\\.|[^"\\\r\n])*"[imsx]{0,4}/,
        greedy: !0
      },
      string: {
        // https://docs.julialang.org/en/v1/manual/strings/#String-Basics-1
        // https://docs.julialang.org/en/v1/manual/strings/#non-standard-string-literals-1
        // https://docs.julialang.org/en/v1/manual/running-external-programs/#Running-External-Programs-1
        pattern: /"""[\s\S]+?"""|(?:\b\w+)?"(?:\\.|[^"\\\r\n])*"|`(?:[^\\`\r\n]|\\.)*`/,
        greedy: !0
      },
      char: {
        // https://docs.julialang.org/en/v1/manual/strings/#man-characters-1
        pattern: /(^|[^\w'])'(?:\\[^\r\n][^'\r\n]*|[^\\\r\n])'/,
        lookbehind: !0,
        greedy: !0
      },
      keyword: /\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|in|let|local|macro|module|print|println|quote|return|struct|try|type|typealias|using|while)\b/,
      boolean: /\b(?:false|true)\b/,
      number: /(?:\b(?=\d)|\B(?=\.))(?:0[box])?(?:[\da-f]+(?:_[\da-f]+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[efp][+-]?\d+(?:_\d+)*)?j?/i,
      // https://docs.julialang.org/en/v1/manual/mathematical-operations/
      // https://docs.julialang.org/en/v1/manual/mathematical-operations/#Operator-Precedence-and-Associativity-1
      operator: /&&|\|\||[-+*^%÷⊻&$\\]=?|\/[\/=]?|!=?=?|\|[=>]?|<(?:<=?|[=:|])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥'√∛]/,
      punctuation: /::?|[{}[\]();,.?]/,
      // https://docs.julialang.org/en/v1/base/numbers/#Base.im
      constant: /\b(?:(?:Inf|NaN)(?:16|32|64)?|im|pi)\b|[πℯ]/
    };
  }
  return Fg;
}
var Bg, Dk;
function c7() {
  if (Dk) return Bg;
  Dk = 1, Bg = e, e.displayName = "keepalived", e.aliases = [];
  function e(t) {
    t.languages.keepalived = {
      comment: {
        pattern: /[#!].*/,
        greedy: !0
      },
      string: {
        pattern: /(^|[^\\])(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/,
        lookbehind: !0,
        greedy: !0
      },
      // support IPv4, IPv6, subnet mask
      ip: {
        pattern: RegExp(
          /\b(?:(?:(?:[\da-f]{1,4}:){7}[\da-f]{1,4}|(?:[\da-f]{1,4}:){6}:[\da-f]{1,4}|(?:[\da-f]{1,4}:){5}:(?:[\da-f]{1,4}:)?[\da-f]{1,4}|(?:[\da-f]{1,4}:){4}:(?:[\da-f]{1,4}:){0,2}[\da-f]{1,4}|(?:[\da-f]{1,4}:){3}:(?:[\da-f]{1,4}:){0,3}[\da-f]{1,4}|(?:[\da-f]{1,4}:){2}:(?:[\da-f]{1,4}:){0,4}[\da-f]{1,4}|(?:[\da-f]{1,4}:){6}<ipv4>|(?:[\da-f]{1,4}:){0,5}:<ipv4>|::(?:[\da-f]{1,4}:){0,5}<ipv4>|[\da-f]{1,4}::(?:[\da-f]{1,4}:){0,5}[\da-f]{1,4}|::(?:[\da-f]{1,4}:){0,6}[\da-f]{1,4}|(?:[\da-f]{1,4}:){1,7}:)(?:\/\d{1,3})?|<ipv4>(?:\/\d{1,2})?)\b/.source.replace(
            /<ipv4>/g,
            function() {
              return /(?:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)\.){3}(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d))/.source;
            }
          ),
          "i"
        ),
        alias: "number"
      },
      // support *nix / Windows, directory / file
      path: {
        pattern: /(\s)\/(?:[^\/\s]+\/)*[^\/\s]*|\b[a-zA-Z]:\\(?:[^\\\s]+\\)*[^\\\s]*/,
        lookbehind: !0,
        alias: "string"
      },
      variable: /\$\{?\w+\}?/,
      email: {
        pattern: /[\w-]+@[\w-]+(?:\.[\w-]{2,3}){1,2}/,
        alias: "string"
      },
      "conditional-configuration": {
        pattern: /@\^?[\w-]+/,
        alias: "variable"
      },
      operator: /=/,
      property: /\b(?:BFD_CHECK|DNS_CHECK|FILE_CHECK|HTTP_GET|MISC_CHECK|NAME|PING_CHECK|SCRIPTS|SMTP_CHECK|SSL|SSL_GET|TCP_CHECK|UDP_CHECK|accept|advert_int|alpha|auth_pass|auth_type|authentication|bfd_cpu_affinity|bfd_instance|bfd_no_swap|bfd_priority|bfd_process_name|bfd_rlimit_rttime|bfd_rt_priority|bind_if|bind_port|bindto|ca|certificate|check_unicast_src|checker|checker_cpu_affinity|checker_log_all_failures|checker_no_swap|checker_priority|checker_rlimit_rttime|checker_rt_priority|child_wait_time|connect_ip|connect_port|connect_timeout|dbus_service_name|debug|default_interface|delay|delay_before_retry|delay_loop|digest|dont_track_primary|dynamic|dynamic_interfaces|enable_(?:dbus|script_security|sni|snmp_checker|snmp_rfc|snmp_rfcv2|snmp_rfcv3|snmp_vrrp|traps)|end|fall|fast_recovery|file|flag-[123]|fork_delay|full_command|fwmark|garp_group|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|global_defs|global_tracking|gna_interval|group|ha_suspend|hashed|helo_name|higher_prio_send_advert|hoplimit|http_protocol|hysteresis|idle_tx|include|inhibit_on_failure|init_fail|init_file|instance|interface|interfaces|interval|ip_family|ipvs_process_name|keepalived.conf|kernel_rx_buf_size|key|linkbeat_interfaces|linkbeat_use_polling|log_all_failures|log_unknown_vrids|lower_prio_no_advert|lthreshold|lvs_flush|lvs_flush_onstop|lvs_method|lvs_netlink_cmd_rcv_bufs|lvs_netlink_cmd_rcv_bufs_force|lvs_netlink_monitor_rcv_bufs|lvs_netlink_monitor_rcv_bufs_force|lvs_notify_fifo|lvs_notify_fifo_script|lvs_sched|lvs_sync_daemon|max_auto_priority|max_hops|mcast_src_ip|mh-fallback|mh-port|min_auto_priority_delay|min_rx|min_tx|misc_dynamic|misc_path|misc_timeout|multiplier|name|namespace_with_ipsets|native_ipv6|neighbor_ip|net_namespace|net_namespace_ipvs|nftables|nftables_counters|nftables_ifindex|nftables_priority|no_accept|no_checker_emails|no_email_faults|nopreempt|notification_email|notification_email_from|notify|notify_backup|notify_deleted|notify_down|notify_fault|notify_fifo|notify_fifo_script|notify_master|notify_master_rx_lower_pri|notify_priority_changes|notify_stop|notify_up|old_unicast_checksum|omega|ops|param_match|passive|password|path|persistence_engine|persistence_granularity|persistence_timeout|preempt|preempt_delay|priority|process|process_monitor_rcv_bufs|process_monitor_rcv_bufs_force|process_name|process_names|promote_secondaries|protocol|proxy_arp|proxy_arp_pvlan|quorum|quorum_down|quorum_max|quorum_up|random_seed|real_server|regex|regex_max_offset|regex_min_offset|regex_no_match|regex_options|regex_stack|reload_repeat|reload_time_file|require_reply|retry|rise|router_id|rs_init_notifies|script|script_user|sh-fallback|sh-port|shutdown_script|shutdown_script_timeout|skip_check_adv_addr|smtp_alert|smtp_alert_checker|smtp_alert_vrrp|smtp_connect_timeout|smtp_helo_name|smtp_server|snmp_socket|sorry_server|sorry_server_inhibit|sorry_server_lvs_method|source_ip|start|startup_script|startup_script_timeout|state|static_ipaddress|static_routes|static_rules|status_code|step|strict_mode|sync_group_tracking_weight|terminate_delay|timeout|track_bfd|track_file|track_group|track_interface|track_process|track_script|track_src_ip|ttl|type|umask|unicast_peer|unicast_src_ip|unicast_ttl|url|use_ipvlan|use_pid_dir|use_vmac|user|uthreshold|val[123]|version|virtual_ipaddress|virtual_ipaddress_excluded|virtual_router_id|virtual_routes|virtual_rules|virtual_server|virtual_server_group|virtualhost|vmac_xmit_base|vrrp|vrrp_(?:check_unicast_src|cpu_affinity|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|gna_interval|higher_prio_send_advert|instance|ipsets|iptables|lower_prio_no_advert|mcast_group4|mcast_group6|min_garp|netlink_cmd_rcv_bufs|netlink_cmd_rcv_bufs_force|netlink_monitor_rcv_bufs|netlink_monitor_rcv_bufs_force|no_swap|notify_fifo|notify_fifo_script|notify_priority_changes|priority|process_name|rlimit_rttime|rt_priority|rx_bufs_multiplier|rx_bufs_policy|script|skip_check_adv_addr|startup_delay|strict|sync_group|track_process|version)|warmup|weight)\b/,
      constant: /\b(?:A|AAAA|AH|BACKUP|CNAME|DR|MASTER|MX|NAT|NS|PASS|SCTP|SOA|TCP|TUN|TXT|UDP|dh|fo|lblc|lblcr|lc|mh|nq|ovf|rr|sed|sh|wlc|wrr)\b/,
      number: {
        pattern: /(^|[^\w.-])-?\d+(?:\.\d+)?/,
        lookbehind: !0
      },
      boolean: /\b(?:false|no|off|on|true|yes)\b/,
      punctuation: /[\{\}]/
    };
  }
  return Bg;
}
var Ug, Mk;
function d7() {
  if (Mk) return Ug;
  Mk = 1, Ug = e, e.displayName = "keyman", e.aliases = [];
  function e(t) {
    t.languages.keyman = {
      comment: {
        pattern: /\bc .*/i,
        greedy: !0
      },
      string: {
        pattern: /"[^"\r\n]*"|'[^'\r\n]*'/,
        greedy: !0
      },
      "virtual-key": {
        pattern: /\[\s*(?:(?:ALT|CAPS|CTRL|LALT|LCTRL|NCAPS|RALT|RCTRL|SHIFT)\s+)*(?:[TKU]_[\w?]+|[A-E]\d\d?|"[^"\r\n]*"|'[^'\r\n]*')\s*\]/i,
        greedy: !0,
        alias: "function"
        // alias for styles
      },
      // https://help.keyman.com/developer/language/guide/headers
      "header-keyword": {
        pattern: /&\w+/,
        alias: "bold"
        // alias for styles
      },
      "header-statement": {
        pattern: /\b(?:bitmap|bitmaps|caps always off|caps on only|copyright|hotkey|language|layout|message|name|shift frees caps|version)\b/i,
        alias: "bold"
        // alias for styles
      },
      "rule-keyword": {
        pattern: /\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|reset|return|save|set|store|use)\b/i,
        alias: "keyword"
      },
      "structural-keyword": {
        pattern: /\b(?:ansi|begin|group|match|nomatch|unicode|using keys)\b/i,
        alias: "keyword"
      },
      "compile-target": {
        pattern: /\$(?:keyman|keymanonly|keymanweb|kmfl|weaver):/i,
        alias: "property"
      },
      // U+####, x###, d### characters and numbers
      number: /\b(?:U\+[\dA-F]+|d\d+|x[\da-f]+|\d+)\b/i,
      operator: /[+>\\$]|\.\./,
      punctuation: /[()=,]/
    };
  }
  return Ug;
}
var Hg, Pk;
function p7() {
  if (Pk) return Hg;
  Pk = 1, Hg = e, e.displayName = "kotlin", e.aliases = ["kt", "kts"];
  function e(t) {
    (function(n) {
      n.languages.kotlin = n.languages.extend("clike", {
        keyword: {
          // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get
          pattern: /(^|[^.])\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\b/,
          lookbehind: !0
        },
        function: [
          {
            pattern: /(?:`[^\r\n`]+`|\b\w+)(?=\s*\()/,
            greedy: !0
          },
          {
            pattern: /(\.)(?:`[^\r\n`]+`|\w+)(?=\s*\{)/,
            lookbehind: !0,
            greedy: !0
          }
        ],
        number: /\b(?:0[xX][\da-fA-F]+(?:_[\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?(?:[eE][+-]?\d+(?:_\d+)*)?[fFL]?)\b/,
        operator: /\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\/*%<>]=?|[?:]:?|\.\.|&&|\|\||\b(?:and|inv|or|shl|shr|ushr|xor)\b/
      }), delete n.languages.kotlin["class-name"];
      var r = {
        "interpolation-punctuation": {
          pattern: /^\$\{?|\}$/,
          alias: "punctuation"
        },
        expression: {
          pattern: /[\s\S]+/,
          inside: n.languages.kotlin
        }
      };
      n.languages.insertBefore("kotlin", "string", {
        // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions
        "string-literal": [
          {
            pattern: /"""(?:[^$]|\$(?:(?!\{)|\{[^{}]*\}))*?"""/,
            alias: "multiline",
            inside: {
              interpolation: {
                pattern: /\$(?:[a-z_]\w*|\{[^{}]*\})/i,
                inside: r
              },
              string: /[\s\S]+/
            }
          },
          {
            pattern: /"(?:[^"\\\r\n$]|\\.|\$(?:(?!\{)|\{[^{}]*\}))*"/,
            alias: "singleline",
            inside: {
              interpolation: {
                pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:[a-z_]\w*|\{[^{}]*\})/i,
                lookbehind: !0,
                inside: r
              },
              string: /[\s\S]+/
            }
          }
        ],
        char: {
          // https://kotlinlang.org/spec/expressions.html#character-literals
          pattern: /'(?:[^'\\\r\n]|\\(?:.|u[a-fA-F0-9]{0,4}))'/,
          greedy: !0
        }
      }), delete n.languages.kotlin.string, n.languages.insertBefore("kotlin", "keyword", {
        annotation: {
          pattern: /\B@(?:\w+:)?(?:[A-Z]\w*|\[[^\]]+\])/,
          alias: "builtin"
        }
      }), n.languages.insertBefore("kotlin", "function", {
        label: {
          pattern: /\b\w+@|@\w+\b/,
          alias: "symbol"
        }
      }), n.languages.kt = n.languages.kotlin, n.languages.kts = n.languages.kotlin;
    })(t);
  }
  return Hg;
}
var $g, Fk;
function f7() {
  if (Fk) return $g;
  Fk = 1, $g = e, e.displayName = "kumir", e.aliases = ["kum"];
  function e(t) {
    (function(n) {
      var r = /\s\x00-\x1f\x22-\x2f\x3a-\x3f\x5b-\x5e\x60\x7b-\x7e/.source;
      function o(s, u) {
        return RegExp(s.replace(/<nonId>/g, r), u);
      }
      n.languages.kumir = {
        comment: {
          pattern: /\|.*/
        },
        prolog: {
          pattern: /#.*/,
          greedy: !0
        },
        string: {
          pattern: /"[^\n\r"]*"|'[^\n\r']*'/,
          greedy: !0
        },
        boolean: {
          pattern: o(/(^|[<nonId>])(?:да|нет)(?=[<nonId>]|$)/.source),
          lookbehind: !0
        },
        "operator-word": {
          pattern: o(/(^|[<nonId>])(?:и|или|не)(?=[<nonId>]|$)/.source),
          lookbehind: !0,
          alias: "keyword"
        },
        "system-variable": {
          pattern: o(/(^|[<nonId>])знач(?=[<nonId>]|$)/.source),
          lookbehind: !0,
          alias: "keyword"
        },
        type: [
          {
            pattern: o(
              /(^|[<nonId>])(?:вещ|лит|лог|сим|цел)(?:\x20*таб)?(?=[<nonId>]|$)/.source
            ),
            lookbehind: !0,
            alias: "builtin"
          },
          {
            pattern: o(
              /(^|[<nonId>])(?:компл|сканкод|файл|цвет)(?=[<nonId>]|$)/.source
            ),
            lookbehind: !0,
            alias: "important"
          }
        ],
        /**
         * Should be performed after searching for type names because of "таб".
         * "таб" is a reserved word, but never used without a preceding type name.
         * "НАЗНАЧИТЬ", "Фввод", and "Фвывод" are not reserved words.
         */
        keyword: {
          pattern: o(
            /(^|[<nonId>])(?:алг|арг(?:\x20*рез)?|ввод|ВКЛЮЧИТЬ|вс[её]|выбор|вывод|выход|дано|для|до|дс|если|иначе|исп|использовать|кон(?:(?:\x20+|_)исп)?|кц(?:(?:\x20+|_)при)?|надо|нач|нс|нц|от|пауза|пока|при|раза?|рез|стоп|таб|то|утв|шаг)(?=[<nonId>]|$)/.source
          ),
          lookbehind: !0
        },
        /** Should be performed after searching for reserved words. */
        name: {
          // eslint-disable-next-line regexp/no-super-linear-backtracking
          pattern: o(
            /(^|[<nonId>])[^\d<nonId>][^<nonId>]*(?:\x20+[^<nonId>]+)*(?=[<nonId>]|$)/.source
          ),
          lookbehind: !0
        },
        /** Should be performed after searching for names. */
        number: {
          pattern: o(
            /(^|[<nonId>])(?:\B\$[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)(?=[<nonId>]|$)/.source,
            "i"
          ),
          lookbehind: !0
        },
        /** Should be performed after searching for words. */
        punctuation: /:=|[(),:;\[\]]/,
        /**
         * Should be performed after searching for
         * - numeric constants (because of "+" and "-");
         * - punctuation marks (because of ":=" and "=").
         */
        "operator-char": {
          pattern: /\*\*?|<[=>]?|>=?|[-+/=]/,
          alias: "operator"
        }
      }, n.languages.kum = n.languages.kumir;
    })(t);
  }
  return $g;
}
var zg, Bk;
function h7() {
  if (Bk) return zg;
  Bk = 1, zg = e, e.displayName = "kusto", e.aliases = [];
  function e(t) {
    t.languages.kusto = {
      comment: {
        pattern: /\/\/.*/,
        greedy: !0
      },
      string: {
        pattern: /```[\s\S]*?```|[hH]?(?:"(?:[^\r\n\\"]|\\.)*"|'(?:[^\r\n\\']|\\.)*'|@(?:"[^\r\n"]*"|'[^\r\n']*'))/,
        greedy: !0
      },
      verb: {
        pattern: /(\|\s*)[a-z][\w-]*/i,
        lookbehind: !0,
        alias: "keyword"
      },
      command: {
        pattern: /\.[a-z][a-z\d-]*\b/,
        alias: "keyword"
      },
      "class-name": /\b(?:bool|datetime|decimal|dynamic|guid|int|long|real|string|timespan)\b/,
      keyword: /\b(?:access|alias|and|anti|as|asc|auto|between|by|(?:contains|(?:ends|starts)with|has(?:perfix|suffix)?)(?:_cs)?|database|declare|desc|external|from|fullouter|has_all|in|ingestion|inline|inner|innerunique|into|(?:left|right)(?:anti(?:semi)?|inner|outer|semi)?|let|like|local|not|of|on|or|pattern|print|query_parameters|range|restrict|schema|set|step|table|tables|to|view|where|with|matches\s+regex|nulls\s+(?:first|last))(?![\w-])/,
      boolean: /\b(?:false|null|true)\b/,
      function: /\b[a-z_]\w*(?=\s*\()/,
      datetime: [
        {
          // RFC 822 + RFC 850
          pattern: /\b(?:(?:Fri|Friday|Mon|Monday|Sat|Saturday|Sun|Sunday|Thu|Thursday|Tue|Tuesday|Wed|Wednesday)\s*,\s*)?\d{1,2}(?:\s+|-)(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)(?:\s+|-)\d{2}\s+\d{2}:\d{2}(?::\d{2})?(?:\s*(?:\b(?:[A-Z]|(?:[ECMT][DS]|GM|U)T)|[+-]\d{4}))?\b/,
          alias: "number"
        },
        {
          // ISO 8601
          pattern: /[+-]?\b(?:\d{4}-\d{2}-\d{2}(?:[ T]\d{2}:\d{2}(?::\d{2}(?:\.\d+)?)?)?|\d{2}:\d{2}(?::\d{2}(?:\.\d+)?)?)Z?/,
          alias: "number"
        }
      ],
      number: /\b(?:0x[0-9A-Fa-f]+|\d+(?:\.\d+)?(?:[Ee][+-]?\d+)?)(?:(?:min|sec|[mnµ]s|[dhms]|microsecond|tick)\b)?|[+-]?\binf\b/,
      operator: /=>|[!=]~|[!=<>]=?|[-+*/%|]|\.\./,
      punctuation: /[()\[\]{},;.:]/
    };
  }
  return zg;
}
var Gg, Uk;
function g7() {
  if (Uk) return Gg;
  Uk = 1, Gg = e, e.displayName = "latex", e.aliases = ["tex", "context"];
  function e(t) {
    (function(n) {
      var r = /\\(?:[^a-z()[\]]|[a-z*]+)/i, o = {
        "equation-command": {
          pattern: r,
          alias: "regex"
        }
      };
      n.languages.latex = {
        comment: /%.*/,
        // the verbatim environment prints whitespace to the document
        cdata: {
          pattern: /(\\begin\{((?:lstlisting|verbatim)\*?)\})[\s\S]*?(?=\\end\{\2\})/,
          lookbehind: !0
        },
        /*
         * equations can be between $$ $$ or $ $ or \( \) or \[ \]
         * (all are multiline)
         */
        equation: [
          {
            pattern: /\$\$(?:\\[\s\S]|[^\\$])+\$\$|\$(?:\\[\s\S]|[^\\$])+\$|\\\([\s\S]*?\\\)|\\\[[\s\S]*?\\\]/,
            inside: o,
            alias: "string"
          },
          {
            pattern: /(\\begin\{((?:align|eqnarray|equation|gather|math|multline)\*?)\})[\s\S]*?(?=\\end\{\2\})/,
            lookbehind: !0,
            inside: o,
            alias: "string"
          }
        ],
        /*
         * arguments which are keywords or references are highlighted
         * as keywords
         */
        keyword: {
          pattern: /(\\(?:begin|cite|documentclass|end|label|ref|usepackage)(?:\[[^\]]+\])?\{)[^}]+(?=\})/,
          lookbehind: !0
        },
        url: {
          pattern: /(\\url\{)[^}]+(?=\})/,
          lookbehind: !0
        },
        /*
         * section or chapter headlines are highlighted as bold so that
         * they stand out more
         */
        headline: {
          pattern: /(\\(?:chapter|frametitle|paragraph|part|section|subparagraph|subsection|subsubparagraph|subsubsection|subsubsubparagraph)\*?(?:\[[^\]]+\])?\{)[^}]+(?=\})/,
          lookbehind: !0,
          alias: "class-name"
        },
        function: {
          pattern: r,
          alias: "selector"
        },
        punctuation: /[[\]{}&]/
      }, n.languages.tex = n.languages.latex, n.languages.context = n.languages.latex;
    })(t);
  }
  return Gg;
}
var qg, Hk;
function gc() {
  if (Hk) return qg;
  Hk = 1;
  var e = On();
  qg = t, t.displayName = "php", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      var o = /\/\*[\s\S]*?\*\/|\/\/.*|#(?!\[).*/, s = [
        {
          pattern: /\b(?:false|true)\b/i,
          alias: "boolean"
        },
        {
          pattern: /(::\s*)\b[a-z_]\w*\b(?!\s*\()/i,
          greedy: !0,
          lookbehind: !0
        },
        {
          pattern: /(\b(?:case|const)\s+)\b[a-z_]\w*(?=\s*[;=])/i,
          greedy: !0,
          lookbehind: !0
        },
        /\b(?:null)\b/i,
        /\b[A-Z_][A-Z0-9_]*\b(?!\s*\()/
      ], u = /\b0b[01]+(?:_[01]+)*\b|\b0o[0-7]+(?:_[0-7]+)*\b|\b0x[\da-f]+(?:_[\da-f]+)*\b|(?:\b\d+(?:_\d+)*\.?(?:\d+(?:_\d+)*)?|\B\.\d+)(?:e[+-]?\d+)?/i, c = /<?=>|\?\?=?|\.{3}|\??->|[!=]=?=?|::|\*\*=?|--|\+\+|&&|\|\||<<|>>|[?~]|[/^|%*&<>.+-]=?/, p = /[{}\[\](),:;]/;
      r.languages.php = {
        delimiter: {
          pattern: /\?>$|^<\?(?:php(?=\s)|=)?/i,
          alias: "important"
        },
        comment: o,
        variable: /\$+(?:\w+\b|(?=\{))/,
        package: {
          pattern: /(namespace\s+|use\s+(?:function\s+)?)(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,
          lookbehind: !0,
          inside: {
            punctuation: /\\/
          }
        },
        "class-name-definition": {
          pattern: /(\b(?:class|enum|interface|trait)\s+)\b[a-z_]\w*(?!\\)\b/i,
          lookbehind: !0,
          alias: "class-name"
        },
        "function-definition": {
          pattern: /(\bfunction\s+)[a-z_]\w*(?=\s*\()/i,
          lookbehind: !0,
          alias: "function"
        },
        keyword: [
          {
            pattern: /(\(\s*)\b(?:array|bool|boolean|float|int|integer|object|string)\b(?=\s*\))/i,
            alias: "type-casting",
            greedy: !0,
            lookbehind: !0
          },
          {
            pattern: /([(,?]\s*)\b(?:array(?!\s*\()|bool|callable|(?:false|null)(?=\s*\|)|float|int|iterable|mixed|object|self|static|string)\b(?=\s*\$)/i,
            alias: "type-hint",
            greedy: !0,
            lookbehind: !0
          },
          {
            pattern: /(\)\s*:\s*(?:\?\s*)?)\b(?:array(?!\s*\()|bool|callable|(?:false|null)(?=\s*\|)|float|int|iterable|mixed|object|self|static|string|void)\b/i,
            alias: "return-type",
            greedy: !0,
            lookbehind: !0
          },
          {
            pattern: /\b(?:array(?!\s*\()|bool|float|int|iterable|mixed|object|string|void)\b/i,
            alias: "type-declaration",
            greedy: !0
          },
          {
            pattern: /(\|\s*)(?:false|null)\b|\b(?:false|null)(?=\s*\|)/i,
            alias: "type-declaration",
            greedy: !0,
            lookbehind: !0
          },
          {
            pattern: /\b(?:parent|self|static)(?=\s*::)/i,
            alias: "static-context",
            greedy: !0
          },
          {
            // yield from
            pattern: /(\byield\s+)from\b/i,
            lookbehind: !0
          },
          // `class` is always a keyword unlike other keywords
          /\bclass\b/i,
          {
            // https://www.php.net/manual/en/reserved.keywords.php
            //
            // keywords cannot be preceded by "->"
            // the complex lookbehind means `(?<!(?:->|::)\s*)`
            pattern: /((?:^|[^\s>:]|(?:^|[^-])>|(?:^|[^:]):)\s*)\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\b/i,
            lookbehind: !0
          }
        ],
        "argument-name": {
          pattern: /([(,]\s+)\b[a-z_]\w*(?=\s*:(?!:))/i,
          lookbehind: !0
        },
        "class-name": [
          {
            pattern: /(\b(?:extends|implements|instanceof|new(?!\s+self|\s+static))\s+|\bcatch\s*\()\b[a-z_]\w*(?!\\)\b/i,
            greedy: !0,
            lookbehind: !0
          },
          {
            pattern: /(\|\s*)\b[a-z_]\w*(?!\\)\b/i,
            greedy: !0,
            lookbehind: !0
          },
          {
            pattern: /\b[a-z_]\w*(?!\\)\b(?=\s*\|)/i,
            greedy: !0
          },
          {
            pattern: /(\|\s*)(?:\\?\b[a-z_]\w*)+\b/i,
            alias: "class-name-fully-qualified",
            greedy: !0,
            lookbehind: !0,
            inside: {
              punctuation: /\\/
            }
          },
          {
            pattern: /(?:\\?\b[a-z_]\w*)+\b(?=\s*\|)/i,
            alias: "class-name-fully-qualified",
            greedy: !0,
            inside: {
              punctuation: /\\/
            }
          },
          {
            pattern: /(\b(?:extends|implements|instanceof|new(?!\s+self\b|\s+static\b))\s+|\bcatch\s*\()(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,
            alias: "class-name-fully-qualified",
            greedy: !0,
            lookbehind: !0,
            inside: {
              punctuation: /\\/
            }
          },
          {
            pattern: /\b[a-z_]\w*(?=\s*\$)/i,
            alias: "type-declaration",
            greedy: !0
          },
          {
            pattern: /(?:\\?\b[a-z_]\w*)+(?=\s*\$)/i,
            alias: ["class-name-fully-qualified", "type-declaration"],
            greedy: !0,
            inside: {
              punctuation: /\\/
            }
          },
          {
            pattern: /\b[a-z_]\w*(?=\s*::)/i,
            alias: "static-context",
            greedy: !0
          },
          {
            pattern: /(?:\\?\b[a-z_]\w*)+(?=\s*::)/i,
            alias: ["class-name-fully-qualified", "static-context"],
            greedy: !0,
            inside: {
              punctuation: /\\/
            }
          },
          {
            pattern: /([(,?]\s*)[a-z_]\w*(?=\s*\$)/i,
            alias: "type-hint",
            greedy: !0,
            lookbehind: !0
          },
          {
            pattern: /([(,?]\s*)(?:\\?\b[a-z_]\w*)+(?=\s*\$)/i,
            alias: ["class-name-fully-qualified", "type-hint"],
            greedy: !0,
            lookbehind: !0,
            inside: {
              punctuation: /\\/
            }
          },
          {
            pattern: /(\)\s*:\s*(?:\?\s*)?)\b[a-z_]\w*(?!\\)\b/i,
            alias: "return-type",
            greedy: !0,
            lookbehind: !0
          },
          {
            pattern: /(\)\s*:\s*(?:\?\s*)?)(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,
            alias: ["class-name-fully-qualified", "return-type"],
            greedy: !0,
            lookbehind: !0,
            inside: {
              punctuation: /\\/
            }
          }
        ],
        constant: s,
        function: {
          pattern: /(^|[^\\\w])\\?[a-z_](?:[\w\\]*\w)?(?=\s*\()/i,
          lookbehind: !0,
          inside: {
            punctuation: /\\/
          }
        },
        property: {
          pattern: /(->\s*)\w+/,
          lookbehind: !0
        },
        number: u,
        operator: c,
        punctuation: p
      };
      var f = {
        pattern: /\{\$(?:\{(?:\{[^{}]+\}|[^{}]+)\}|[^{}])+\}|(^|[^\\{])\$+(?:\w+(?:\[[^\r\n\[\]]+\]|->\w+)?)/,
        lookbehind: !0,
        inside: r.languages.php
      }, b = [
        {
          pattern: /<<<'([^']+)'[\r\n](?:.*[\r\n])*?\1;/,
          alias: "nowdoc-string",
          greedy: !0,
          inside: {
            delimiter: {
              pattern: /^<<<'[^']+'|[a-z_]\w*;$/i,
              alias: "symbol",
              inside: {
                punctuation: /^<<<'?|[';]$/
              }
            }
          }
        },
        {
          pattern: /<<<(?:"([^"]+)"[\r\n](?:.*[\r\n])*?\1;|([a-z_]\w*)[\r\n](?:.*[\r\n])*?\2;)/i,
          alias: "heredoc-string",
          greedy: !0,
          inside: {
            delimiter: {
              pattern: /^<<<(?:"[^"]+"|[a-z_]\w*)|[a-z_]\w*;$/i,
              alias: "symbol",
              inside: {
                punctuation: /^<<<"?|[";]$/
              }
            },
            interpolation: f
          }
        },
        {
          pattern: /`(?:\\[\s\S]|[^\\`])*`/,
          alias: "backtick-quoted-string",
          greedy: !0
        },
        {
          pattern: /'(?:\\[\s\S]|[^\\'])*'/,
          alias: "single-quoted-string",
          greedy: !0
        },
        {
          pattern: /"(?:\\[\s\S]|[^\\"])*"/,
          alias: "double-quoted-string",
          greedy: !0,
          inside: {
            interpolation: f
          }
        }
      ];
      r.languages.insertBefore("php", "variable", {
        string: b,
        attribute: {
          pattern: /#\[(?:[^"'\/#]|\/(?![*/])|\/\/.*$|#(?!\[).*$|\/\*(?:[^*]|\*(?!\/))*\*\/|"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*')+\](?=\s*[a-z$#])/im,
          greedy: !0,
          inside: {
            "attribute-content": {
              pattern: /^(#\[)[\s\S]+(?=\]$)/,
              lookbehind: !0,
              // inside can appear subset of php
              inside: {
                comment: o,
                string: b,
                "attribute-class-name": [
                  {
                    pattern: /([^:]|^)\b[a-z_]\w*(?!\\)\b/i,
                    alias: "class-name",
                    greedy: !0,
                    lookbehind: !0
                  },
                  {
                    pattern: /([^:]|^)(?:\\?\b[a-z_]\w*)+/i,
                    alias: ["class-name", "class-name-fully-qualified"],
                    greedy: !0,
                    lookbehind: !0,
                    inside: {
                      punctuation: /\\/
                    }
                  }
                ],
                constant: s,
                number: u,
                operator: c,
                punctuation: p
              }
            },
            delimiter: {
              pattern: /^#\[|\]$/,
              alias: "punctuation"
            }
          }
        }
      }), r.hooks.add("before-tokenize", function(g) {
        if (/<\?/.test(g.code)) {
          var T = /<\?(?:[^"'/#]|\/(?![*/])|("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|(?:\/\/|#(?!\[))(?:[^?\n\r]|\?(?!>))*(?=$|\?>|[\r\n])|#\[|\/\*(?:[^*]|\*(?!\/))*(?:\*\/|$))*?(?:\?>|$)/g;
          r.languages["markup-templating"].buildPlaceholders(
            g,
            "php",
            T
          );
        }
      }), r.hooks.add("after-tokenize", function(g) {
        r.languages["markup-templating"].tokenizePlaceholders(g, "php");
      });
    }(n);
  }
  return qg;
}
var jg, $k;
function m7() {
  if ($k) return jg;
  $k = 1;
  var e = On(), t = gc();
  jg = n, n.displayName = "latte", n.aliases = [];
  function n(r) {
    r.register(e), r.register(t), function(o) {
      o.languages.latte = {
        comment: /^\{\*[\s\S]*/,
        "latte-tag": {
          // https://latte.nette.org/en/tags
          pattern: /(^\{(?:\/(?=[a-z]))?)(?:[=_]|[a-z]\w*\b(?!\())/i,
          lookbehind: !0,
          alias: "important"
        },
        delimiter: {
          pattern: /^\{\/?|\}$/,
          alias: "punctuation"
        },
        php: {
          pattern: /\S(?:[\s\S]*\S)?/,
          alias: "language-php",
          inside: o.languages.php
        }
      };
      var s = o.languages.extend("markup", {});
      o.languages.insertBefore(
        "inside",
        "attr-value",
        {
          "n-attr": {
            pattern: /n:[\w-]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+))?/,
            inside: {
              "attr-name": {
                pattern: /^[^\s=]+/,
                alias: "important"
              },
              "attr-value": {
                pattern: /=[\s\S]+/,
                inside: {
                  punctuation: [
                    /^=/,
                    {
                      pattern: /^(\s*)["']|["']$/,
                      lookbehind: !0
                    }
                  ],
                  php: {
                    pattern: /\S(?:[\s\S]*\S)?/,
                    inside: o.languages.php
                  }
                }
              }
            }
          }
        },
        s.tag
      ), o.hooks.add("before-tokenize", function(u) {
        if (u.language === "latte") {
          var c = /\{\*[\s\S]*?\*\}|\{[^'"\s{}*](?:[^"'/{}]|\/(?![*/])|("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|\/\*(?:[^*]|\*(?!\/))*\*\/)*\}/g;
          o.languages["markup-templating"].buildPlaceholders(
            u,
            "latte",
            c
          ), u.grammar = s;
        }
      }), o.hooks.add("after-tokenize", function(u) {
        o.languages["markup-templating"].tokenizePlaceholders(u, "latte");
      });
    }(r);
  }
  return jg;
}
var Vg, zk;
function b7() {
  if (zk) return Vg;
  zk = 1, Vg = e, e.displayName = "less", e.aliases = [];
  function e(t) {
    t.languages.less = t.languages.extend("css", {
      comment: [
        /\/\*[\s\S]*?\*\//,
        {
          pattern: /(^|[^\\])\/\/.*/,
          lookbehind: !0
        }
      ],
      atrule: {
        pattern: /@[\w-](?:\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};\s]|\s+(?!\s))*?(?=\s*\{)/,
        inside: {
          punctuation: /[:()]/
        }
      },
      // selectors and mixins are considered the same
      selector: {
        pattern: /(?:@\{[\w-]+\}|[^{};\s@])(?:@\{[\w-]+\}|\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};@\s]|\s+(?!\s))*?(?=\s*\{)/,
        inside: {
          // mixin parameters
          variable: /@+[\w-]+/
        }
      },
      property: /(?:@\{[\w-]+\}|[\w-])+(?:\+_?)?(?=\s*:)/,
      operator: /[+\-*\/]/
    }), t.languages.insertBefore("less", "property", {
      variable: [
        // Variable declaration (the colon must be consumed!)
        {
          pattern: /@[\w-]+\s*:/,
          inside: {
            punctuation: /:/
          }
        },
        // Variable usage
        /@@?[\w-]+/
      ],
      "mixin-usage": {
        pattern: /([{;]\s*)[.#](?!\d)[\w-].*?(?=[(;])/,
        lookbehind: !0,
        alias: "function"
      }
    });
  }
  return Vg;
}
var Wg, Gk;
function JE() {
  if (Gk) return Wg;
  Gk = 1, Wg = e, e.displayName = "scheme", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.scheme = {
        // this supports "normal" single-line comments:
        //   ; comment
        // and (potentially nested) multiline comments:
        //   #| comment #| nested |# still comment |#
        // (only 1 level of nesting is supported)
        comment: /;.*|#;\s*(?:\((?:[^()]|\([^()]*\))*\)|\[(?:[^\[\]]|\[[^\[\]]*\])*\])|#\|(?:[^#|]|#(?!\|)|\|(?!#)|#\|(?:[^#|]|#(?!\|)|\|(?!#))*\|#)*\|#/,
        string: {
          pattern: /"(?:[^"\\]|\\.)*"/,
          greedy: !0
        },
        symbol: {
          pattern: /'[^()\[\]#'\s]+/,
          greedy: !0
        },
        char: {
          pattern: /#\\(?:[ux][a-fA-F\d]+\b|[-a-zA-Z]+\b|[\uD800-\uDBFF][\uDC00-\uDFFF]|\S)/,
          greedy: !0
        },
        "lambda-parameter": [
          // https://www.cs.cmu.edu/Groups/AI/html/r4rs/r4rs_6.html#SEC30
          {
            pattern: /((?:^|[^'`#])[(\[]lambda\s+)(?:[^|()\[\]'\s]+|\|(?:[^\\|]|\\.)*\|)/,
            lookbehind: !0
          },
          {
            pattern: /((?:^|[^'`#])[(\[]lambda\s+[(\[])[^()\[\]']+/,
            lookbehind: !0
          }
        ],
        keyword: {
          pattern: /((?:^|[^'`#])[(\[])(?:begin|case(?:-lambda)?|cond(?:-expand)?|define(?:-library|-macro|-record-type|-syntax|-values)?|defmacro|delay(?:-force)?|do|else|except|export|guard|if|import|include(?:-ci|-library-declarations)?|lambda|let(?:rec)?(?:-syntax|-values|\*)?|let\*-values|only|parameterize|prefix|(?:quasi-?)?quote|rename|set!|syntax-(?:case|rules)|unless|unquote(?:-splicing)?|when)(?=[()\[\]\s]|$)/,
          lookbehind: !0
        },
        builtin: {
          // all functions of the base library of R7RS plus some of built-ins of R5Rs
          pattern: /((?:^|[^'`#])[(\[])(?:abs|and|append|apply|assoc|ass[qv]|binary-port\?|boolean=?\?|bytevector(?:-append|-copy|-copy!|-length|-u8-ref|-u8-set!|\?)?|caar|cadr|call-with-(?:current-continuation|port|values)|call\/cc|car|cdar|cddr|cdr|ceiling|char(?:->integer|-ready\?|\?|<\?|<=\?|=\?|>\?|>=\?)|close-(?:input-port|output-port|port)|complex\?|cons|current-(?:error|input|output)-port|denominator|dynamic-wind|eof-object\??|eq\?|equal\?|eqv\?|error|error-object(?:-irritants|-message|\?)|eval|even\?|exact(?:-integer-sqrt|-integer\?|\?)?|expt|features|file-error\?|floor(?:-quotient|-remainder|\/)?|flush-output-port|for-each|gcd|get-output-(?:bytevector|string)|inexact\??|input-port(?:-open\?|\?)|integer(?:->char|\?)|lcm|length|list(?:->string|->vector|-copy|-ref|-set!|-tail|\?)?|make-(?:bytevector|list|parameter|string|vector)|map|max|member|memq|memv|min|modulo|negative\?|newline|not|null\?|number(?:->string|\?)|numerator|odd\?|open-(?:input|output)-(?:bytevector|string)|or|output-port(?:-open\?|\?)|pair\?|peek-char|peek-u8|port\?|positive\?|procedure\?|quotient|raise|raise-continuable|rational\?|rationalize|read-(?:bytevector|bytevector!|char|error\?|line|string|u8)|real\?|remainder|reverse|round|set-c[ad]r!|square|string(?:->list|->number|->symbol|->utf8|->vector|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\?|<\?|<=\?|=\?|>\?|>=\?)?|substring|symbol(?:->string|\?|=\?)|syntax-error|textual-port\?|truncate(?:-quotient|-remainder|\/)?|u8-ready\?|utf8->string|values|vector(?:->list|->string|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\?)?|with-exception-handler|write-(?:bytevector|char|string|u8)|zero\?)(?=[()\[\]\s]|$)/,
          lookbehind: !0
        },
        operator: {
          pattern: /((?:^|[^'`#])[(\[])(?:[-+*%/]|[<>]=?|=>?)(?=[()\[\]\s]|$)/,
          lookbehind: !0
        },
        number: {
          // The number pattern from [the R7RS spec](https://small.r7rs.org/attachment/r7rs.pdf).
          //
          // <number>      := <num 2>|<num 8>|<num 10>|<num 16>
          // <num R>       := <prefix R><complex R>
          // <complex R>   := <real R>(?:@<real R>|<imaginary R>)?|<imaginary R>
          // <imaginary R> := [+-](?:<ureal R>|(?:inf|nan)\.0)?i
          // <real R>      := [+-]?<ureal R>|[+-](?:inf|nan)\.0
          // <ureal R>     := <uint R>(?:\/<uint R>)?
          //                | <decimal R>
          //
          // <decimal 10>  := (?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?
          // <uint R>      := <digit R>+
          // <prefix R>    := <radix R>(?:#[ei])?|(?:#[ei])?<radix R>
          // <radix 2>     := #b
          // <radix 8>     := #o
          // <radix 10>    := (?:#d)?
          // <radix 16>    := #x
          // <digit 2>     := [01]
          // <digit 8>     := [0-7]
          // <digit 10>    := \d
          // <digit 16>    := [0-9a-f]
          //
          // The problem with this grammar is that the resulting regex is way to complex, so we simplify by grouping all
          // non-decimal bases together. This results in a decimal (dec) and combined binary, octal, and hexadecimal (box)
          // pattern:
          pattern: RegExp(
            r({
              "<ureal dec>": /\d+(?:\/\d+)|(?:\d+(?:\.\d*)?|\.\d+)(?:[esfdl][+-]?\d+)?/.source,
              "<real dec>": /[+-]?<ureal dec>|[+-](?:inf|nan)\.0/.source,
              "<imaginary dec>": /[+-](?:<ureal dec>|(?:inf|nan)\.0)?i/.source,
              "<complex dec>": /<real dec>(?:@<real dec>|<imaginary dec>)?|<imaginary dec>/.source,
              "<num dec>": /(?:#d(?:#[ei])?|#[ei](?:#d)?)?<complex dec>/.source,
              "<ureal box>": /[0-9a-f]+(?:\/[0-9a-f]+)?/.source,
              "<real box>": /[+-]?<ureal box>|[+-](?:inf|nan)\.0/.source,
              "<imaginary box>": /[+-](?:<ureal box>|(?:inf|nan)\.0)?i/.source,
              "<complex box>": /<real box>(?:@<real box>|<imaginary box>)?|<imaginary box>/.source,
              "<num box>": /#[box](?:#[ei])?|(?:#[ei])?#[box]<complex box>/.source,
              "<number>": /(^|[()\[\]\s])(?:<num dec>|<num box>)(?=[()\[\]\s]|$)/.source
            }),
            "i"
          ),
          lookbehind: !0
        },
        boolean: {
          pattern: /(^|[()\[\]\s])#(?:[ft]|false|true)(?=[()\[\]\s]|$)/,
          lookbehind: !0
        },
        function: {
          pattern: /((?:^|[^'`#])[(\[])(?:[^|()\[\]'\s]+|\|(?:[^\\|]|\\.)*\|)(?=[()\[\]\s]|$)/,
          lookbehind: !0
        },
        identifier: {
          pattern: /(^|[()\[\]\s])\|(?:[^\\|]|\\.)*\|(?=[()\[\]\s]|$)/,
          lookbehind: !0,
          greedy: !0
        },
        punctuation: /[()\[\]']/
      };
      function r(o) {
        for (var s in o)
          o[s] = o[s].replace(/<[\w\s]+>/g, function(u) {
            return "(?:" + o[u].trim() + ")";
          });
        return o[s];
      }
    })(t);
  }
  return Wg;
}
var Yg, qk;
function E7() {
  if (qk) return Yg;
  qk = 1;
  var e = JE();
  Yg = t, t.displayName = "lilypond", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      for (var o = /\((?:[^();"#\\]|\\[\s\S]|;.*(?!.)|"(?:[^"\\]|\\.)*"|#(?:\{(?:(?!#\})[\s\S])*#\}|[^{])|<expr>)*\)/.source, s = 5, u = 0; u < s; u++)
        o = o.replace(/<expr>/g, function() {
          return o;
        });
      o = o.replace(/<expr>/g, /[^\s\S]/.source);
      var c = r.languages.lilypond = {
        comment: /%(?:(?!\{).*|\{[\s\S]*?%\})/,
        "embedded-scheme": {
          pattern: RegExp(
            /(^|[=\s])#(?:"(?:[^"\\]|\\.)*"|[^\s()"]*(?:[^\s()]|<expr>))/.source.replace(
              /<expr>/g,
              function() {
                return o;
              }
            ),
            "m"
          ),
          lookbehind: !0,
          greedy: !0,
          inside: {
            scheme: {
              pattern: /^(#)[\s\S]+$/,
              lookbehind: !0,
              alias: "language-scheme",
              inside: {
                "embedded-lilypond": {
                  pattern: /#\{[\s\S]*?#\}/,
                  greedy: !0,
                  inside: {
                    punctuation: /^#\{|#\}$/,
                    lilypond: {
                      pattern: /[\s\S]+/,
                      alias: "language-lilypond",
                      inside: null
                      // see below
                    }
                  }
                },
                rest: r.languages.scheme
              }
            },
            punctuation: /#/
          }
        },
        string: {
          pattern: /"(?:[^"\\]|\\.)*"/,
          greedy: !0
        },
        "class-name": {
          pattern: /(\\new\s+)[\w-]+/,
          lookbehind: !0
        },
        keyword: {
          pattern: /\\[a-z][-\w]*/i,
          inside: {
            punctuation: /^\\/
          }
        },
        operator: /[=|]|<<|>>/,
        punctuation: {
          pattern: /(^|[a-z\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\d))|[_^]\.?|[.!])|[{}()[\]<>^~]|\\[()[\]<>\\!]|--|__/,
          lookbehind: !0
        },
        number: /\b\d+(?:\/\d+)?\b/
      };
      c["embedded-scheme"].inside.scheme.inside["embedded-lilypond"].inside.lilypond.inside = c, r.languages.ly = c;
    }(n);
  }
  return Yg;
}
var Kg, jk;
function y7() {
  if (jk) return Kg;
  jk = 1;
  var e = On();
  Kg = t, t.displayName = "liquid", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.liquid = {
      comment: {
        pattern: /(^\{%\s*comment\s*%\})[\s\S]+(?=\{%\s*endcomment\s*%\}$)/,
        lookbehind: !0
      },
      delimiter: {
        pattern: /^\{(?:\{\{|[%\{])-?|-?(?:\}\}|[%\}])\}$/,
        alias: "punctuation"
      },
      string: {
        pattern: /"[^"]*"|'[^']*'/,
        greedy: !0
      },
      keyword: /\b(?:as|assign|break|(?:end)?(?:capture|case|comment|for|form|if|paginate|raw|style|tablerow|unless)|continue|cycle|decrement|echo|else|elsif|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\b/,
      object: /\b(?:address|all_country_option_tags|article|block|blog|cart|checkout|collection|color|country|country_option_tags|currency|current_page|current_tags|customer|customer_address|date|discount_allocation|discount_application|external_video|filter|filter_value|font|forloop|fulfillment|generic_file|gift_card|group|handle|image|line_item|link|linklist|localization|location|measurement|media|metafield|model|model_source|order|page|page_description|page_image|page_title|part|policy|product|product_option|recommendations|request|robots|routes|rule|script|search|selling_plan|selling_plan_allocation|selling_plan_group|shipping_method|shop|shop_locale|sitemap|store_availability|tax_line|template|theme|transaction|unit_price_measurement|user_agent|variant|video|video_source)\b/,
      function: [
        {
          pattern: /(\|\s*)\w+/,
          lookbehind: !0,
          alias: "filter"
        },
        {
          // array functions
          pattern: /(\.\s*)(?:first|last|size)/,
          lookbehind: !0
        }
      ],
      boolean: /\b(?:false|nil|true)\b/,
      range: {
        pattern: /\.\./,
        alias: "operator"
      },
      // https://github.com/Shopify/liquid/blob/698f5e0d967423e013f6169d9111bd969bd78337/lib/liquid/lexer.rb#L21
      number: /\b\d+(?:\.\d+)?\b/,
      operator: /[!=]=|<>|[<>]=?|[|?:=-]|\b(?:and|contains(?=\s)|or)\b/,
      punctuation: /[.,\[\]()]/,
      empty: {
        pattern: /\bempty\b/,
        alias: "keyword"
      }
    }, n.hooks.add("before-tokenize", function(r) {
      var o = /\{%\s*comment\s*%\}[\s\S]*?\{%\s*endcomment\s*%\}|\{(?:%[\s\S]*?%|\{\{[\s\S]*?\}\}|\{[\s\S]*?\})\}/g, s = !1;
      n.languages["markup-templating"].buildPlaceholders(
        r,
        "liquid",
        o,
        function(u) {
          var c = /^\{%-?\s*(\w+)/.exec(u);
          if (c) {
            var p = c[1];
            if (p === "raw" && !s)
              return s = !0, !0;
            if (p === "endraw")
              return s = !1, !0;
          }
          return !s;
        }
      );
    }), n.hooks.add("after-tokenize", function(r) {
      n.languages["markup-templating"].tokenizePlaceholders(r, "liquid");
    });
  }
  return Kg;
}
var Xg, Vk;
function T7() {
  if (Vk) return Xg;
  Vk = 1, Xg = e, e.displayName = "lisp", e.aliases = [];
  function e(t) {
    (function(n) {
      function r(A) {
        return RegExp(/(\()/.source + "(?:" + A + ")" + /(?=[\s\)])/.source);
      }
      function o(A) {
        return RegExp(
          /([\s([])/.source + "(?:" + A + ")" + /(?=[\s)])/.source
        );
      }
      var s = /(?!\d)[-+*/~!@$%^=<>{}\w]+/.source, u = "&" + s, c = "(\\()", p = "(?=\\))", f = "(?=\\s)", b = /(?:[^()]|\((?:[^()]|\((?:[^()]|\((?:[^()]|\((?:[^()]|\([^()]*\))*\))*\))*\))*\))*/.source, g = {
        // Three or four semicolons are considered a heading.
        // See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html
        heading: {
          pattern: /;;;.*/,
          alias: ["comment", "title"]
        },
        comment: /;.*/,
        string: {
          pattern: /"(?:[^"\\]|\\.)*"/,
          greedy: !0,
          inside: {
            argument: /[-A-Z]+(?=[.,\s])/,
            symbol: RegExp("`" + s + "'")
          }
        },
        "quoted-symbol": {
          pattern: RegExp("#?'" + s),
          alias: ["variable", "symbol"]
        },
        "lisp-property": {
          pattern: RegExp(":" + s),
          alias: "property"
        },
        splice: {
          pattern: RegExp(",@?" + s),
          alias: ["symbol", "variable"]
        },
        keyword: [
          {
            pattern: RegExp(
              c + "(?:and|(?:cl-)?letf|cl-loop|cond|cons|error|if|(?:lexical-)?let\\*?|message|not|null|or|provide|require|setq|unless|use-package|when|while)" + f
            ),
            lookbehind: !0
          },
          {
            pattern: RegExp(
              c + "(?:append|by|collect|concat|do|finally|for|in|return)" + f
            ),
            lookbehind: !0
          }
        ],
        declare: {
          pattern: r(/declare/.source),
          lookbehind: !0,
          alias: "keyword"
        },
        interactive: {
          pattern: r(/interactive/.source),
          lookbehind: !0,
          alias: "keyword"
        },
        boolean: {
          pattern: o(/nil|t/.source),
          lookbehind: !0
        },
        number: {
          pattern: o(/[-+]?\d+(?:\.\d*)?/.source),
          lookbehind: !0
        },
        defvar: {
          pattern: RegExp(c + "def(?:const|custom|group|var)\\s+" + s),
          lookbehind: !0,
          inside: {
            keyword: /^def[a-z]+/,
            variable: RegExp(s)
          }
        },
        defun: {
          pattern: RegExp(
            c + /(?:cl-)?(?:defmacro|defun\*?)\s+/.source + s + /\s+\(/.source + b + /\)/.source
          ),
          lookbehind: !0,
          greedy: !0,
          inside: {
            keyword: /^(?:cl-)?def\S+/,
            // See below, this property needs to be defined later so that it can
            // reference the language object.
            arguments: null,
            function: {
              pattern: RegExp("(^\\s)" + s),
              lookbehind: !0
            },
            punctuation: /[()]/
          }
        },
        lambda: {
          pattern: RegExp(
            c + "lambda\\s+\\(\\s*(?:&?" + s + "(?:\\s+&?" + s + ")*\\s*)?\\)"
          ),
          lookbehind: !0,
          greedy: !0,
          inside: {
            keyword: /^lambda/,
            // See below, this property needs to be defined later so that it can
            // reference the language object.
            arguments: null,
            punctuation: /[()]/
          }
        },
        car: {
          pattern: RegExp(c + s),
          lookbehind: !0
        },
        punctuation: [
          // open paren, brackets, and close paren
          /(?:['`,]?\(|[)\[\]])/,
          // cons
          {
            pattern: /(\s)\.(?=\s)/,
            lookbehind: !0
          }
        ]
      }, T = {
        "lisp-marker": RegExp(u),
        varform: {
          pattern: RegExp(
            /\(/.source + s + /\s+(?=\S)/.source + b + /\)/.source
          ),
          inside: g
        },
        argument: {
          pattern: RegExp(/(^|[\s(])/.source + s),
          lookbehind: !0,
          alias: "variable"
        },
        rest: g
      }, y = "\\S+(?:\\s+\\S+)*", _ = {
        pattern: RegExp(c + b + p),
        lookbehind: !0,
        inside: {
          "rest-vars": {
            pattern: RegExp("&(?:body|rest)\\s+" + y),
            inside: T
          },
          "other-marker-vars": {
            pattern: RegExp("&(?:aux|optional)\\s+" + y),
            inside: T
          },
          keys: {
            pattern: RegExp("&key\\s+" + y + "(?:\\s+&allow-other-keys)?"),
            inside: T
          },
          argument: {
            pattern: RegExp(s),
            alias: "variable"
          },
          punctuation: /[()]/
        }
      };
      g.lambda.inside.arguments = _, g.defun.inside.arguments = n.util.clone(_), g.defun.inside.arguments.inside.sublist = _, n.languages.lisp = g, n.languages.elisp = g, n.languages.emacs = g, n.languages["emacs-lisp"] = g;
    })(t);
  }
  return Xg;
}
var Qg, Wk;
function S7() {
  if (Wk) return Qg;
  Wk = 1, Qg = e, e.displayName = "livescript", e.aliases = [];
  function e(t) {
    t.languages.livescript = {
      comment: [
        {
          pattern: /(^|[^\\])\/\*[\s\S]*?\*\//,
          lookbehind: !0
        },
        {
          pattern: /(^|[^\\])#.*/,
          lookbehind: !0
        }
      ],
      "interpolated-string": {
        /* Look-behind and look-ahead prevents wrong behavior of the greedy pattern
         * forcing it to match """-quoted string when it would otherwise match "-quoted first. */
        pattern: /(^|[^"])("""|")(?:\\[\s\S]|(?!\2)[^\\])*\2(?!")/,
        lookbehind: !0,
        greedy: !0,
        inside: {
          variable: {
            pattern: /(^|[^\\])#[a-z_](?:-?[a-z]|[\d_])*/m,
            lookbehind: !0
          },
          interpolation: {
            pattern: /(^|[^\\])#\{[^}]+\}/m,
            lookbehind: !0,
            inside: {
              "interpolation-punctuation": {
                pattern: /^#\{|\}$/,
                alias: "variable"
              }
              // See rest below
            }
          },
          string: /[\s\S]+/
        }
      },
      string: [
        {
          pattern: /('''|')(?:\\[\s\S]|(?!\1)[^\\])*\1/,
          greedy: !0
        },
        {
          pattern: /<\[[\s\S]*?\]>/,
          greedy: !0
        },
        /\\[^\s,;\])}]+/
      ],
      regex: [
        {
          pattern: /\/\/(?:\[[^\r\n\]]*\]|\\.|(?!\/\/)[^\\\[])+\/\/[gimyu]{0,5}/,
          greedy: !0,
          inside: {
            comment: {
              pattern: /(^|[^\\])#.*/,
              lookbehind: !0
            }
          }
        },
        {
          pattern: /\/(?:\[[^\r\n\]]*\]|\\.|[^/\\\r\n\[])+\/[gimyu]{0,5}/,
          greedy: !0
        }
      ],
      keyword: {
        pattern: /(^|(?!-).)\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\b/m,
        lookbehind: !0
      },
      "keyword-operator": {
        pattern: /(^|[^-])\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?: not|nt)?|not|of|or|til|to|typeof|with|xor)(?!-)\b)/m,
        lookbehind: !0,
        alias: "operator"
      },
      boolean: {
        pattern: /(^|[^-])\b(?:false|no|off|on|true|yes)(?!-)\b/m,
        lookbehind: !0
      },
      argument: {
        // Don't match .&. nor &&
        pattern: /(^|(?!\.&\.)[^&])&(?!&)\d*/m,
        lookbehind: !0,
        alias: "variable"
      },
      number: /\b(?:\d+~[\da-z]+|\d[\d_]*(?:\.\d[\d_]*)?(?:[a-z]\w*)?)/i,
      identifier: /[a-z_](?:-?[a-z]|[\d_])*/i,
      operator: [
        // Spaced .
        {
          pattern: /( )\.(?= )/,
          lookbehind: !0
        },
        // Full list, in order:
        // .= .~ .. ...
        // .&. .^. .<<. .>>. .>>>.
        // := :: ::=
        // &&
        // || |>
        // < << <<< <<<<
        // <- <-- <-! <--!
        // <~ <~~ <~! <~~!
        // <| <= <?
        // > >> >= >?
        // - -- -> -->
        // + ++
        // @ @@
        // % %%
        // * **
        // ! != !~=
        // !~> !~~>
        // !-> !-->
        // ~ ~> ~~> ~=
        // = ==
        // ^ ^^
        // / ?
        /\.(?:[=~]|\.\.?)|\.(?:[&|^]|<<|>>>?)\.|:(?:=|:=?)|&&|\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\+\+?|@@?|%%?|\*\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\^\^?|[\/?]/
      ],
      punctuation: /[(){}\[\]|.,:;`]/
    }, t.languages.livescript["interpolated-string"].inside.interpolation.inside.rest = t.languages.livescript;
  }
  return Qg;
}
var Zg, Yk;
function _7() {
  if (Yk) return Zg;
  Yk = 1, Zg = e, e.displayName = "llvm", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.llvm = {
        comment: /;.*/,
        string: {
          pattern: /"[^"]*"/,
          greedy: !0
        },
        boolean: /\b(?:false|true)\b/,
        variable: /[%@!#](?:(?!\d)(?:[-$.\w]|\\[a-f\d]{2})+|\d+)/i,
        label: /(?!\d)(?:[-$.\w]|\\[a-f\d]{2})+:/i,
        type: {
          pattern: /\b(?:double|float|fp128|half|i[1-9]\d*|label|metadata|ppc_fp128|token|void|x86_fp80|x86_mmx)\b/,
          alias: "class-name"
        },
        keyword: /\b[a-z_][a-z_0-9]*\b/,
        number: /[+-]?\b\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\b|\b0x[\dA-Fa-f]+\b|\b0xK[\dA-Fa-f]{20}\b|\b0x[ML][\dA-Fa-f]{32}\b|\b0xH[\dA-Fa-f]{4}\b/,
        punctuation: /[{}[\];(),.!*=<>]/
      };
    })(t);
  }
  return Zg;
}
var Jg, Kk;
function v7() {
  if (Kk) return Jg;
  Kk = 1, Jg = e, e.displayName = "log", e.aliases = [];
  function e(t) {
    t.languages.log = {
      string: {
        // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy
        pattern: /"(?:[^"\\\r\n]|\\.)*"|'(?![st] | \w)(?:[^'\\\r\n]|\\.)*'/,
        greedy: !0
      },
      exception: {
        pattern: /(^|[^\w.])[a-z][\w.]*(?:Error|Exception):.*(?:(?:\r\n?|\n)[ \t]*(?:at[ \t].+|\.{3}.*|Caused by:.*))+(?:(?:\r\n?|\n)[ \t]*\.\.\. .*)?/,
        lookbehind: !0,
        greedy: !0,
        alias: ["javastacktrace", "language-javastacktrace"],
        inside: t.languages.javastacktrace || {
          keyword: /\bat\b/,
          function: /[a-z_][\w$]*(?=\()/,
          punctuation: /[.:()]/
        }
      },
      level: [
        {
          pattern: /\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\b/,
          alias: ["error", "important"]
        },
        {
          pattern: /\b(?:WARN|WARNING|WRN)\b/,
          alias: ["warning", "important"]
        },
        {
          pattern: /\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\b/,
          alias: ["info", "keyword"]
        },
        {
          pattern: /\b(?:DBG|DEBUG|FINE)\b/,
          alias: ["debug", "keyword"]
        },
        {
          pattern: /\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\b/,
          alias: ["trace", "comment"]
        }
      ],
      property: {
        pattern: /((?:^|[\]|])[ \t]*)[a-z_](?:[\w-]|\b\/\b)*(?:[. ]\(?\w(?:[\w-]|\b\/\b)*\)?)*:(?=\s)/im,
        lookbehind: !0
      },
      separator: {
        pattern: /(^|[^-+])-{3,}|={3,}|\*{3,}|- - /m,
        lookbehind: !0,
        alias: "comment"
      },
      url: /\b(?:file|ftp|https?):\/\/[^\s|,;'"]*[^\s|,;'">.]/,
      email: {
        pattern: /(^|\s)[-\w+.]+@[a-z][a-z0-9-]*(?:\.[a-z][a-z0-9-]*)+(?=\s)/,
        lookbehind: !0,
        alias: "url"
      },
      "ip-address": {
        pattern: /\b(?:\d{1,3}(?:\.\d{1,3}){3})\b/,
        alias: "constant"
      },
      "mac-address": {
        pattern: /\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\b/i,
        alias: "constant"
      },
      domain: {
        pattern: /(^|\s)[a-z][a-z0-9-]*(?:\.[a-z][a-z0-9-]*)*\.[a-z][a-z0-9-]+(?=\s)/,
        lookbehind: !0,
        alias: "constant"
      },
      uuid: {
        pattern: /\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\b/i,
        alias: "constant"
      },
      hash: {
        pattern: /\b(?:[a-f0-9]{32}){1,2}\b/i,
        alias: "constant"
      },
      "file-path": {
        pattern: /\b[a-z]:[\\/][^\s|,;:(){}\[\]"']+|(^|[\s:\[\](>|])\.{0,2}\/\w[^\s|,;:(){}\[\]"']*/i,
        lookbehind: !0,
        greedy: !0,
        alias: "string"
      },
      date: {
        pattern: RegExp(
          /\b\d{4}[-/]\d{2}[-/]\d{2}(?:T(?=\d{1,2}:)|(?=\s\d{1,2}:))/.source + "|" + /\b\d{1,4}[-/ ](?:\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\d{2,4}T?\b/.source + "|" + /\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\s{1,2}\d{1,2}\b/.source,
          "i"
        ),
        alias: "number"
      },
      time: {
        pattern: /\b\d{1,2}:\d{1,2}:\d{1,2}(?:[.,:]\d+)?(?:\s?[+-]\d{2}:?\d{2}|Z)?\b/,
        alias: "number"
      },
      boolean: /\b(?:false|null|true)\b/i,
      number: {
        pattern: /(^|[^.\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\d[\da-f]*(?:\.\d+)*(?:e[+-]?\d+)?[a-z]{0,3}\b)\b(?!\.\w)/i,
        lookbehind: !0
      },
      operator: /[;:?<=>~/@!$%&+\-|^(){}*#]/,
      punctuation: /[\[\].,]/
    };
  }
  return Jg;
}
var em, Xk;
function A7() {
  if (Xk) return em;
  Xk = 1, em = e, e.displayName = "lolcode", e.aliases = [];
  function e(t) {
    t.languages.lolcode = {
      comment: [/\bOBTW\s[\s\S]*?\sTLDR\b/, /\bBTW.+/],
      string: {
        pattern: /"(?::.|[^":])*"/,
        inside: {
          variable: /:\{[^}]+\}/,
          symbol: [/:\([a-f\d]+\)/i, /:\[[^\]]+\]/, /:[)>o":]/]
        },
        greedy: !0
      },
      number: /(?:\B-)?(?:\b\d+(?:\.\d*)?|\B\.\d+)/,
      symbol: {
        pattern: /(^|\s)(?:A )?(?:BUKKIT|NOOB|NUMBAR|NUMBR|TROOF|YARN)(?=\s|,|$)/,
        lookbehind: !0,
        inside: {
          keyword: /A(?=\s)/
        }
      },
      label: {
        pattern: /((?:^|\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\w*/,
        lookbehind: !0,
        alias: "string"
      },
      function: {
        pattern: /((?:^|\s)(?:HOW IZ I|I IZ|IZ) )[a-zA-Z]\w*/,
        lookbehind: !0
      },
      keyword: [
        {
          pattern: /(^|\s)(?:AN|FOUND YR|GIMMEH|GTFO|HAI|HAS A|HOW IZ I|I HAS A|I IZ|IF U SAY SO|IM IN YR|IM OUTTA YR|IS NOW(?: A)?|ITZ(?: A)?|IZ|KTHX|KTHXBYE|LIEK(?: A)?|MAEK|MEBBE|MKAY|NERFIN|NO WAI|O HAI IM|O RLY\?|OIC|OMG|OMGWTF|R|SMOOSH|SRS|TIL|UPPIN|VISIBLE|WILE|WTF\?|YA RLY|YR)(?=\s|,|$)/,
          lookbehind: !0
        },
        /'Z(?=\s|,|$)/
      ],
      boolean: {
        pattern: /(^|\s)(?:FAIL|WIN)(?=\s|,|$)/,
        lookbehind: !0
      },
      variable: {
        pattern: /(^|\s)IT(?=\s|,|$)/,
        lookbehind: !0
      },
      operator: {
        pattern: /(^|\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:ALL|ANY|BIGGR|BOTH|DIFF|EITHER|MOD|PRODUKT|QUOSHUNT|SMALLR|SUM|WON) OF)(?=\s|,|$)/,
        lookbehind: !0
      },
      punctuation: /\.{3}|…|,|!/
    };
  }
  return em;
}
var tm, Qk;
function k7() {
  if (Qk) return tm;
  Qk = 1, tm = e, e.displayName = "magma", e.aliases = [];
  function e(t) {
    t.languages.magma = {
      output: {
        pattern: /^(>.*(?:\r(?:\n|(?!\n))|\n))(?!>)(?:.+|(?:\r(?:\n|(?!\n))|\n)(?!>).*)(?:(?:\r(?:\n|(?!\n))|\n)(?!>).*)*/m,
        lookbehind: !0,
        greedy: !0
      },
      comment: {
        pattern: /\/\/.*|\/\*[\s\S]*?\*\//,
        greedy: !0
      },
      string: {
        pattern: /(^|[^\\"])"(?:[^\r\n\\"]|\\.)*"/,
        lookbehind: !0,
        greedy: !0
      },
      // http://magma.maths.usyd.edu.au/magma/handbook/text/82
      keyword: /\b(?:_|adj|and|assert|assert2|assert3|assigned|break|by|case|cat|catch|clear|cmpeq|cmpne|continue|declare|default|delete|diff|div|do|elif|else|end|eq|error|eval|exists|exit|for|forall|forward|fprintf|freeze|function|ge|gt|if|iload|import|in|intrinsic|is|join|le|load|local|lt|meet|mod|ne|not|notadj|notin|notsubset|or|print|printf|procedure|quit|random|read|readi|repeat|require|requirege|requirerange|restore|return|save|sdiff|select|subset|then|time|to|try|until|vprint|vprintf|vtime|when|where|while|xor)\b/,
      boolean: /\b(?:false|true)\b/,
      generator: {
        pattern: /\b[a-z_]\w*(?=\s*<)/i,
        alias: "class-name"
      },
      function: /\b[a-z_]\w*(?=\s*\()/i,
      number: {
        pattern: /(^|[^\w.]|\.\.)(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?(?:_[a-z]?)?(?=$|[^\w.]|\.\.)/,
        lookbehind: !0
      },
      operator: /->|[-+*/^~!|#=]|:=|\.\./,
      punctuation: /[()[\]{}<>,;.:]/
    };
  }
  return tm;
}
var nm, Zk;
function C7() {
  if (Zk) return nm;
  Zk = 1, nm = e, e.displayName = "makefile", e.aliases = [];
  function e(t) {
    t.languages.makefile = {
      comment: {
        pattern: /(^|[^\\])#(?:\\(?:\r\n|[\s\S])|[^\\\r\n])*/,
        lookbehind: !0
      },
      string: {
        pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
        greedy: !0
      },
      "builtin-target": {
        pattern: /\.[A-Z][^:#=\s]+(?=\s*:(?!=))/,
        alias: "builtin"
      },
      target: {
        pattern: /^(?:[^:=\s]|[ \t]+(?![\s:]))+(?=\s*:(?!=))/m,
        alias: "symbol",
        inside: {
          variable: /\$+(?:(?!\$)[^(){}:#=\s]+|(?=[({]))/
        }
      },
      variable: /\$+(?:(?!\$)[^(){}:#=\s]+|\([@*%<^+?][DF]\)|(?=[({]))/,
      // Directives
      keyword: /-include\b|\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\b/,
      function: {
        pattern: /(\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \t])/,
        lookbehind: !0
      },
      operator: /(?:::|[?:+!])?=|[|@]/,
      punctuation: /[:;(){}]/
    };
  }
  return nm;
}
var rm, Jk;
function w7() {
  if (Jk) return rm;
  Jk = 1, rm = e, e.displayName = "markdown", e.aliases = ["md"];
  function e(t) {
    (function(n) {
      var r = /(?:\\.|[^\\\n\r]|(?:\n|\r\n?)(?![\r\n]))/.source;
      function o(T) {
        return T = T.replace(/<inner>/g, function() {
          return r;
        }), RegExp(/((?:^|[^\\])(?:\\{2})*)/.source + "(?:" + T + ")");
      }
      var s = /(?:\\.|``(?:[^`\r\n]|`(?!`))+``|`[^`\r\n]+`|[^\\|\r\n`])+/.source, u = /\|?__(?:\|__)+\|?(?:(?:\n|\r\n?)|(?![\s\S]))/.source.replace(
        /__/g,
        function() {
          return s;
        }
      ), c = /\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\n|\r\n?)/.source;
      n.languages.markdown = n.languages.extend("markup", {}), n.languages.insertBefore("markdown", "prolog", {
        "front-matter-block": {
          pattern: /(^(?:\s*[\r\n])?)---(?!.)[\s\S]*?[\r\n]---(?!.)/,
          lookbehind: !0,
          greedy: !0,
          inside: {
            punctuation: /^---|---$/,
            "front-matter": {
              pattern: /\S+(?:\s+\S+)*/,
              alias: ["yaml", "language-yaml"],
              inside: n.languages.yaml
            }
          }
        },
        blockquote: {
          // > ...
          pattern: /^>(?:[\t ]*>)*/m,
          alias: "punctuation"
        },
        table: {
          pattern: RegExp(
            "^" + u + c + "(?:" + u + ")*",
            "m"
          ),
          inside: {
            "table-data-rows": {
              pattern: RegExp(
                "^(" + u + c + ")(?:" + u + ")*$"
              ),
              lookbehind: !0,
              inside: {
                "table-data": {
                  pattern: RegExp(s),
                  inside: n.languages.markdown
                },
                punctuation: /\|/
              }
            },
            "table-line": {
              pattern: RegExp("^(" + u + ")" + c + "$"),
              lookbehind: !0,
              inside: {
                punctuation: /\||:?-{3,}:?/
              }
            },
            "table-header-row": {
              pattern: RegExp("^" + u + "$"),
              inside: {
                "table-header": {
                  pattern: RegExp(s),
                  alias: "important",
                  inside: n.languages.markdown
                },
                punctuation: /\|/
              }
            }
          }
        },
        code: [
          {
            // Prefixed by 4 spaces or 1 tab and preceded by an empty line
            pattern: /((?:^|\n)[ \t]*\n|(?:^|\r\n?)[ \t]*\r\n?)(?: {4}|\t).+(?:(?:\n|\r\n?)(?: {4}|\t).+)*/,
            lookbehind: !0,
            alias: "keyword"
          },
          {
            // ```optional language
            // code block
            // ```
            pattern: /^```[\s\S]*?^```$/m,
            greedy: !0,
            inside: {
              "code-block": {
                pattern: /^(```.*(?:\n|\r\n?))[\s\S]+?(?=(?:\n|\r\n?)^```$)/m,
                lookbehind: !0
              },
              "code-language": {
                pattern: /^(```).+/,
                lookbehind: !0
              },
              punctuation: /```/
            }
          }
        ],
        title: [
          {
            // title 1
            // =======
            // title 2
            // -------
            pattern: /\S.*(?:\n|\r\n?)(?:==+|--+)(?=[ \t]*$)/m,
            alias: "important",
            inside: {
              punctuation: /==+$|--+$/
            }
          },
          {
            // # title 1
            // ###### title 6
            pattern: /(^\s*)#.+/m,
            lookbehind: !0,
            alias: "important",
            inside: {
              punctuation: /^#+|#+$/
            }
          }
        ],
        hr: {
          // ***
          // ---
          // * * *
          // -----------
          pattern: /(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,
          lookbehind: !0,
          alias: "punctuation"
        },
        list: {
          // * item
          // + item
          // - item
          // 1. item
          pattern: /(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,
          lookbehind: !0,
          alias: "punctuation"
        },
        "url-reference": {
          // [id]: http://example.com "Optional title"
          // [id]: http://example.com 'Optional title'
          // [id]: http://example.com (Optional title)
          // [id]: <http://example.com> "Optional title"
          pattern: /!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,
          inside: {
            variable: {
              pattern: /^(!?\[)[^\]]+/,
              lookbehind: !0
            },
            string: /(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,
            punctuation: /^[\[\]!:]|[<>]/
          },
          alias: "url"
        },
        bold: {
          // **strong**
          // __strong__
          // allow one nested instance of italic text using the same delimiter
          pattern: o(
            /\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\b|\*\*(?:(?!\*)<inner>|\*(?:(?!\*)<inner>)+\*)+\*\*/.source
          ),
          lookbehind: !0,
          greedy: !0,
          inside: {
            content: {
              pattern: /(^..)[\s\S]+(?=..$)/,
              lookbehind: !0,
              inside: {}
              // see below
            },
            punctuation: /\*\*|__/
          }
        },
        italic: {
          // *em*
          // _em_
          // allow one nested instance of bold text using the same delimiter
          pattern: o(
            /\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\b|\*(?:(?!\*)<inner>|\*\*(?:(?!\*)<inner>)+\*\*)+\*/.source
          ),
          lookbehind: !0,
          greedy: !0,
          inside: {
            content: {
              pattern: /(^.)[\s\S]+(?=.$)/,
              lookbehind: !0,
              inside: {}
              // see below
            },
            punctuation: /[*_]/
          }
        },
        strike: {
          // ~~strike through~~
          // ~strike~
          // eslint-disable-next-line regexp/strict
          pattern: o(/(~~?)(?:(?!~)<inner>)+\2/.source),
          lookbehind: !0,
          greedy: !0,
          inside: {
            content: {
              pattern: /(^~~?)[\s\S]+(?=\1$)/,
              lookbehind: !0,
              inside: {}
              // see below
            },
            punctuation: /~~?/
          }
        },
        "code-snippet": {
          // `code`
          // ``code``
          pattern: /(^|[^\\`])(?:``[^`\r\n]+(?:`[^`\r\n]+)*``(?!`)|`[^`\r\n]+`(?!`))/,
          lookbehind: !0,
          greedy: !0,
          alias: ["code", "keyword"]
        },
        url: {
          // [example](http://example.com "Optional title")
          // [example][id]
          // [example] [id]
          pattern: o(
            /!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)|[ \t]?\[(?:(?!\])<inner>)+\])/.source
          ),
          lookbehind: !0,
          greedy: !0,
          inside: {
            operator: /^!/,
            content: {
              pattern: /(^\[)[^\]]+(?=\])/,
              lookbehind: !0,
              inside: {}
              // see below
            },
            variable: {
              pattern: /(^\][ \t]?\[)[^\]]+(?=\]$)/,
              lookbehind: !0
            },
            url: {
              pattern: /(^\]\()[^\s)]+/,
              lookbehind: !0
            },
            string: {
              pattern: /(^[ \t]+)"(?:\\.|[^"\\])*"(?=\)$)/,
              lookbehind: !0
            }
          }
        }
      }), ["url", "bold", "italic", "strike"].forEach(function(T) {
        ["url", "bold", "italic", "strike", "code-snippet"].forEach(function(y) {
          T !== y && (n.languages.markdown[T].inside.content.inside[y] = n.languages.markdown[y]);
        });
      }), n.hooks.add("after-tokenize", function(T) {
        if (T.language !== "markdown" && T.language !== "md")
          return;
        function y(_) {
          if (!(!_ || typeof _ == "string"))
            for (var A = 0, R = _.length; A < R; A++) {
              var C = _[A];
              if (C.type !== "code") {
                y(C.content);
                continue;
              }
              var w = C.content[1], k = C.content[3];
              if (w && k && w.type === "code-language" && k.type === "code-block" && typeof w.content == "string") {
                var O = w.content.replace(/\b#/g, "sharp").replace(/\b\+\+/g, "pp");
                O = (/[a-z][\w-]*/i.exec(O) || [""])[0].toLowerCase();
                var F = "language-" + O;
                k.alias ? typeof k.alias == "string" ? k.alias = [k.alias, F] : k.alias.push(F) : k.alias = [F];
              }
            }
        }
        y(T.tokens);
      }), n.hooks.add("wrap", function(T) {
        if (T.type === "code-block") {
          for (var y = "", _ = 0, A = T.classes.length; _ < A; _++) {
            var R = T.classes[_], C = /language-(.+)/.exec(R);
            if (C) {
              y = C[1];
              break;
            }
          }
          var w = n.languages[y];
          if (w)
            T.content = n.highlight(
              g(T.content.value),
              w,
              y
            );
          else if (y && y !== "none" && n.plugins.autoloader) {
            var k = "md-" + (/* @__PURE__ */ new Date()).valueOf() + "-" + Math.floor(Math.random() * 1e16);
            T.attributes.id = k, n.plugins.autoloader.loadLanguages(y, function() {
              var O = document.getElementById(k);
              O && (O.innerHTML = n.highlight(
                O.textContent,
                n.languages[y],
                y
              ));
            });
          }
        }
      });
      var p = RegExp(n.languages.markup.tag.pattern.source, "gi"), f = {
        amp: "&",
        lt: "<",
        gt: ">",
        quot: '"'
      }, b = String.fromCodePoint || String.fromCharCode;
      function g(T) {
        var y = T.replace(p, "");
        return y = y.replace(/&(\w{1,8}|#x?[\da-f]{1,8});/gi, function(_, A) {
          if (A = A.toLowerCase(), A[0] === "#") {
            var R;
            return A[1] === "x" ? R = parseInt(A.slice(2), 16) : R = Number(A.slice(1)), b(R);
          } else {
            var C = f[A];
            return C || _;
          }
        }), y;
      }
      n.languages.md = n.languages.markdown;
    })(t);
  }
  return rm;
}
var am, eC;
function I7() {
  if (eC) return am;
  eC = 1, am = e, e.displayName = "matlab", e.aliases = [];
  function e(t) {
    t.languages.matlab = {
      comment: [/%\{[\s\S]*?\}%/, /%.+/],
      string: {
        pattern: /\B'(?:''|[^'\r\n])*'/,
        greedy: !0
      },
      // FIXME We could handle imaginary numbers as a whole
      number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[eE][+-]?\d+)?(?:[ij])?|\b[ij]\b/,
      keyword: /\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\b/,
      function: /\b(?!\d)\w+(?=\s*\()/,
      operator: /\.?[*^\/\\']|[+\-:@]|[<>=~]=?|&&?|\|\|?/,
      punctuation: /\.{3}|[.,;\[\](){}!]/
    };
  }
  return am;
}
var im, tC;
function R7() {
  if (tC) return im;
  tC = 1, im = e, e.displayName = "maxscript", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\b/i;
      n.languages.maxscript = {
        comment: {
          pattern: /\/\*[\s\S]*?(?:\*\/|$)|--.*/,
          greedy: !0
        },
        string: {
          pattern: /(^|[^"\\@])(?:"(?:[^"\\]|\\[\s\S])*"|@"[^"]*")/,
          lookbehind: !0,
          greedy: !0
        },
        path: {
          pattern: /\$(?:[\w/\\.*?]|'[^']*')*/,
          greedy: !0,
          alias: "string"
        },
        "function-call": {
          pattern: RegExp(
            "((?:" + // start of line
            (/^/.source + "|" + // operators and other language constructs
            /[;=<>+\-*/^({\[]/.source + "|" + // keywords as part of statements
            /\b(?:and|by|case|catch|collect|do|else|if|in|not|or|return|then|to|try|where|while|with)\b/.source) + ")[ 	]*)(?!" + r.source + ")" + /[a-z_]\w*\b/.source + "(?=[ 	]*(?:" + // variable
            ("(?!" + r.source + ")" + /[a-z_]/.source + "|" + // number
            /\d|-\.?\d/.source + "|" + // other expressions or literals
            /[({'"$@#?]/.source) + "))",
            "im"
          ),
          lookbehind: !0,
          greedy: !0,
          alias: "function"
        },
        "function-definition": {
          pattern: /(\b(?:fn|function)\s+)\w+\b/i,
          lookbehind: !0,
          alias: "function"
        },
        argument: {
          pattern: /\b[a-z_]\w*(?=:)/i,
          alias: "attr-name"
        },
        keyword: r,
        boolean: /\b(?:false|true)\b/,
        time: {
          pattern: /(^|[^\w.])(?:(?:(?:\d+(?:\.\d*)?|\.\d+)(?:[eEdD][+-]\d+|[LP])?[msft])+|\d+:\d+(?:\.\d*)?)(?![\w.:])/,
          lookbehind: !0,
          alias: "number"
        },
        number: [
          {
            pattern: /(^|[^\w.])(?:(?:\d+(?:\.\d*)?|\.\d+)(?:[eEdD][+-]\d+|[LP])?|0x[a-fA-F0-9]+)(?![\w.:])/,
            lookbehind: !0
          },
          /\b(?:e|pi)\b/
        ],
        constant: /\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\b/,
        color: {
          pattern: /\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\b/i,
          alias: "constant"
        },
        operator: /[-+*/<>=!]=?|[&^?]|#(?!\()/,
        punctuation: /[()\[\]{}.:,;]|#(?=\()|\\$/m
      };
    })(t);
  }
  return im;
}
var om, nC;
function x7() {
  if (nC) return om;
  nC = 1, om = e, e.displayName = "mel", e.aliases = [];
  function e(t) {
    t.languages.mel = {
      comment: /\/\/.*/,
      code: {
        pattern: /`(?:\\.|[^\\`\r\n])*`/,
        greedy: !0,
        alias: "italic",
        inside: {
          delimiter: {
            pattern: /^`|`$/,
            alias: "punctuation"
          }
          // See rest below
        }
      },
      string: {
        pattern: /"(?:\\.|[^\\"\r\n])*"/,
        greedy: !0
      },
      variable: /\$\w+/,
      number: /\b0x[\da-fA-F]+\b|\b\d+(?:\.\d*)?|\B\.\d+/,
      flag: {
        pattern: /-[^\d\W]\w*/,
        alias: "operator"
      },
      keyword: /\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\b/,
      function: /\b\w+(?=\()|\b(?:CBG|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|Mayatomr|about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\b/,
      operator: [
        /\+[+=]?|-[-=]?|&&|\|\||[<>]=|[*\/!=]=?|[%^]/,
        {
          // We don't want to match <<
          pattern: /(^|[^<])<(?!<)/,
          lookbehind: !0
        },
        {
          // We don't want to match >>
          pattern: /(^|[^>])>(?!>)/,
          lookbehind: !0
        }
      ],
      punctuation: /<<|>>|[.,:;?\[\](){}]/
    }, t.languages.mel.code.inside.rest = t.languages.mel;
  }
  return om;
}
var sm, rC;
function N7() {
  if (rC) return sm;
  rC = 1, sm = e, e.displayName = "mermaid", e.aliases = [];
  function e(t) {
    t.languages.mermaid = {
      comment: {
        pattern: /%%.*/,
        greedy: !0
      },
      style: {
        pattern: /^([ \t]*(?:classDef|linkStyle|style)[ \t]+[\w$-]+[ \t]+)\w.*[^\s;]/m,
        lookbehind: !0,
        inside: {
          property: /\b\w[\w-]*(?=[ \t]*:)/,
          operator: /:/,
          punctuation: /,/
        }
      },
      "inter-arrow-label": {
        pattern: /([^<>ox.=-])(?:-[-.]|==)(?![<>ox.=-])[ \t]*(?:"[^"\r\n]*"|[^\s".=-](?:[^\r\n.=-]*[^\s.=-])?)[ \t]*(?:\.+->?|--+[->]|==+[=>])(?![<>ox.=-])/,
        lookbehind: !0,
        greedy: !0,
        inside: {
          arrow: {
            pattern: /(?:\.+->?|--+[->]|==+[=>])$/,
            alias: "operator"
          },
          label: {
            pattern: /^([\s\S]{2}[ \t]*)\S(?:[\s\S]*\S)?/,
            lookbehind: !0,
            alias: "property"
          },
          "arrow-head": {
            pattern: /^\S+/,
            alias: ["arrow", "operator"]
          }
        }
      },
      arrow: [
        // This might look complex but it really isn't.
        // There are many possible arrows (see tests) and it's impossible to fit all of them into one pattern. The
        // problem is that we only have one lookbehind per pattern. However, we cannot disallow too many arrow
        // characters in the one lookbehind because that would create too many false negatives. So we have to split the
        // arrows into different patterns.
        {
          // ER diagram
          pattern: /(^|[^{}|o.-])[|}][|o](?:--|\.\.)[|o][|{](?![{}|o.-])/,
          lookbehind: !0,
          alias: "operator"
        },
        {
          // flow chart
          // (?:==+|--+|-\.*-)
          pattern: /(^|[^<>ox.=-])(?:[<ox](?:==+|--+|-\.*-)[>ox]?|(?:==+|--+|-\.*-)[>ox]|===+|---+|-\.+-)(?![<>ox.=-])/,
          lookbehind: !0,
          alias: "operator"
        },
        {
          // sequence diagram
          pattern: /(^|[^<>()x-])(?:--?(?:>>|[x>)])(?![<>()x])|(?:<<|[x<(])--?(?!-))/,
          lookbehind: !0,
          alias: "operator"
        },
        {
          // class diagram
          pattern: /(^|[^<>|*o.-])(?:[*o]--|--[*o]|<\|?(?:--|\.\.)|(?:--|\.\.)\|?>|--|\.\.)(?![<>|*o.-])/,
          lookbehind: !0,
          alias: "operator"
        }
      ],
      label: {
        pattern: /(^|[^|<])\|(?:[^\r\n"|]|"[^"\r\n]*")+\|/,
        lookbehind: !0,
        greedy: !0,
        alias: "property"
      },
      text: {
        pattern: /(?:[(\[{]+|\b>)(?:[^\r\n"()\[\]{}]|"[^"\r\n]*")+(?:[)\]}]+|>)/,
        alias: "string"
      },
      string: {
        pattern: /"[^"\r\n]*"/,
        greedy: !0
      },
      annotation: {
        pattern: /<<(?:abstract|choice|enumeration|fork|interface|join|service)>>|\[\[(?:choice|fork|join)\]\]/i,
        alias: "important"
      },
      keyword: [
        // This language has both case-sensitive and case-insensitive keywords
        {
          pattern: /(^[ \t]*)(?:action|callback|class|classDef|classDiagram|click|direction|erDiagram|flowchart|gantt|gitGraph|graph|journey|link|linkStyle|pie|requirementDiagram|sequenceDiagram|stateDiagram|stateDiagram-v2|style|subgraph)(?![\w$-])/m,
          lookbehind: !0,
          greedy: !0
        },
        {
          pattern: /(^[ \t]*)(?:activate|alt|and|as|autonumber|deactivate|else|end(?:[ \t]+note)?|loop|opt|par|participant|rect|state|note[ \t]+(?:over|(?:left|right)[ \t]+of))(?![\w$-])/im,
          lookbehind: !0,
          greedy: !0
        }
      ],
      entity: /#[a-z0-9]+;/,
      operator: {
        pattern: /(\w[ \t]*)&(?=[ \t]*\w)|:::|:/,
        lookbehind: !0
      },
      punctuation: /[(){};]/
    };
  }
  return sm;
}
var lm, aC;
function O7() {
  if (aC) return lm;
  aC = 1, lm = e, e.displayName = "mizar", e.aliases = [];
  function e(t) {
    t.languages.mizar = {
      comment: /::.+/,
      keyword: /@proof\b|\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|end|environ|equals|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:ies|y)|when|where|with|wrt)\b/,
      parameter: {
        pattern: /\$(?:10|\d)/,
        alias: "variable"
      },
      variable: /\b\w+(?=:)/,
      number: /(?:\b|-)\d+\b/,
      operator: /\.\.\.|->|&|\.?=/,
      punctuation: /\(#|#\)|[,:;\[\](){}]/
    };
  }
  return lm;
}
var um, iC;
function L7() {
  if (iC) return um;
  iC = 1, um = e, e.displayName = "mongodb", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = [
        // query and projection
        "$eq",
        "$gt",
        "$gte",
        "$in",
        "$lt",
        "$lte",
        "$ne",
        "$nin",
        "$and",
        "$not",
        "$nor",
        "$or",
        "$exists",
        "$type",
        "$expr",
        "$jsonSchema",
        "$mod",
        "$regex",
        "$text",
        "$where",
        "$geoIntersects",
        "$geoWithin",
        "$near",
        "$nearSphere",
        "$all",
        "$elemMatch",
        "$size",
        "$bitsAllClear",
        "$bitsAllSet",
        "$bitsAnyClear",
        "$bitsAnySet",
        "$comment",
        "$elemMatch",
        "$meta",
        "$slice",
        // update
        "$currentDate",
        "$inc",
        "$min",
        "$max",
        "$mul",
        "$rename",
        "$set",
        "$setOnInsert",
        "$unset",
        "$addToSet",
        "$pop",
        "$pull",
        "$push",
        "$pullAll",
        "$each",
        "$position",
        "$slice",
        "$sort",
        "$bit",
        // aggregation pipeline stages
        "$addFields",
        "$bucket",
        "$bucketAuto",
        "$collStats",
        "$count",
        "$currentOp",
        "$facet",
        "$geoNear",
        "$graphLookup",
        "$group",
        "$indexStats",
        "$limit",
        "$listLocalSessions",
        "$listSessions",
        "$lookup",
        "$match",
        "$merge",
        "$out",
        "$planCacheStats",
        "$project",
        "$redact",
        "$replaceRoot",
        "$replaceWith",
        "$sample",
        "$set",
        "$skip",
        "$sort",
        "$sortByCount",
        "$unionWith",
        "$unset",
        "$unwind",
        "$setWindowFields",
        // aggregation pipeline operators
        "$abs",
        "$accumulator",
        "$acos",
        "$acosh",
        "$add",
        "$addToSet",
        "$allElementsTrue",
        "$and",
        "$anyElementTrue",
        "$arrayElemAt",
        "$arrayToObject",
        "$asin",
        "$asinh",
        "$atan",
        "$atan2",
        "$atanh",
        "$avg",
        "$binarySize",
        "$bsonSize",
        "$ceil",
        "$cmp",
        "$concat",
        "$concatArrays",
        "$cond",
        "$convert",
        "$cos",
        "$dateFromParts",
        "$dateToParts",
        "$dateFromString",
        "$dateToString",
        "$dayOfMonth",
        "$dayOfWeek",
        "$dayOfYear",
        "$degreesToRadians",
        "$divide",
        "$eq",
        "$exp",
        "$filter",
        "$first",
        "$floor",
        "$function",
        "$gt",
        "$gte",
        "$hour",
        "$ifNull",
        "$in",
        "$indexOfArray",
        "$indexOfBytes",
        "$indexOfCP",
        "$isArray",
        "$isNumber",
        "$isoDayOfWeek",
        "$isoWeek",
        "$isoWeekYear",
        "$last",
        "$last",
        "$let",
        "$literal",
        "$ln",
        "$log",
        "$log10",
        "$lt",
        "$lte",
        "$ltrim",
        "$map",
        "$max",
        "$mergeObjects",
        "$meta",
        "$min",
        "$millisecond",
        "$minute",
        "$mod",
        "$month",
        "$multiply",
        "$ne",
        "$not",
        "$objectToArray",
        "$or",
        "$pow",
        "$push",
        "$radiansToDegrees",
        "$range",
        "$reduce",
        "$regexFind",
        "$regexFindAll",
        "$regexMatch",
        "$replaceOne",
        "$replaceAll",
        "$reverseArray",
        "$round",
        "$rtrim",
        "$second",
        "$setDifference",
        "$setEquals",
        "$setIntersection",
        "$setIsSubset",
        "$setUnion",
        "$size",
        "$sin",
        "$slice",
        "$split",
        "$sqrt",
        "$stdDevPop",
        "$stdDevSamp",
        "$strcasecmp",
        "$strLenBytes",
        "$strLenCP",
        "$substr",
        "$substrBytes",
        "$substrCP",
        "$subtract",
        "$sum",
        "$switch",
        "$tan",
        "$toBool",
        "$toDate",
        "$toDecimal",
        "$toDouble",
        "$toInt",
        "$toLong",
        "$toObjectId",
        "$toString",
        "$toLower",
        "$toUpper",
        "$trim",
        "$trunc",
        "$type",
        "$week",
        "$year",
        "$zip",
        "$count",
        "$dateAdd",
        "$dateDiff",
        "$dateSubtract",
        "$dateTrunc",
        "$getField",
        "$rand",
        "$sampleRate",
        "$setField",
        "$unsetField",
        // aggregation pipeline query modifiers
        "$comment",
        "$explain",
        "$hint",
        "$max",
        "$maxTimeMS",
        "$min",
        "$orderby",
        "$query",
        "$returnKey",
        "$showDiskLoc",
        "$natural"
      ], o = [
        "ObjectId",
        "Code",
        "BinData",
        "DBRef",
        "Timestamp",
        "NumberLong",
        "NumberDecimal",
        "MaxKey",
        "MinKey",
        "RegExp",
        "ISODate",
        "UUID"
      ];
      r = r.map(function(u) {
        return u.replace("$", "\\$");
      });
      var s = "(?:" + r.join("|") + ")\\b";
      n.languages.mongodb = n.languages.extend("javascript", {}), n.languages.insertBefore("mongodb", "string", {
        property: {
          pattern: /(?:(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)(?=\s*:)/,
          greedy: !0,
          inside: {
            keyword: RegExp(`^(['"])?` + s + "(?:\\1)?$")
          }
        }
      }), n.languages.mongodb.string.inside = {
        url: {
          // url pattern
          pattern: /https?:\/\/[-\w@:%.+~#=]{1,256}\.[a-z0-9()]{1,6}\b[-\w()@:%+.~#?&/=]*/i,
          greedy: !0
        },
        entity: {
          // ipv4
          pattern: /\b(?:(?:[01]?\d\d?|2[0-4]\d|25[0-5])\.){3}(?:[01]?\d\d?|2[0-4]\d|25[0-5])\b/,
          greedy: !0
        }
      }, n.languages.insertBefore("mongodb", "constant", {
        builtin: {
          pattern: RegExp("\\b(?:" + o.join("|") + ")\\b"),
          alias: "keyword"
        }
      });
    })(t);
  }
  return um;
}
var cm, oC;
function D7() {
  if (oC) return cm;
  oC = 1, cm = e, e.displayName = "monkey", e.aliases = [];
  function e(t) {
    t.languages.monkey = {
      comment: {
        pattern: /^#Rem\s[\s\S]*?^#End|'.+/im,
        greedy: !0
      },
      string: {
        pattern: /"[^"\r\n]*"/,
        greedy: !0
      },
      preprocessor: {
        pattern: /(^[ \t]*)#.+/m,
        lookbehind: !0,
        greedy: !0,
        alias: "property"
      },
      function: /\b\w+(?=\()/,
      "type-char": {
        pattern: /\b[?%#$]/,
        alias: "class-name"
      },
      number: {
        pattern: /((?:\.\.)?)(?:(?:\b|\B-\.?|\B\.)\d+(?:(?!\.\.)\.\d*)?|\$[\da-f]+)/i,
        lookbehind: !0
      },
      keyword: /\b(?:Abstract|Array|Bool|Case|Catch|Class|Const|Continue|Default|Eachin|Else|ElseIf|End|EndIf|Exit|Extends|Extern|False|Field|Final|Float|For|Forever|Function|Global|If|Implements|Import|Inline|Int|Interface|Local|Method|Module|New|Next|Null|Object|Private|Property|Public|Repeat|Return|Select|Self|Step|Strict|String|Super|Then|Throw|To|True|Try|Until|Void|Wend|While)\b/i,
      operator: /\.\.|<[=>]?|>=?|:?=|(?:[+\-*\/&~|]|\b(?:Mod|Shl|Shr)\b)=?|\b(?:And|Not|Or)\b/i,
      punctuation: /[.,:;()\[\]]/
    };
  }
  return cm;
}
var dm, sC;
function M7() {
  if (sC) return dm;
  sC = 1, dm = e, e.displayName = "moonscript", e.aliases = ["moon"];
  function e(t) {
    t.languages.moonscript = {
      comment: /--.*/,
      string: [
        {
          pattern: /'[^']*'|\[(=*)\[[\s\S]*?\]\1\]/,
          greedy: !0
        },
        {
          pattern: /"[^"]*"/,
          greedy: !0,
          inside: {
            interpolation: {
              pattern: /#\{[^{}]*\}/,
              inside: {
                moonscript: {
                  pattern: /(^#\{)[\s\S]+(?=\})/,
                  lookbehind: !0,
                  inside: null
                  // see beow
                },
                "interpolation-punctuation": {
                  pattern: /#\{|\}/,
                  alias: "punctuation"
                }
              }
            }
          }
        }
      ],
      "class-name": [
        {
          pattern: /(\b(?:class|extends)[ \t]+)\w+/,
          lookbehind: !0
        },
        // class-like names start with a capital letter
        /\b[A-Z]\w*/
      ],
      keyword: /\b(?:class|continue|do|else|elseif|export|extends|for|from|if|import|in|local|nil|return|self|super|switch|then|unless|using|when|while|with)\b/,
      variable: /@@?\w*/,
      property: {
        pattern: /\b(?!\d)\w+(?=:)|(:)(?!\d)\w+/,
        lookbehind: !0
      },
      function: {
        pattern: /\b(?:_G|_VERSION|assert|collectgarbage|coroutine\.(?:create|resume|running|status|wrap|yield)|debug\.(?:debug|getfenv|gethook|getinfo|getlocal|getmetatable|getregistry|getupvalue|setfenv|sethook|setlocal|setmetatable|setupvalue|traceback)|dofile|error|getfenv|getmetatable|io\.(?:close|flush|input|lines|open|output|popen|read|stderr|stdin|stdout|tmpfile|type|write)|ipairs|load|loadfile|loadstring|math\.(?:abs|acos|asin|atan|atan2|ceil|cos|cosh|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pi|pow|rad|random|randomseed|sin|sinh|sqrt|tan|tanh)|module|next|os\.(?:clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\.(?:cpath|loaded|loadlib|path|preload|seeall)|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|string\.(?:byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|upper)|table\.(?:concat|insert|maxn|remove|sort)|tonumber|tostring|type|unpack|xpcall)\b/,
        inside: {
          punctuation: /\./
        }
      },
      boolean: /\b(?:false|true)\b/,
      number: /(?:\B\.\d+|\b\d+\.\d+|\b\d+(?=[eE]))(?:[eE][-+]?\d+)?\b|\b(?:0x[a-fA-F\d]+|\d+)(?:U?LL)?\b/,
      operator: /\.{3}|[-=]>|~=|(?:[-+*/%<>!=]|\.\.)=?|[:#^]|\b(?:and|or)\b=?|\b(?:not)\b/,
      punctuation: /[.,()[\]{}\\]/
    }, t.languages.moonscript.string[1].inside.interpolation.inside.moonscript.inside = t.languages.moonscript, t.languages.moon = t.languages.moonscript;
  }
  return dm;
}
var pm, lC;
function P7() {
  if (lC) return pm;
  lC = 1, pm = e, e.displayName = "n1ql", e.aliases = [];
  function e(t) {
    t.languages.n1ql = {
      comment: {
        pattern: /\/\*[\s\S]*?(?:$|\*\/)|--.*/,
        greedy: !0
      },
      string: {
        pattern: /(["'])(?:\\[\s\S]|(?!\1)[^\\]|\1\1)*\1/,
        greedy: !0
      },
      identifier: {
        pattern: /`(?:\\[\s\S]|[^\\`]|``)*`/,
        greedy: !0
      },
      parameter: /\$[\w.]+/,
      // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/reservedwords.html#n1ql-reserved-words
      keyword: /\b(?:ADVISE|ALL|ALTER|ANALYZE|AS|ASC|AT|BEGIN|BINARY|BOOLEAN|BREAK|BUCKET|BUILD|BY|CALL|CAST|CLUSTER|COLLATE|COLLECTION|COMMIT|COMMITTED|CONNECT|CONTINUE|CORRELATE|CORRELATED|COVER|CREATE|CURRENT|DATABASE|DATASET|DATASTORE|DECLARE|DECREMENT|DELETE|DERIVED|DESC|DESCRIBE|DISTINCT|DO|DROP|EACH|ELEMENT|EXCEPT|EXCLUDE|EXECUTE|EXPLAIN|FETCH|FILTER|FLATTEN|FLUSH|FOLLOWING|FOR|FORCE|FROM|FTS|FUNCTION|GOLANG|GRANT|GROUP|GROUPS|GSI|HASH|HAVING|IF|IGNORE|ILIKE|INCLUDE|INCREMENT|INDEX|INFER|INLINE|INNER|INSERT|INTERSECT|INTO|IS|ISOLATION|JAVASCRIPT|JOIN|KEY|KEYS|KEYSPACE|KNOWN|LANGUAGE|LAST|LEFT|LET|LETTING|LEVEL|LIMIT|LSM|MAP|MAPPING|MATCHED|MATERIALIZED|MERGE|MINUS|MISSING|NAMESPACE|NEST|NL|NO|NTH_VALUE|NULL|NULLS|NUMBER|OBJECT|OFFSET|ON|OPTION|OPTIONS|ORDER|OTHERS|OUTER|OVER|PARSE|PARTITION|PASSWORD|PATH|POOL|PRECEDING|PREPARE|PRIMARY|PRIVATE|PRIVILEGE|PROBE|PROCEDURE|PUBLIC|RANGE|RAW|REALM|REDUCE|RENAME|RESPECT|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLLBACK|ROW|ROWS|SATISFIES|SAVEPOINT|SCHEMA|SCOPE|SELECT|SELF|SEMI|SET|SHOW|SOME|START|STATISTICS|STRING|SYSTEM|TIES|TO|TRAN|TRANSACTION|TRIGGER|TRUNCATE|UNBOUNDED|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNSET|UPDATE|UPSERT|USE|USER|USING|VALIDATE|VALUE|VALUES|VIA|VIEW|WHERE|WHILE|WINDOW|WITH|WORK|XOR)\b/i,
      function: /\b[a-z_]\w*(?=\s*\()/i,
      boolean: /\b(?:FALSE|TRUE)\b/i,
      number: /(?:\b\d+\.|\B\.)\d+e[+\-]?\d+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,
      operator: /[-+*\/%]|!=|==?|\|\||<[>=]?|>=?|\b(?:AND|ANY|ARRAY|BETWEEN|CASE|ELSE|END|EVERY|EXISTS|FIRST|IN|LIKE|NOT|OR|THEN|VALUED|WHEN|WITHIN)\b/i,
      punctuation: /[;[\](),.{}:]/
    };
  }
  return pm;
}
var fm, uC;
function F7() {
  if (uC) return fm;
  uC = 1, fm = e, e.displayName = "n4js", e.aliases = ["n4jsd"];
  function e(t) {
    t.languages.n4js = t.languages.extend("javascript", {
      // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html
      keyword: /\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\b/
    }), t.languages.insertBefore("n4js", "constant", {
      // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations
      annotation: {
        pattern: /@+\w+/,
        alias: "operator"
      }
    }), t.languages.n4jsd = t.languages.n4js;
  }
  return fm;
}
var hm, cC;
function B7() {
  if (cC) return hm;
  cC = 1, hm = e, e.displayName = "nand2tetrisHdl", e.aliases = [];
  function e(t) {
    t.languages["nand2tetris-hdl"] = {
      comment: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,
      keyword: /\b(?:BUILTIN|CHIP|CLOCKED|IN|OUT|PARTS)\b/,
      boolean: /\b(?:false|true)\b/,
      function: /\b[A-Za-z][A-Za-z0-9]*(?=\()/,
      number: /\b\d+\b/,
      operator: /=|\.\./,
      punctuation: /[{}[\];(),:]/
    };
  }
  return hm;
}
var gm, dC;
function U7() {
  if (dC) return gm;
  dC = 1, gm = e, e.displayName = "naniscript", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /\{[^\r\n\[\]{}]*\}/, o = {
        "quoted-string": {
          pattern: /"(?:[^"\\]|\\.)*"/,
          alias: "operator"
        },
        "command-param-id": {
          pattern: /(\s)\w+:/,
          lookbehind: !0,
          alias: "property"
        },
        "command-param-value": [
          {
            pattern: r,
            alias: "selector"
          },
          {
            pattern: /([\t ])\S+/,
            lookbehind: !0,
            greedy: !0,
            alias: "operator"
          },
          {
            pattern: /\S(?:.*\S)?/,
            alias: "operator"
          }
        ]
      };
      n.languages.naniscript = {
        // ; ...
        comment: {
          pattern: /^([\t ]*);.*/m,
          lookbehind: !0
        },
        // > ...
        // Define is a control line starting with '>' followed by a word, a space and a text.
        define: {
          pattern: /^>.+/m,
          alias: "tag",
          inside: {
            value: {
              pattern: /(^>\w+[\t ]+)(?!\s)[^{}\r\n]+/,
              lookbehind: !0,
              alias: "operator"
            },
            key: {
              pattern: /(^>)\w+/,
              lookbehind: !0
            }
          }
        },
        // # ...
        label: {
          pattern: /^([\t ]*)#[\t ]*\w+[\t ]*$/m,
          lookbehind: !0,
          alias: "regex"
        },
        command: {
          pattern: /^([\t ]*)@\w+(?=[\t ]|$).*/m,
          lookbehind: !0,
          alias: "function",
          inside: {
            "command-name": /^@\w+/,
            expression: {
              pattern: r,
              greedy: !0,
              alias: "selector"
            },
            "command-params": {
              pattern: /\s*\S[\s\S]*/,
              inside: o
            }
          }
        },
        // Generic is any line that doesn't start with operators: ;>#@
        "generic-text": {
          pattern: /(^[ \t]*)[^#@>;\s].*/m,
          lookbehind: !0,
          alias: "punctuation",
          inside: {
            // \{ ... \} ... \[ ... \] ... \"
            "escaped-char": /\\[{}\[\]"]/,
            expression: {
              pattern: r,
              greedy: !0,
              alias: "selector"
            },
            "inline-command": {
              pattern: /\[[\t ]*\w[^\r\n\[\]]*\]/,
              greedy: !0,
              alias: "function",
              inside: {
                "command-params": {
                  pattern: /(^\[[\t ]*\w+\b)[\s\S]+(?=\]$)/,
                  lookbehind: !0,
                  inside: o
                },
                "command-param-name": {
                  pattern: /^(\[[\t ]*)\w+/,
                  lookbehind: !0,
                  alias: "name"
                },
                "start-stop-char": /[\[\]]/
              }
            }
          }
        }
      }, n.languages.nani = n.languages.naniscript, n.hooks.add("after-tokenize", function(c) {
        var p = c.tokens;
        p.forEach(function(f) {
          if (typeof f != "string" && f.type === "generic-text") {
            var b = u(f);
            s(b) || (f.type = "bad-line", f.content = b);
          }
        });
      });
      function s(c) {
        for (var p = "[]{}", f = [], b = 0; b < c.length; b++) {
          var g = c[b], T = p.indexOf(g);
          if (T !== -1) {
            if (T % 2 === 0)
              f.push(T + 1);
            else if (f.pop() !== T)
              return !1;
          }
        }
        return f.length === 0;
      }
      function u(c) {
        return typeof c == "string" ? c : Array.isArray(c) ? c.map(u).join("") : u(c.content);
      }
    })(t);
  }
  return gm;
}
var mm, pC;
function H7() {
  if (pC) return mm;
  pC = 1, mm = e, e.displayName = "nasm", e.aliases = [];
  function e(t) {
    t.languages.nasm = {
      comment: /;.*$/m,
      string: /(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,
      label: {
        pattern: /(^\s*)[A-Za-z._?$][\w.?$@~#]*:/m,
        lookbehind: !0,
        alias: "function"
      },
      keyword: [
        /\[?BITS (?:16|32|64)\]?/,
        {
          pattern: /(^\s*)section\s*[a-z.]+:?/im,
          lookbehind: !0
        },
        /(?:extern|global)[^;\r\n]*/i,
        /(?:CPU|DEFAULT|FLOAT).*$/m
      ],
      register: {
        pattern: /\b(?:st\d|[xyz]mm\d\d?|[cdt]r\d|r\d\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s)\b/i,
        alias: "variable"
      },
      number: /(?:\b|(?=\$))(?:0[hx](?:\.[\da-f]+|[\da-f]+(?:\.[\da-f]+)?)(?:p[+-]?\d+)?|\d[\da-f]+[hx]|\$\d[\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\d+|(?:\d+(?:\.\d+)?|\.\d+)(?:\.?e[+-]?\d+)?[dt]?)\b/i,
      operator: /[\[\]*+\-\/%<>=&|$!]/
    };
  }
  return mm;
}
var bm, fC;
function $7() {
  if (fC) return bm;
  fC = 1, bm = e, e.displayName = "neon", e.aliases = [];
  function e(t) {
    t.languages.neon = {
      comment: {
        pattern: /#.*/,
        greedy: !0
      },
      datetime: {
        pattern: /(^|[[{(=:,\s])\d\d\d\d-\d\d?-\d\d?(?:(?:[Tt]| +)\d\d?:\d\d:\d\d(?:\.\d*)? *(?:Z|[-+]\d\d?(?::?\d\d)?)?)?(?=$|[\]}),\s])/,
        lookbehind: !0,
        alias: "number"
      },
      key: {
        pattern: /(^|[[{(,\s])[^,:=[\]{}()'"\s]+(?=\s*:(?:$|[\]}),\s])|\s*=)/,
        lookbehind: !0,
        alias: "atrule"
      },
      number: {
        pattern: /(^|[[{(=:,\s])[+-]?(?:0x[\da-fA-F]+|0o[0-7]+|0b[01]+|(?:\d+(?:\.\d*)?|\.?\d+)(?:[eE][+-]?\d+)?)(?=$|[\]}),:=\s])/,
        lookbehind: !0
      },
      boolean: {
        pattern: /(^|[[{(=:,\s])(?:false|no|true|yes)(?=$|[\]}),:=\s])/i,
        lookbehind: !0
      },
      null: {
        pattern: /(^|[[{(=:,\s])(?:null)(?=$|[\]}),:=\s])/i,
        lookbehind: !0,
        alias: "keyword"
      },
      string: {
        pattern: /(^|[[{(=:,\s])(?:('''|""")\r?\n(?:(?:[^\r\n]|\r?\n(?![\t ]*\2))*\r?\n)?[\t ]*\2|'[^'\r\n]*'|"(?:\\.|[^\\"\r\n])*")/,
        lookbehind: !0,
        greedy: !0
      },
      literal: {
        pattern: /(^|[[{(=:,\s])(?:[^#"',:=[\]{}()\s`-]|[:-][^"',=[\]{}()\s])(?:[^,:=\]})(\s]|:(?![\s,\]})]|$)|[ \t]+[^#,:=\]})(\s])*/,
        lookbehind: !0,
        alias: "string"
      },
      punctuation: /[,:=[\]{}()-]/
    };
  }
  return bm;
}
var Em, hC;
function z7() {
  if (hC) return Em;
  hC = 1, Em = e, e.displayName = "nevod", e.aliases = [];
  function e(t) {
    t.languages.nevod = {
      comment: /\/\/.*|(?:\/\*[\s\S]*?(?:\*\/|$))/,
      string: {
        pattern: /(?:"(?:""|[^"])*"(?!")|'(?:''|[^'])*'(?!'))!?\*?/,
        greedy: !0,
        inside: {
          "string-attrs": /!$|!\*$|\*$/
        }
      },
      namespace: {
        pattern: /(@namespace\s+)[a-zA-Z0-9\-.]+(?=\s*\{)/,
        lookbehind: !0
      },
      pattern: {
        pattern: /(@pattern\s+)?#?[a-zA-Z0-9\-.]+(?:\s*\(\s*(?:~\s*)?[a-zA-Z0-9\-.]+\s*(?:,\s*(?:~\s*)?[a-zA-Z0-9\-.]*)*\))?(?=\s*=)/,
        lookbehind: !0,
        inside: {
          "pattern-name": {
            pattern: /^#?[a-zA-Z0-9\-.]+/,
            alias: "class-name"
          },
          fields: {
            pattern: /\(.*\)/,
            inside: {
              "field-name": {
                pattern: /[a-zA-Z0-9\-.]+/,
                alias: "variable"
              },
              punctuation: /[,()]/,
              operator: {
                pattern: /~/,
                alias: "field-hidden-mark"
              }
            }
          }
        }
      },
      search: {
        pattern: /(@search\s+|#)[a-zA-Z0-9\-.]+(?:\.\*)?(?=\s*;)/,
        alias: "function",
        lookbehind: !0
      },
      keyword: /@(?:having|inside|namespace|outside|pattern|require|search|where)\b/,
      "standard-pattern": {
        pattern: /\b(?:Alpha|AlphaNum|Any|Blank|End|LineBreak|Num|NumAlpha|Punct|Space|Start|Symbol|Word|WordBreak)\b(?:\([a-zA-Z0-9\-.,\s+]*\))?/,
        inside: {
          "standard-pattern-name": {
            pattern: /^[a-zA-Z0-9\-.]+/,
            alias: "builtin"
          },
          quantifier: {
            pattern: /\b\d+(?:\s*\+|\s*-\s*\d+)?(?!\w)/,
            alias: "number"
          },
          "standard-pattern-attr": {
            pattern: /[a-zA-Z0-9\-.]+/,
            alias: "builtin"
          },
          punctuation: /[,()]/
        }
      },
      quantifier: {
        pattern: /\b\d+(?:\s*\+|\s*-\s*\d+)?(?!\w)/,
        alias: "number"
      },
      operator: [
        {
          pattern: /=/,
          alias: "pattern-def"
        },
        {
          pattern: /&/,
          alias: "conjunction"
        },
        {
          pattern: /~/,
          alias: "exception"
        },
        {
          pattern: /\?/,
          alias: "optionality"
        },
        {
          pattern: /[[\]]/,
          alias: "repetition"
        },
        {
          pattern: /[{}]/,
          alias: "variation"
        },
        {
          pattern: /[+_]/,
          alias: "sequence"
        },
        {
          pattern: /\.{2,3}/,
          alias: "span"
        }
      ],
      "field-capture": [
        {
          pattern: /([a-zA-Z0-9\-.]+\s*\()\s*[a-zA-Z0-9\-.]+\s*:\s*[a-zA-Z0-9\-.]+(?:\s*,\s*[a-zA-Z0-9\-.]+\s*:\s*[a-zA-Z0-9\-.]+)*(?=\s*\))/,
          lookbehind: !0,
          inside: {
            "field-name": {
              pattern: /[a-zA-Z0-9\-.]+/,
              alias: "variable"
            },
            colon: /:/
          }
        },
        {
          pattern: /[a-zA-Z0-9\-.]+\s*:/,
          inside: {
            "field-name": {
              pattern: /[a-zA-Z0-9\-.]+/,
              alias: "variable"
            },
            colon: /:/
          }
        }
      ],
      punctuation: /[:;,()]/,
      name: /[a-zA-Z0-9\-.]+/
    };
  }
  return Em;
}
var ym, gC;
function G7() {
  if (gC) return ym;
  gC = 1, ym = e, e.displayName = "nginx", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /\$(?:\w[a-z\d]*(?:_[^\x00-\x1F\s"'\\()$]*)?|\{[^}\s"'\\]+\})/i;
      n.languages.nginx = {
        comment: {
          pattern: /(^|[\s{};])#.*/,
          lookbehind: !0,
          greedy: !0
        },
        directive: {
          pattern: /(^|\s)\w(?:[^;{}"'\\\s]|\\.|"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*'|\s+(?:#.*(?!.)|(?![#\s])))*?(?=\s*[;{])/,
          lookbehind: !0,
          greedy: !0,
          inside: {
            string: {
              pattern: /((?:^|[^\\])(?:\\\\)*)(?:"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*')/,
              lookbehind: !0,
              greedy: !0,
              inside: {
                escape: {
                  pattern: /\\["'\\nrt]/,
                  alias: "entity"
                },
                variable: r
              }
            },
            comment: {
              pattern: /(\s)#.*/,
              lookbehind: !0,
              greedy: !0
            },
            keyword: {
              pattern: /^\S+/,
              greedy: !0
            },
            // other patterns
            boolean: {
              pattern: /(\s)(?:off|on)(?!\S)/,
              lookbehind: !0
            },
            number: {
              pattern: /(\s)\d+[a-z]*(?!\S)/i,
              lookbehind: !0
            },
            variable: r
          }
        },
        punctuation: /[{};]/
      };
    })(t);
  }
  return ym;
}
var Tm, mC;
function q7() {
  if (mC) return Tm;
  mC = 1, Tm = e, e.displayName = "nim", e.aliases = [];
  function e(t) {
    t.languages.nim = {
      comment: {
        pattern: /#.*/,
        greedy: !0
      },
      string: {
        // Double-quoted strings can be prefixed by an identifier (Generalized raw string literals)
        pattern: /(?:\b(?!\d)(?:\w|\\x[89a-fA-F][0-9a-fA-F])+)?(?:"""[\s\S]*?"""(?!")|"(?:\\[\s\S]|""|[^"\\])*")/,
        greedy: !0
      },
      char: {
        // Character literals are handled specifically to prevent issues with numeric type suffixes
        pattern: /'(?:\\(?:\d+|x[\da-fA-F]{0,2}|.)|[^'])'/,
        greedy: !0
      },
      function: {
        pattern: /(?:(?!\d)(?:\w|\\x[89a-fA-F][0-9a-fA-F])+|`[^`\r\n]+`)\*?(?:\[[^\]]+\])?(?=\s*\()/,
        greedy: !0,
        inside: {
          operator: /\*$/
        }
      },
      // We don't want to highlight operators (and anything really) inside backticks
      identifier: {
        pattern: /`[^`\r\n]+`/,
        greedy: !0,
        inside: {
          punctuation: /`/
        }
      },
      // The negative look ahead prevents wrong highlighting of the .. operator
      number: /\b(?:0[xXoObB][\da-fA-F_]+|\d[\d_]*(?:(?!\.\.)\.[\d_]*)?(?:[eE][+-]?\d[\d_]*)?)(?:'?[iuf]\d*)?/,
      keyword: /\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\b/,
      operator: {
        // Look behind and look ahead prevent wrong highlighting of punctuations [. .] {. .} (. .)
        // but allow the slice operator .. to take precedence over them
        // One can define his own operators in Nim so all combination of operators might be an operator.
        pattern: /(^|[({\[](?=\.\.)|(?![({\[]\.).)(?:(?:[=+\-*\/<>@$~&%|!?^:\\]|\.\.|\.(?![)}\]]))+|\b(?:and|div|in|is|isnot|mod|not|notin|of|or|shl|shr|xor)\b)/m,
        lookbehind: !0
      },
      punctuation: /[({\[]\.|\.[)}\]]|[`(){}\[\],:]/
    };
  }
  return Tm;
}
var Sm, bC;
function j7() {
  if (bC) return Sm;
  bC = 1, Sm = e, e.displayName = "nix", e.aliases = [];
  function e(t) {
    t.languages.nix = {
      comment: {
        pattern: /\/\*[\s\S]*?\*\/|#.*/,
        greedy: !0
      },
      string: {
        pattern: /"(?:[^"\\]|\\[\s\S])*"|''(?:(?!'')[\s\S]|''(?:'|\\|\$\{))*''/,
        greedy: !0,
        inside: {
          interpolation: {
            // The lookbehind ensures the ${} is not preceded by \ or ''
            pattern: /(^|(?:^|(?!'').)[^\\])\$\{(?:[^{}]|\{[^}]*\})*\}/,
            lookbehind: !0,
            inside: null
            // see below
          }
        }
      },
      url: [
        /\b(?:[a-z]{3,7}:\/\/)[\w\-+%~\/.:#=?&]+/,
        {
          pattern: /([^\/])(?:[\w\-+%~.:#=?&]*(?!\/\/)[\w\-+%~\/.:#=?&])?(?!\/\/)\/[\w\-+%~\/.:#=?&]*/,
          lookbehind: !0
        }
      ],
      antiquotation: {
        pattern: /\$(?=\{)/,
        alias: "important"
      },
      number: /\b\d+\b/,
      keyword: /\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\b/,
      function: /\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:Tarball|url)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\b|\bfoldl'\B/,
      boolean: /\b(?:false|true)\b/,
      operator: /[=!<>]=?|\+\+?|\|\||&&|\/\/|->?|[?@]/,
      punctuation: /[{}()[\].,:;]/
    }, t.languages.nix.string.inside.interpolation.inside = t.languages.nix;
  }
  return Sm;
}
var _m, EC;
function V7() {
  if (EC) return _m;
  EC = 1, _m = e, e.displayName = "nsis", e.aliases = [];
  function e(t) {
    t.languages.nsis = {
      comment: {
        pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|[#;].*)/,
        lookbehind: !0,
        greedy: !0
      },
      string: {
        pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
        greedy: !0
      },
      keyword: {
        pattern: /(^[\t ]*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|BG(?:Font|Gradient|Image)|Banner|BrandingText|BringToFront|CRCCheck|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|Seek|Write|WriteByte|WriteUTF16LE|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DLLVersion(?:Local)?|DlgItem|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|NSISdl|Name|Nop|OutFile|PE(?:DllCharacteristics|SubsysVer)|Page(?:Callbacks)?|Pop|Push|Quit|RMDir|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|UnRegDLL|Unicode|UninstPage|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UserInfo|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|Var|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle|ns(?:Dialogs|Exec))\b/m,
        lookbehind: !0
      },
      property: /\b(?:ARCHIVE|FILE_(?:ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK(?:(?:CR|CU|LM)(?:32|64)?|DD|PD|U)|HKEY_(?:CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(?:ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(?:ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY|admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user)\b/,
      constant: /\$\{[!\w\.:\^-]+\}|\$\([!\w\.:\^-]+\)/,
      variable: /\$\w[\w\.]*/,
      number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,
      operator: /--?|\+\+?|<=?|>=?|==?=?|&&?|\|\|?|[?*\/~^%]/,
      punctuation: /[{}[\];(),.:]/,
      important: {
        pattern: /(^[\t ]*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|if|ifdef|ifmacrodef|ifmacrondef|ifndef|include|insertmacro|macro|macroend|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\b/im,
        lookbehind: !0
      }
    };
  }
  return _m;
}
var vm, yC;
function W7() {
  if (yC) return vm;
  yC = 1;
  var e = hi();
  vm = t, t.displayName = "objectivec", t.aliases = ["objc"];
  function t(n) {
    n.register(e), n.languages.objectivec = n.languages.extend("c", {
      string: {
        pattern: /@?"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
        greedy: !0
      },
      keyword: /\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\b/,
      operator: /-[->]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/@]/
    }), delete n.languages.objectivec["class-name"], n.languages.objc = n.languages.objectivec;
  }
  return vm;
}
var Am, TC;
function Y7() {
  if (TC) return Am;
  TC = 1, Am = e, e.displayName = "ocaml", e.aliases = [];
  function e(t) {
    t.languages.ocaml = {
      comment: {
        pattern: /\(\*[\s\S]*?\*\)/,
        greedy: !0
      },
      char: {
        pattern: /'(?:[^\\\r\n']|\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,
        greedy: !0
      },
      string: [
        {
          pattern: /"(?:\\(?:[\s\S]|\r\n)|[^\\\r\n"])*"/,
          greedy: !0
        },
        {
          pattern: /\{([a-z_]*)\|[\s\S]*?\|\1\}/,
          greedy: !0
        }
      ],
      number: [
        // binary and octal
        /\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\b/i,
        // hexadecimal
        /\b0x[a-f0-9][a-f0-9_]*(?:\.[a-f0-9_]*)?(?:p[+-]?\d[\d_]*)?(?!\w)/i,
        // decimal
        /\b\d[\d_]*(?:\.[\d_]*)?(?:e[+-]?\d[\d_]*)?(?!\w)/i
      ],
      directive: {
        pattern: /\B#\w+/,
        alias: "property"
      },
      label: {
        pattern: /\B~\w+/,
        alias: "property"
      },
      "type-variable": {
        pattern: /\B'\w+/,
        alias: "function"
      },
      variant: {
        pattern: /`\w+/,
        alias: "symbol"
      },
      // For the list of keywords and operators,
      // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84
      keyword: /\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\b/,
      boolean: /\b(?:false|true)\b/,
      "operator-like-punctuation": {
        pattern: /\[[<>|]|[>|]\]|\{<|>\}/,
        alias: "punctuation"
      },
      // Custom operators are allowed
      operator: /\.[.~]|:[=>]|[=<>@^|&+\-*\/$%!?~][!$%&*+\-.\/:<=>?@^|~]*|\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\b/,
      punctuation: /;;|::|[(){}\[\].,:;#]|\b_\b/
    };
  }
  return Am;
}
var km, SC;
function K7() {
  if (SC) return km;
  SC = 1;
  var e = hi();
  km = t, t.displayName = "opencl", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      r.languages.opencl = r.languages.extend("c", {
        // Extracted from the official specs (2.0) and http://streamcomputing.eu/downloads/?opencl.lang (opencl-keywords, opencl-types) and http://sourceforge.net/tracker/?func=detail&aid=2957794&group_id=95717&atid=612384 (Words2, partly Words3)
        keyword: /\b(?:(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|__attribute__|auto|(?:bool|u?(?:char|int|long|short)|half|quad)(?:2|3|4|8|16)?|break|case|complex|const|continue|(?:double|float)(?:16(?:x(?:1|2|4|8|16))?|1x(?:1|2|4|8|16)|2(?:x(?:1|2|4|8|16))?|3|4(?:x(?:1|2|4|8|16))?|8(?:x(?:1|2|4|8|16))?)?|default|do|else|enum|extern|for|goto|if|imaginary|inline|packed|pipe|register|restrict|return|signed|sizeof|static|struct|switch|typedef|uniform|union|unsigned|void|volatile|while)\b/,
        // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (opencl-const)
        // Math Constants: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/mathConstants.html
        // Macros and Limits: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/macroLimits.html
        number: /(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[fuhl]{0,4}/i,
        boolean: /\b(?:false|true)\b/,
        "constant-opencl-kernel": {
          pattern: /\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:GLOBAL|LOCAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT|HALF)_(?:DIG|EPSILON|(?:MAX|MIN)(?:(?:_10)?_EXP)?|MANT_DIG)|FLT_RADIX|HUGE_VALF?|(?:INT|LONG|SCHAR|SHRT)_(?:MAX|MIN)|INFINITY|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:2|10)E?|PI(?:_[24])?|SQRT(?:1_2|2))(?:_F|_H)?|NAN|(?:UCHAR|UINT|ULONG|USHRT)_MAX)\b/,
          alias: "constant"
        }
      }), r.languages.insertBefore("opencl", "class-name", {
        // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/scalarDataTypes.html
        // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/otherDataTypes.html
        "builtin-type": {
          pattern: /\b(?:_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|cl_(?:image_format|mem_fence_flags)|clk_event_t|event_t|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|intptr_t|ndrange_t|ptrdiff_t|queue_t|reserve_id_t|sampler_t|size_t|uintptr_t)\b/,
          alias: "keyword"
        }
      });
      var o = {
        // Extracted from http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-types and opencl-host)
        "type-opencl-host": {
          pattern: /\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|int|long|short)|double|float)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\b/,
          alias: "keyword"
        },
        "boolean-opencl-host": {
          pattern: /\bCL_(?:FALSE|TRUE)\b/,
          alias: "boolean"
        },
        // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-const)
        "constant-opencl-host": {
          pattern: /\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:8|16|24|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\b/,
          alias: "constant"
        },
        // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-host)
        "function-opencl-host": {
          pattern: /\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\b/,
          alias: "function"
        }
      };
      r.languages.insertBefore("c", "keyword", o), r.languages.cpp && (o["type-opencl-host-cpp"] = {
        pattern: /\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|Sampler|UserEvent)\b/,
        alias: "keyword"
      }, r.languages.insertBefore("cpp", "keyword", o));
    }(n);
  }
  return km;
}
var Cm, _C;
function X7() {
  if (_C) return Cm;
  _C = 1, Cm = e, e.displayName = "openqasm", e.aliases = ["qasm"];
  function e(t) {
    t.languages.openqasm = {
      comment: /\/\*[\s\S]*?\*\/|\/\/.*/,
      string: {
        pattern: /"[^"\r\n\t]*"|'[^'\r\n\t]*'/,
        greedy: !0
      },
      keyword: /\b(?:CX|OPENQASM|U|barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while)\b|#pragma\b/,
      "class-name": /\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\b/,
      function: /\b(?:cos|exp|ln|popcount|rotl|rotr|sin|sqrt|tan)\b(?=\s*\()/,
      constant: /\b(?:euler|pi|tau)\b|π|𝜏|ℇ/,
      number: {
        pattern: /(^|[^.\w$])(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?(?:dt|ns|us|µs|ms|s)?/i,
        lookbehind: !0
      },
      operator: /->|>>=?|<<=?|&&|\|\||\+\+|--|[!=<>&|~^+\-*/%]=?|@/,
      punctuation: /[(){}\[\];,:.]/
    }, t.languages.qasm = t.languages.openqasm;
  }
  return Cm;
}
var wm, vC;
function Q7() {
  if (vC) return wm;
  vC = 1, wm = e, e.displayName = "oz", e.aliases = [];
  function e(t) {
    t.languages.oz = {
      comment: {
        pattern: /\/\*[\s\S]*?\*\/|%.*/,
        greedy: !0
      },
      string: {
        pattern: /"(?:[^"\\]|\\[\s\S])*"/,
        greedy: !0
      },
      atom: {
        pattern: /'(?:[^'\\]|\\[\s\S])*'/,
        greedy: !0,
        alias: "builtin"
      },
      keyword: /\$|\[\]|\b(?:_|at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\b/,
      function: [
        /\b[a-z][A-Za-z\d]*(?=\()/,
        {
          pattern: /(\{)[A-Z][A-Za-z\d]*\b/,
          lookbehind: !0
        }
      ],
      number: /\b(?:0[bx][\da-f]+|\d+(?:\.\d*)?(?:e~?\d+)?)\b|&(?:[^\\]|\\(?:\d{3}|.))/i,
      variable: /`(?:[^`\\]|\\.)+`/,
      "attr-name": /\b\w+(?=[ \t]*:(?![:=]))/,
      operator: /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\=:?|!!?|[|#+\-*\/,~^@]|\b(?:andthen|div|mod|orelse)\b/,
      punctuation: /[\[\](){}.:;?]/
    };
  }
  return wm;
}
var Im, AC;
function Z7() {
  if (AC) return Im;
  AC = 1, Im = e, e.displayName = "parigp", e.aliases = [];
  function e(t) {
    t.languages.parigp = {
      comment: /\/\*[\s\S]*?\*\/|\\\\.*/,
      string: {
        pattern: /"(?:[^"\\\r\n]|\\.)*"/,
        greedy: !0
      },
      // PARI/GP does not care about white spaces at all
      // so let's process the keywords to build an appropriate regexp
      // (e.g. "b *r *e *a *k", etc.)
      keyword: function() {
        var n = [
          "breakpoint",
          "break",
          "dbg_down",
          "dbg_err",
          "dbg_up",
          "dbg_x",
          "forcomposite",
          "fordiv",
          "forell",
          "forpart",
          "forprime",
          "forstep",
          "forsubgroup",
          "forvec",
          "for",
          "iferr",
          "if",
          "local",
          "my",
          "next",
          "return",
          "until",
          "while"
        ];
        return n = n.map(function(r) {
          return r.split("").join(" *");
        }).join("|"), RegExp("\\b(?:" + n + ")\\b");
      }(),
      function: /\b\w(?:[\w ]*\w)?(?= *\()/,
      number: {
        // The lookbehind and the negative lookahead prevent from breaking the .. operator
        pattern: /((?:\. *\. *)?)(?:\b\d(?: *\d)*(?: *(?!\. *\.)\.(?: *\d)*)?|\. *\d(?: *\d)*)(?: *e *(?:[+-] *)?\d(?: *\d)*)?/i,
        lookbehind: !0
      },
      operator: /\. *\.|[*\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\+(?: *[+=])?|-(?: *[-=>])?|<(?: *>|(?: *<)?(?: *=)?)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\(?: *\/)?(?: *=)?|&(?: *&)?|\| *\||['#~^]/,
      punctuation: /[\[\]{}().,:;|]/
    };
  }
  return Im;
}
var Rm, kC;
function J7() {
  if (kC) return Rm;
  kC = 1, Rm = e, e.displayName = "parser", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = n.languages.parser = n.languages.extend("markup", {
        keyword: {
          pattern: /(^|[^^])(?:\^(?:case|eval|for|if|switch|throw)\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\b)/,
          lookbehind: !0
        },
        variable: {
          pattern: /(^|[^^])\B\$(?:\w+|(?=[.{]))(?:(?:\.|::?)\w+)*(?:\.|::?)?/,
          lookbehind: !0,
          inside: {
            punctuation: /\.|:+/
          }
        },
        function: {
          pattern: /(^|[^^])\B[@^]\w+(?:(?:\.|::?)\w+)*(?:\.|::?)?/,
          lookbehind: !0,
          inside: {
            keyword: {
              pattern: /(^@)(?:GET_|SET_)/,
              lookbehind: !0
            },
            punctuation: /\.|:+/
          }
        },
        escape: {
          pattern: /\^(?:[$^;@()\[\]{}"':]|#[a-f\d]*)/i,
          alias: "builtin"
        },
        punctuation: /[\[\](){};]/
      });
      r = n.languages.insertBefore("parser", "keyword", {
        "parser-comment": {
          pattern: /(\s)#.*/,
          lookbehind: !0,
          alias: "comment"
        },
        expression: {
          // Allow for 3 levels of depth
          pattern: /(^|[^^])\((?:[^()]|\((?:[^()]|\((?:[^()])*\))*\))*\)/,
          greedy: !0,
          lookbehind: !0,
          inside: {
            string: {
              pattern: /(^|[^^])(["'])(?:(?!\2)[^^]|\^[\s\S])*\2/,
              lookbehind: !0
            },
            keyword: r.keyword,
            variable: r.variable,
            function: r.function,
            boolean: /\b(?:false|true)\b/,
            number: /\b(?:0x[a-f\d]+|\d+(?:\.\d*)?(?:e[+-]?\d+)?)\b/i,
            escape: r.escape,
            operator: /[~+*\/\\%]|!(?:\|\|?|=)?|&&?|\|\|?|==|<[<=]?|>[>=]?|-[fd]?|\b(?:def|eq|ge|gt|in|is|le|lt|ne)\b/,
            punctuation: r.punctuation
          }
        }
      }), n.languages.insertBefore(
        "inside",
        "punctuation",
        {
          expression: r.expression,
          keyword: r.keyword,
          variable: r.variable,
          function: r.function,
          escape: r.escape,
          "parser-punctuation": {
            pattern: r.punctuation,
            alias: "punctuation"
          }
        },
        r.tag.inside["attr-value"]
      );
    })(t);
  }
  return Rm;
}
var xm, CC;
function eH() {
  if (CC) return xm;
  CC = 1, xm = e, e.displayName = "pascal", e.aliases = ["objectpascal"];
  function e(t) {
    t.languages.pascal = {
      directive: {
        pattern: /\{\$[\s\S]*?\}/,
        greedy: !0,
        alias: ["marco", "property"]
      },
      comment: {
        pattern: /\(\*[\s\S]*?\*\)|\{[\s\S]*?\}|\/\/.*/,
        greedy: !0
      },
      string: {
        pattern: /(?:'(?:''|[^'\r\n])*'(?!')|#[&$%]?[a-f\d]+)+|\^[a-z]/i,
        greedy: !0
      },
      asm: {
        pattern: /(\basm\b)[\s\S]+?(?=\bend\s*[;[])/i,
        lookbehind: !0,
        greedy: !0,
        inside: null
        // see below
      },
      keyword: [
        {
          // Turbo Pascal
          pattern: /(^|[^&])\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\b/i,
          lookbehind: !0
        },
        {
          // Free Pascal
          pattern: /(^|[^&])\b(?:dispose|exit|false|new|true)\b/i,
          lookbehind: !0
        },
        {
          // Object Pascal
          pattern: /(^|[^&])\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\b/i,
          lookbehind: !0
        },
        {
          // Modifiers
          pattern: /(^|[^&])\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\b/i,
          lookbehind: !0
        }
      ],
      number: [
        // Hexadecimal, octal and binary
        /(?:[&%]\d+|\$[a-f\d]+)/i,
        // Decimal
        /\b\d+(?:\.\d+)?(?:e[+-]?\d+)?/i
      ],
      operator: [
        /\.\.|\*\*|:=|<[<=>]?|>[>=]?|[+\-*\/]=?|[@^=]/,
        {
          pattern: /(^|[^&])\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\b/,
          lookbehind: !0
        }
      ],
      punctuation: /\(\.|\.\)|[()\[\]:;,.]/
    }, t.languages.pascal.asm.inside = t.languages.extend("pascal", {
      asm: void 0,
      keyword: void 0,
      operator: void 0
    }), t.languages.objectpascal = t.languages.pascal;
  }
  return xm;
}
var Nm, wC;
function tH() {
  if (wC) return Nm;
  wC = 1, Nm = e, e.displayName = "pascaligo", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /\((?:[^()]|\((?:[^()]|\([^()]*\))*\))*\)/.source, o = /(?:\b\w+(?:<braces>)?|<braces>)/.source.replace(
        /<braces>/g,
        function() {
          return r;
        }
      ), s = n.languages.pascaligo = {
        comment: /\(\*[\s\S]+?\*\)|\/\/.*/,
        string: {
          pattern: /(["'`])(?:\\[\s\S]|(?!\1)[^\\])*\1|\^[a-z]/i,
          greedy: !0
        },
        "class-name": [
          {
            pattern: RegExp(
              /(\btype\s+\w+\s+is\s+)<type>/.source.replace(
                /<type>/g,
                function() {
                  return o;
                }
              ),
              "i"
            ),
            lookbehind: !0,
            inside: null
            // see below
          },
          {
            pattern: RegExp(
              /<type>(?=\s+is\b)/.source.replace(/<type>/g, function() {
                return o;
              }),
              "i"
            ),
            inside: null
            // see below
          },
          {
            pattern: RegExp(
              /(:\s*)<type>/.source.replace(/<type>/g, function() {
                return o;
              })
            ),
            lookbehind: !0,
            inside: null
            // see below
          }
        ],
        keyword: {
          pattern: /(^|[^&])\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\b/i,
          lookbehind: !0
        },
        boolean: {
          pattern: /(^|[^&])\b(?:False|True)\b/i,
          lookbehind: !0
        },
        builtin: {
          pattern: /(^|[^&])\b(?:bool|int|list|map|nat|record|string|unit)\b/i,
          lookbehind: !0
        },
        function: /\b\w+(?=\s*\()/,
        number: [
          // Hexadecimal, octal and binary
          /%[01]+|&[0-7]+|\$[a-f\d]+/i,
          // Decimal
          /\b\d+(?:\.\d+)?(?:e[+-]?\d+)?(?:mtz|n)?/i
        ],
        operator: /->|=\/=|\.\.|\*\*|:=|<[<=>]?|>[>=]?|[+\-*\/]=?|[@^=|]|\b(?:and|mod|or)\b/,
        punctuation: /\(\.|\.\)|[()\[\]:;,.{}]/
      }, u = [
        "comment",
        "keyword",
        "builtin",
        "operator",
        "punctuation"
      ].reduce(function(c, p) {
        return c[p] = s[p], c;
      }, {});
      s["class-name"].forEach(function(c) {
        c.inside = u;
      });
    })(t);
  }
  return Nm;
}
var Om, IC;
function nH() {
  if (IC) return Om;
  IC = 1, Om = e, e.displayName = "pcaxis", e.aliases = ["px"];
  function e(t) {
    t.languages.pcaxis = {
      string: /"[^"]*"/,
      keyword: {
        pattern: /((?:^|;)\s*)[-A-Z\d]+(?:\s*\[[-\w]+\])?(?:\s*\("[^"]*"(?:,\s*"[^"]*")*\))?(?=\s*=)/,
        lookbehind: !0,
        greedy: !0,
        inside: {
          keyword: /^[-A-Z\d]+/,
          language: {
            pattern: /^(\s*)\[[-\w]+\]/,
            lookbehind: !0,
            inside: {
              punctuation: /^\[|\]$/,
              property: /[-\w]+/
            }
          },
          "sub-key": {
            pattern: /^(\s*)\S[\s\S]*/,
            lookbehind: !0,
            inside: {
              parameter: {
                pattern: /"[^"]*"/,
                alias: "property"
              },
              punctuation: /^\(|\)$|,/
            }
          }
        }
      },
      operator: /=/,
      tlist: {
        pattern: /TLIST\s*\(\s*\w+(?:(?:\s*,\s*"[^"]*")+|\s*,\s*"[^"]*"-"[^"]*")?\s*\)/,
        greedy: !0,
        inside: {
          function: /^TLIST/,
          property: {
            pattern: /^(\s*\(\s*)\w+/,
            lookbehind: !0
          },
          string: /"[^"]*"/,
          punctuation: /[(),]/,
          operator: /-/
        }
      },
      punctuation: /[;,]/,
      number: {
        pattern: /(^|\s)\d+(?:\.\d+)?(?!\S)/,
        lookbehind: !0
      },
      boolean: /NO|YES/
    }, t.languages.px = t.languages.pcaxis;
  }
  return Om;
}
var Lm, RC;
function rH() {
  if (RC) return Lm;
  RC = 1, Lm = e, e.displayName = "peoplecode", e.aliases = ["pcode"];
  function e(t) {
    t.languages.peoplecode = {
      comment: RegExp(
        [
          // C-style multiline comments
          /\/\*[\s\S]*?\*\//.source,
          // REM comments
          /\bREM[^;]*;/.source,
          // Nested <* *> comments
          /<\*(?:[^<*]|\*(?!>)|<(?!\*)|<\*(?:(?!\*>)[\s\S])*\*>)*\*>/.source,
          // /+ +/ comments
          /\/\+[\s\S]*?\+\//.source
        ].join("|")
      ),
      string: {
        pattern: /'(?:''|[^'\r\n])*'(?!')|"(?:""|[^"\r\n])*"(?!")/,
        greedy: !0
      },
      variable: /%\w+/,
      "function-definition": {
        pattern: /((?:^|[^\w-])(?:function|method)\s+)\w+/i,
        lookbehind: !0,
        alias: "function"
      },
      "class-name": {
        pattern: /((?:^|[^-\w])(?:as|catch|class|component|create|extends|global|implements|instance|local|of|property|returns)\s+)\w+(?::\w+)*/i,
        lookbehind: !0,
        inside: {
          punctuation: /:/
        }
      },
      keyword: /\b(?:abstract|alias|as|catch|class|component|constant|create|declare|else|end-(?:class|evaluate|for|function|get|if|method|set|try|while)|evaluate|extends|for|function|get|global|if|implements|import|instance|library|local|method|null|of|out|peopleCode|private|program|property|protected|readonly|ref|repeat|returns?|set|step|then|throw|to|try|until|value|when(?:-other)?|while)\b/i,
      "operator-keyword": {
        pattern: /\b(?:and|not|or)\b/i,
        alias: "operator"
      },
      function: /[_a-z]\w*(?=\s*\()/i,
      boolean: /\b(?:false|true)\b/i,
      number: /\b\d+(?:\.\d+)?\b/,
      operator: /<>|[<>]=?|!=|\*\*|[-+*/|=@]/,
      punctuation: /[:.;,()[\]]/
    }, t.languages.pcode = t.languages.peoplecode;
  }
  return Lm;
}
var Dm, xC;
function aH() {
  if (xC) return Dm;
  xC = 1, Dm = e, e.displayName = "perl", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /(?:\((?:[^()\\]|\\[\s\S])*\)|\{(?:[^{}\\]|\\[\s\S])*\}|\[(?:[^[\]\\]|\\[\s\S])*\]|<(?:[^<>\\]|\\[\s\S])*>)/.source;
      n.languages.perl = {
        comment: [
          {
            // POD
            pattern: /(^\s*)=\w[\s\S]*?=cut.*/m,
            lookbehind: !0,
            greedy: !0
          },
          {
            pattern: /(^|[^\\$])#.*/,
            lookbehind: !0,
            greedy: !0
          }
        ],
        // TODO Could be nice to handle Heredoc too.
        string: [
          {
            pattern: RegExp(
              /\b(?:q|qq|qw|qx)(?![a-zA-Z0-9])\s*/.source + "(?:" + [
                // q/.../
                /([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,
                // q a...a
                // eslint-disable-next-line regexp/strict
                /([a-zA-Z0-9])(?:(?!\2)[^\\]|\\[\s\S])*\2/.source,
                // q(...)
                // q{...}
                // q[...]
                // q<...>
                r
              ].join("|") + ")"
            ),
            greedy: !0
          },
          // "...", `...`
          {
            pattern: /("|`)(?:(?!\1)[^\\]|\\[\s\S])*\1/,
            greedy: !0
          },
          // '...'
          // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '
          {
            pattern: /'(?:[^'\\\r\n]|\\.)*'/,
            greedy: !0
          }
        ],
        regex: [
          {
            pattern: RegExp(
              /\b(?:m|qr)(?![a-zA-Z0-9])\s*/.source + "(?:" + [
                // m/.../
                /([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,
                // m a...a
                // eslint-disable-next-line regexp/strict
                /([a-zA-Z0-9])(?:(?!\2)[^\\]|\\[\s\S])*\2/.source,
                // m(...)
                // m{...}
                // m[...]
                // m<...>
                r
              ].join("|") + ")" + /[msixpodualngc]*/.source
            ),
            greedy: !0
          },
          // The lookbehinds prevent -s from breaking
          {
            pattern: RegExp(
              /(^|[^-])\b(?:s|tr|y)(?![a-zA-Z0-9])\s*/.source + "(?:" + [
                // s/.../.../
                // eslint-disable-next-line regexp/strict
                /([^a-zA-Z0-9\s{(\[<])(?:(?!\2)[^\\]|\\[\s\S])*\2(?:(?!\2)[^\\]|\\[\s\S])*\2/.source,
                // s a...a...a
                // eslint-disable-next-line regexp/strict
                /([a-zA-Z0-9])(?:(?!\3)[^\\]|\\[\s\S])*\3(?:(?!\3)[^\\]|\\[\s\S])*\3/.source,
                // s(...)(...)
                // s{...}{...}
                // s[...][...]
                // s<...><...>
                // s(...)[...]
                r + /\s*/.source + r
              ].join("|") + ")" + /[msixpodualngcer]*/.source
            ),
            lookbehind: !0,
            greedy: !0
          },
          // /.../
          // The look-ahead tries to prevent two divisions on
          // the same line from being highlighted as regex.
          // This does not support multi-line regex.
          {
            pattern: /\/(?:[^\/\\\r\n]|\\.)*\/[msixpodualngc]*(?=\s*(?:$|[\r\n,.;})&|\-+*~<>!?^]|(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|x|xor)\b))/,
            greedy: !0
          }
        ],
        // FIXME Not sure about the handling of ::, ', and #
        variable: [
          // ${^POSTMATCH}
          /[&*$@%]\{\^[A-Z]+\}/,
          // $^V
          /[&*$@%]\^[A-Z_]/,
          // ${...}
          /[&*$@%]#?(?=\{)/,
          // $foo
          /[&*$@%]#?(?:(?:::)*'?(?!\d)[\w$]+(?![\w$]))+(?:::)*/,
          // $1
          /[&*$@%]\d+/,
          // $_, @_, %!
          // The negative lookahead prevents from breaking the %= operator
          /(?!%=)[$@%][!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~]/
        ],
        filehandle: {
          // <>, <FOO>, _
          pattern: /<(?![<=])\S*?>|\b_\b/,
          alias: "symbol"
        },
        "v-string": {
          // v1.2, 1.2.3
          pattern: /v\d+(?:\.\d+)*|\d+(?:\.\d+){2,}/,
          alias: "string"
        },
        function: {
          pattern: /(\bsub[ \t]+)\w+/,
          lookbehind: !0
        },
        keyword: /\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\b/,
        number: /\b(?:0x[\dA-Fa-f](?:_?[\dA-Fa-f])*|0b[01](?:_?[01])*|(?:(?:\d(?:_?\d)*)?\.)?\d(?:_?\d)*(?:[Ee][+-]?\d+)?)\b/,
        operator: /-[rwxoRWXOezsfdlpSbctugkTBMAC]\b|\+[+=]?|-[-=>]?|\*\*?=?|\/\/?=?|=[=~>]?|~[~=]?|\|\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\.(?:=|\.\.?)?|[\\?]|\bx(?:=|\b)|\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\b/,
        punctuation: /[{}[\];(),:]/
      };
    })(t);
  }
  return Dm;
}
var Mm, NC;
function iH() {
  if (NC) return Mm;
  NC = 1;
  var e = gc();
  Mm = t, t.displayName = "phpExtras", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.insertBefore("php", "variable", {
      this: {
        pattern: /\$this\b/,
        alias: "keyword"
      },
      global: /\$(?:GLOBALS|HTTP_RAW_POST_DATA|_(?:COOKIE|ENV|FILES|GET|POST|REQUEST|SERVER|SESSION)|argc|argv|http_response_header|php_errormsg)\b/,
      scope: {
        pattern: /\b[\w\\]+::/,
        inside: {
          keyword: /\b(?:parent|self|static)\b/,
          punctuation: /::|\\/
        }
      }
    });
  }
  return Mm;
}
var Pm, OC;
function oH() {
  if (OC) return Pm;
  OC = 1;
  var e = gc(), t = hc();
  Pm = n, n.displayName = "phpdoc", n.aliases = [];
  function n(r) {
    r.register(e), r.register(t), function(o) {
      var s = /(?:\b[a-zA-Z]\w*|[|\\[\]])+/.source;
      o.languages.phpdoc = o.languages.extend("javadoclike", {
        parameter: {
          pattern: RegExp(
            "(@(?:global|param|property(?:-read|-write)?|var)\\s+(?:" + s + "\\s+)?)\\$\\w+"
          ),
          lookbehind: !0
        }
      }), o.languages.insertBefore("phpdoc", "keyword", {
        "class-name": [
          {
            pattern: RegExp(
              "(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\s+)" + s
            ),
            lookbehind: !0,
            inside: {
              keyword: /\b(?:array|bool|boolean|callback|double|false|float|int|integer|mixed|null|object|resource|self|string|true|void)\b/,
              punctuation: /[|\\[\]()]/
            }
          }
        ]
      }), o.languages.javadoclike.addSupport("php", o.languages.phpdoc);
    }(r);
  }
  return Pm;
}
var Fm, LC;
function sH() {
  if (LC) return Fm;
  LC = 1;
  var e = WE();
  Fm = t, t.displayName = "plsql", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.plsql = n.languages.extend("sql", {
      comment: {
        pattern: /\/\*[\s\S]*?\*\/|--.*/,
        greedy: !0
      },
      // https://docs.oracle.com/en/database/oracle/oracle-database/21/lnpls/plsql-reserved-words-keywords.html
      keyword: /\b(?:A|ACCESSIBLE|ADD|AGENT|AGGREGATE|ALL|ALTER|AND|ANY|ARRAY|AS|ASC|AT|ATTRIBUTE|AUTHID|AVG|BEGIN|BETWEEN|BFILE_BASE|BINARY|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BULK|BY|BYTE|C|CALL|CALLING|CASCADE|CASE|CHAR|CHARACTER|CHARSET|CHARSETFORM|CHARSETID|CHAR_BASE|CHECK|CLOB_BASE|CLONE|CLOSE|CLUSTER|CLUSTERS|COLAUTH|COLLECT|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPILED|COMPRESS|CONNECT|CONSTANT|CONSTRUCTOR|CONTEXT|CONTINUE|CONVERT|COUNT|CRASH|CREATE|CREDENTIAL|CURRENT|CURSOR|CUSTOMDATUM|DANGLING|DATA|DATE|DATE_BASE|DAY|DECLARE|DEFAULT|DEFINE|DELETE|DESC|DETERMINISTIC|DIRECTORY|DISTINCT|DOUBLE|DROP|DURATION|ELEMENT|ELSE|ELSIF|EMPTY|END|ESCAPE|EXCEPT|EXCEPTION|EXCEPTIONS|EXCLUSIVE|EXECUTE|EXISTS|EXIT|EXTERNAL|FETCH|FINAL|FIRST|FIXED|FLOAT|FOR|FORALL|FORCE|FROM|FUNCTION|GENERAL|GOTO|GRANT|GROUP|HASH|HAVING|HEAP|HIDDEN|HOUR|IDENTIFIED|IF|IMMEDIATE|IMMUTABLE|IN|INCLUDING|INDEX|INDEXES|INDICATOR|INDICES|INFINITE|INSERT|INSTANTIABLE|INT|INTERFACE|INTERSECT|INTERVAL|INTO|INVALIDATE|IS|ISOLATION|JAVA|LANGUAGE|LARGE|LEADING|LENGTH|LEVEL|LIBRARY|LIKE|LIKE2|LIKE4|LIKEC|LIMIT|LIMITED|LOCAL|LOCK|LONG|LOOP|MAP|MAX|MAXLEN|MEMBER|MERGE|MIN|MINUS|MINUTE|MOD|MODE|MODIFY|MONTH|MULTISET|MUTABLE|NAME|NAN|NATIONAL|NATIVE|NCHAR|NEW|NOCOMPRESS|NOCOPY|NOT|NOWAIT|NULL|NUMBER_BASE|OBJECT|OCICOLL|OCIDATE|OCIDATETIME|OCIDURATION|OCIINTERVAL|OCILOBLOCATOR|OCINUMBER|OCIRAW|OCIREF|OCIREFCURSOR|OCIROWID|OCISTRING|OCITYPE|OF|OLD|ON|ONLY|OPAQUE|OPEN|OPERATOR|OPTION|OR|ORACLE|ORADATA|ORDER|ORGANIZATION|ORLANY|ORLVARY|OTHERS|OUT|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETER|PARAMETERS|PARENT|PARTITION|PASCAL|PERSISTABLE|PIPE|PIPELINED|PLUGGABLE|POLYMORPHIC|PRAGMA|PRECISION|PRIOR|PRIVATE|PROCEDURE|PUBLIC|RAISE|RANGE|RAW|READ|RECORD|REF|REFERENCE|RELIES_ON|REM|REMAINDER|RENAME|RESOURCE|RESULT|RESULT_CACHE|RETURN|RETURNING|REVERSE|REVOKE|ROLLBACK|ROW|SAMPLE|SAVE|SAVEPOINT|SB1|SB2|SB4|SECOND|SEGMENT|SELECT|SELF|SEPARATE|SEQUENCE|SERIALIZABLE|SET|SHARE|SHORT|SIZE|SIZE_T|SOME|SPARSE|SQL|SQLCODE|SQLDATA|SQLNAME|SQLSTATE|STANDARD|START|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUM|SYNONYM|TABAUTH|TABLE|TDO|THE|THEN|TIME|TIMESTAMP|TIMEZONE_ABBR|TIMEZONE_HOUR|TIMEZONE_MINUTE|TIMEZONE_REGION|TO|TRAILING|TRANSACTION|TRANSACTIONAL|TRUSTED|TYPE|UB1|UB2|UB4|UNDER|UNION|UNIQUE|UNPLUG|UNSIGNED|UNTRUSTED|UPDATE|USE|USING|VALIST|VALUE|VALUES|VARIABLE|VARIANCE|VARRAY|VARYING|VIEW|VIEWS|VOID|WHEN|WHERE|WHILE|WITH|WORK|WRAPPED|WRITE|YEAR|ZONE)\b/i,
      // https://docs.oracle.com/en/database/oracle/oracle-database/21/lnpls/plsql-language-fundamentals.html#GUID-96A42F7C-7A71-4B90-8255-CA9C8BD9722E
      operator: /:=?|=>|[<>^~!]=|\.\.|\|\||\*\*|[-+*/%<>=@]/
    }), n.languages.insertBefore("plsql", "operator", {
      label: {
        pattern: /<<\s*\w+\s*>>/,
        alias: "symbol"
      }
    });
  }
  return Fm;
}
var Bm, DC;
function lH() {
  if (DC) return Bm;
  DC = 1, Bm = e, e.displayName = "powerquery", e.aliases = [];
  function e(t) {
    t.languages.powerquery = {
      comment: {
        pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
        lookbehind: !0,
        greedy: !0
      },
      "quoted-identifier": {
        pattern: /#"(?:[^"\r\n]|"")*"(?!")/,
        greedy: !0
      },
      string: {
        pattern: /(?:#!)?"(?:[^"\r\n]|"")*"(?!")/,
        greedy: !0
      },
      constant: [
        /\bDay\.(?:Friday|Monday|Saturday|Sunday|Thursday|Tuesday|Wednesday)\b/,
        /\bTraceLevel\.(?:Critical|Error|Information|Verbose|Warning)\b/,
        /\bOccurrence\.(?:All|First|Last)\b/,
        /\bOrder\.(?:Ascending|Descending)\b/,
        /\bRoundingMode\.(?:AwayFromZero|Down|ToEven|TowardZero|Up)\b/,
        /\bMissingField\.(?:Error|Ignore|UseNull)\b/,
        /\bQuoteStyle\.(?:Csv|None)\b/,
        /\bJoinKind\.(?:FullOuter|Inner|LeftAnti|LeftOuter|RightAnti|RightOuter)\b/,
        /\bGroupKind\.(?:Global|Local)\b/,
        /\bExtraValues\.(?:Error|Ignore|List)\b/,
        /\bJoinAlgorithm\.(?:Dynamic|LeftHash|LeftIndex|PairwiseHash|RightHash|RightIndex|SortMerge)\b/,
        /\bJoinSide\.(?:Left|Right)\b/,
        /\bPrecision\.(?:Decimal|Double)\b/,
        /\bRelativePosition\.From(?:End|Start)\b/,
        /\bTextEncoding\.(?:Ascii|BigEndianUnicode|Unicode|Utf16|Utf8|Windows)\b/,
        /\b(?:Any|Binary|Date|DateTime|DateTimeZone|Duration|Function|Int16|Int32|Int64|Int8|List|Logical|None|Number|Record|Table|Text|Time)\.Type\b/,
        /\bnull\b/
      ],
      boolean: /\b(?:false|true)\b/,
      keyword: /\b(?:and|as|each|else|error|if|in|is|let|meta|not|nullable|optional|or|otherwise|section|shared|then|try|type)\b|#(?:binary|date|datetime|datetimezone|duration|infinity|nan|sections|shared|table|time)\b/,
      function: {
        pattern: /(^|[^#\w.])[a-z_][\w.]*(?=\s*\()/i,
        lookbehind: !0
      },
      "data-type": {
        pattern: /\b(?:any|anynonnull|binary|date|datetime|datetimezone|duration|function|list|logical|none|number|record|table|text|time)\b/,
        alias: "class-name"
      },
      number: {
        pattern: /\b0x[\da-f]+\b|(?:[+-]?(?:\b\d+\.)?\b\d+|[+-]\.\d+|(^|[^.])\B\.\d+)(?:e[+-]?\d+)?\b/i,
        lookbehind: !0
      },
      operator: /[-+*\/&?@^]|<(?:=>?|>)?|>=?|=>?|\.\.\.?/,
      punctuation: /[,;\[\](){}]/
    }, t.languages.pq = t.languages.powerquery, t.languages.mscript = t.languages.powerquery;
  }
  return Bm;
}
var Um, MC;
function uH() {
  if (MC) return Um;
  MC = 1, Um = e, e.displayName = "powershell", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = n.languages.powershell = {
        comment: [
          {
            pattern: /(^|[^`])<#[\s\S]*?#>/,
            lookbehind: !0
          },
          {
            pattern: /(^|[^`])#.*/,
            lookbehind: !0
          }
        ],
        string: [
          {
            pattern: /"(?:`[\s\S]|[^`"])*"/,
            greedy: !0,
            inside: null
            // see below
          },
          {
            pattern: /'(?:[^']|'')*'/,
            greedy: !0
          }
        ],
        // Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices
        // Supports two levels of nested brackets (e.g. `[OutputType([System.Collections.Generic.List[int]])]`)
        namespace: /\[[a-z](?:\[(?:\[[^\]]*\]|[^\[\]])*\]|[^\[\]])*\]/i,
        boolean: /\$(?:false|true)\b/i,
        variable: /\$\w+\b/,
        // Cmdlets and aliases. Aliases should come last, otherwise "write" gets preferred over "write-host" for example
        // Get-Command | ?{ $_.ModuleName -match "Microsoft.PowerShell.(Util|Core|Management)" }
        // Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match "Microsoft.PowerShell.(Util|Core|Management)" }
        function: [
          /\b(?:Add|Approve|Assert|Backup|Block|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|ForEach|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Sort|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Tee|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Where|Write)-[a-z]+\b/i,
          /\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\b/i
        ],
        // per http://technet.microsoft.com/en-us/library/hh847744.aspx
        keyword: /\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\b/i,
        operator: {
          pattern: /(^|\W)(?:!|-(?:b?(?:and|x?or)|as|(?:Not)?(?:Contains|In|Like|Match)|eq|ge|gt|is(?:Not)?|Join|le|lt|ne|not|Replace|sh[lr])\b|-[-=]?|\+[+=]?|[*\/%]=?)/i,
          lookbehind: !0
        },
        punctuation: /[|{}[\];(),.]/
      };
      r.string[0].inside = {
        function: {
          // Allow for one level of nesting
          pattern: /(^|[^`])\$\((?:\$\([^\r\n()]*\)|(?!\$\()[^\r\n)])*\)/,
          lookbehind: !0,
          inside: r
        },
        boolean: r.boolean,
        variable: r.variable
      };
    })(t);
  }
  return Um;
}
var Hm, PC;
function cH() {
  if (PC) return Hm;
  PC = 1, Hm = e, e.displayName = "processing", e.aliases = [];
  function e(t) {
    t.languages.processing = t.languages.extend("clike", {
      keyword: /\b(?:break|case|catch|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\b/,
      // Spaces are allowed between function name and parenthesis
      function: /\b\w+(?=\s*\()/,
      operator: /<[<=]?|>[>=]?|&&?|\|\|?|[%?]|[!=+\-*\/]=?/
    }), t.languages.insertBefore("processing", "number", {
      // Special case: XML is a type
      constant: /\b(?!XML\b)[A-Z][A-Z\d_]+\b/,
      type: {
        pattern: /\b(?:boolean|byte|char|color|double|float|int|[A-Z]\w*)\b/,
        alias: "class-name"
      }
    });
  }
  return Hm;
}
var $m, FC;
function dH() {
  if (FC) return $m;
  FC = 1, $m = e, e.displayName = "prolog", e.aliases = [];
  function e(t) {
    t.languages.prolog = {
      // Syntax depends on the implementation
      comment: {
        pattern: /\/\*[\s\S]*?\*\/|%.*/,
        greedy: !0
      },
      // Depending on the implementation, strings may allow escaped newlines and quote-escape
      string: {
        pattern: /(["'])(?:\1\1|\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1(?!\1)/,
        greedy: !0
      },
      builtin: /\b(?:fx|fy|xf[xy]?|yfx?)\b/,
      // FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?
      function: /\b[a-z]\w*(?:(?=\()|\/\d+)/,
      number: /\b\d+(?:\.\d*)?/,
      // Custom operators are allowed
      operator: /[:\\=><\-?*@\/;+^|!$.]+|\b(?:is|mod|not|xor)\b/,
      punctuation: /[(){}\[\],]/
    };
  }
  return $m;
}
var zm, BC;
function pH() {
  if (BC) return zm;
  BC = 1, zm = e, e.displayName = "promql", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = [
        "sum",
        "min",
        "max",
        "avg",
        "group",
        "stddev",
        "stdvar",
        "count",
        "count_values",
        "bottomk",
        "topk",
        "quantile"
      ], o = [
        "on",
        "ignoring",
        "group_right",
        "group_left",
        "by",
        "without"
      ], s = ["offset"], u = r.concat(o, s);
      n.languages.promql = {
        comment: {
          pattern: /(^[ \t]*)#.*/m,
          lookbehind: !0
        },
        "vector-match": {
          // Match the comma-separated label lists inside vector matching:
          pattern: new RegExp(
            "((?:" + o.join("|") + ")\\s*)\\([^)]*\\)"
          ),
          lookbehind: !0,
          inside: {
            "label-key": {
              pattern: /\b[^,]+\b/,
              alias: "attr-name"
            },
            punctuation: /[(),]/
          }
        },
        "context-labels": {
          pattern: /\{[^{}]*\}/,
          inside: {
            "label-key": {
              pattern: /\b[a-z_]\w*(?=\s*(?:=|![=~]))/,
              alias: "attr-name"
            },
            "label-value": {
              pattern: /(["'`])(?:\\[\s\S]|(?!\1)[^\\])*\1/,
              greedy: !0,
              alias: "attr-value"
            },
            punctuation: /\{|\}|=~?|![=~]|,/
          }
        },
        "context-range": [
          {
            pattern: /\[[\w\s:]+\]/,
            // [1m]
            inside: {
              punctuation: /\[|\]|:/,
              "range-duration": {
                pattern: /\b(?:\d+(?:[smhdwy]|ms))+\b/i,
                alias: "number"
              }
            }
          },
          {
            pattern: /(\boffset\s+)\w+/,
            // offset 1m
            lookbehind: !0,
            inside: {
              "range-duration": {
                pattern: /\b(?:\d+(?:[smhdwy]|ms))+\b/i,
                alias: "number"
              }
            }
          }
        ],
        keyword: new RegExp("\\b(?:" + u.join("|") + ")\\b", "i"),
        function: /\b[a-z_]\w*(?=\s*\()/i,
        number: /[-+]?(?:(?:\b\d+(?:\.\d+)?|\B\.\d+)(?:e[-+]?\d+)?\b|\b(?:0x[0-9a-f]+|nan|inf)\b)/i,
        operator: /[\^*/%+-]|==|!=|<=|<|>=|>|\b(?:and|or|unless)\b/i,
        punctuation: /[{};()`,.[\]]/
      };
    })(t);
  }
  return zm;
}
var Gm, UC;
function fH() {
  if (UC) return Gm;
  UC = 1, Gm = e, e.displayName = "properties", e.aliases = [];
  function e(t) {
    t.languages.properties = {
      comment: /^[ \t]*[#!].*$/m,
      "attr-value": {
        pattern: /(^[ \t]*(?:\\(?:\r\n|[\s\S])|[^\\\s:=])+(?: *[=:] *(?! )| ))(?:\\(?:\r\n|[\s\S])|[^\\\r\n])+/m,
        lookbehind: !0
      },
      "attr-name": /^[ \t]*(?:\\(?:\r\n|[\s\S])|[^\\\s:=])+(?= *[=:]| )/m,
      punctuation: /[=:]/
    };
  }
  return Gm;
}
var qm, HC;
function hH() {
  if (HC) return qm;
  HC = 1, qm = e, e.displayName = "protobuf", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /\b(?:bool|bytes|double|s?fixed(?:32|64)|float|[su]?int(?:32|64)|string)\b/;
      n.languages.protobuf = n.languages.extend("clike", {
        "class-name": [
          {
            pattern: /(\b(?:enum|extend|message|service)\s+)[A-Za-z_]\w*(?=\s*\{)/,
            lookbehind: !0
          },
          {
            pattern: /(\b(?:rpc\s+\w+|returns)\s*\(\s*(?:stream\s+)?)\.?[A-Za-z_]\w*(?:\.[A-Za-z_]\w*)*(?=\s*\))/,
            lookbehind: !0
          }
        ],
        keyword: /\b(?:enum|extend|extensions|import|message|oneof|option|optional|package|public|repeated|required|reserved|returns|rpc(?=\s+\w)|service|stream|syntax|to)\b(?!\s*=\s*\d)/,
        function: /\b[a-z_]\w*(?=\s*\()/i
      }), n.languages.insertBefore("protobuf", "operator", {
        map: {
          pattern: /\bmap<\s*[\w.]+\s*,\s*[\w.]+\s*>(?=\s+[a-z_]\w*\s*[=;])/i,
          alias: "class-name",
          inside: {
            punctuation: /[<>.,]/,
            builtin: r
          }
        },
        builtin: r,
        "positional-class-name": {
          pattern: /(?:\b|\B\.)[a-z_]\w*(?:\.[a-z_]\w*)*(?=\s+[a-z_]\w*\s*[=;])/i,
          alias: "class-name",
          inside: {
            punctuation: /\./
          }
        },
        annotation: {
          pattern: /(\[\s*)[a-z_]\w*(?=\s*=)/i,
          lookbehind: !0
        }
      });
    })(t);
  }
  return qm;
}
var jm, $C;
function gH() {
  if ($C) return jm;
  $C = 1, jm = e, e.displayName = "psl", e.aliases = [];
  function e(t) {
    t.languages.psl = {
      comment: {
        pattern: /#.*/,
        greedy: !0
      },
      string: {
        pattern: /"(?:\\.|[^\\"])*"/,
        greedy: !0,
        inside: {
          symbol: /\\[ntrbA-Z"\\]/
        }
      },
      "heredoc-string": {
        pattern: /<<<([a-zA-Z_]\w*)[\r\n](?:.*[\r\n])*?\1\b/,
        alias: "string",
        greedy: !0
      },
      keyword: /\b(?:__multi|__single|case|default|do|else|elsif|exit|export|for|foreach|function|if|last|line|local|next|requires|return|switch|until|while|word)\b/,
      constant: /\b(?:ALARM|CHART_ADD_GRAPH|CHART_DELETE_GRAPH|CHART_DESTROY|CHART_LOAD|CHART_PRINT|EOF|OFFLINE|OK|PSL_PROF_LOG|R_CHECK_HORIZ|R_CHECK_VERT|R_CLICKER|R_COLUMN|R_FRAME|R_ICON|R_LABEL|R_LABEL_CENTER|R_LIST_MULTIPLE|R_LIST_MULTIPLE_ND|R_LIST_SINGLE|R_LIST_SINGLE_ND|R_MENU|R_POPUP|R_POPUP_SCROLLED|R_RADIO_HORIZ|R_RADIO_VERT|R_ROW|R_SCALE_HORIZ|R_SCALE_VERT|R_SEP_HORIZ|R_SEP_VERT|R_SPINNER|R_TEXT_FIELD|R_TEXT_FIELD_LABEL|R_TOGGLE|TRIM_LEADING|TRIM_LEADING_AND_TRAILING|TRIM_REDUNDANT|TRIM_TRAILING|VOID|WARN)\b/,
      boolean: /\b(?:FALSE|False|NO|No|TRUE|True|YES|Yes|false|no|true|yes)\b/,
      variable: /\b(?:PslDebug|errno|exit_status)\b/,
      builtin: {
        pattern: /\b(?:PslExecute|PslFunctionCall|PslFunctionExists|PslSetOptions|_snmp_debug|acos|add_diary|annotate|annotate_get|ascii_to_ebcdic|asctime|asin|atan|atexit|batch_set|blackout|cat|ceil|chan_exists|change_state|close|code_cvt|cond_signal|cond_wait|console_type|convert_base|convert_date|convert_locale_date|cos|cosh|create|date|dcget_text|destroy|destroy_lock|dget_text|difference|dump_hist|ebcdic_to_ascii|encrypt|event_archive|event_catalog_get|event_check|event_query|event_range_manage|event_range_query|event_report|event_schedule|event_trigger|event_trigger2|execute|exists|exp|fabs|file|floor|fmod|fopen|fseek|ftell|full_discovery|get|get_chan_info|get_ranges|get_text|get_vars|getenv|gethostinfo|getpid|getpname|grep|history|history_get_retention|in_transition|index|int|internal|intersection|is_var|isnumber|join|kill|length|lines|lock|lock_info|log|log10|loge|matchline|msg_check|msg_get_format|msg_get_severity|msg_printf|msg_sprintf|ntharg|nthargf|nthline|nthlinef|num_bytes|num_consoles|pconfig|popen|poplines|pow|print|printf|proc_exists|process|random|read|readln|refresh_parameters|remote_check|remote_close|remote_event_query|remote_event_trigger|remote_file_send|remote_open|remove|replace|rindex|sec_check_priv|sec_store_get|sec_store_set|set|set_alarm_ranges|set_locale|share|sin|sinh|sleep|snmp_agent_config|snmp_agent_start|snmp_agent_stop|snmp_close|snmp_config|snmp_get|snmp_get_next|snmp_h_get|snmp_h_get_next|snmp_h_set|snmp_open|snmp_set|snmp_trap_ignore|snmp_trap_listen|snmp_trap_raise_std_trap|snmp_trap_receive|snmp_trap_register_im|snmp_trap_send|snmp_walk|sopen|sort|splitline|sprintf|sqrt|srandom|str_repeat|strcasecmp|subset|substr|system|tail|tan|tanh|text_domain|time|tmpnam|tolower|toupper|trace_psl_process|trim|union|unique|unlock|unset|va_arg|va_start|write)\b/,
        alias: "builtin-function"
      },
      "foreach-variable": {
        pattern: /(\bforeach\s+(?:(?:\w+\b|"(?:\\.|[^\\"])*")\s+){0,2})[_a-zA-Z]\w*(?=\s*\()/,
        lookbehind: !0,
        greedy: !0
      },
      function: /\b[_a-z]\w*\b(?=\s*\()/i,
      number: /\b(?:0x[0-9a-f]+|\d+(?:\.\d+)?)\b/i,
      operator: /--|\+\+|&&=?|\|\|=?|<<=?|>>=?|[=!]~|[-+*/%&|^!=<>]=?|\.|[:?]/,
      punctuation: /[(){}\[\];,]/
    };
  }
  return jm;
}
var Vm, zC;
function mH() {
  if (zC) return Vm;
  zC = 1, Vm = e, e.displayName = "pug", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.pug = {
        // Multiline stuff should appear before the rest
        // This handles both single-line and multi-line comments
        comment: {
          pattern: /(^([\t ]*))\/\/.*(?:(?:\r?\n|\r)\2[\t ].+)*/m,
          lookbehind: !0
        },
        // All the tag-related part is in lookbehind
        // so that it can be highlighted by the "tag" pattern
        "multiline-script": {
          pattern: /(^([\t ]*)script\b.*\.[\t ]*)(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/m,
          lookbehind: !0,
          inside: n.languages.javascript
        },
        // See at the end of the file for known filters
        filter: {
          pattern: /(^([\t ]*)):.+(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/m,
          lookbehind: !0,
          inside: {
            "filter-name": {
              pattern: /^:[\w-]+/,
              alias: "variable"
            },
            text: /\S[\s\S]*/
          }
        },
        "multiline-plain-text": {
          pattern: /(^([\t ]*)[\w\-#.]+\.[\t ]*)(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/m,
          lookbehind: !0
        },
        markup: {
          pattern: /(^[\t ]*)<.+/m,
          lookbehind: !0,
          inside: n.languages.markup
        },
        doctype: {
          pattern: /((?:^|\n)[\t ]*)doctype(?: .+)?/,
          lookbehind: !0
        },
        // This handle all conditional and loop keywords
        "flow-control": {
          pattern: /(^[\t ]*)(?:case|default|each|else|if|unless|when|while)\b(?: .+)?/m,
          lookbehind: !0,
          inside: {
            each: {
              pattern: /^each .+? in\b/,
              inside: {
                keyword: /\b(?:each|in)\b/,
                punctuation: /,/
              }
            },
            branch: {
              pattern: /^(?:case|default|else|if|unless|when|while)\b/,
              alias: "keyword"
            },
            rest: n.languages.javascript
          }
        },
        keyword: {
          pattern: /(^[\t ]*)(?:append|block|extends|include|prepend)\b.+/m,
          lookbehind: !0
        },
        mixin: [
          // Declaration
          {
            pattern: /(^[\t ]*)mixin .+/m,
            lookbehind: !0,
            inside: {
              keyword: /^mixin/,
              function: /\w+(?=\s*\(|\s*$)/,
              punctuation: /[(),.]/
            }
          },
          // Usage
          {
            pattern: /(^[\t ]*)\+.+/m,
            lookbehind: !0,
            inside: {
              name: {
                pattern: /^\+\w+/,
                alias: "function"
              },
              rest: n.languages.javascript
            }
          }
        ],
        script: {
          pattern: /(^[\t ]*script(?:(?:&[^(]+)?\([^)]+\))*[\t ]).+/m,
          lookbehind: !0,
          inside: n.languages.javascript
        },
        "plain-text": {
          pattern: /(^[\t ]*(?!-)[\w\-#.]*[\w\-](?:(?:&[^(]+)?\([^)]+\))*\/?[\t ]).+/m,
          lookbehind: !0
        },
        tag: {
          pattern: /(^[\t ]*)(?!-)[\w\-#.]*[\w\-](?:(?:&[^(]+)?\([^)]+\))*\/?:?/m,
          lookbehind: !0,
          inside: {
            attributes: [
              {
                pattern: /&[^(]+\([^)]+\)/,
                inside: n.languages.javascript
              },
              {
                pattern: /\([^)]+\)/,
                inside: {
                  "attr-value": {
                    pattern: /(=\s*(?!\s))(?:\{[^}]*\}|[^,)\r\n]+)/,
                    lookbehind: !0,
                    inside: n.languages.javascript
                  },
                  "attr-name": /[\w-]+(?=\s*!?=|\s*[,)])/,
                  punctuation: /[!=(),]+/
                }
              }
            ],
            punctuation: /:/,
            "attr-id": /#[\w\-]+/,
            "attr-class": /\.[\w\-]+/
          }
        },
        code: [
          {
            pattern: /(^[\t ]*(?:-|!?=)).+/m,
            lookbehind: !0,
            inside: n.languages.javascript
          }
        ],
        punctuation: /[.\-!=|]+/
      };
      for (var r = /(^([\t ]*)):<filter_name>(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/.source, o = [
        {
          filter: "atpl",
          language: "twig"
        },
        {
          filter: "coffee",
          language: "coffeescript"
        },
        "ejs",
        "handlebars",
        "less",
        "livescript",
        "markdown",
        {
          filter: "sass",
          language: "scss"
        },
        "stylus"
      ], s = {}, u = 0, c = o.length; u < c; u++) {
        var p = o[u];
        p = typeof p == "string" ? {
          filter: p,
          language: p
        } : p, n.languages[p.language] && (s["filter-" + p.filter] = {
          pattern: RegExp(
            r.replace("<filter_name>", function() {
              return p.filter;
            }),
            "m"
          ),
          lookbehind: !0,
          inside: {
            "filter-name": {
              pattern: /^:[\w-]+/,
              alias: "variable"
            },
            text: {
              pattern: /\S[\s\S]*/,
              alias: [p.language, "language-" + p.language],
              inside: n.languages[p.language]
            }
          }
        });
      }
      n.languages.insertBefore("pug", "filter", s);
    })(t);
  }
  return Vm;
}
var Wm, GC;
function bH() {
  if (GC) return Wm;
  GC = 1, Wm = e, e.displayName = "puppet", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.puppet = {
        heredoc: [
          // Matches the content of a quoted heredoc string (subject to interpolation)
          {
            pattern: /(@\("([^"\r\n\/):]+)"(?:\/[nrts$uL]*)?\).*(?:\r?\n|\r))(?:.*(?:\r?\n|\r(?!\n)))*?[ \t]*(?:\|[ \t]*)?(?:-[ \t]*)?\2/,
            lookbehind: !0,
            alias: "string",
            inside: {
              // Matches the end tag
              punctuation: /(?=\S).*\S(?= *$)/
              // See interpolation below
            }
          },
          // Matches the content of an unquoted heredoc string (no interpolation)
          {
            pattern: /(@\(([^"\r\n\/):]+)(?:\/[nrts$uL]*)?\).*(?:\r?\n|\r))(?:.*(?:\r?\n|\r(?!\n)))*?[ \t]*(?:\|[ \t]*)?(?:-[ \t]*)?\2/,
            lookbehind: !0,
            greedy: !0,
            alias: "string",
            inside: {
              // Matches the end tag
              punctuation: /(?=\S).*\S(?= *$)/
            }
          },
          // Matches the start tag of heredoc strings
          {
            pattern: /@\("?(?:[^"\r\n\/):]+)"?(?:\/[nrts$uL]*)?\)/,
            alias: "string",
            inside: {
              punctuation: {
                pattern: /(\().+?(?=\))/,
                lookbehind: !0
              }
            }
          }
        ],
        "multiline-comment": {
          pattern: /(^|[^\\])\/\*[\s\S]*?\*\//,
          lookbehind: !0,
          greedy: !0,
          alias: "comment"
        },
        regex: {
          // Must be prefixed with the keyword "node" or a non-word char
          pattern: /((?:\bnode\s+|[~=\(\[\{,]\s*|[=+]>\s*|^\s*))\/(?:[^\/\\]|\\[\s\S])+\/(?:[imx]+\b|\B)/,
          lookbehind: !0,
          greedy: !0,
          inside: {
            // Extended regexes must have the x flag. They can contain single-line comments.
            "extended-regex": {
              pattern: /^\/(?:[^\/\\]|\\[\s\S])+\/[im]*x[im]*$/,
              inside: {
                comment: /#.*/
              }
            }
          }
        },
        comment: {
          pattern: /(^|[^\\])#.*/,
          lookbehind: !0,
          greedy: !0
        },
        string: {
          // Allow for one nested level of double quotes inside interpolation
          pattern: /(["'])(?:\$\{(?:[^'"}]|(["'])(?:(?!\2)[^\\]|\\[\s\S])*\2)+\}|\$(?!\{)|(?!\1)[^\\$]|\\[\s\S])*\1/,
          greedy: !0,
          inside: {
            "double-quoted": {
              pattern: /^"[\s\S]*"$/,
              inside: {
                // See interpolation below
              }
            }
          }
        },
        variable: {
          pattern: /\$(?:::)?\w+(?:::\w+)*/,
          inside: {
            punctuation: /::/
          }
        },
        "attr-name": /(?:\b\w+|\*)(?=\s*=>)/,
        function: [
          {
            pattern: /(\.)(?!\d)\w+/,
            lookbehind: !0
          },
          /\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\b|\b(?!\d)\w+(?=\()/
        ],
        number: /\b(?:0x[a-f\d]+|\d+(?:\.\d+)?(?:e-?\d+)?)\b/i,
        boolean: /\b(?:false|true)\b/,
        // Includes words reserved for future use
        keyword: /\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\b/,
        datatype: {
          pattern: /\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\b/,
          alias: "symbol"
        },
        operator: /=[=~>]?|![=~]?|<(?:<\|?|[=~|-])?|>[>=]?|->?|~>|\|>?>?|[*\/%+?]|\b(?:and|in|or)\b/,
        punctuation: /[\[\]{}().,;]|:+/
      };
      var r = [
        {
          // Allow for one nested level of braces inside interpolation
          pattern: /(^|[^\\])\$\{(?:[^'"{}]|\{[^}]*\}|(["'])(?:(?!\2)[^\\]|\\[\s\S])*\2)+\}/,
          lookbehind: !0,
          inside: {
            "short-variable": {
              // Negative look-ahead prevent wrong highlighting of functions
              pattern: /(^\$\{)(?!\w+\()(?:::)?\w+(?:::\w+)*/,
              lookbehind: !0,
              alias: "variable",
              inside: {
                punctuation: /::/
              }
            },
            delimiter: {
              pattern: /^\$/,
              alias: "variable"
            },
            rest: n.languages.puppet
          }
        },
        {
          pattern: /(^|[^\\])\$(?:::)?\w+(?:::\w+)*/,
          lookbehind: !0,
          alias: "variable",
          inside: {
            punctuation: /::/
          }
        }
      ];
      n.languages.puppet.heredoc[0].inside.interpolation = r, n.languages.puppet.string.inside["double-quoted"].inside.interpolation = r;
    })(t);
  }
  return Wm;
}
var Ym, qC;
function EH() {
  if (qC) return Ym;
  qC = 1, Ym = e, e.displayName = "pure", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.pure = {
        comment: [
          {
            pattern: /(^|[^\\])\/\*[\s\S]*?\*\//,
            lookbehind: !0
          },
          {
            pattern: /(^|[^\\:])\/\/.*/,
            lookbehind: !0
          },
          /#!.+/
        ],
        "inline-lang": {
          pattern: /%<[\s\S]+?%>/,
          greedy: !0,
          inside: {
            lang: {
              pattern: /(^%< *)-\*-.+?-\*-/,
              lookbehind: !0,
              alias: "comment"
            },
            delimiter: {
              pattern: /^%<.*|%>$/,
              alias: "punctuation"
            }
          }
        },
        string: {
          pattern: /"(?:\\.|[^"\\\r\n])*"/,
          greedy: !0
        },
        number: {
          // The look-behind prevents wrong highlighting of the .. operator
          pattern: /((?:\.\.)?)(?:\b(?:inf|nan)\b|\b0x[\da-f]+|(?:\b(?:0b)?\d+(?:\.\d+)?|\B\.\d+)(?:e[+-]?\d+)?L?)/i,
          lookbehind: !0
        },
        keyword: /\b(?:NULL|ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\b/,
        function: /\b(?:abs|add_(?:addr|constdef|(?:fundef|interface|macdef|typedef)(?:_at)?|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_c?string(?:_pointer)?|byte_(?:matrix|pointer)|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|sentry|short|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\b/,
        special: {
          pattern: /\b__[a-z]+__\b/i,
          alias: "builtin"
        },
        // Any combination of operator chars can be an operator
        // eslint-disable-next-line no-misleading-character-class
        operator: /(?:[!"#$%&'*+,\-.\/:<=>?@\\^`|~\u00a1-\u00bf\u00d7-\u00f7\u20d0-\u2bff]|\b_+\b)+|\b(?:and|div|mod|not|or)\b/,
        // FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?
        punctuation: /[(){}\[\];,|]/
      };
      var r = [
        "c",
        {
          lang: "c++",
          alias: "cpp"
        },
        "fortran"
      ], o = /%< *-\*- *<lang>\d* *-\*-[\s\S]+?%>/.source;
      r.forEach(function(s) {
        var u = s;
        if (typeof s != "string" && (u = s.alias, s = s.lang), n.languages[u]) {
          var c = {};
          c["inline-lang-" + u] = {
            pattern: RegExp(
              o.replace(
                "<lang>",
                s.replace(/([.+*?\/\\(){}\[\]])/g, "\\$1")
              ),
              "i"
            ),
            inside: n.util.clone(n.languages.pure["inline-lang"].inside)
          }, c["inline-lang-" + u].inside.rest = n.util.clone(
            n.languages[u]
          ), n.languages.insertBefore("pure", "inline-lang", c);
        }
      }), n.languages.c && (n.languages.pure["inline-lang"].inside.rest = n.util.clone(
        n.languages.c
      ));
    })(t);
  }
  return Ym;
}
var Km, jC;
function yH() {
  if (jC) return Km;
  jC = 1, Km = e, e.displayName = "purebasic", e.aliases = [];
  function e(t) {
    t.languages.purebasic = t.languages.extend("clike", {
      comment: /;.*/,
      keyword: /\b(?:align|and|as|break|calldebugger|case|compilercase|compilerdefault|compilerelse|compilerelseif|compilerendif|compilerendselect|compilererror|compilerif|compilerselect|continue|data|datasection|debug|debuglevel|declare|declarec|declarecdll|declaredll|declaremodule|default|define|dim|disableasm|disabledebugger|disableexplicit|else|elseif|enableasm|enabledebugger|enableexplicit|end|enddatasection|enddeclaremodule|endenumeration|endif|endimport|endinterface|endmacro|endmodule|endprocedure|endselect|endstructure|endstructureunion|endwith|enumeration|extends|fakereturn|for|foreach|forever|global|gosub|goto|if|import|importc|includebinary|includefile|includepath|interface|macro|module|newlist|newmap|next|not|or|procedure|procedurec|procedurecdll|proceduredll|procedurereturn|protected|prototype|prototypec|read|redim|repeat|restore|return|runtime|select|shared|static|step|structure|structureunion|swap|threaded|to|until|wend|while|with|xincludefile|xor)\b/i,
      function: /\b\w+(?:\.\w+)?\s*(?=\()/,
      number: /(?:\$[\da-f]+|\b-?(?:\d+(?:\.\d+)?|\.\d+)(?:e[+-]?\d+)?)\b/i,
      operator: /(?:@\*?|\?|\*)\w+|-[>-]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|?\||[~^%?*/@]/
    }), t.languages.insertBefore("purebasic", "keyword", {
      tag: /#\w+\$?/,
      asm: {
        pattern: /(^[\t ]*)!.*/m,
        lookbehind: !0,
        alias: "tag",
        inside: {
          comment: /;.*/,
          string: {
            pattern: /(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,
            greedy: !0
          },
          // Anonymous label references, i.e.: jmp @b
          "label-reference-anonymous": {
            pattern: /(!\s*j[a-z]+\s+)@[fb]/i,
            lookbehind: !0,
            alias: "fasm-label"
          },
          // Named label reference, i.e.: jne label1
          "label-reference-addressed": {
            pattern: /(!\s*j[a-z]+\s+)[A-Z._?$@][\w.?$@~#]*/i,
            lookbehind: !0,
            alias: "fasm-label"
          },
          keyword: [
            /\b(?:extern|global)\b[^;\r\n]*/i,
            /\b(?:CPU|DEFAULT|FLOAT)\b.*/
          ],
          function: {
            pattern: /^([\t ]*!\s*)[\da-z]+(?=\s|$)/im,
            lookbehind: !0
          },
          "function-inline": {
            pattern: /(:\s*)[\da-z]+(?=\s)/i,
            lookbehind: !0,
            alias: "function"
          },
          label: {
            pattern: /^([\t ]*!\s*)[A-Za-z._?$@][\w.?$@~#]*(?=:)/m,
            lookbehind: !0,
            alias: "fasm-label"
          },
          register: /\b(?:st\d|[xyz]mm\d\d?|[cdt]r\d|r\d\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s|mm\d+)\b/i,
          number: /(?:\b|-|(?=\$))(?:0[hx](?:[\da-f]*\.)?[\da-f]+(?:p[+-]?\d+)?|\d[\da-f]+[hx]|\$\d[\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\d+|(?:\d+(?:\.\d+)?|\.\d+)(?:\.?e[+-]?\d+)?[dt]?)\b/i,
          operator: /[\[\]*+\-/%<>=&|$!,.:]/
        }
      }
    }), delete t.languages.purebasic["class-name"], delete t.languages.purebasic.boolean, t.languages.pbfasm = t.languages.purebasic;
  }
  return Km;
}
var Xm, VC;
function TH() {
  if (VC) return Xm;
  VC = 1;
  var e = KE();
  Xm = t, t.displayName = "purescript", t.aliases = ["purs"];
  function t(n) {
    n.register(e), n.languages.purescript = n.languages.extend("haskell", {
      keyword: /\b(?:ado|case|class|data|derive|do|else|forall|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\b|∀/,
      "import-statement": {
        // The imported or hidden names are not included in this import
        // statement. This is because we want to highlight those exactly like
        // we do for the names in the program.
        pattern: /(^[\t ]*)import\s+[A-Z][\w']*(?:\.[A-Z][\w']*)*(?:\s+as\s+[A-Z][\w']*(?:\.[A-Z][\w']*)*)?(?:\s+hiding\b)?/m,
        lookbehind: !0,
        inside: {
          keyword: /\b(?:as|hiding|import)\b/,
          punctuation: /\./
        }
      },
      // These are builtin functions only. Constructors are highlighted later as a constant.
      builtin: /\b(?:absurd|add|ap|append|apply|between|bind|bottom|clamp|compare|comparing|compose|conj|const|degree|discard|disj|div|eq|flap|flip|gcd|identity|ifM|join|lcm|liftA1|liftM1|map|max|mempty|min|mod|mul|negate|not|notEq|one|otherwise|recip|show|sub|top|unit|unless|unlessM|void|when|whenM|zero)\b/,
      operator: [
        // Infix operators
        n.languages.haskell.operator[0],
        // ASCII operators
        n.languages.haskell.operator[2],
        // All UTF16 Unicode operator symbols
        // This regex is equivalent to /(?=[\x80-\uFFFF])[\p{gc=Math_Symbol}\p{gc=Currency_Symbol}\p{Modifier_Symbol}\p{Other_Symbol}]/u
        // See https://github.com/PrismJS/prism/issues/3006 for more details.
        /[\xa2-\xa6\xa8\xa9\xac\xae-\xb1\xb4\xb8\xd7\xf7\u02c2-\u02c5\u02d2-\u02df\u02e5-\u02eb\u02ed\u02ef-\u02ff\u0375\u0384\u0385\u03f6\u0482\u058d-\u058f\u0606-\u0608\u060b\u060e\u060f\u06de\u06e9\u06fd\u06fe\u07f6\u07fe\u07ff\u09f2\u09f3\u09fa\u09fb\u0af1\u0b70\u0bf3-\u0bfa\u0c7f\u0d4f\u0d79\u0e3f\u0f01-\u0f03\u0f13\u0f15-\u0f17\u0f1a-\u0f1f\u0f34\u0f36\u0f38\u0fbe-\u0fc5\u0fc7-\u0fcc\u0fce\u0fcf\u0fd5-\u0fd8\u109e\u109f\u1390-\u1399\u166d\u17db\u1940\u19de-\u19ff\u1b61-\u1b6a\u1b74-\u1b7c\u1fbd\u1fbf-\u1fc1\u1fcd-\u1fcf\u1fdd-\u1fdf\u1fed-\u1fef\u1ffd\u1ffe\u2044\u2052\u207a-\u207c\u208a-\u208c\u20a0-\u20bf\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211e-\u2123\u2125\u2127\u2129\u212e\u213a\u213b\u2140-\u2144\u214a-\u214d\u214f\u218a\u218b\u2190-\u2307\u230c-\u2328\u232b-\u2426\u2440-\u244a\u249c-\u24e9\u2500-\u2767\u2794-\u27c4\u27c7-\u27e5\u27f0-\u2982\u2999-\u29d7\u29dc-\u29fb\u29fe-\u2b73\u2b76-\u2b95\u2b97-\u2bff\u2ce5-\u2cea\u2e50\u2e51\u2e80-\u2e99\u2e9b-\u2ef3\u2f00-\u2fd5\u2ff0-\u2ffb\u3004\u3012\u3013\u3020\u3036\u3037\u303e\u303f\u309b\u309c\u3190\u3191\u3196-\u319f\u31c0-\u31e3\u3200-\u321e\u322a-\u3247\u3250\u3260-\u327f\u328a-\u32b0\u32c0-\u33ff\u4dc0-\u4dff\ua490-\ua4c6\ua700-\ua716\ua720\ua721\ua789\ua78a\ua828-\ua82b\ua836-\ua839\uaa77-\uaa79\uab5b\uab6a\uab6b\ufb29\ufbb2-\ufbc1\ufdfc\ufdfd\ufe62\ufe64-\ufe66\ufe69\uff04\uff0b\uff1c-\uff1e\uff3e\uff40\uff5c\uff5e\uffe0-\uffe6\uffe8-\uffee\ufffc\ufffd]/
      ]
    }), n.languages.purs = n.languages.purescript;
  }
  return Xm;
}
var Qm, WC;
function SH() {
  if (WC) return Qm;
  WC = 1, Qm = e, e.displayName = "python", e.aliases = ["py"];
  function e(t) {
    t.languages.python = {
      comment: {
        pattern: /(^|[^\\])#.*/,
        lookbehind: !0,
        greedy: !0
      },
      "string-interpolation": {
        pattern: /(?:f|fr|rf)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,
        greedy: !0,
        inside: {
          interpolation: {
            // "{" <expression> <optional "!s", "!r", or "!a"> <optional ":" format specifier> "}"
            pattern: /((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/,
            lookbehind: !0,
            inside: {
              "format-spec": {
                pattern: /(:)[^:(){}]+(?=\}$)/,
                lookbehind: !0
              },
              "conversion-option": {
                pattern: /![sra](?=[:}]$)/,
                alias: "punctuation"
              },
              rest: null
            }
          },
          string: /[\s\S]+/
        }
      },
      "triple-quoted-string": {
        pattern: /(?:[rub]|br|rb)?("""|''')[\s\S]*?\1/i,
        greedy: !0,
        alias: "string"
      },
      string: {
        pattern: /(?:[rub]|br|rb)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,
        greedy: !0
      },
      function: {
        pattern: /((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,
        lookbehind: !0
      },
      "class-name": {
        pattern: /(\bclass\s+)\w+/i,
        lookbehind: !0
      },
      decorator: {
        pattern: /(^[\t ]*)@\w+(?:\.\w+)*/m,
        lookbehind: !0,
        alias: ["annotation", "punctuation"],
        inside: {
          punctuation: /\./
        }
      },
      keyword: /\b(?:_(?=\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,
      builtin: /\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,
      boolean: /\b(?:False|None|True)\b/,
      number: /\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\b|(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:e[+-]?\d+(?:_\d+)*)?j?(?!\w)/i,
      operator: /[-+%=]=?|!=|:=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
      punctuation: /[{}[\];(),.:]/
    }, t.languages.python["string-interpolation"].inside.interpolation.inside.rest = t.languages.python, t.languages.py = t.languages.python;
  }
  return Qm;
}
var Zm, YC;
function _H() {
  if (YC) return Zm;
  YC = 1, Zm = e, e.displayName = "q", e.aliases = [];
  function e(t) {
    t.languages.q = {
      string: /"(?:\\.|[^"\\\r\n])*"/,
      comment: [
        // From http://code.kx.com/wiki/Reference/Slash:
        // When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.
        {
          pattern: /([\t )\]}])\/.*/,
          lookbehind: !0,
          greedy: !0
        },
        // From http://code.kx.com/wiki/Reference/Slash:
        // A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.
        // A / on a line by itself begins a multiline comment which is terminated by the next \ on a line by itself.
        // If a / is not matched by a \, the multiline comment is unterminated and continues to end of file.
        // The / and \ must be the first char on the line, but may be followed by any amount of whitespace.
        {
          pattern: /(^|\r?\n|\r)\/[\t ]*(?:(?:\r?\n|\r)(?:.*(?:\r?\n|\r(?!\n)))*?(?:\\(?=[\t ]*(?:\r?\n|\r))|$)|\S.*)/,
          lookbehind: !0,
          greedy: !0
        },
        // From http://code.kx.com/wiki/Reference/Slash:
        // A \ on a line by itself with no preceding matching / will comment to end of file.
        {
          pattern: /^\\[\t ]*(?:\r?\n|\r)[\s\S]+/m,
          greedy: !0
        },
        {
          pattern: /^#!.+/m,
          greedy: !0
        }
      ],
      symbol: /`(?::\S+|[\w.]*)/,
      datetime: {
        pattern: /0N[mdzuvt]|0W[dtz]|\d{4}\.\d\d(?:m|\.\d\d(?:T(?:\d\d(?::\d\d(?::\d\d(?:[.:]\d\d\d)?)?)?)?)?[dz]?)|\d\d:\d\d(?::\d\d(?:[.:]\d\d\d)?)?[uvt]?/,
        alias: "number"
      },
      // The negative look-ahead prevents bad highlighting
      // of verbs 0: and 1:
      number: /\b(?![01]:)(?:0N[hje]?|0W[hj]?|0[wn]|0x[\da-fA-F]+|\d+(?:\.\d*)?(?:e[+-]?\d+)?[hjfeb]?)/,
      keyword: /\\\w+\b|\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\b/,
      adverb: {
        pattern: /['\/\\]:?|\beach\b/,
        alias: "function"
      },
      verb: {
        pattern: /(?:\B\.\B|\b[01]:|<[=>]?|>=?|[:+\-*%,!?~=|$&#@^]):?|\b_\b:?/,
        alias: "operator"
      },
      punctuation: /[(){}\[\];.]/
    };
  }
  return Zm;
}
var Jm, KC;
function vH() {
  if (KC) return Jm;
  KC = 1, Jm = e, e.displayName = "qml", e.aliases = [];
  function e(t) {
    (function(n) {
      for (var r = /"(?:\\.|[^\\"\r\n])*"|'(?:\\.|[^\\'\r\n])*'/.source, o = /\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))*\*\//.source, s = /(?:[^\\()[\]{}"'/]|<string>|\/(?![*/])|<comment>|\(<expr>*\)|\[<expr>*\]|\{<expr>*\}|\\[\s\S])/.source.replace(/<string>/g, function() {
        return r;
      }).replace(/<comment>/g, function() {
        return o;
      }), u = 0; u < 2; u++)
        s = s.replace(/<expr>/g, function() {
          return s;
        });
      s = s.replace(/<expr>/g, "[^\\s\\S]"), n.languages.qml = {
        comment: {
          pattern: /\/\/.*|\/\*[\s\S]*?\*\//,
          greedy: !0
        },
        "javascript-function": {
          pattern: RegExp(
            /((?:^|;)[ \t]*)function\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*\(<js>*\)\s*\{<js>*\}/.source.replace(
              /<js>/g,
              function() {
                return s;
              }
            ),
            "m"
          ),
          lookbehind: !0,
          greedy: !0,
          alias: "language-javascript",
          inside: n.languages.javascript
        },
        "class-name": {
          pattern: /((?:^|[:;])[ \t]*)(?!\d)\w+(?=[ \t]*\{|[ \t]+on\b)/m,
          lookbehind: !0
        },
        property: [
          {
            pattern: /((?:^|[;{])[ \t]*)(?!\d)\w+(?:\.\w+)*(?=[ \t]*:)/m,
            lookbehind: !0
          },
          {
            pattern: /((?:^|[;{])[ \t]*)property[ \t]+(?!\d)\w+(?:\.\w+)*[ \t]+(?!\d)\w+(?:\.\w+)*(?=[ \t]*:)/m,
            lookbehind: !0,
            inside: {
              keyword: /^property/,
              property: /\w+(?:\.\w+)*/
            }
          }
        ],
        "javascript-expression": {
          pattern: RegExp(
            /(:[ \t]*)(?![\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(
              /<js>/g,
              function() {
                return s;
              }
            ),
            "m"
          ),
          lookbehind: !0,
          greedy: !0,
          alias: "language-javascript",
          inside: n.languages.javascript
        },
        string: {
          pattern: /"(?:\\.|[^\\"\r\n])*"/,
          greedy: !0
        },
        keyword: /\b(?:as|import|on)\b/,
        punctuation: /[{}[\]:;,]/
      };
    })(t);
  }
  return Jm;
}
var e0, XC;
function AH() {
  if (XC) return e0;
  XC = 1, e0 = e, e.displayName = "qore", e.aliases = [];
  function e(t) {
    t.languages.qore = t.languages.extend("clike", {
      comment: {
        pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:\/\/|#).*)/,
        lookbehind: !0
      },
      // Overridden to allow unescaped multi-line strings
      string: {
        pattern: /("|')(?:\\[\s\S]|(?!\1)[^\\])*\1/,
        greedy: !0
      },
      keyword: /\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:bool|date|float|int|list|number|string)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\b/,
      boolean: /\b(?:false|true)\b/i,
      function: /\$?\b(?!\d)\w+(?=\()/,
      number: /\b(?:0b[01]+|0x(?:[\da-f]*\.)?[\da-fp\-]+|(?:\d+(?:\.\d+)?|\.\d+)(?:e\d+)?[df]|(?:\d+(?:\.\d+)?|\.\d+))\b/i,
      operator: {
        pattern: /(^|[^.])(?:\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\|[|=]?|[*\/%^]=?|[~?])/,
        lookbehind: !0
      },
      variable: /\$(?!\d)\w+\b/
    });
  }
  return e0;
}
var t0, QC;
function kH() {
  if (QC) return t0;
  QC = 1, t0 = e, e.displayName = "qsharp", e.aliases = ["qs"];
  function e(t) {
    (function(n) {
      function r(_, A) {
        return _.replace(/<<(\d+)>>/g, function(R, C) {
          return "(?:" + A[+C] + ")";
        });
      }
      function o(_, A, R) {
        return RegExp(r(_, A), "");
      }
      function s(_, A) {
        for (var R = 0; R < A; R++)
          _ = _.replace(/<<self>>/g, function() {
            return "(?:" + _ + ")";
          });
        return _.replace(/<<self>>/g, "[^\\s\\S]");
      }
      var u = {
        // keywords which represent a return or variable type
        type: "Adj BigInt Bool Ctl Double false Int One Pauli PauliI PauliX PauliY PauliZ Qubit Range Result String true Unit Zero",
        // all other keywords
        other: "Adjoint adjoint apply as auto body borrow borrowing Controlled controlled distribute elif else fail fixup for function if in internal intrinsic invert is let mutable namespace new newtype open operation repeat return self set until use using while within"
      };
      function c(_) {
        return "\\b(?:" + _.trim().replace(/ /g, "|") + ")\\b";
      }
      var p = RegExp(
        c(u.type + " " + u.other)
      ), f = /\b[A-Za-z_]\w*\b/.source, b = r(/<<0>>(?:\s*\.\s*<<0>>)*/.source, [f]), g = {
        keyword: p,
        punctuation: /[<>()?,.:[\]]/
      }, T = /"(?:\\.|[^\\"])*"/.source;
      n.languages.qsharp = n.languages.extend("clike", {
        comment: /\/\/.*/,
        string: [
          {
            pattern: o(/(^|[^$\\])<<0>>/.source, [T]),
            lookbehind: !0,
            greedy: !0
          }
        ],
        "class-name": [
          {
            // open Microsoft.Quantum.Canon;
            // open Microsoft.Quantum.Canon as CN;
            pattern: o(/(\b(?:as|open)\s+)<<0>>(?=\s*(?:;|as\b))/.source, [
              b
            ]),
            lookbehind: !0,
            inside: g
          },
          {
            // namespace Quantum.App1;
            pattern: o(/(\bnamespace\s+)<<0>>(?=\s*\{)/.source, [b]),
            lookbehind: !0,
            inside: g
          }
        ],
        keyword: p,
        number: /(?:\b0(?:x[\da-f]+|b[01]+|o[0-7]+)|(?:\B\.\d+|\b\d+(?:\.\d*)?)(?:e[-+]?\d+)?)l?\b/i,
        operator: /\band=|\bor=|\band\b|\bnot\b|\bor\b|<[-=]|[-=]>|>>>=?|<<<=?|\^\^\^=?|\|\|\|=?|&&&=?|w\/=?|~~~|[*\/+\-^=!%]=?/,
        punctuation: /::|[{}[\];(),.:]/
      }), n.languages.insertBefore("qsharp", "number", {
        range: {
          pattern: /\.\./,
          alias: "operator"
        }
      });
      var y = s(
        r(/\{(?:[^"{}]|<<0>>|<<self>>)*\}/.source, [T]),
        2
      );
      n.languages.insertBefore("qsharp", "string", {
        "interpolation-string": {
          pattern: o(/\$"(?:\\.|<<0>>|[^\\"{])*"/.source, [y]),
          greedy: !0,
          inside: {
            interpolation: {
              pattern: o(/((?:^|[^\\])(?:\\\\)*)<<0>>/.source, [
                y
              ]),
              lookbehind: !0,
              inside: {
                punctuation: /^\{|\}$/,
                expression: {
                  pattern: /[\s\S]+/,
                  alias: "language-qsharp",
                  inside: n.languages.qsharp
                }
              }
            },
            string: /[\s\S]+/
          }
        }
      });
    })(t), t.languages.qs = t.languages.qsharp;
  }
  return t0;
}
var n0, ZC;
function CH() {
  if (ZC) return n0;
  ZC = 1, n0 = e, e.displayName = "r", e.aliases = [];
  function e(t) {
    t.languages.r = {
      comment: /#.*/,
      string: {
        pattern: /(['"])(?:\\.|(?!\1)[^\\\r\n])*\1/,
        greedy: !0
      },
      "percent-operator": {
        // Includes user-defined operators
        // and %%, %*%, %/%, %in%, %o%, %x%
        pattern: /%[^%\s]*%/,
        alias: "operator"
      },
      boolean: /\b(?:FALSE|TRUE)\b/,
      ellipsis: /\.\.(?:\.|\d+)/,
      number: [
        /\b(?:Inf|NaN)\b/,
        /(?:\b0x[\dA-Fa-f]+(?:\.\d*)?|\b\d+(?:\.\d*)?|\B\.\d+)(?:[EePp][+-]?\d+)?[iL]?/
      ],
      keyword: /\b(?:NA|NA_character_|NA_complex_|NA_integer_|NA_real_|NULL|break|else|for|function|if|in|next|repeat|while)\b/,
      operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\|\|?|[+*\/^$@~]/,
      punctuation: /[(){}\[\],;]/
    };
  }
  return n0;
}
var r0, JC;
function wH() {
  if (JC) return r0;
  JC = 1;
  var e = JE();
  r0 = t, t.displayName = "racket", t.aliases = ["rkt"];
  function t(n) {
    n.register(e), n.languages.racket = n.languages.extend("scheme", {
      "lambda-parameter": {
        // the racket lambda syntax is a lot more complex, so we won't even attempt to capture it.
        // this will just prevent false positives of the `function` pattern
        pattern: /([(\[]lambda\s+[(\[])[^()\[\]'\s]+/,
        lookbehind: !0
      }
    }), n.languages.insertBefore("racket", "string", {
      lang: {
        pattern: /^#lang.+/m,
        greedy: !0,
        alias: "keyword"
      }
    }), n.languages.rkt = n.languages.racket;
  }
  return r0;
}
var a0, ew;
function IH() {
  if (ew) return a0;
  ew = 1, a0 = e, e.displayName = "reason", e.aliases = [];
  function e(t) {
    t.languages.reason = t.languages.extend("clike", {
      string: {
        pattern: /"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,
        greedy: !0
      },
      // 'class-name' must be matched *after* 'constructor' defined below
      "class-name": /\b[A-Z]\w*/,
      keyword: /\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\b/,
      operator: /\.{3}|:[:=]|\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\-*\/]\.?|\b(?:asr|land|lor|lsl|lsr|lxor|mod)\b/
    }), t.languages.insertBefore("reason", "class-name", {
      char: {
        pattern: /'(?:\\x[\da-f]{2}|\\o[0-3][0-7][0-7]|\\\d{3}|\\.|[^'\\\r\n])'/,
        greedy: !0
      },
      // Negative look-ahead prevents from matching things like String.capitalize
      constructor: /\b[A-Z]\w*\b(?!\s*\.)/,
      label: {
        pattern: /\b[a-z]\w*(?=::)/,
        alias: "symbol"
      }
    }), delete t.languages.reason.function;
  }
  return a0;
}
var i0, tw;
function RH() {
  if (tw) return i0;
  tw = 1, i0 = e, e.displayName = "regex", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = {
        pattern: /\\[\\(){}[\]^$+*?|.]/,
        alias: "escape"
      }, o = /\\(?:x[\da-fA-F]{2}|u[\da-fA-F]{4}|u\{[\da-fA-F]+\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/, s = {
        pattern: /\.|\\[wsd]|\\p\{[^{}]+\}/i,
        alias: "class-name"
      }, u = {
        pattern: /\\[wsd]|\\p\{[^{}]+\}/i,
        alias: "class-name"
      }, c = "(?:[^\\\\-]|" + o.source + ")", p = RegExp(c + "-" + c), f = {
        pattern: /(<|')[^<>']+(?=[>']$)/,
        lookbehind: !0,
        alias: "variable"
      };
      n.languages.regex = {
        "char-class": {
          pattern: /((?:^|[^\\])(?:\\\\)*)\[(?:[^\\\]]|\\[\s\S])*\]/,
          lookbehind: !0,
          inside: {
            "char-class-negation": {
              pattern: /(^\[)\^/,
              lookbehind: !0,
              alias: "operator"
            },
            "char-class-punctuation": {
              pattern: /^\[|\]$/,
              alias: "punctuation"
            },
            range: {
              pattern: p,
              inside: {
                escape: o,
                "range-punctuation": {
                  pattern: /-/,
                  alias: "operator"
                }
              }
            },
            "special-escape": r,
            "char-set": u,
            escape: o
          }
        },
        "special-escape": r,
        "char-set": s,
        backreference: [
          {
            // a backreference which is not an octal escape
            pattern: /\\(?![123][0-7]{2})[1-9]/,
            alias: "keyword"
          },
          {
            pattern: /\\k<[^<>']+>/,
            alias: "keyword",
            inside: {
              "group-name": f
            }
          }
        ],
        anchor: {
          pattern: /[$^]|\\[ABbGZz]/,
          alias: "function"
        },
        escape: o,
        group: [
          {
            // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html
            // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs
            // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)
            pattern: /\((?:\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,
            alias: "punctuation",
            inside: {
              "group-name": f
            }
          },
          {
            pattern: /\)/,
            alias: "punctuation"
          }
        ],
        quantifier: {
          pattern: /(?:[+*?]|\{\d+(?:,\d*)?\})[?+]?/,
          alias: "number"
        },
        alternation: {
          pattern: /\|/,
          alias: "keyword"
        }
      };
    })(t);
  }
  return i0;
}
var o0, nw;
function xH() {
  if (nw) return o0;
  nw = 1, o0 = e, e.displayName = "rego", e.aliases = [];
  function e(t) {
    t.languages.rego = {
      comment: /#.*/,
      property: {
        pattern: /(^|[^\\.])(?:"(?:\\.|[^\\"\r\n])*"|`[^`]*`|\b[a-z_]\w*\b)(?=\s*:(?!=))/i,
        lookbehind: !0,
        greedy: !0
      },
      string: {
        pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"|`[^`]*`/,
        lookbehind: !0,
        greedy: !0
      },
      keyword: /\b(?:as|default|else|import|not|null|package|set(?=\s*\()|some|with)\b/,
      boolean: /\b(?:false|true)\b/,
      function: {
        pattern: /\b[a-z_]\w*\b(?:\s*\.\s*\b[a-z_]\w*\b)*(?=\s*\()/i,
        inside: {
          namespace: /\b\w+\b(?=\s*\.)/,
          punctuation: /\./
        }
      },
      number: /-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
      operator: /[-+*/%|&]|[<>:=]=?|!=|\b_\b/,
      punctuation: /[,;.\[\]{}()]/
    };
  }
  return o0;
}
var s0, rw;
function NH() {
  if (rw) return s0;
  rw = 1, s0 = e, e.displayName = "renpy", e.aliases = ["rpy"];
  function e(t) {
    t.languages.renpy = {
      comment: {
        pattern: /(^|[^\\])#.+/,
        lookbehind: !0
      },
      string: {
        pattern: /("""|''')[\s\S]+?\1|("|')(?:\\.|(?!\2)[^\\])*\2|(?:^#?(?:(?:[0-9a-fA-F]){3}|[0-9a-fA-F]{6})$)/m,
        greedy: !0
      },
      function: /\b[a-z_]\w*(?=\()/i,
      property: /\b(?:Update|UpdateVersion|action|activate_sound|adv_nvl_transition|after_load_transition|align|alpha|alt|anchor|antialias|area|auto|background|bar_invert|bar_resizing|bar_vertical|black_color|bold|bottom_bar|bottom_gutter|bottom_margin|bottom_padding|box_reverse|box_wrap|can_update|caret|child|color|crop|default_afm_enable|default_afm_time|default_fullscreen|default_text_cps|developer|directory_name|drag_handle|drag_joined|drag_name|drag_raise|draggable|dragged|drop_shadow|drop_shadow_color|droppable|dropped|easein|easeout|edgescroll|end_game_transition|end_splash_transition|enter_replay_transition|enter_sound|enter_transition|enter_yesno_transition|executable_name|exit_replay_transition|exit_sound|exit_transition|exit_yesno_transition|fadein|fadeout|first_indent|first_spacing|fit_first|focus|focus_mask|font|foreground|game_main_transition|get_installed_packages|google_play_key|google_play_salt|ground|has_music|has_sound|has_voice|height|help|hinting|hover|hover_background|hover_color|hover_sound|hovered|hyperlink_functions|idle|idle_color|image_style|include_update|insensitive|insensitive_background|insensitive_color|inside|intra_transition|italic|justify|kerning|keyboard_focus|language|layer_clipping|layers|layout|left_bar|left_gutter|left_margin|left_padding|length|line_leading|line_overlap_split|line_spacing|linear|main_game_transition|main_menu_music|maximum|min_width|minimum|minwidth|modal|mouse|mousewheel|name|narrator_menu|newline_indent|nvl_adv_transition|offset|order_reverse|outlines|overlay_functions|pos|position|prefix|radius|range|rest_indent|right_bar|right_gutter|right_margin|right_padding|rotate|rotate_pad|ruby_style|sample_sound|save_directory|say_attribute_transition|screen_height|screen_width|scrollbars|selected_hover|selected_hover_color|selected_idle|selected_idle_color|selected_insensitive|show_side_image|show_two_window|side_spacing|side_xpos|side_ypos|size|size_group|slow_cps|slow_cps_multiplier|spacing|strikethrough|subpixel|text_align|text_style|text_xpos|text_y_fudge|text_ypos|thumb|thumb_offset|thumb_shadow|thumbnail_height|thumbnail_width|time|top_bar|top_gutter|top_margin|top_padding|translations|underline|unscrollable|update|value|version|version_name|version_tuple|vertical|width|window_hide_transition|window_icon|window_left_padding|window_show_transition|window_title|windows_icon|xadjustment|xalign|xanchor|xanchoraround|xaround|xcenter|xfill|xinitial|xmargin|xmaximum|xminimum|xoffset|xofsset|xpadding|xpos|xsize|xzoom|yadjustment|yalign|yanchor|yanchoraround|yaround|ycenter|yfill|yinitial|ymargin|ymaximum|yminimum|yoffset|ypadding|ypos|ysize|ysizexysize|yzoom|zoom|zorder)\b/,
      tag: /\b(?:bar|block|button|buttoscreenn|drag|draggroup|fixed|frame|grid|[hv]box|hotbar|hotspot|image|imagebutton|imagemap|input|key|label|menu|mm_menu_frame|mousearea|nvl|parallel|screen|self|side|tag|text|textbutton|timer|vbar|viewport|window)\b|\$/,
      keyword: /\b(?:None|add|adjustment|alignaround|allow|angle|animation|around|as|assert|behind|box_layout|break|build|cache|call|center|changed|child_size|choice|circles|class|clear|clicked|clipping|clockwise|config|contains|continue|corner1|corner2|counterclockwise|def|default|define|del|delay|disabled|disabled_text|dissolve|elif|else|event|except|exclude|exec|expression|fade|finally|for|from|function|global|gm_root|has|hide|id|if|import|in|init|is|jump|knot|lambda|left|less_rounded|mm_root|movie|music|null|on|onlayer|pass|pause|persistent|play|print|python|queue|raise|random|renpy|repeat|return|right|rounded_window|scene|scope|set|show|slow|slow_abortable|slow_done|sound|stop|store|style|style_group|substitute|suffix|theme|transform|transform_anchor|transpose|try|ui|unhovered|updater|use|voice|while|widget|widget_hover|widget_selected|widget_text|yield)\b/,
      boolean: /\b(?:[Ff]alse|[Tt]rue)\b/,
      number: /(?:\b(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*(?:\.\d*)?)|\B\.\d+)(?:e[+-]?\d+)?j?/i,
      operator: /[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]|\b(?:and|at|not|or|with)\b/,
      punctuation: /[{}[\];(),.:]/
    }, t.languages.rpy = t.languages.renpy;
  }
  return s0;
}
var l0, aw;
function OH() {
  if (aw) return l0;
  aw = 1, l0 = e, e.displayName = "rest", e.aliases = [];
  function e(t) {
    t.languages.rest = {
      table: [
        {
          pattern: /(^[\t ]*)(?:\+[=-]+)+\+(?:\r?\n|\r)(?:\1[+|].+[+|](?:\r?\n|\r))+\1(?:\+[=-]+)+\+/m,
          lookbehind: !0,
          inside: {
            punctuation: /\||(?:\+[=-]+)+\+/
          }
        },
        {
          pattern: /(^[\t ]*)=+ [ =]*=(?:(?:\r?\n|\r)\1.+)+(?:\r?\n|\r)\1=+ [ =]*=(?=(?:\r?\n|\r){2}|\s*$)/m,
          lookbehind: !0,
          inside: {
            punctuation: /[=-]+/
          }
        }
      ],
      // Directive-like patterns
      "substitution-def": {
        pattern: /(^[\t ]*\.\. )\|(?:[^|\s](?:[^|]*[^|\s])?)\| [^:]+::/m,
        lookbehind: !0,
        inside: {
          substitution: {
            pattern: /^\|(?:[^|\s]|[^|\s][^|]*[^|\s])\|/,
            alias: "attr-value",
            inside: {
              punctuation: /^\||\|$/
            }
          },
          directive: {
            pattern: /( )(?! )[^:]+::/,
            lookbehind: !0,
            alias: "function",
            inside: {
              punctuation: /::$/
            }
          }
        }
      },
      "link-target": [
        {
          pattern: /(^[\t ]*\.\. )\[[^\]]+\]/m,
          lookbehind: !0,
          alias: "string",
          inside: {
            punctuation: /^\[|\]$/
          }
        },
        {
          pattern: /(^[\t ]*\.\. )_(?:`[^`]+`|(?:[^:\\]|\\.)+):/m,
          lookbehind: !0,
          alias: "string",
          inside: {
            punctuation: /^_|:$/
          }
        }
      ],
      directive: {
        pattern: /(^[\t ]*\.\. )[^:]+::/m,
        lookbehind: !0,
        alias: "function",
        inside: {
          punctuation: /::$/
        }
      },
      comment: {
        // The two alternatives try to prevent highlighting of blank comments
        pattern: /(^[\t ]*\.\.)(?:(?: .+)?(?:(?:\r?\n|\r).+)+| .+)(?=(?:\r?\n|\r){2}|$)/m,
        lookbehind: !0
      },
      title: [
        // Overlined and underlined
        {
          pattern: /^(([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\2+)(?:\r?\n|\r).+(?:\r?\n|\r)\1$/m,
          inside: {
            punctuation: /^[!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]+|[!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]+$/,
            important: /.+/
          }
        },
        // Underlined only
        {
          pattern: /(^|(?:\r?\n|\r){2}).+(?:\r?\n|\r)([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\2+(?=\r?\n|\r|$)/,
          lookbehind: !0,
          inside: {
            punctuation: /[!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]+$/,
            important: /.+/
          }
        }
      ],
      hr: {
        pattern: /((?:\r?\n|\r){2})([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\2{3,}(?=(?:\r?\n|\r){2})/,
        lookbehind: !0,
        alias: "punctuation"
      },
      field: {
        pattern: /(^[\t ]*):[^:\r\n]+:(?= )/m,
        lookbehind: !0,
        alias: "attr-name"
      },
      "command-line-option": {
        pattern: /(^[\t ]*)(?:[+-][a-z\d]|(?:--|\/)[a-z\d-]+)(?:[ =](?:[a-z][\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\d]|(?:--|\/)[a-z\d-]+)(?:[ =](?:[a-z][\w-]*|<[^<>]+>))?)*(?=(?:\r?\n|\r)? {2,}\S)/im,
        lookbehind: !0,
        alias: "symbol"
      },
      "literal-block": {
        pattern: /::(?:\r?\n|\r){2}([ \t]+)(?![ \t]).+(?:(?:\r?\n|\r)\1.+)*/,
        inside: {
          "literal-block-punctuation": {
            pattern: /^::/,
            alias: "punctuation"
          }
        }
      },
      "quoted-literal-block": {
        pattern: /::(?:\r?\n|\r){2}([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]).*(?:(?:\r?\n|\r)\1.*)*/,
        inside: {
          "literal-block-punctuation": {
            pattern: /^(?:::|([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\1*)/m,
            alias: "punctuation"
          }
        }
      },
      "list-bullet": {
        pattern: /(^[\t ]*)(?:[*+\-•‣⁃]|\(?(?:\d+|[a-z]|[ivxdclm]+)\)|(?:\d+|[a-z]|[ivxdclm]+)\.)(?= )/im,
        lookbehind: !0,
        alias: "punctuation"
      },
      "doctest-block": {
        pattern: /(^[\t ]*)>>> .+(?:(?:\r?\n|\r).+)*/m,
        lookbehind: !0,
        inside: {
          punctuation: /^>>>/
        }
      },
      inline: [
        {
          pattern: /(^|[\s\-:\/'"<(\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\*\*?|``?|\|)(?!\s)(?:(?!\2).)*\S\2(?=[\s\-.,:;!?\\\/'")\]}]|$))/m,
          lookbehind: !0,
          inside: {
            bold: {
              pattern: /(^\*\*).+(?=\*\*$)/,
              lookbehind: !0
            },
            italic: {
              pattern: /(^\*).+(?=\*$)/,
              lookbehind: !0
            },
            "inline-literal": {
              pattern: /(^``).+(?=``$)/,
              lookbehind: !0,
              alias: "symbol"
            },
            role: {
              pattern: /^:[^:]+:|:[^:]+:$/,
              alias: "function",
              inside: {
                punctuation: /^:|:$/
              }
            },
            "interpreted-text": {
              pattern: /(^`).+(?=`$)/,
              lookbehind: !0,
              alias: "attr-value"
            },
            substitution: {
              pattern: /(^\|).+(?=\|$)/,
              lookbehind: !0,
              alias: "attr-value"
            },
            punctuation: /\*\*?|``?|\|/
          }
        }
      ],
      link: [
        {
          pattern: /\[[^\[\]]+\]_(?=[\s\-.,:;!?\\\/'")\]}]|$)/,
          alias: "string",
          inside: {
            punctuation: /^\[|\]_$/
          }
        },
        {
          pattern: /(?:\b[a-z\d]+(?:[_.:+][a-z\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\s\-.,:;!?\\\/'")\]}]|$)/i,
          alias: "string",
          inside: {
            punctuation: /^_?`|`$|`?_?_$/
          }
        }
      ],
      // Line block start,
      // quote attribution,
      // explicit markup start,
      // and anonymous hyperlink target shortcut (__)
      punctuation: {
        pattern: /(^[\t ]*)(?:\|(?= |$)|(?:---?|—|\.\.|__)(?= )|\.\.$)/m,
        lookbehind: !0
      }
    };
  }
  return l0;
}
var u0, iw;
function LH() {
  if (iw) return u0;
  iw = 1, u0 = e, e.displayName = "rip", e.aliases = [];
  function e(t) {
    t.languages.rip = {
      comment: {
        pattern: /#.*/,
        greedy: !0
      },
      char: {
        pattern: /\B`[^\s`'",.:;#\/\\()<>\[\]{}]\b/,
        greedy: !0
      },
      string: {
        pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
        greedy: !0
      },
      regex: {
        pattern: /(^|[^/])\/(?!\/)(?:\[[^\n\r\]]*\]|\\.|[^/\\\r\n\[])+\/(?=\s*(?:$|[\r\n,.;})]))/,
        lookbehind: !0,
        greedy: !0
      },
      keyword: /(?:=>|->)|\b(?:case|catch|class|else|exit|finally|if|raise|return|switch|try)\b/,
      builtin: /@|\bSystem\b/,
      boolean: /\b(?:false|true)\b/,
      date: /\b\d{4}-\d{2}-\d{2}\b/,
      time: /\b\d{2}:\d{2}:\d{2}\b/,
      datetime: /\b\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\b/,
      symbol: /:[^\d\s`'",.:;#\/\\()<>\[\]{}][^\s`'",.:;#\/\\()<>\[\]{}]*/,
      number: /[+-]?\b(?:\d+\.\d+|\d+)\b/,
      punctuation: /(?:\.{2,3})|[`,.:;=\/\\()<>\[\]{}]/,
      reference: /[^\d\s`'",.:;#\/\\()<>\[\]{}][^\s`'",.:;#\/\\()<>\[\]{}]*/
    };
  }
  return u0;
}
var c0, ow;
function DH() {
  if (ow) return c0;
  ow = 1, c0 = e, e.displayName = "roboconf", e.aliases = [];
  function e(t) {
    t.languages.roboconf = {
      comment: /#.*/,
      keyword: {
        pattern: /(^|\s)(?:(?:external|import)\b|(?:facet|instance of)(?=[ \t]+[\w-]+[ \t]*\{))/,
        lookbehind: !0
      },
      component: {
        pattern: /[\w-]+(?=[ \t]*\{)/,
        alias: "variable"
      },
      property: /[\w.-]+(?=[ \t]*:)/,
      value: {
        pattern: /(=[ \t]*(?![ \t]))[^,;]+/,
        lookbehind: !0,
        alias: "attr-value"
      },
      optional: {
        pattern: /\(optional\)/,
        alias: "builtin"
      },
      wildcard: {
        pattern: /(\.)\*/,
        lookbehind: !0,
        alias: "operator"
      },
      punctuation: /[{},.;:=]/
    };
  }
  return c0;
}
var d0, sw;
function MH() {
  if (sw) return d0;
  sw = 1, d0 = e, e.displayName = "robotframework", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = {
        pattern: /(^[ \t]*| {2}|\t)#.*/m,
        lookbehind: !0,
        greedy: !0
      }, o = {
        pattern: /((?:^|[^\\])(?:\\{2})*)[$@&%]\{(?:[^{}\r\n]|\{[^{}\r\n]*\})*\}/,
        lookbehind: !0,
        inside: {
          punctuation: /^[$@&%]\{|\}$/
        }
      };
      function s(f, b) {
        var g = {};
        g["section-header"] = {
          pattern: /^ ?\*{3}.+?\*{3}/,
          alias: "keyword"
        };
        for (var T in b)
          g[T] = b[T];
        return g.tag = {
          pattern: /([\r\n](?: {2}|\t)[ \t]*)\[[-\w]+\]/,
          lookbehind: !0,
          inside: {
            punctuation: /\[|\]/
          }
        }, g.variable = o, g.comment = r, {
          pattern: RegExp(
            /^ ?\*{3}[ \t]*<name>[ \t]*\*{3}(?:.|[\r\n](?!\*{3}))*/.source.replace(
              /<name>/g,
              function() {
                return f;
              }
            ),
            "im"
          ),
          alias: "section",
          inside: g
        };
      }
      var u = {
        pattern: /(\[Documentation\](?: {2}|\t)[ \t]*)(?![ \t]|#)(?:.|(?:\r\n?|\n)[ \t]*\.{3})+/,
        lookbehind: !0,
        alias: "string"
      }, c = {
        pattern: /([\r\n] ?)(?!#)(?:\S(?:[ \t]\S)*)+/,
        lookbehind: !0,
        alias: "function",
        inside: {
          variable: o
        }
      }, p = {
        pattern: /([\r\n](?: {2}|\t)[ \t]*)(?!\[|\.{3}|#)(?:\S(?:[ \t]\S)*)+/,
        lookbehind: !0,
        inside: {
          variable: o
        }
      };
      n.languages.robotframework = {
        settings: s("Settings", {
          documentation: {
            pattern: /([\r\n] ?Documentation(?: {2}|\t)[ \t]*)(?![ \t]|#)(?:.|(?:\r\n?|\n)[ \t]*\.{3})+/,
            lookbehind: !0,
            alias: "string"
          },
          property: {
            pattern: /([\r\n] ?)(?!\.{3}|#)(?:\S(?:[ \t]\S)*)+/,
            lookbehind: !0
          }
        }),
        variables: s("Variables"),
        "test-cases": s("Test Cases", {
          "test-name": c,
          documentation: u,
          property: p
        }),
        keywords: s("Keywords", {
          "keyword-name": c,
          documentation: u,
          property: p
        }),
        tasks: s("Tasks", {
          "task-name": c,
          documentation: u,
          property: p
        }),
        comment: r
      }, n.languages.robot = n.languages.robotframework;
    })(t);
  }
  return d0;
}
var p0, lw;
function PH() {
  if (lw) return p0;
  lw = 1, p0 = e, e.displayName = "rust", e.aliases = [];
  function e(t) {
    (function(n) {
      for (var r = /\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|<self>)*\*\//.source, o = 0; o < 2; o++)
        r = r.replace(/<self>/g, function() {
          return r;
        });
      r = r.replace(/<self>/g, function() {
        return /[^\s\S]/.source;
      }), n.languages.rust = {
        comment: [
          {
            pattern: RegExp(/(^|[^\\])/.source + r),
            lookbehind: !0,
            greedy: !0
          },
          {
            pattern: /(^|[^\\:])\/\/.*/,
            lookbehind: !0,
            greedy: !0
          }
        ],
        string: {
          pattern: /b?"(?:\\[\s\S]|[^\\"])*"|b?r(#*)"(?:[^"]|"(?!\1))*"\1/,
          greedy: !0
        },
        char: {
          pattern: /b?'(?:\\(?:x[0-7][\da-fA-F]|u\{(?:[\da-fA-F]_*){1,6}\}|.)|[^\\\r\n\t'])'/,
          greedy: !0
        },
        attribute: {
          pattern: /#!?\[(?:[^\[\]"]|"(?:\\[\s\S]|[^\\"])*")*\]/,
          greedy: !0,
          alias: "attr-name",
          inside: {
            string: null
            // see below
          }
        },
        // Closure params should not be confused with bitwise OR |
        "closure-params": {
          pattern: /([=(,:]\s*|\bmove\s*)\|[^|]*\||\|[^|]*\|(?=\s*(?:\{|->))/,
          lookbehind: !0,
          greedy: !0,
          inside: {
            "closure-punctuation": {
              pattern: /^\||\|$/,
              alias: "punctuation"
            },
            rest: null
            // see below
          }
        },
        "lifetime-annotation": {
          pattern: /'\w+/,
          alias: "symbol"
        },
        "fragment-specifier": {
          pattern: /(\$\w+:)[a-z]+/,
          lookbehind: !0,
          alias: "punctuation"
        },
        variable: /\$\w+/,
        "function-definition": {
          pattern: /(\bfn\s+)\w+/,
          lookbehind: !0,
          alias: "function"
        },
        "type-definition": {
          pattern: /(\b(?:enum|struct|trait|type|union)\s+)\w+/,
          lookbehind: !0,
          alias: "class-name"
        },
        "module-declaration": [
          {
            pattern: /(\b(?:crate|mod)\s+)[a-z][a-z_\d]*/,
            lookbehind: !0,
            alias: "namespace"
          },
          {
            pattern: /(\b(?:crate|self|super)\s*)::\s*[a-z][a-z_\d]*\b(?:\s*::(?:\s*[a-z][a-z_\d]*\s*::)*)?/,
            lookbehind: !0,
            alias: "namespace",
            inside: {
              punctuation: /::/
            }
          }
        ],
        keyword: [
          // https://github.com/rust-lang/reference/blob/master/src/keywords.md
          /\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\b/,
          // primitives and str
          // https://doc.rust-lang.org/stable/rust-by-example/primitives.html
          /\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\b/
        ],
        // functions can technically start with an upper-case letter, but this will introduce a lot of false positives
        // and Rust's naming conventions recommend snake_case anyway.
        // https://doc.rust-lang.org/1.0.0/style/style/naming/README.html
        function: /\b[a-z_]\w*(?=\s*(?:::\s*<|\())/,
        macro: {
          pattern: /\b\w+!/,
          alias: "property"
        },
        constant: /\b[A-Z_][A-Z_\d]+\b/,
        "class-name": /\b[A-Z]\w*\b/,
        namespace: {
          pattern: /(?:\b[a-z][a-z_\d]*\s*::\s*)*\b[a-z][a-z_\d]*\s*::(?!\s*<)/,
          inside: {
            punctuation: /::/
          }
        },
        // Hex, oct, bin, dec numbers with visual separators and type suffix
        number: /\b(?:0x[\dA-Fa-f](?:_?[\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\d(?:_?\d)*)?\.)?\d(?:_?\d)*(?:[Ee][+-]?\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\b/,
        boolean: /\b(?:false|true)\b/,
        punctuation: /->|\.\.=|\.{1,3}|::|[{}[\];(),:]/,
        operator: /[-+*\/%!^]=?|=[=>]?|&[&=]?|\|[|=]?|<<?=?|>>?=?|[@?]/
      }, n.languages.rust["closure-params"].inside.rest = n.languages.rust, n.languages.rust.attribute.inside.string = n.languages.rust.string;
    })(t);
  }
  return p0;
}
var f0, uw;
function FH() {
  if (uw) return f0;
  uw = 1, f0 = e, e.displayName = "sas", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /(?:"(?:""|[^"])*"(?!")|'(?:''|[^'])*'(?!'))/.source, o = /\b(?:\d[\da-f]*x|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/i, s = {
        pattern: RegExp(r + "[bx]"),
        alias: "number"
      }, u = {
        pattern: /&[a-z_]\w*/i
      }, c = {
        pattern: /((?:^|\s|=|\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMEXIST|SYMGLOBL|SYMLOCAL|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\b/i,
        lookbehind: !0,
        alias: "keyword"
      }, p = {
        pattern: /(^|\s)(?:proc\s+\w+|data(?!=)|quit|run)\b/i,
        alias: "keyword",
        lookbehind: !0
      }, f = [
        /\/\*[\s\S]*?\*\//,
        {
          pattern: /(^[ \t]*|;\s*)\*[^;]*;/m,
          lookbehind: !0
        }
      ], b = {
        pattern: RegExp(r),
        greedy: !0
      }, g = /[$%@.(){}\[\];,\\]/, T = {
        pattern: /%?\b\w+(?=\()/,
        alias: "keyword"
      }, y = {
        function: T,
        "arg-value": {
          pattern: /(=\s*)[A-Z\.]+/i,
          lookbehind: !0
        },
        operator: /=/,
        "macro-variable": u,
        arg: {
          pattern: /[A-Z]+/i,
          alias: "keyword"
        },
        number: o,
        "numeric-constant": s,
        punctuation: g,
        string: b
      }, _ = {
        pattern: /\b(?:format|put)\b=?[\w'$.]+/i,
        inside: {
          keyword: /^(?:format|put)(?==)/i,
          equals: /=/,
          format: {
            pattern: /(?:\w|\$\d)+\.\d?/,
            alias: "number"
          }
        }
      }, A = {
        pattern: /\b(?:format|put)\s+[\w']+(?:\s+[$.\w]+)+(?=;)/i,
        inside: {
          keyword: /^(?:format|put)/i,
          format: {
            pattern: /[\w$]+\.\d?/,
            alias: "number"
          }
        }
      }, R = {
        pattern: /((?:^|\s)=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\d?)\b/i,
        lookbehind: !0,
        alias: "keyword"
      }, C = {
        pattern: /(^|\s)(?:submit(?:\s+(?:load|norun|parseonly))?|endsubmit)\b/i,
        lookbehind: !0,
        alias: "keyword"
      }, w = /aStore|accessControl|aggregation|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|cdm|clustering|conditionalRandomFields|configuration|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deduplication|deepLearn|deepNeural|deepRnn|ds2|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gVarCluster|gam|gleam|graphSemiSupLearn|hiddenMarkovModel|hyperGroup|ica|image|iml|kernalPca|langModel|ldaTopic|loadStreams|mbc|mixed|mlTools|modelPublishing|network|neuralNet|nmf|nonParametricBayes|nonlinear|optNetwork|optimization|panel|pca|percentile|phreg|pls|qkb|qlim|quantreg|recommend|regression|reinforcementLearn|robustPca|ruleMining|sampling|sandwich|sccasl|search(?:Analytics)?|sentimentAnalysis|sequence|session(?:Prop)?|severity|simSystem|simple|smartData|sparkEmbeddedProcess|sparseML|spatialreg|spc|stabilityMonitoring|svDataDescription|svm|table|text(?:Filters|Frequency|Mining|Parse|Rule(?:Develop|Score)|Topic|Util)|timeData|transpose|tsInfo|tsReconcile|uniTimeSeries|varReduce/.source, k = {
        pattern: RegExp(
          /(^|\s)(?:action\s+)?(?:<act>)\.[a-z]+\b[^;]+/.source.replace(
            /<act>/g,
            function() {
              return w;
            }
          ),
          "i"
        ),
        lookbehind: !0,
        inside: {
          keyword: RegExp(
            /(?:<act>)\.[a-z]+\b/.source.replace(/<act>/g, function() {
              return w;
            }),
            "i"
          ),
          action: {
            pattern: /(?:action)/i,
            alias: "keyword"
          },
          comment: f,
          function: T,
          "arg-value": y["arg-value"],
          operator: y.operator,
          argument: y.arg,
          number: o,
          "numeric-constant": s,
          punctuation: g,
          string: b
        }
      }, O = {
        pattern: /((?:^|\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?==)|define|delete|describe|document|do\s+over|do|dol|drop|dul|else|end(?:comp|source)?|entryTitle|eval(?:uate)?|exec(?:ute)?|exit|file(?:name)?|fill(?:attrs)?|flist|fnc|function(?:list)?|global|goto|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|_?null_|name|noobs|nowd|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|print|put|raise|ranexp|rannor|rbreak|retain|return|select|session|sessref|set|source|statgraph|sum|summarize|table|temp|terminate|then\s+do|then|title\d?|to|var|when|where|xaxisopts|y2axisopts|yaxisopts)\b/i,
        lookbehind: !0
      };
      n.languages.sas = {
        datalines: {
          pattern: /^([ \t]*)(?:cards|(?:data)?lines);[\s\S]+?^[ \t]*;/im,
          lookbehind: !0,
          alias: "string",
          inside: {
            keyword: {
              pattern: /^(?:cards|(?:data)?lines)/i
            },
            punctuation: /;/
          }
        },
        "proc-sql": {
          pattern: /(^proc\s+(?:fed)?sql(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|data|quit|run);|(?![\s\S]))/im,
          lookbehind: !0,
          inside: {
            sql: {
              pattern: RegExp(
                /^[ \t]*(?:select|alter\s+table|(?:create|describe|drop)\s+(?:index|table(?:\s+constraints)?|view)|create\s+unique\s+index|insert\s+into|update)(?:<str>|[^;"'])+;/.source.replace(
                  /<str>/g,
                  function() {
                    return r;
                  }
                ),
                "im"
              ),
              alias: "language-sql",
              inside: n.languages.sql
            },
            "global-statements": R,
            "sql-statements": {
              pattern: /(^|\s)(?:disconnect\s+from|begin|commit|exec(?:ute)?|reset|rollback|validate)\b/i,
              lookbehind: !0,
              alias: "keyword"
            },
            number: o,
            "numeric-constant": s,
            punctuation: g,
            string: b
          }
        },
        "proc-groovy": {
          pattern: /(^proc\s+groovy(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|data|quit|run);|(?![\s\S]))/im,
          lookbehind: !0,
          inside: {
            comment: f,
            groovy: {
              pattern: RegExp(
                /(^[ \t]*submit(?:\s+(?:load|norun|parseonly))?)(?:<str>|[^"'])+?(?=endsubmit;)/.source.replace(
                  /<str>/g,
                  function() {
                    return r;
                  }
                ),
                "im"
              ),
              lookbehind: !0,
              alias: "language-groovy",
              inside: n.languages.groovy
            },
            keyword: O,
            "submit-statement": C,
            "global-statements": R,
            number: o,
            "numeric-constant": s,
            punctuation: g,
            string: b
          }
        },
        "proc-lua": {
          pattern: /(^proc\s+lua(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|data|quit|run);|(?![\s\S]))/im,
          lookbehind: !0,
          inside: {
            comment: f,
            lua: {
              pattern: RegExp(
                /(^[ \t]*submit(?:\s+(?:load|norun|parseonly))?)(?:<str>|[^"'])+?(?=endsubmit;)/.source.replace(
                  /<str>/g,
                  function() {
                    return r;
                  }
                ),
                "im"
              ),
              lookbehind: !0,
              alias: "language-lua",
              inside: n.languages.lua
            },
            keyword: O,
            "submit-statement": C,
            "global-statements": R,
            number: o,
            "numeric-constant": s,
            punctuation: g,
            string: b
          }
        },
        "proc-cas": {
          pattern: /(^proc\s+cas(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|quit|data);|(?![\s\S]))/im,
          lookbehind: !0,
          inside: {
            comment: f,
            "statement-var": {
              pattern: /((?:^|\s)=?)saveresult\s[^;]+/im,
              lookbehind: !0,
              inside: {
                statement: {
                  pattern: /^saveresult\s+\S+/i,
                  inside: {
                    keyword: /^(?:saveresult)/i
                  }
                },
                rest: y
              }
            },
            "cas-actions": k,
            statement: {
              pattern: /((?:^|\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im,
              lookbehind: !0,
              inside: y
            },
            step: p,
            keyword: O,
            function: T,
            format: _,
            altformat: A,
            "global-statements": R,
            number: o,
            "numeric-constant": s,
            punctuation: g,
            string: b
          }
        },
        "proc-args": {
          pattern: RegExp(
            /(^proc\s+\w+\s+)(?!\s)(?:[^;"']|<str>)+;/.source.replace(
              /<str>/g,
              function() {
                return r;
              }
            ),
            "im"
          ),
          lookbehind: !0,
          inside: y
        },
        /*Special keywords within macros*/
        "macro-keyword": c,
        "macro-variable": u,
        "macro-string-functions": {
          pattern: /((?:^|\s|=))%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)\(.*?(?:[^%]\))/i,
          lookbehind: !0,
          inside: {
            function: {
              pattern: /%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)/i,
              alias: "keyword"
            },
            "macro-keyword": c,
            "macro-variable": u,
            "escaped-char": {
              pattern: /%['"()<>=¬^~;,#]/
            },
            punctuation: g
          }
        },
        "macro-declaration": {
          pattern: /^%macro[^;]+(?=;)/im,
          inside: {
            keyword: /%macro/i
          }
        },
        "macro-end": {
          pattern: /^%mend[^;]+(?=;)/im,
          inside: {
            keyword: /%mend/i
          }
        },
        /*%_zscore(headcir, _lhc, _mhc, _shc, headcz, headcpct, _Fheadcz); */
        macro: {
          pattern: /%_\w+(?=\()/,
          alias: "keyword"
        },
        input: {
          pattern: /\binput\s[-\w\s/*.$&]+;/i,
          inside: {
            input: {
              alias: "keyword",
              pattern: /^input/i
            },
            comment: f,
            number: o,
            "numeric-constant": s
          }
        },
        "options-args": {
          pattern: /(^options)[-'"|/\\<>*+=:()\w\s]*(?=;)/im,
          lookbehind: !0,
          inside: y
        },
        "cas-actions": k,
        comment: f,
        function: T,
        format: _,
        altformat: A,
        "numeric-constant": s,
        datetime: {
          // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt
          pattern: RegExp(r + "(?:dt?|t)"),
          alias: "number"
        },
        string: b,
        step: p,
        keyword: O,
        // In SAS Studio syntax highlighting, these operators are styled like keywords
        "operator-keyword": {
          pattern: /\b(?:eq|ge|gt|in|le|lt|ne|not)\b/i,
          alias: "operator"
        },
        // Decimal (1.2e23), hexadecimal (0c1x)
        number: o,
        operator: /\*\*?|\|\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\/=&]|[~¬^]=?/,
        punctuation: g
      };
    })(t);
  }
  return f0;
}
var h0, cw;
function BH() {
  if (cw) return h0;
  cw = 1, h0 = e, e.displayName = "sass", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.sass = n.languages.extend("css", {
        // Sass comments don't need to be closed, only indented
        comment: {
          pattern: /^([ \t]*)\/[\/*].*(?:(?:\r?\n|\r)\1[ \t].+)*/m,
          lookbehind: !0,
          greedy: !0
        }
      }), n.languages.insertBefore("sass", "atrule", {
        // We want to consume the whole line
        "atrule-line": {
          // Includes support for = and + shortcuts
          pattern: /^(?:[ \t]*)[@+=].+/m,
          greedy: !0,
          inside: {
            atrule: /(?:@[\w-]+|[+=])/
          }
        }
      }), delete n.languages.sass.atrule;
      var r = /\$[-\w]+|#\{\$[-\w]+\}/, o = [
        /[+*\/%]|[=!]=|<=?|>=?|\b(?:and|not|or)\b/,
        {
          pattern: /(\s)-(?=\s)/,
          lookbehind: !0
        }
      ];
      n.languages.insertBefore("sass", "property", {
        // We want to consume the whole line
        "variable-line": {
          pattern: /^[ \t]*\$.+/m,
          greedy: !0,
          inside: {
            punctuation: /:/,
            variable: r,
            operator: o
          }
        },
        // We want to consume the whole line
        "property-line": {
          pattern: /^[ \t]*(?:[^:\s]+ *:.*|:[^:\s].*)/m,
          greedy: !0,
          inside: {
            property: [
              /[^:\s]+(?=\s*:)/,
              {
                pattern: /(:)[^:\s]+/,
                lookbehind: !0
              }
            ],
            punctuation: /:/,
            variable: r,
            operator: o,
            important: n.languages.sass.important
          }
        }
      }), delete n.languages.sass.property, delete n.languages.sass.important, n.languages.insertBefore("sass", "punctuation", {
        selector: {
          pattern: /^([ \t]*)\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*(?:,(?:\r?\n|\r)\1[ \t]+\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*)*/m,
          lookbehind: !0,
          greedy: !0
        }
      });
    })(t);
  }
  return h0;
}
var g0, dw;
function UH() {
  if (dw) return g0;
  dw = 1;
  var e = XE();
  g0 = t, t.displayName = "scala", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.scala = n.languages.extend("java", {
      "triple-quoted-string": {
        pattern: /"""[\s\S]*?"""/,
        greedy: !0,
        alias: "string"
      },
      string: {
        pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
        greedy: !0
      },
      keyword: /<-|=>|\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\b/,
      number: /\b0x(?:[\da-f]*\.)?[\da-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e\d+)?[dfl]?/i,
      builtin: /\b(?:Any|AnyRef|AnyVal|Boolean|Byte|Char|Double|Float|Int|Long|Nothing|Short|String|Unit)\b/,
      symbol: /'[^\d\s\\]\w*/
    }), n.languages.insertBefore("scala", "triple-quoted-string", {
      "string-interpolation": {
        pattern: /\b[a-z]\w*(?:"""(?:[^$]|\$(?:[^{]|\{(?:[^{}]|\{[^{}]*\})*\}))*?"""|"(?:[^$"\r\n]|\$(?:[^{]|\{(?:[^{}]|\{[^{}]*\})*\}))*")/i,
        greedy: !0,
        inside: {
          id: {
            pattern: /^\w+/,
            greedy: !0,
            alias: "function"
          },
          escape: {
            pattern: /\\\$"|\$[$"]/,
            greedy: !0,
            alias: "symbol"
          },
          interpolation: {
            pattern: /\$(?:\w+|\{(?:[^{}]|\{[^{}]*\})*\})/,
            greedy: !0,
            inside: {
              punctuation: /^\$\{?|\}$/,
              expression: {
                pattern: /[\s\S]+/,
                inside: n.languages.scala
              }
            }
          },
          string: /[\s\S]+/
        }
      }
    }), delete n.languages.scala["class-name"], delete n.languages.scala.function;
  }
  return g0;
}
var m0, pw;
function HH() {
  if (pw) return m0;
  pw = 1, m0 = e, e.displayName = "scss", e.aliases = [];
  function e(t) {
    t.languages.scss = t.languages.extend("css", {
      comment: {
        pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
        lookbehind: !0
      },
      atrule: {
        pattern: /@[\w-](?:\([^()]+\)|[^()\s]|\s+(?!\s))*?(?=\s+[{;])/,
        inside: {
          rule: /@[\w-]+/
          // See rest below
        }
      },
      // url, compassified
      url: /(?:[-a-z]+-)?url(?=\()/i,
      // CSS selector regex is not appropriate for Sass
      // since there can be lot more things (var, @ directive, nesting..)
      // a selector must start at the end of a property or after a brace (end of other rules or nesting)
      // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable
      // the end of a selector is found when there is no rules in it ( {} or {\s}) or if there is a property (because an interpolated var
      // can "pass" as a selector- e.g: proper#{$erty})
      // this one was hard to do, so please be careful if you edit this one :)
      selector: {
        // Initial look-ahead is used to prevent matching of blank selectors
        pattern: /(?=\S)[^@;{}()]?(?:[^@;{}()\s]|\s+(?!\s)|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}][^:{}]*[:{][^}]))/,
        inside: {
          parent: {
            pattern: /&/,
            alias: "important"
          },
          placeholder: /%[-\w]+/,
          variable: /\$[-\w]+|#\{\$[-\w]+\}/
        }
      },
      property: {
        pattern: /(?:[-\w]|\$[-\w]|#\{\$[-\w]+\})+(?=\s*:)/,
        inside: {
          variable: /\$[-\w]+|#\{\$[-\w]+\}/
        }
      }
    }), t.languages.insertBefore("scss", "atrule", {
      keyword: [
        /@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\b/i,
        {
          pattern: /( )(?:from|through)(?= )/,
          lookbehind: !0
        }
      ]
    }), t.languages.insertBefore("scss", "important", {
      // var and interpolated vars
      variable: /\$[-\w]+|#\{\$[-\w]+\}/
    }), t.languages.insertBefore("scss", "function", {
      "module-modifier": {
        pattern: /\b(?:as|hide|show|with)\b/i,
        alias: "keyword"
      },
      placeholder: {
        pattern: /%[-\w]+/,
        alias: "selector"
      },
      statement: {
        pattern: /\B!(?:default|optional)\b/i,
        alias: "keyword"
      },
      boolean: /\b(?:false|true)\b/,
      null: {
        pattern: /\bnull\b/,
        alias: "keyword"
      },
      operator: {
        pattern: /(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|not|or)(?=\s)/,
        lookbehind: !0
      }
    }), t.languages.scss.atrule.inside.rest = t.languages.scss;
  }
  return m0;
}
var b0, fw;
function $H() {
  if (fw) return b0;
  fw = 1;
  var e = Yx();
  b0 = t, t.displayName = "shellSession", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      var o = [
        // normal string
        /"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/.source,
        /'[^']*'/.source,
        /\$'(?:[^'\\]|\\[\s\S])*'/.source,
        // here doc
        // 2 capturing groups
        /<<-?\s*(["']?)(\w+)\1\s[\s\S]*?[\r\n]\2/.source
      ].join("|");
      r.languages["shell-session"] = {
        command: {
          pattern: RegExp(
            // user info
            /^/.source + "(?:" + // <user> ":" ( <path> )?
            (/[^\s@:$#%*!/\\]+@[^\r\n@:$#%*!/\\]+(?::[^\0-\x1F$#%*?"<>:;|]+)?/.source + "|" + // <path>
            // Since the path pattern is quite general, we will require it to start with a special character to
            // prevent false positives.
            /[/~.][^\0-\x1F$#%*?"<>@:;|]*/.source) + ")?" + // shell symbol
            /[$#%](?=\s)/.source + // bash command
            /(?:[^\\\r\n \t'"<$]|[ \t](?:(?!#)|#.*$)|\\(?:[^\r]|\r\n?)|\$(?!')|<(?!<)|<<str>>)+/.source.replace(
              /<<str>>/g,
              function() {
                return o;
              }
            ),
            "m"
          ),
          greedy: !0,
          inside: {
            info: {
              // foo@bar:~/files$ exit
              // foo@bar$ exit
              // ~/files$ exit
              pattern: /^[^#$%]+/,
              alias: "punctuation",
              inside: {
                user: /^[^\s@:$#%*!/\\]+@[^\r\n@:$#%*!/\\]+/,
                punctuation: /:/,
                path: /[\s\S]+/
              }
            },
            bash: {
              pattern: /(^[$#%]\s*)\S[\s\S]*/,
              lookbehind: !0,
              alias: "language-bash",
              inside: r.languages.bash
            },
            "shell-symbol": {
              pattern: /^[$#%]/,
              alias: "important"
            }
          }
        },
        output: /.(?:.*(?:[\r\n]|.$))*/
      }, r.languages["sh-session"] = r.languages.shellsession = r.languages["shell-session"];
    }(n);
  }
  return b0;
}
var E0, hw;
function zH() {
  if (hw) return E0;
  hw = 1, E0 = e, e.displayName = "smali", e.aliases = [];
  function e(t) {
    t.languages.smali = {
      comment: /#.*/,
      string: {
        pattern: /"(?:[^\r\n\\"]|\\.)*"|'(?:[^\r\n\\']|\\(?:.|u[\da-fA-F]{4}))'/,
        greedy: !0
      },
      "class-name": {
        pattern: /(^|[^L])L(?:(?:\w+|`[^`\r\n]*`)\/)*(?:[\w$]+|`[^`\r\n]*`)(?=\s*;)/,
        lookbehind: !0,
        inside: {
          "class-name": {
            pattern: /(^L|\/)(?:[\w$]+|`[^`\r\n]*`)$/,
            lookbehind: !0
          },
          namespace: {
            pattern: /^(L)(?:(?:\w+|`[^`\r\n]*`)\/)+/,
            lookbehind: !0,
            inside: {
              punctuation: /\//
            }
          },
          builtin: /^L/
        }
      },
      builtin: [
        {
          // Reference: https://github.com/JesusFreke/smali/wiki/TypesMethodsAndFields#types
          pattern: /([();\[])[BCDFIJSVZ]+/,
          lookbehind: !0
        },
        {
          // e.g. .field mWifiOnUid:I
          pattern: /([\w$>]:)[BCDFIJSVZ]/,
          lookbehind: !0
        }
      ],
      keyword: [
        {
          pattern: /(\.end\s+)[\w-]+/,
          lookbehind: !0
        },
        {
          pattern: /(^|[^\w.-])\.(?!\d)[\w-]+/,
          lookbehind: !0
        },
        {
          pattern: /(^|[^\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\w.-])/,
          lookbehind: !0
        }
      ],
      function: {
        pattern: /(^|[^\w.-])(?:\w+|<[\w$-]+>)(?=\()/,
        lookbehind: !0
      },
      field: {
        pattern: /[\w$]+(?=:)/,
        alias: "variable"
      },
      register: {
        pattern: /(^|[^\w.-])[vp]\d(?![\w.-])/,
        lookbehind: !0,
        alias: "variable"
      },
      boolean: {
        pattern: /(^|[^\w.-])(?:false|true)(?![\w.-])/,
        lookbehind: !0
      },
      number: {
        pattern: /(^|[^/\w.-])-?(?:NAN|INFINITY|0x(?:[\dA-F]+(?:\.[\dA-F]*)?|\.[\dA-F]+)(?:p[+-]?[\dA-F]+)?|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?)[dflst]?(?![\w.-])/i,
        lookbehind: !0
      },
      label: {
        pattern: /(:)\w+/,
        lookbehind: !0,
        alias: "property"
      },
      operator: /->|\.\.|[\[=]/,
      punctuation: /[{}(),;:]/
    };
  }
  return E0;
}
var y0, gw;
function GH() {
  if (gw) return y0;
  gw = 1, y0 = e, e.displayName = "smalltalk", e.aliases = [];
  function e(t) {
    t.languages.smalltalk = {
      comment: {
        pattern: /"(?:""|[^"])*"/,
        greedy: !0
      },
      char: {
        pattern: /\$./,
        greedy: !0
      },
      string: {
        pattern: /'(?:''|[^'])*'/,
        greedy: !0
      },
      symbol: /#[\da-z]+|#(?:-|([+\/\\*~<>=@%|&?!])\1?)|#(?=\()/i,
      "block-arguments": {
        pattern: /(\[\s*):[^\[|]*\|/,
        lookbehind: !0,
        inside: {
          variable: /:[\da-z]+/i,
          punctuation: /\|/
        }
      },
      "temporary-variables": {
        pattern: /\|[^|]+\|/,
        inside: {
          variable: /[\da-z]+/i,
          punctuation: /\|/
        }
      },
      keyword: /\b(?:new|nil|self|super)\b/,
      boolean: /\b(?:false|true)\b/,
      number: [
        /\d+r-?[\dA-Z]+(?:\.[\dA-Z]+)?(?:e-?\d+)?/,
        /\b\d+(?:\.\d+)?(?:e-?\d+)?/
      ],
      operator: /[<=]=?|:=|~[~=]|\/\/?|\\\\|>[>=]?|[!^+\-*&|,@]/,
      punctuation: /[.;:?\[\](){}]/
    };
  }
  return y0;
}
var T0, mw;
function qH() {
  if (mw) return T0;
  mw = 1;
  var e = On();
  T0 = t, t.displayName = "smarty", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      r.languages.smarty = {
        comment: {
          pattern: /^\{\*[\s\S]*?\*\}/,
          greedy: !0
        },
        "embedded-php": {
          pattern: /^\{php\}[\s\S]*?\{\/php\}/,
          greedy: !0,
          inside: {
            smarty: {
              pattern: /^\{php\}|\{\/php\}$/,
              inside: null
              // see below
            },
            php: {
              pattern: /[\s\S]+/,
              alias: "language-php",
              inside: r.languages.php
            }
          }
        },
        string: [
          {
            pattern: /"(?:\\.|[^"\\\r\n])*"/,
            greedy: !0,
            inside: {
              interpolation: {
                pattern: /\{[^{}]*\}|`[^`]*`/,
                inside: {
                  "interpolation-punctuation": {
                    pattern: /^[{`]|[`}]$/,
                    alias: "punctuation"
                  },
                  expression: {
                    pattern: /[\s\S]+/,
                    inside: null
                    // see below
                  }
                }
              },
              variable: /\$\w+/
            }
          },
          {
            pattern: /'(?:\\.|[^'\\\r\n])*'/,
            greedy: !0
          }
        ],
        keyword: {
          pattern: /(^\{\/?)[a-z_]\w*\b(?!\()/i,
          lookbehind: !0,
          greedy: !0
        },
        delimiter: {
          pattern: /^\{\/?|\}$/,
          greedy: !0,
          alias: "punctuation"
        },
        number: /\b0x[\dA-Fa-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][-+]?\d+)?/,
        variable: [
          /\$(?!\d)\w+/,
          /#(?!\d)\w+#/,
          {
            pattern: /(\.|->|\w\s*=)(?!\d)\w+\b(?!\()/,
            lookbehind: !0
          },
          {
            pattern: /(\[)(?!\d)\w+(?=\])/,
            lookbehind: !0
          }
        ],
        function: {
          pattern: /(\|\s*)@?[a-z_]\w*|\b[a-z_]\w*(?=\()/i,
          lookbehind: !0
        },
        "attr-name": /\b[a-z_]\w*(?=\s*=)/i,
        boolean: /\b(?:false|no|off|on|true|yes)\b/,
        punctuation: /[\[\](){}.,:`]|->/,
        operator: [
          /[+\-*\/%]|==?=?|[!<>]=?|&&|\|\|?/,
          /\bis\s+(?:not\s+)?(?:div|even|odd)(?:\s+by)?\b/,
          /\b(?:and|eq|gt?e|gt|lt?e|lt|mod|neq?|not|or)\b/
        ]
      }, r.languages.smarty["embedded-php"].inside.smarty.inside = r.languages.smarty, r.languages.smarty.string[0].inside.interpolation.inside.expression.inside = r.languages.smarty;
      var o = /"(?:\\.|[^"\\\r\n])*"|'(?:\\.|[^'\\\r\n])*'/, s = RegExp(
        // comments
        /\{\*[\s\S]*?\*\}/.source + "|" + // php tags
        /\{php\}[\s\S]*?\{\/php\}/.source + "|" + // smarty blocks
        /\{(?:[^{}"']|<str>|\{(?:[^{}"']|<str>|\{(?:[^{}"']|<str>)*\})*\})*\}/.source.replace(
          /<str>/g,
          function() {
            return o.source;
          }
        ),
        "g"
      );
      r.hooks.add("before-tokenize", function(u) {
        var c = "{literal}", p = "{/literal}", f = !1;
        r.languages["markup-templating"].buildPlaceholders(
          u,
          "smarty",
          s,
          function(b) {
            return b === p && (f = !1), f ? !1 : (b === c && (f = !0), !0);
          }
        );
      }), r.hooks.add("after-tokenize", function(u) {
        r.languages["markup-templating"].tokenizePlaceholders(u, "smarty");
      });
    }(n);
  }
  return T0;
}
var S0, bw;
function jH() {
  if (bw) return S0;
  bw = 1, S0 = e, e.displayName = "sml", e.aliases = ["smlnj"];
  function e(t) {
    (function(n) {
      var r = /\b(?:abstype|and|andalso|as|case|datatype|do|else|end|eqtype|exception|fn|fun|functor|handle|if|in|include|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|sharing|sig|signature|struct|structure|then|type|val|where|while|with|withtype)\b/i;
      n.languages.sml = {
        // allow one level of nesting
        comment: /\(\*(?:[^*(]|\*(?!\))|\((?!\*)|\(\*(?:[^*(]|\*(?!\))|\((?!\*))*\*\))*\*\)/,
        string: {
          pattern: /#?"(?:[^"\\]|\\.)*"/,
          greedy: !0
        },
        "class-name": [
          {
            // This is only an approximation since the real grammar is context-free
            //
            // Why the main loop so complex?
            // The main loop is approximately the same as /(?:\s*(?:[*,]|->)\s*<TERMINAL>)*/ which is, obviously, a lot
            // simpler. The difference is that if a comma is the last iteration of the loop, then the terminal must be
            // followed by a long identifier.
            pattern: RegExp(
              /((?:^|[^:]):\s*)<TERMINAL>(?:\s*(?:(?:\*|->)\s*<TERMINAL>|,\s*<TERMINAL>(?:(?=<NOT-LAST>)|(?!<NOT-LAST>)\s+<LONG-ID>)))*/.source.replace(/<NOT-LAST>/g, function() {
                return /\s*(?:[*,]|->)/.source;
              }).replace(/<TERMINAL>/g, function() {
                return /(?:'[\w']*|<LONG-ID>|\((?:[^()]|\([^()]*\))*\)|\{(?:[^{}]|\{[^{}]*\})*\})(?:\s+<LONG-ID>)*/.source;
              }).replace(/<LONG-ID>/g, function() {
                return /(?!<KEYWORD>)[a-z\d_][\w'.]*/.source;
              }).replace(/<KEYWORD>/g, function() {
                return r.source;
              }),
              "i"
            ),
            lookbehind: !0,
            greedy: !0,
            inside: null
            // see below
          },
          {
            pattern: /((?:^|[^\w'])(?:datatype|exception|functor|signature|structure|type)\s+)[a-z_][\w'.]*/i,
            lookbehind: !0
          }
        ],
        function: {
          pattern: /((?:^|[^\w'])fun\s+)[a-z_][\w'.]*/i,
          lookbehind: !0
        },
        keyword: r,
        variable: {
          pattern: /(^|[^\w'])'[\w']*/,
          lookbehind: !0
        },
        number: /~?\b(?:\d+(?:\.\d+)?(?:e~?\d+)?|0x[\da-f]+)\b/i,
        word: {
          pattern: /\b0w(?:\d+|x[\da-f]+)\b/i,
          alias: "constant"
        },
        boolean: /\b(?:false|true)\b/i,
        operator: /\.\.\.|:[>=:]|=>?|->|[<>]=?|[!+\-*/^#|@~]/,
        punctuation: /[(){}\[\].:,;]/
      }, n.languages.sml["class-name"][0].inside = n.languages.sml, n.languages.smlnj = n.languages.sml;
    })(t);
  }
  return S0;
}
var _0, Ew;
function VH() {
  if (Ew) return _0;
  Ew = 1, _0 = e, e.displayName = "solidity", e.aliases = ["sol"];
  function e(t) {
    t.languages.solidity = t.languages.extend("clike", {
      "class-name": {
        pattern: /(\b(?:contract|enum|interface|library|new|struct|using)\s+)(?!\d)[\w$]+/,
        lookbehind: !0
      },
      keyword: /\b(?:_|anonymous|as|assembly|assert|break|calldata|case|constant|constructor|continue|contract|default|delete|do|else|emit|enum|event|external|for|from|function|if|import|indexed|inherited|interface|internal|is|let|library|mapping|memory|modifier|new|payable|pragma|private|public|pure|require|returns?|revert|selfdestruct|solidity|storage|struct|suicide|switch|this|throw|using|var|view|while)\b/,
      operator: /=>|->|:=|=:|\*\*|\+\+|--|\|\||&&|<<=?|>>=?|[-+*/%^&|<>!=]=?|[~?]/
    }), t.languages.insertBefore("solidity", "keyword", {
      builtin: /\b(?:address|bool|byte|u?int(?:8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?|string|bytes(?:[1-9]|[12]\d|3[0-2])?)\b/
    }), t.languages.insertBefore("solidity", "number", {
      version: {
        pattern: /([<>]=?|\^)\d+\.\d+\.\d+\b/,
        lookbehind: !0,
        alias: "number"
      }
    }), t.languages.sol = t.languages.solidity;
  }
  return _0;
}
var v0, yw;
function WH() {
  if (yw) return v0;
  yw = 1, v0 = e, e.displayName = "solutionFile", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = {
        // https://en.wikipedia.org/wiki/Universally_unique_identifier#Format
        pattern: /\{[\da-f]{8}-[\da-f]{4}-[\da-f]{4}-[\da-f]{4}-[\da-f]{12}\}/i,
        alias: "constant",
        inside: {
          punctuation: /[{}]/
        }
      };
      n.languages["solution-file"] = {
        comment: {
          pattern: /#.*/,
          greedy: !0
        },
        string: {
          pattern: /"[^"\r\n]*"|'[^'\r\n]*'/,
          greedy: !0,
          inside: {
            guid: r
          }
        },
        object: {
          // Foo
          //   Bar("abs") = 9
          //   EndBar
          //   Prop = TRUE
          // EndFoo
          pattern: /^([ \t]*)(?:([A-Z]\w*)\b(?=.*(?:\r\n?|\n)(?:\1[ \t].*(?:\r\n?|\n))*\1End\2(?=[ \t]*$))|End[A-Z]\w*(?=[ \t]*$))/m,
          lookbehind: !0,
          greedy: !0,
          alias: "keyword"
        },
        property: {
          pattern: /^([ \t]*)(?!\s)[^\r\n"#=()]*[^\s"#=()](?=\s*=)/m,
          lookbehind: !0,
          inside: {
            guid: r
          }
        },
        guid: r,
        number: /\b\d+(?:\.\d+)*\b/,
        boolean: /\b(?:FALSE|TRUE)\b/,
        operator: /=/,
        punctuation: /[(),]/
      }, n.languages.sln = n.languages["solution-file"];
    })(t);
  }
  return v0;
}
var A0, Tw;
function YH() {
  if (Tw) return A0;
  Tw = 1;
  var e = On();
  A0 = t, t.displayName = "soy", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      var o = /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, s = /\b\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\b|\b0x[\dA-F]+\b/;
      r.languages.soy = {
        comment: [
          /\/\*[\s\S]*?\*\//,
          {
            pattern: /(\s)\/\/.*/,
            lookbehind: !0,
            greedy: !0
          }
        ],
        "command-arg": {
          pattern: /(\{+\/?\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\s+)\.?[\w.]+/,
          lookbehind: !0,
          alias: "string",
          inside: {
            punctuation: /\./
          }
        },
        parameter: {
          pattern: /(\{+\/?\s*@?param\??\s+)\.?[\w.]+/,
          lookbehind: !0,
          alias: "variable"
        },
        keyword: [
          {
            pattern: /(\{+\/?[^\S\r\n]*)(?:\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\??|rb|sp|switch|template|xid)/,
            lookbehind: !0
          },
          /\b(?:any|as|attributes|bool|css|float|html|in|int|js|list|map|null|number|string|uri)\b/
        ],
        delimiter: {
          pattern: /^\{+\/?|\/?\}+$/,
          alias: "punctuation"
        },
        property: /\w+(?==)/,
        variable: {
          pattern: /\$[^\W\d]\w*(?:\??(?:\.\w+|\[[^\]]+\]))*/,
          inside: {
            string: {
              pattern: o,
              greedy: !0
            },
            number: s,
            punctuation: /[\[\].?]/
          }
        },
        string: {
          pattern: o,
          greedy: !0
        },
        function: [
          /\w+(?=\()/,
          {
            pattern: /(\|[^\S\r\n]*)\w+/,
            lookbehind: !0
          }
        ],
        boolean: /\b(?:false|true)\b/,
        number: s,
        operator: /\?:?|<=?|>=?|==?|!=|[+*/%-]|\b(?:and|not|or)\b/,
        punctuation: /[{}()\[\]|.,:]/
      }, r.hooks.add("before-tokenize", function(u) {
        var c = /\{\{.+?\}\}|\{.+?\}|\s\/\/.*|\/\*[\s\S]*?\*\//g, p = "{literal}", f = "{/literal}", b = !1;
        r.languages["markup-templating"].buildPlaceholders(
          u,
          "soy",
          c,
          function(g) {
            return g === f && (b = !1), b ? !1 : (g === p && (b = !0), !0);
          }
        );
      }), r.hooks.add("after-tokenize", function(u) {
        r.languages["markup-templating"].tokenizePlaceholders(u, "soy");
      });
    }(n);
  }
  return A0;
}
var k0, Sw;
function Zx() {
  if (Sw) return k0;
  Sw = 1, k0 = e, e.displayName = "turtle", e.aliases = [];
  function e(t) {
    t.languages.turtle = {
      comment: {
        pattern: /#.*/,
        greedy: !0
      },
      "multiline-string": {
        pattern: /"""(?:(?:""?)?(?:[^"\\]|\\.))*"""|'''(?:(?:''?)?(?:[^'\\]|\\.))*'''/,
        greedy: !0,
        alias: "string",
        inside: {
          comment: /#.*/
        }
      },
      string: {
        pattern: /"(?:[^\\"\r\n]|\\.)*"|'(?:[^\\'\r\n]|\\.)*'/,
        greedy: !0
      },
      url: {
        pattern: /<(?:[^\x00-\x20<>"{}|^`\\]|\\(?:u[\da-fA-F]{4}|U[\da-fA-F]{8}))*>/,
        greedy: !0,
        inside: {
          punctuation: /[<>]/
        }
      },
      function: {
        pattern: /(?:(?![-.\d\xB7])[-.\w\xB7\xC0-\uFFFD]+)?:(?:(?![-.])(?:[-.:\w\xC0-\uFFFD]|%[\da-f]{2}|\\.)+)?/i,
        inside: {
          "local-name": {
            pattern: /([^:]*:)[\s\S]+/,
            lookbehind: !0
          },
          prefix: {
            pattern: /[\s\S]+/,
            inside: {
              punctuation: /:/
            }
          }
        }
      },
      number: /[+-]?\b\d+(?:\.\d*)?(?:e[+-]?\d+)?/i,
      punctuation: /[{}.,;()[\]]|\^\^/,
      boolean: /\b(?:false|true)\b/,
      keyword: [/(?:\ba|@prefix|@base)\b|=/, /\b(?:base|graph|prefix)\b/i],
      tag: {
        pattern: /@[a-z]+(?:-[a-z\d]+)*/i,
        inside: {
          punctuation: /@/
        }
      }
    }, t.languages.trig = t.languages.turtle;
  }
  return k0;
}
var C0, _w;
function KH() {
  if (_w) return C0;
  _w = 1;
  var e = Zx();
  C0 = t, t.displayName = "sparql", t.aliases = ["rq"];
  function t(n) {
    n.register(e), n.languages.sparql = n.languages.extend("turtle", {
      boolean: /\b(?:false|true)\b/i,
      variable: {
        pattern: /[?$]\w+/,
        greedy: !0
      }
    }), n.languages.insertBefore("sparql", "punctuation", {
      keyword: [
        /\b(?:A|ADD|ALL|AS|ASC|ASK|BNODE|BY|CLEAR|CONSTRUCT|COPY|CREATE|DATA|DEFAULT|DELETE|DESC|DESCRIBE|DISTINCT|DROP|EXISTS|FILTER|FROM|GROUP|HAVING|INSERT|INTO|LIMIT|LOAD|MINUS|MOVE|NAMED|NOT|NOW|OFFSET|OPTIONAL|ORDER|RAND|REDUCED|SELECT|SEPARATOR|SERVICE|SILENT|STRUUID|UNION|USING|UUID|VALUES|WHERE)\b/i,
        /\b(?:ABS|AVG|BIND|BOUND|CEIL|COALESCE|CONCAT|CONTAINS|COUNT|DATATYPE|DAY|ENCODE_FOR_URI|FLOOR|GROUP_CONCAT|HOURS|IF|IRI|isBLANK|isIRI|isLITERAL|isNUMERIC|isURI|LANG|LANGMATCHES|LCASE|MAX|MD5|MIN|MINUTES|MONTH|REGEX|REPLACE|ROUND|sameTerm|SAMPLE|SECONDS|SHA1|SHA256|SHA384|SHA512|STR|STRAFTER|STRBEFORE|STRDT|STRENDS|STRLANG|STRLEN|STRSTARTS|SUBSTR|SUM|TIMEZONE|TZ|UCASE|URI|YEAR)\b(?=\s*\()/i,
        /\b(?:BASE|GRAPH|PREFIX)\b/i
      ]
    }), n.languages.rq = n.languages.sparql;
  }
  return C0;
}
var w0, vw;
function XH() {
  if (vw) return w0;
  vw = 1, w0 = e, e.displayName = "splunkSpl", e.aliases = [];
  function e(t) {
    t.languages["splunk-spl"] = {
      comment: /`comment\("(?:\\.|[^\\"])*"\)`/,
      string: {
        pattern: /"(?:\\.|[^\\"])*"/,
        greedy: !0
      },
      // https://docs.splunk.com/Documentation/Splunk/7.3.0/SearchReference/ListOfSearchCommands
      keyword: /\b(?:abstract|accum|addcoltotals|addinfo|addtotals|analyzefields|anomalies|anomalousvalue|anomalydetection|append|appendcols|appendcsv|appendlookup|appendpipe|arules|associate|audit|autoregress|bin|bucket|bucketdir|chart|cluster|cofilter|collect|concurrency|contingency|convert|correlate|datamodel|dbinspect|dedup|delete|delta|diff|erex|eval|eventcount|eventstats|extract|fieldformat|fields|fieldsummary|filldown|fillnull|findtypes|folderize|foreach|format|from|gauge|gentimes|geom|geomfilter|geostats|head|highlight|history|iconify|input|inputcsv|inputlookup|iplocation|join|kmeans|kv|kvform|loadjob|localize|localop|lookup|makecontinuous|makemv|makeresults|map|mcollect|metadata|metasearch|meventcollect|mstats|multikv|multisearch|mvcombine|mvexpand|nomv|outlier|outputcsv|outputlookup|outputtext|overlap|pivot|predict|rangemap|rare|regex|relevancy|reltime|rename|replace|rest|return|reverse|rex|rtorder|run|savedsearch|script|scrub|search|searchtxn|selfjoin|sendemail|set|setfields|sichart|sirare|sistats|sitimechart|sitop|sort|spath|stats|strcat|streamstats|table|tags|tail|timechart|timewrap|top|transaction|transpose|trendline|tscollect|tstats|typeahead|typelearner|typer|union|uniq|untable|where|x11|xmlkv|xmlunescape|xpath|xyseries)\b/i,
      "operator-word": {
        pattern: /\b(?:and|as|by|not|or|xor)\b/i,
        alias: "operator"
      },
      function: /\b\w+(?=\s*\()/,
      property: /\b\w+(?=\s*=(?!=))/,
      date: {
        // MM/DD/YYYY(:HH:MM:SS)?
        pattern: /\b\d{1,2}\/\d{1,2}\/\d{1,4}(?:(?::\d{1,2}){3})?\b/,
        alias: "number"
      },
      number: /\b\d+(?:\.\d+)?\b/,
      boolean: /\b(?:f|false|t|true)\b/i,
      operator: /[<>=]=?|[-+*/%|]/,
      punctuation: /[()[\],]/
    };
  }
  return w0;
}
var I0, Aw;
function QH() {
  if (Aw) return I0;
  Aw = 1, I0 = e, e.displayName = "sqf", e.aliases = [];
  function e(t) {
    t.languages.sqf = t.languages.extend("clike", {
      string: {
        pattern: /"(?:(?:"")?[^"])*"(?!")|'(?:[^'])*'/,
        greedy: !0
      },
      keyword: /\b(?:breakOut|breakTo|call|case|catch|default|do|echo|else|execFSM|execVM|exitWith|for|forEach|forEachMember|forEachMemberAgent|forEachMemberTeam|from|goto|if|nil|preprocessFile|preprocessFileLineNumbers|private|scopeName|spawn|step|switch|then|throw|to|try|while|with)\b/i,
      boolean: /\b(?:false|true)\b/i,
      function: /\b(?:abs|accTime|acos|action|actionIDs|actionKeys|actionKeysImages|actionKeysNames|actionKeysNamesArray|actionName|actionParams|activateAddons|activatedAddons|activateKey|add3DENConnection|add3DENEventHandler|add3DENLayer|addAction|addBackpack|addBackpackCargo|addBackpackCargoGlobal|addBackpackGlobal|addCamShake|addCuratorAddons|addCuratorCameraArea|addCuratorEditableObjects|addCuratorEditingArea|addCuratorPoints|addEditorObject|addEventHandler|addForce|addForceGeneratorRTD|addGoggles|addGroupIcon|addHandgunItem|addHeadgear|addItem|addItemCargo|addItemCargoGlobal|addItemPool|addItemToBackpack|addItemToUniform|addItemToVest|addLiveStats|addMagazine|addMagazineAmmoCargo|addMagazineCargo|addMagazineCargoGlobal|addMagazineGlobal|addMagazinePool|addMagazines|addMagazineTurret|addMenu|addMenuItem|addMissionEventHandler|addMPEventHandler|addMusicEventHandler|addOwnedMine|addPlayerScores|addPrimaryWeaponItem|addPublicVariableEventHandler|addRating|addResources|addScore|addScoreSide|addSecondaryWeaponItem|addSwitchableUnit|addTeamMember|addToRemainsCollector|addTorque|addUniform|addVehicle|addVest|addWaypoint|addWeapon|addWeaponCargo|addWeaponCargoGlobal|addWeaponGlobal|addWeaponItem|addWeaponPool|addWeaponTurret|admin|agent|agents|AGLToASL|aimedAtTarget|aimPos|airDensityCurveRTD|airDensityRTD|airplaneThrottle|airportSide|AISFinishHeal|alive|all3DENEntities|allAirports|allControls|allCurators|allCutLayers|allDead|allDeadMen|allDisplays|allGroups|allMapMarkers|allMines|allMissionObjects|allow3DMode|allowCrewInImmobile|allowCuratorLogicIgnoreAreas|allowDamage|allowDammage|allowFileOperations|allowFleeing|allowGetIn|allowSprint|allPlayers|allSimpleObjects|allSites|allTurrets|allUnits|allUnitsUAV|allVariables|ammo|ammoOnPylon|animate|animateBay|animateDoor|animatePylon|animateSource|animationNames|animationPhase|animationSourcePhase|animationState|append|apply|armoryPoints|arrayIntersect|asin|ASLToAGL|ASLToATL|assert|assignAsCargo|assignAsCargoIndex|assignAsCommander|assignAsDriver|assignAsGunner|assignAsTurret|assignCurator|assignedCargo|assignedCommander|assignedDriver|assignedGunner|assignedItems|assignedTarget|assignedTeam|assignedVehicle|assignedVehicleRole|assignItem|assignTeam|assignToAirport|atan|atan2|atg|ATLToASL|attachedObject|attachedObjects|attachedTo|attachObject|attachTo|attackEnabled|backpack|backpackCargo|backpackContainer|backpackItems|backpackMagazines|backpackSpaceFor|behaviour|benchmark|binocular|blufor|boundingBox|boundingBoxReal|boundingCenter|briefingName|buildingExit|buildingPos|buldozer_EnableRoadDiag|buldozer_IsEnabledRoadDiag|buldozer_LoadNewRoads|buldozer_reloadOperMap|buttonAction|buttonSetAction|cadetMode|callExtension|camCommand|camCommit|camCommitPrepared|camCommitted|camConstuctionSetParams|camCreate|camDestroy|cameraEffect|cameraEffectEnableHUD|cameraInterest|cameraOn|cameraView|campaignConfigFile|camPreload|camPreloaded|camPrepareBank|camPrepareDir|camPrepareDive|camPrepareFocus|camPrepareFov|camPrepareFovRange|camPreparePos|camPrepareRelPos|camPrepareTarget|camSetBank|camSetDir|camSetDive|camSetFocus|camSetFov|camSetFovRange|camSetPos|camSetRelPos|camSetTarget|camTarget|camUseNVG|canAdd|canAddItemToBackpack|canAddItemToUniform|canAddItemToVest|cancelSimpleTaskDestination|canFire|canMove|canSlingLoad|canStand|canSuspend|canTriggerDynamicSimulation|canUnloadInCombat|canVehicleCargo|captive|captiveNum|cbChecked|cbSetChecked|ceil|channelEnabled|cheatsEnabled|checkAIFeature|checkVisibility|civilian|className|clear3DENAttribute|clear3DENInventory|clearAllItemsFromBackpack|clearBackpackCargo|clearBackpackCargoGlobal|clearForcesRTD|clearGroupIcons|clearItemCargo|clearItemCargoGlobal|clearItemPool|clearMagazineCargo|clearMagazineCargoGlobal|clearMagazinePool|clearOverlay|clearRadio|clearVehicleInit|clearWeaponCargo|clearWeaponCargoGlobal|clearWeaponPool|clientOwner|closeDialog|closeDisplay|closeOverlay|collapseObjectTree|collect3DENHistory|collectiveRTD|combatMode|commandArtilleryFire|commandChat|commander|commandFire|commandFollow|commandFSM|commandGetOut|commandingMenu|commandMove|commandRadio|commandStop|commandSuppressiveFire|commandTarget|commandWatch|comment|commitOverlay|compile|compileFinal|completedFSM|composeText|configClasses|configFile|configHierarchy|configName|configNull|configProperties|configSourceAddonList|configSourceMod|configSourceModList|confirmSensorTarget|connectTerminalToUAV|controlNull|controlsGroupCtrl|copyFromClipboard|copyToClipboard|copyWaypoints|cos|count|countEnemy|countFriendly|countSide|countType|countUnknown|create3DENComposition|create3DENEntity|createAgent|createCenter|createDialog|createDiaryLink|createDiaryRecord|createDiarySubject|createDisplay|createGearDialog|createGroup|createGuardedPoint|createLocation|createMarker|createMarkerLocal|createMenu|createMine|createMissionDisplay|createMPCampaignDisplay|createSimpleObject|createSimpleTask|createSite|createSoundSource|createTask|createTeam|createTrigger|createUnit|createVehicle|createVehicleCrew|createVehicleLocal|crew|ctAddHeader|ctAddRow|ctClear|ctCurSel|ctData|ctFindHeaderRows|ctFindRowHeader|ctHeaderControls|ctHeaderCount|ctRemoveHeaders|ctRemoveRows|ctrlActivate|ctrlAddEventHandler|ctrlAngle|ctrlAutoScrollDelay|ctrlAutoScrollRewind|ctrlAutoScrollSpeed|ctrlChecked|ctrlClassName|ctrlCommit|ctrlCommitted|ctrlCreate|ctrlDelete|ctrlEnable|ctrlEnabled|ctrlFade|ctrlHTMLLoaded|ctrlIDC|ctrlIDD|ctrlMapAnimAdd|ctrlMapAnimClear|ctrlMapAnimCommit|ctrlMapAnimDone|ctrlMapCursor|ctrlMapMouseOver|ctrlMapScale|ctrlMapScreenToWorld|ctrlMapWorldToScreen|ctrlModel|ctrlModelDirAndUp|ctrlModelScale|ctrlParent|ctrlParentControlsGroup|ctrlPosition|ctrlRemoveAllEventHandlers|ctrlRemoveEventHandler|ctrlScale|ctrlSetActiveColor|ctrlSetAngle|ctrlSetAutoScrollDelay|ctrlSetAutoScrollRewind|ctrlSetAutoScrollSpeed|ctrlSetBackgroundColor|ctrlSetChecked|ctrlSetDisabledColor|ctrlSetEventHandler|ctrlSetFade|ctrlSetFocus|ctrlSetFont|ctrlSetFontH1|ctrlSetFontH1B|ctrlSetFontH2|ctrlSetFontH2B|ctrlSetFontH3|ctrlSetFontH3B|ctrlSetFontH4|ctrlSetFontH4B|ctrlSetFontH5|ctrlSetFontH5B|ctrlSetFontH6|ctrlSetFontH6B|ctrlSetFontHeight|ctrlSetFontHeightH1|ctrlSetFontHeightH2|ctrlSetFontHeightH3|ctrlSetFontHeightH4|ctrlSetFontHeightH5|ctrlSetFontHeightH6|ctrlSetFontHeightSecondary|ctrlSetFontP|ctrlSetFontPB|ctrlSetFontSecondary|ctrlSetForegroundColor|ctrlSetModel|ctrlSetModelDirAndUp|ctrlSetModelScale|ctrlSetPixelPrecision|ctrlSetPosition|ctrlSetScale|ctrlSetStructuredText|ctrlSetText|ctrlSetTextColor|ctrlSetTextColorSecondary|ctrlSetTextSecondary|ctrlSetTooltip|ctrlSetTooltipColorBox|ctrlSetTooltipColorShade|ctrlSetTooltipColorText|ctrlShow|ctrlShown|ctrlText|ctrlTextHeight|ctrlTextSecondary|ctrlTextWidth|ctrlType|ctrlVisible|ctRowControls|ctRowCount|ctSetCurSel|ctSetData|ctSetHeaderTemplate|ctSetRowTemplate|ctSetValue|ctValue|curatorAddons|curatorCamera|curatorCameraArea|curatorCameraAreaCeiling|curatorCoef|curatorEditableObjects|curatorEditingArea|curatorEditingAreaType|curatorMouseOver|curatorPoints|curatorRegisteredObjects|curatorSelected|curatorWaypointCost|current3DENOperation|currentChannel|currentCommand|currentMagazine|currentMagazineDetail|currentMagazineDetailTurret|currentMagazineTurret|currentMuzzle|currentNamespace|currentTask|currentTasks|currentThrowable|currentVisionMode|currentWaypoint|currentWeapon|currentWeaponMode|currentWeaponTurret|currentZeroing|cursorObject|cursorTarget|customChat|customRadio|cutFadeOut|cutObj|cutRsc|cutText|damage|date|dateToNumber|daytime|deActivateKey|debriefingText|debugFSM|debugLog|deg|delete3DENEntities|deleteAt|deleteCenter|deleteCollection|deleteEditorObject|deleteGroup|deleteGroupWhenEmpty|deleteIdentity|deleteLocation|deleteMarker|deleteMarkerLocal|deleteRange|deleteResources|deleteSite|deleteStatus|deleteTeam|deleteVehicle|deleteVehicleCrew|deleteWaypoint|detach|detectedMines|diag_activeMissionFSMs|diag_activeScripts|diag_activeSQFScripts|diag_activeSQSScripts|diag_captureFrame|diag_captureFrameToFile|diag_captureSlowFrame|diag_codePerformance|diag_drawMode|diag_dynamicSimulationEnd|diag_enable|diag_enabled|diag_fps|diag_fpsMin|diag_frameNo|diag_lightNewLoad|diag_list|diag_log|diag_logSlowFrame|diag_mergeConfigFile|diag_recordTurretLimits|diag_setLightNew|diag_tickTime|diag_toggle|dialog|diarySubjectExists|didJIP|didJIPOwner|difficulty|difficultyEnabled|difficultyEnabledRTD|difficultyOption|direction|directSay|disableAI|disableCollisionWith|disableConversation|disableDebriefingStats|disableMapIndicators|disableNVGEquipment|disableRemoteSensors|disableSerialization|disableTIEquipment|disableUAVConnectability|disableUserInput|displayAddEventHandler|displayCtrl|displayNull|displayParent|displayRemoveAllEventHandlers|displayRemoveEventHandler|displaySetEventHandler|dissolveTeam|distance|distance2D|distanceSqr|distributionRegion|do3DENAction|doArtilleryFire|doFire|doFollow|doFSM|doGetOut|doMove|doorPhase|doStop|doSuppressiveFire|doTarget|doWatch|drawArrow|drawEllipse|drawIcon|drawIcon3D|drawLine|drawLine3D|drawLink|drawLocation|drawPolygon|drawRectangle|drawTriangle|driver|drop|dynamicSimulationDistance|dynamicSimulationDistanceCoef|dynamicSimulationEnabled|dynamicSimulationSystemEnabled|east|edit3DENMissionAttributes|editObject|editorSetEventHandler|effectiveCommander|emptyPositions|enableAI|enableAIFeature|enableAimPrecision|enableAttack|enableAudioFeature|enableAutoStartUpRTD|enableAutoTrimRTD|enableCamShake|enableCaustics|enableChannel|enableCollisionWith|enableCopilot|enableDebriefingStats|enableDiagLegend|enableDynamicSimulation|enableDynamicSimulationSystem|enableEndDialog|enableEngineArtillery|enableEnvironment|enableFatigue|enableGunLights|enableInfoPanelComponent|enableIRLasers|enableMimics|enablePersonTurret|enableRadio|enableReload|enableRopeAttach|enableSatNormalOnDetail|enableSaving|enableSentences|enableSimulation|enableSimulationGlobal|enableStamina|enableStressDamage|enableTeamSwitch|enableTraffic|enableUAVConnectability|enableUAVWaypoints|enableVehicleCargo|enableVehicleSensor|enableWeaponDisassembly|endl|endLoadingScreen|endMission|engineOn|enginesIsOnRTD|enginesPowerRTD|enginesRpmRTD|enginesTorqueRTD|entities|environmentEnabled|estimatedEndServerTime|estimatedTimeLeft|evalObjectArgument|everyBackpack|everyContainer|exec|execEditorScript|exp|expectedDestination|exportJIPMessages|eyeDirection|eyePos|face|faction|fadeMusic|fadeRadio|fadeSound|fadeSpeech|failMission|fillWeaponsFromPool|find|findCover|findDisplay|findEditorObject|findEmptyPosition|findEmptyPositionReady|findIf|findNearestEnemy|finishMissionInit|finite|fire|fireAtTarget|firstBackpack|flag|flagAnimationPhase|flagOwner|flagSide|flagTexture|fleeing|floor|flyInHeight|flyInHeightASL|fog|fogForecast|fogParams|forceAddUniform|forceAtPositionRTD|forcedMap|forceEnd|forceFlagTexture|forceFollowRoad|forceGeneratorRTD|forceMap|forceRespawn|forceSpeed|forceWalk|forceWeaponFire|forceWeatherChange|forgetTarget|format|formation|formationDirection|formationLeader|formationMembers|formationPosition|formationTask|formatText|formLeader|freeLook|fromEditor|fuel|fullCrew|gearIDCAmmoCount|gearSlotAmmoCount|gearSlotData|get3DENActionState|get3DENAttribute|get3DENCamera|get3DENConnections|get3DENEntity|get3DENEntityID|get3DENGrid|get3DENIconsVisible|get3DENLayerEntities|get3DENLinesVisible|get3DENMissionAttribute|get3DENMouseOver|get3DENSelected|getAimingCoef|getAllEnvSoundControllers|getAllHitPointsDamage|getAllOwnedMines|getAllSoundControllers|getAmmoCargo|getAnimAimPrecision|getAnimSpeedCoef|getArray|getArtilleryAmmo|getArtilleryComputerSettings|getArtilleryETA|getAssignedCuratorLogic|getAssignedCuratorUnit|getBackpackCargo|getBleedingRemaining|getBurningValue|getCameraViewDirection|getCargoIndex|getCenterOfMass|getClientState|getClientStateNumber|getCompatiblePylonMagazines|getConnectedUAV|getContainerMaxLoad|getCursorObjectParams|getCustomAimCoef|getDammage|getDescription|getDir|getDirVisual|getDLCAssetsUsage|getDLCAssetsUsageByName|getDLCs|getDLCUsageTime|getEditorCamera|getEditorMode|getEditorObjectScope|getElevationOffset|getEngineTargetRpmRTD|getEnvSoundController|getFatigue|getFieldManualStartPage|getForcedFlagTexture|getFriend|getFSMVariable|getFuelCargo|getGroupIcon|getGroupIconParams|getGroupIcons|getHideFrom|getHit|getHitIndex|getHitPointDamage|getItemCargo|getMagazineCargo|getMarkerColor|getMarkerPos|getMarkerSize|getMarkerType|getMass|getMissionConfig|getMissionConfigValue|getMissionDLCs|getMissionLayerEntities|getMissionLayers|getModelInfo|getMousePosition|getMusicPlayedTime|getNumber|getObjectArgument|getObjectChildren|getObjectDLC|getObjectMaterials|getObjectProxy|getObjectTextures|getObjectType|getObjectViewDistance|getOxygenRemaining|getPersonUsedDLCs|getPilotCameraDirection|getPilotCameraPosition|getPilotCameraRotation|getPilotCameraTarget|getPlateNumber|getPlayerChannel|getPlayerScores|getPlayerUID|getPlayerUIDOld|getPos|getPosASL|getPosASLVisual|getPosASLW|getPosATL|getPosATLVisual|getPosVisual|getPosWorld|getPylonMagazines|getRelDir|getRelPos|getRemoteSensorsDisabled|getRepairCargo|getResolution|getRotorBrakeRTD|getShadowDistance|getShotParents|getSlingLoad|getSoundController|getSoundControllerResult|getSpeed|getStamina|getStatValue|getSuppression|getTerrainGrid|getTerrainHeightASL|getText|getTotalDLCUsageTime|getTrimOffsetRTD|getUnitLoadout|getUnitTrait|getUserMFDText|getUserMFDValue|getVariable|getVehicleCargo|getWeaponCargo|getWeaponSway|getWingsOrientationRTD|getWingsPositionRTD|getWPPos|glanceAt|globalChat|globalRadio|goggles|group|groupChat|groupFromNetId|groupIconSelectable|groupIconsVisible|groupId|groupOwner|groupRadio|groupSelectedUnits|groupSelectUnit|grpNull|gunner|gusts|halt|handgunItems|handgunMagazine|handgunWeapon|handsHit|hasInterface|hasPilotCamera|hasWeapon|hcAllGroups|hcGroupParams|hcLeader|hcRemoveAllGroups|hcRemoveGroup|hcSelected|hcSelectGroup|hcSetGroup|hcShowBar|hcShownBar|headgear|hideBody|hideObject|hideObjectGlobal|hideSelection|hint|hintC|hintCadet|hintSilent|hmd|hostMission|htmlLoad|HUDMovementLevels|humidity|image|importAllGroups|importance|in|inArea|inAreaArray|incapacitatedState|independent|inflame|inflamed|infoPanel|infoPanelComponentEnabled|infoPanelComponents|infoPanels|inGameUISetEventHandler|inheritsFrom|initAmbientLife|inPolygon|inputAction|inRangeOfArtillery|insertEditorObject|intersect|is3DEN|is3DENMultiplayer|isAbleToBreathe|isAgent|isAimPrecisionEnabled|isArray|isAutoHoverOn|isAutonomous|isAutoStartUpEnabledRTD|isAutotest|isAutoTrimOnRTD|isBleeding|isBurning|isClass|isCollisionLightOn|isCopilotEnabled|isDamageAllowed|isDedicated|isDLCAvailable|isEngineOn|isEqualTo|isEqualType|isEqualTypeAll|isEqualTypeAny|isEqualTypeArray|isEqualTypeParams|isFilePatchingEnabled|isFlashlightOn|isFlatEmpty|isForcedWalk|isFormationLeader|isGroupDeletedWhenEmpty|isHidden|isInRemainsCollector|isInstructorFigureEnabled|isIRLaserOn|isKeyActive|isKindOf|isLaserOn|isLightOn|isLocalized|isManualFire|isMarkedForCollection|isMultiplayer|isMultiplayerSolo|isNil|isNull|isNumber|isObjectHidden|isObjectRTD|isOnRoad|isPipEnabled|isPlayer|isRealTime|isRemoteExecuted|isRemoteExecutedJIP|isServer|isShowing3DIcons|isSimpleObject|isSprintAllowed|isStaminaEnabled|isSteamMission|isStreamFriendlyUIEnabled|isStressDamageEnabled|isText|isTouchingGround|isTurnedOut|isTutHintsEnabled|isUAVConnectable|isUAVConnected|isUIContext|isUniformAllowed|isVehicleCargo|isVehicleRadarOn|isVehicleSensorEnabled|isWalking|isWeaponDeployed|isWeaponRested|itemCargo|items|itemsWithMagazines|join|joinAs|joinAsSilent|joinSilent|joinString|kbAddDatabase|kbAddDatabaseTargets|kbAddTopic|kbHasTopic|kbReact|kbRemoveTopic|kbTell|kbWasSaid|keyImage|keyName|knowsAbout|land|landAt|landResult|language|laserTarget|lbAdd|lbClear|lbColor|lbColorRight|lbCurSel|lbData|lbDelete|lbIsSelected|lbPicture|lbPictureRight|lbSelection|lbSetColor|lbSetColorRight|lbSetCurSel|lbSetData|lbSetPicture|lbSetPictureColor|lbSetPictureColorDisabled|lbSetPictureColorSelected|lbSetPictureRight|lbSetPictureRightColor|lbSetPictureRightColorDisabled|lbSetPictureRightColorSelected|lbSetSelectColor|lbSetSelectColorRight|lbSetSelected|lbSetText|lbSetTextRight|lbSetTooltip|lbSetValue|lbSize|lbSort|lbSortByValue|lbText|lbTextRight|lbValue|leader|leaderboardDeInit|leaderboardGetRows|leaderboardInit|leaderboardRequestRowsFriends|leaderboardRequestRowsGlobal|leaderboardRequestRowsGlobalAroundUser|leaderboardsRequestUploadScore|leaderboardsRequestUploadScoreKeepBest|leaderboardState|leaveVehicle|libraryCredits|libraryDisclaimers|lifeState|lightAttachObject|lightDetachObject|lightIsOn|lightnings|limitSpeed|linearConversion|lineBreak|lineIntersects|lineIntersectsObjs|lineIntersectsSurfaces|lineIntersectsWith|linkItem|list|listObjects|listRemoteTargets|listVehicleSensors|ln|lnbAddArray|lnbAddColumn|lnbAddRow|lnbClear|lnbColor|lnbColorRight|lnbCurSelRow|lnbData|lnbDeleteColumn|lnbDeleteRow|lnbGetColumnsPosition|lnbPicture|lnbPictureRight|lnbSetColor|lnbSetColorRight|lnbSetColumnsPos|lnbSetCurSelRow|lnbSetData|lnbSetPicture|lnbSetPictureColor|lnbSetPictureColorRight|lnbSetPictureColorSelected|lnbSetPictureColorSelectedRight|lnbSetPictureRight|lnbSetText|lnbSetTextRight|lnbSetValue|lnbSize|lnbSort|lnbSortByValue|lnbText|lnbTextRight|lnbValue|load|loadAbs|loadBackpack|loadFile|loadGame|loadIdentity|loadMagazine|loadOverlay|loadStatus|loadUniform|loadVest|local|localize|locationNull|locationPosition|lock|lockCameraTo|lockCargo|lockDriver|locked|lockedCargo|lockedDriver|lockedTurret|lockIdentity|lockTurret|lockWP|log|logEntities|logNetwork|logNetworkTerminate|lookAt|lookAtPos|magazineCargo|magazines|magazinesAllTurrets|magazinesAmmo|magazinesAmmoCargo|magazinesAmmoFull|magazinesDetail|magazinesDetailBackpack|magazinesDetailUniform|magazinesDetailVest|magazinesTurret|magazineTurretAmmo|mapAnimAdd|mapAnimClear|mapAnimCommit|mapAnimDone|mapCenterOnCamera|mapGridPosition|markAsFinishedOnSteam|markerAlpha|markerBrush|markerColor|markerDir|markerPos|markerShape|markerSize|markerText|markerType|max|members|menuAction|menuAdd|menuChecked|menuClear|menuCollapse|menuData|menuDelete|menuEnable|menuEnabled|menuExpand|menuHover|menuPicture|menuSetAction|menuSetCheck|menuSetData|menuSetPicture|menuSetValue|menuShortcut|menuShortcutText|menuSize|menuSort|menuText|menuURL|menuValue|min|mineActive|mineDetectedBy|missionConfigFile|missionDifficulty|missionName|missionNamespace|missionStart|missionVersion|modelToWorld|modelToWorldVisual|modelToWorldVisualWorld|modelToWorldWorld|modParams|moonIntensity|moonPhase|morale|move|move3DENCamera|moveInAny|moveInCargo|moveInCommander|moveInDriver|moveInGunner|moveInTurret|moveObjectToEnd|moveOut|moveTime|moveTo|moveToCompleted|moveToFailed|musicVolume|name|nameSound|nearEntities|nearestBuilding|nearestLocation|nearestLocations|nearestLocationWithDubbing|nearestObject|nearestObjects|nearestTerrainObjects|nearObjects|nearObjectsReady|nearRoads|nearSupplies|nearTargets|needReload|netId|netObjNull|newOverlay|nextMenuItemIndex|nextWeatherChange|nMenuItems|numberOfEnginesRTD|numberToDate|objectCurators|objectFromNetId|objectParent|objNull|objStatus|onBriefingGear|onBriefingGroup|onBriefingNotes|onBriefingPlan|onBriefingTeamSwitch|onCommandModeChanged|onDoubleClick|onEachFrame|onGroupIconClick|onGroupIconOverEnter|onGroupIconOverLeave|onHCGroupSelectionChanged|onMapSingleClick|onPlayerConnected|onPlayerDisconnected|onPreloadFinished|onPreloadStarted|onShowNewObject|onTeamSwitch|openCuratorInterface|openDLCPage|openDSInterface|openMap|openSteamApp|openYoutubeVideo|opfor|orderGetIn|overcast|overcastForecast|owner|param|params|parseNumber|parseSimpleArray|parseText|parsingNamespace|particlesQuality|pi|pickWeaponPool|pitch|pixelGrid|pixelGridBase|pixelGridNoUIScale|pixelH|pixelW|playableSlotsNumber|playableUnits|playAction|playActionNow|player|playerRespawnTime|playerSide|playersNumber|playGesture|playMission|playMove|playMoveNow|playMusic|playScriptedMission|playSound|playSound3D|position|positionCameraToWorld|posScreenToWorld|posWorldToScreen|ppEffectAdjust|ppEffectCommit|ppEffectCommitted|ppEffectCreate|ppEffectDestroy|ppEffectEnable|ppEffectEnabled|ppEffectForceInNVG|precision|preloadCamera|preloadObject|preloadSound|preloadTitleObj|preloadTitleRsc|primaryWeapon|primaryWeaponItems|primaryWeaponMagazine|priority|processDiaryLink|processInitCommands|productVersion|profileName|profileNamespace|profileNameSteam|progressLoadingScreen|progressPosition|progressSetPosition|publicVariable|publicVariableClient|publicVariableServer|pushBack|pushBackUnique|putWeaponPool|queryItemsPool|queryMagazinePool|queryWeaponPool|rad|radioChannelAdd|radioChannelCreate|radioChannelRemove|radioChannelSetCallSign|radioChannelSetLabel|radioVolume|rain|rainbow|random|rank|rankId|rating|rectangular|registeredTasks|registerTask|reload|reloadEnabled|remoteControl|remoteExec|remoteExecCall|remoteExecutedOwner|remove3DENConnection|remove3DENEventHandler|remove3DENLayer|removeAction|removeAll3DENEventHandlers|removeAllActions|removeAllAssignedItems|removeAllContainers|removeAllCuratorAddons|removeAllCuratorCameraAreas|removeAllCuratorEditingAreas|removeAllEventHandlers|removeAllHandgunItems|removeAllItems|removeAllItemsWithMagazines|removeAllMissionEventHandlers|removeAllMPEventHandlers|removeAllMusicEventHandlers|removeAllOwnedMines|removeAllPrimaryWeaponItems|removeAllWeapons|removeBackpack|removeBackpackGlobal|removeCuratorAddons|removeCuratorCameraArea|removeCuratorEditableObjects|removeCuratorEditingArea|removeDrawIcon|removeDrawLinks|removeEventHandler|removeFromRemainsCollector|removeGoggles|removeGroupIcon|removeHandgunItem|removeHeadgear|removeItem|removeItemFromBackpack|removeItemFromUniform|removeItemFromVest|removeItems|removeMagazine|removeMagazineGlobal|removeMagazines|removeMagazinesTurret|removeMagazineTurret|removeMenuItem|removeMissionEventHandler|removeMPEventHandler|removeMusicEventHandler|removeOwnedMine|removePrimaryWeaponItem|removeSecondaryWeaponItem|removeSimpleTask|removeSwitchableUnit|removeTeamMember|removeUniform|removeVest|removeWeapon|removeWeaponAttachmentCargo|removeWeaponCargo|removeWeaponGlobal|removeWeaponTurret|reportRemoteTarget|requiredVersion|resetCamShake|resetSubgroupDirection|resistance|resize|resources|respawnVehicle|restartEditorCamera|reveal|revealMine|reverse|reversedMouseY|roadAt|roadsConnectedTo|roleDescription|ropeAttachedObjects|ropeAttachedTo|ropeAttachEnabled|ropeAttachTo|ropeCreate|ropeCut|ropeDestroy|ropeDetach|ropeEndPosition|ropeLength|ropes|ropeUnwind|ropeUnwound|rotorsForcesRTD|rotorsRpmRTD|round|runInitScript|safeZoneH|safeZoneW|safeZoneWAbs|safeZoneX|safeZoneXAbs|safeZoneY|save3DENInventory|saveGame|saveIdentity|saveJoysticks|saveOverlay|saveProfileNamespace|saveStatus|saveVar|savingEnabled|say|say2D|say3D|score|scoreSide|screenshot|screenToWorld|scriptDone|scriptName|scriptNull|scudState|secondaryWeapon|secondaryWeaponItems|secondaryWeaponMagazine|select|selectBestPlaces|selectDiarySubject|selectedEditorObjects|selectEditorObject|selectionNames|selectionPosition|selectLeader|selectMax|selectMin|selectNoPlayer|selectPlayer|selectRandom|selectRandomWeighted|selectWeapon|selectWeaponTurret|sendAUMessage|sendSimpleCommand|sendTask|sendTaskResult|sendUDPMessage|serverCommand|serverCommandAvailable|serverCommandExecutable|serverName|serverTime|set|set3DENAttribute|set3DENAttributes|set3DENGrid|set3DENIconsVisible|set3DENLayer|set3DENLinesVisible|set3DENLogicType|set3DENMissionAttribute|set3DENMissionAttributes|set3DENModelsVisible|set3DENObjectType|set3DENSelected|setAccTime|setActualCollectiveRTD|setAirplaneThrottle|setAirportSide|setAmmo|setAmmoCargo|setAmmoOnPylon|setAnimSpeedCoef|setAperture|setApertureNew|setArmoryPoints|setAttributes|setAutonomous|setBehaviour|setBleedingRemaining|setBrakesRTD|setCameraInterest|setCamShakeDefParams|setCamShakeParams|setCamUseTI|setCaptive|setCenterOfMass|setCollisionLight|setCombatMode|setCompassOscillation|setConvoySeparation|setCuratorCameraAreaCeiling|setCuratorCoef|setCuratorEditingAreaType|setCuratorWaypointCost|setCurrentChannel|setCurrentTask|setCurrentWaypoint|setCustomAimCoef|setCustomWeightRTD|setDamage|setDammage|setDate|setDebriefingText|setDefaultCamera|setDestination|setDetailMapBlendPars|setDir|setDirection|setDrawIcon|setDriveOnPath|setDropInterval|setDynamicSimulationDistance|setDynamicSimulationDistanceCoef|setEditorMode|setEditorObjectScope|setEffectCondition|setEngineRpmRTD|setFace|setFaceAnimation|setFatigue|setFeatureType|setFlagAnimationPhase|setFlagOwner|setFlagSide|setFlagTexture|setFog|setForceGeneratorRTD|setFormation|setFormationTask|setFormDir|setFriend|setFromEditor|setFSMVariable|setFuel|setFuelCargo|setGroupIcon|setGroupIconParams|setGroupIconsSelectable|setGroupIconsVisible|setGroupId|setGroupIdGlobal|setGroupOwner|setGusts|setHideBehind|setHit|setHitIndex|setHitPointDamage|setHorizonParallaxCoef|setHUDMovementLevels|setIdentity|setImportance|setInfoPanel|setLeader|setLightAmbient|setLightAttenuation|setLightBrightness|setLightColor|setLightDayLight|setLightFlareMaxDistance|setLightFlareSize|setLightIntensity|setLightnings|setLightUseFlare|setLocalWindParams|setMagazineTurretAmmo|setMarkerAlpha|setMarkerAlphaLocal|setMarkerBrush|setMarkerBrushLocal|setMarkerColor|setMarkerColorLocal|setMarkerDir|setMarkerDirLocal|setMarkerPos|setMarkerPosLocal|setMarkerShape|setMarkerShapeLocal|setMarkerSize|setMarkerSizeLocal|setMarkerText|setMarkerTextLocal|setMarkerType|setMarkerTypeLocal|setMass|setMimic|setMousePosition|setMusicEffect|setMusicEventHandler|setName|setNameSound|setObjectArguments|setObjectMaterial|setObjectMaterialGlobal|setObjectProxy|setObjectTexture|setObjectTextureGlobal|setObjectViewDistance|setOvercast|setOwner|setOxygenRemaining|setParticleCircle|setParticleClass|setParticleFire|setParticleParams|setParticleRandom|setPilotCameraDirection|setPilotCameraRotation|setPilotCameraTarget|setPilotLight|setPiPEffect|setPitch|setPlateNumber|setPlayable|setPlayerRespawnTime|setPos|setPosASL|setPosASL2|setPosASLW|setPosATL|setPosition|setPosWorld|setPylonLoadOut|setPylonsPriority|setRadioMsg|setRain|setRainbow|setRandomLip|setRank|setRectangular|setRepairCargo|setRotorBrakeRTD|setShadowDistance|setShotParents|setSide|setSimpleTaskAlwaysVisible|setSimpleTaskCustomData|setSimpleTaskDescription|setSimpleTaskDestination|setSimpleTaskTarget|setSimpleTaskType|setSimulWeatherLayers|setSize|setSkill|setSlingLoad|setSoundEffect|setSpeaker|setSpeech|setSpeedMode|setStamina|setStaminaScheme|setStatValue|setSuppression|setSystemOfUnits|setTargetAge|setTaskMarkerOffset|setTaskResult|setTaskState|setTerrainGrid|setText|setTimeMultiplier|setTitleEffect|setToneMapping|setToneMappingParams|setTrafficDensity|setTrafficDistance|setTrafficGap|setTrafficSpeed|setTriggerActivation|setTriggerArea|setTriggerStatements|setTriggerText|setTriggerTimeout|setTriggerType|setType|setUnconscious|setUnitAbility|setUnitLoadout|setUnitPos|setUnitPosWeak|setUnitRank|setUnitRecoilCoefficient|setUnitTrait|setUnloadInCombat|setUserActionText|setUserMFDText|setUserMFDValue|setVariable|setVectorDir|setVectorDirAndUp|setVectorUp|setVehicleAmmo|setVehicleAmmoDef|setVehicleArmor|setVehicleCargo|setVehicleId|setVehicleInit|setVehicleLock|setVehiclePosition|setVehicleRadar|setVehicleReceiveRemoteTargets|setVehicleReportOwnPosition|setVehicleReportRemoteTargets|setVehicleTIPars|setVehicleVarName|setVelocity|setVelocityModelSpace|setVelocityTransformation|setViewDistance|setVisibleIfTreeCollapsed|setWantedRpmRTD|setWaves|setWaypointBehaviour|setWaypointCombatMode|setWaypointCompletionRadius|setWaypointDescription|setWaypointForceBehaviour|setWaypointFormation|setWaypointHousePosition|setWaypointLoiterRadius|setWaypointLoiterType|setWaypointName|setWaypointPosition|setWaypointScript|setWaypointSpeed|setWaypointStatements|setWaypointTimeout|setWaypointType|setWaypointVisible|setWeaponReloadingTime|setWind|setWindDir|setWindForce|setWindStr|setWingForceScaleRTD|setWPPos|show3DIcons|showChat|showCinemaBorder|showCommandingMenu|showCompass|showCuratorCompass|showGPS|showHUD|showLegend|showMap|shownArtilleryComputer|shownChat|shownCompass|shownCuratorCompass|showNewEditorObject|shownGPS|shownHUD|shownMap|shownPad|shownRadio|shownScoretable|shownUAVFeed|shownWarrant|shownWatch|showPad|showRadio|showScoretable|showSubtitles|showUAVFeed|showWarrant|showWatch|showWaypoint|showWaypoints|side|sideAmbientLife|sideChat|sideEmpty|sideEnemy|sideFriendly|sideLogic|sideRadio|sideUnknown|simpleTasks|simulationEnabled|simulCloudDensity|simulCloudOcclusion|simulInClouds|simulWeatherSync|sin|size|sizeOf|skill|skillFinal|skipTime|sleep|sliderPosition|sliderRange|sliderSetPosition|sliderSetRange|sliderSetSpeed|sliderSpeed|slingLoadAssistantShown|soldierMagazines|someAmmo|sort|soundVolume|speaker|speed|speedMode|splitString|sqrt|squadParams|stance|startLoadingScreen|stop|stopEngineRTD|stopped|str|sunOrMoon|supportInfo|suppressFor|surfaceIsWater|surfaceNormal|surfaceType|swimInDepth|switchableUnits|switchAction|switchCamera|switchGesture|switchLight|switchMove|synchronizedObjects|synchronizedTriggers|synchronizedWaypoints|synchronizeObjectsAdd|synchronizeObjectsRemove|synchronizeTrigger|synchronizeWaypoint|systemChat|systemOfUnits|tan|targetKnowledge|targets|targetsAggregate|targetsQuery|taskAlwaysVisible|taskChildren|taskCompleted|taskCustomData|taskDescription|taskDestination|taskHint|taskMarkerOffset|taskNull|taskParent|taskResult|taskState|taskType|teamMember|teamMemberNull|teamName|teams|teamSwitch|teamSwitchEnabled|teamType|terminate|terrainIntersect|terrainIntersectASL|terrainIntersectAtASL|text|textLog|textLogFormat|tg|time|timeMultiplier|titleCut|titleFadeOut|titleObj|titleRsc|titleText|toArray|toFixed|toLower|toString|toUpper|triggerActivated|triggerActivation|triggerArea|triggerAttachedVehicle|triggerAttachObject|triggerAttachVehicle|triggerDynamicSimulation|triggerStatements|triggerText|triggerTimeout|triggerTimeoutCurrent|triggerType|turretLocal|turretOwner|turretUnit|tvAdd|tvClear|tvCollapse|tvCollapseAll|tvCount|tvCurSel|tvData|tvDelete|tvExpand|tvExpandAll|tvPicture|tvPictureRight|tvSetColor|tvSetCurSel|tvSetData|tvSetPicture|tvSetPictureColor|tvSetPictureColorDisabled|tvSetPictureColorSelected|tvSetPictureRight|tvSetPictureRightColor|tvSetPictureRightColorDisabled|tvSetPictureRightColorSelected|tvSetSelectColor|tvSetText|tvSetTooltip|tvSetValue|tvSort|tvSortByValue|tvText|tvTooltip|tvValue|type|typeName|typeOf|UAVControl|uiNamespace|uiSleep|unassignCurator|unassignItem|unassignTeam|unassignVehicle|underwater|uniform|uniformContainer|uniformItems|uniformMagazines|unitAddons|unitAimPosition|unitAimPositionVisual|unitBackpack|unitIsUAV|unitPos|unitReady|unitRecoilCoefficient|units|unitsBelowHeight|unlinkItem|unlockAchievement|unregisterTask|updateDrawIcon|updateMenuItem|updateObjectTree|useAIOperMapObstructionTest|useAISteeringComponent|useAudioTimeForMoves|userInputDisabled|vectorAdd|vectorCos|vectorCrossProduct|vectorDiff|vectorDir|vectorDirVisual|vectorDistance|vectorDistanceSqr|vectorDotProduct|vectorFromTo|vectorMagnitude|vectorMagnitudeSqr|vectorModelToWorld|vectorModelToWorldVisual|vectorMultiply|vectorNormalized|vectorUp|vectorUpVisual|vectorWorldToModel|vectorWorldToModelVisual|vehicle|vehicleCargoEnabled|vehicleChat|vehicleRadio|vehicleReceiveRemoteTargets|vehicleReportOwnPosition|vehicleReportRemoteTargets|vehicles|vehicleVarName|velocity|velocityModelSpace|verifySignature|vest|vestContainer|vestItems|vestMagazines|viewDistance|visibleCompass|visibleGPS|visibleMap|visiblePosition|visiblePositionASL|visibleScoretable|visibleWatch|waitUntil|waves|waypointAttachedObject|waypointAttachedVehicle|waypointAttachObject|waypointAttachVehicle|waypointBehaviour|waypointCombatMode|waypointCompletionRadius|waypointDescription|waypointForceBehaviour|waypointFormation|waypointHousePosition|waypointLoiterRadius|waypointLoiterType|waypointName|waypointPosition|waypoints|waypointScript|waypointsEnabledUAV|waypointShow|waypointSpeed|waypointStatements|waypointTimeout|waypointTimeoutCurrent|waypointType|waypointVisible|weaponAccessories|weaponAccessoriesCargo|weaponCargo|weaponDirection|weaponInertia|weaponLowered|weapons|weaponsItems|weaponsItemsCargo|weaponState|weaponsTurret|weightRTD|west|WFSideText|wind|windDir|windRTD|windStr|wingsForcesRTD|worldName|worldSize|worldToModel|worldToModelVisual|worldToScreen)\b/i,
      number: /(?:\$|\b0x)[\da-f]+\b|(?:\B\.\d+|\b\d+(?:\.\d+)?)(?:e[+-]?\d+)?\b/i,
      operator: /##|>>|&&|\|\||[!=<>]=?|[-+*/%#^]|\b(?:and|mod|not|or)\b/i,
      "magic-variable": {
        pattern: /\b(?:this|thisList|thisTrigger|_exception|_fnc_scriptName|_fnc_scriptNameParent|_forEachIndex|_this|_thisEventHandler|_thisFSM|_thisScript|_x)\b/i,
        alias: "keyword"
      },
      constant: /\bDIK(?:_[a-z\d]+)+\b/i
    }), t.languages.insertBefore("sqf", "string", {
      macro: {
        pattern: /(^[ \t]*)#[a-z](?:[^\r\n\\]|\\(?:\r\n|[\s\S]))*/im,
        lookbehind: !0,
        greedy: !0,
        alias: "property",
        inside: {
          directive: {
            pattern: /#[a-z]+\b/i,
            alias: "keyword"
          },
          comment: t.languages.sqf.comment
        }
      }
    }), delete t.languages.sqf["class-name"];
  }
  return I0;
}
var R0, kw;
function ZH() {
  if (kw) return R0;
  kw = 1, R0 = e, e.displayName = "squirrel", e.aliases = [];
  function e(t) {
    t.languages.squirrel = t.languages.extend("clike", {
      comment: [
        t.languages.clike.comment[0],
        {
          pattern: /(^|[^\\:])(?:\/\/|#).*/,
          lookbehind: !0,
          greedy: !0
        }
      ],
      string: {
        pattern: /(^|[^\\"'@])(?:@"(?:[^"]|"")*"(?!")|"(?:[^\\\r\n"]|\\.)*")/,
        lookbehind: !0,
        greedy: !0
      },
      "class-name": {
        pattern: /(\b(?:class|enum|extends|instanceof)\s+)\w+(?:\.\w+)*/,
        lookbehind: !0,
        inside: {
          punctuation: /\./
        }
      },
      keyword: /\b(?:__FILE__|__LINE__|base|break|case|catch|class|clone|const|constructor|continue|default|delete|else|enum|extends|for|foreach|function|if|in|instanceof|local|null|resume|return|static|switch|this|throw|try|typeof|while|yield)\b/,
      number: /\b(?:0x[0-9a-fA-F]+|\d+(?:\.(?:\d+|[eE][+-]?\d+))?)\b/,
      operator: /\+\+|--|<=>|<[-<]|>>>?|&&?|\|\|?|[-+*/%!=<>]=?|[~^]|::?/,
      punctuation: /[(){}\[\],;.]/
    }), t.languages.insertBefore("squirrel", "string", {
      char: {
        pattern: /(^|[^\\"'])'(?:[^\\']|\\(?:[xuU][0-9a-fA-F]{0,8}|[\s\S]))'/,
        lookbehind: !0,
        greedy: !0
      }
    }), t.languages.insertBefore("squirrel", "operator", {
      "attribute-punctuation": {
        pattern: /<\/|\/>/,
        alias: "important"
      },
      lambda: {
        pattern: /@(?=\()/,
        alias: "operator"
      }
    });
  }
  return R0;
}
var x0, Cw;
function JH() {
  if (Cw) return x0;
  Cw = 1, x0 = e, e.displayName = "stan", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /\b(?:algebra_solver|algebra_solver_newton|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect|ode_(?:adams|bdf|ckrk|rk45)(?:_tol)?|ode_adjoint_tol_ctl|reduce_sum|reduce_sum_static)\b/;
      n.languages.stan = {
        comment: /\/\/.*|\/\*[\s\S]*?\*\/|#(?!include).*/,
        string: {
          // String literals can contain spaces and any printable ASCII characters except for " and \
          // https://mc-stan.org/docs/2_24/reference-manual/print-statements-section.html#string-literals
          pattern: /"[\x20\x21\x23-\x5B\x5D-\x7E]*"/,
          greedy: !0
        },
        directive: {
          pattern: /^([ \t]*)#include\b.*/m,
          lookbehind: !0,
          alias: "property"
        },
        "function-arg": {
          pattern: RegExp(
            "(" + r.source + /\s*\(\s*/.source + ")" + /[a-zA-Z]\w*/.source
          ),
          lookbehind: !0,
          alias: "function"
        },
        constraint: {
          pattern: /(\b(?:int|matrix|real|row_vector|vector)\s*)<[^<>]*>/,
          lookbehind: !0,
          inside: {
            expression: {
              pattern: /(=\s*)\S(?:\S|\s+(?!\s))*?(?=\s*(?:>$|,\s*\w+\s*=))/,
              lookbehind: !0,
              inside: null
              // see below
            },
            property: /\b[a-z]\w*(?=\s*=)/i,
            operator: /=/,
            punctuation: /^<|>$|,/
          }
        },
        keyword: [
          {
            pattern: /\bdata(?=\s*\{)|\b(?:functions|generated|model|parameters|quantities|transformed)\b/,
            alias: "program-block"
          },
          /\b(?:array|break|cholesky_factor_corr|cholesky_factor_cov|complex|continue|corr_matrix|cov_matrix|data|else|for|if|in|increment_log_prob|int|matrix|ordered|positive_ordered|print|real|reject|return|row_vector|simplex|target|unit_vector|vector|void|while)\b/,
          // these are functions that are known to take another function as their first argument.
          r
        ],
        function: /\b[a-z]\w*(?=\s*\()/i,
        number: /(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:E[+-]?\d+(?:_\d+)*)?i?(?!\w)/i,
        boolean: /\b(?:false|true)\b/,
        operator: /<-|\.[*/]=?|\|\|?|&&|[!=<>+\-*/]=?|['^%~?:]/,
        punctuation: /[()\[\]{},;]/
      }, n.languages.stan.constraint.inside.expression.inside = n.languages.stan;
    })(t);
  }
  return x0;
}
var N0, ww;
function e$() {
  if (ww) return N0;
  ww = 1, N0 = e, e.displayName = "stylus", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = {
        pattern: /(\b\d+)(?:%|[a-z]+)/,
        lookbehind: !0
      }, o = {
        pattern: /(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,
        lookbehind: !0
      }, s = {
        comment: {
          pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
          lookbehind: !0
        },
        url: {
          pattern: /\burl\((["']?).*?\1\)/i,
          greedy: !0
        },
        string: {
          pattern: /("|')(?:(?!\1)[^\\\r\n]|\\(?:\r\n|[\s\S]))*\1/,
          greedy: !0
        },
        interpolation: null,
        // See below
        func: null,
        // See below
        important: /\B!(?:important|optional)\b/i,
        keyword: {
          pattern: /(^|\s+)(?:(?:else|for|if|return|unless)(?=\s|$)|@[\w-]+)/,
          lookbehind: !0
        },
        hexcode: /#[\da-f]{3,6}/i,
        color: [
          /\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\b/i,
          {
            pattern: /\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,
            inside: {
              unit: r,
              number: o,
              function: /[\w-]+(?=\()/,
              punctuation: /[(),]/
            }
          }
        ],
        entity: /\\[\da-f]{1,8}/i,
        unit: r,
        boolean: /\b(?:false|true)\b/,
        operator: [
          // We want non-word chars around "-" because it is
          // accepted in property names.
          /~|[+!\/%<>?=]=?|[-:]=|\*[*=]?|\.{2,3}|&&|\|\||\B-\B|\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\b/
        ],
        number: o,
        punctuation: /[{}()\[\];:,]/
      };
      s.interpolation = {
        pattern: /\{[^\r\n}:]+\}/,
        alias: "variable",
        inside: {
          delimiter: {
            pattern: /^\{|\}$/,
            alias: "punctuation"
          },
          rest: s
        }
      }, s.func = {
        pattern: /[\w-]+\([^)]*\).*/,
        inside: {
          function: /^[^(]+/,
          rest: s
        }
      }, n.languages.stylus = {
        "atrule-declaration": {
          pattern: /(^[ \t]*)@.+/m,
          lookbehind: !0,
          inside: {
            atrule: /^@[\w-]+/,
            rest: s
          }
        },
        "variable-declaration": {
          pattern: /(^[ \t]*)[\w$-]+\s*.?=[ \t]*(?:\{[^{}]*\}|\S.*|$)/m,
          lookbehind: !0,
          inside: {
            variable: /^\S+/,
            rest: s
          }
        },
        statement: {
          pattern: /(^[ \t]*)(?:else|for|if|return|unless)[ \t].+/m,
          lookbehind: !0,
          inside: {
            keyword: /^\S+/,
            rest: s
          }
        },
        // A property/value pair cannot end with a comma or a brace
        // It cannot have indented content unless it ended with a semicolon
        "property-declaration": {
          pattern: /((?:^|\{)([ \t]*))(?:[\w-]|\{[^}\r\n]+\})+(?:\s*:\s*|[ \t]+)(?!\s)[^{\r\n]*(?:;|[^{\r\n,]$(?!(?:\r?\n|\r)(?:\{|\2[ \t])))/m,
          lookbehind: !0,
          inside: {
            property: {
              pattern: /^[^\s:]+/,
              inside: {
                interpolation: s.interpolation
              }
            },
            rest: s
          }
        },
        // A selector can contain parentheses only as part of a pseudo-element
        // It can span multiple lines.
        // It must end with a comma or an accolade or have indented content.
        selector: {
          pattern: /(^[ \t]*)(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)(?:(?:\r?\n|\r)(?:\1(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)))*(?:,$|\{|(?=(?:\r?\n|\r)(?:\{|\1[ \t])))/m,
          lookbehind: !0,
          inside: {
            interpolation: s.interpolation,
            comment: s.comment,
            punctuation: /[{},]/
          }
        },
        func: s.func,
        string: s.string,
        comment: {
          pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
          lookbehind: !0,
          greedy: !0
        },
        interpolation: s.interpolation,
        punctuation: /[{}()\[\];:.]/
      };
    })(t);
  }
  return N0;
}
var O0, Iw;
function t$() {
  if (Iw) return O0;
  Iw = 1, O0 = e, e.displayName = "swift", e.aliases = [];
  function e(t) {
    t.languages.swift = {
      comment: {
        // Nested comments are supported up to 2 levels
        pattern: /(^|[^\\:])(?:\/\/.*|\/\*(?:[^/*]|\/(?!\*)|\*(?!\/)|\/\*(?:[^*]|\*(?!\/))*\*\/)*\*\/)/,
        lookbehind: !0,
        greedy: !0
      },
      "string-literal": [
        // https://docs.swift.org/swift-book/LanguageGuide/StringsAndCharacters.html
        {
          pattern: RegExp(
            /(^|[^"#])/.source + "(?:" + // single-line string
            /"(?:\\(?:\((?:[^()]|\([^()]*\))*\)|\r\n|[^(])|[^\\\r\n"])*"/.source + "|" + // multi-line string
            /"""(?:\\(?:\((?:[^()]|\([^()]*\))*\)|[^(])|[^\\"]|"(?!""))*"""/.source + ")" + /(?!["#])/.source
          ),
          lookbehind: !0,
          greedy: !0,
          inside: {
            interpolation: {
              pattern: /(\\\()(?:[^()]|\([^()]*\))*(?=\))/,
              lookbehind: !0,
              inside: null
              // see below
            },
            "interpolation-punctuation": {
              pattern: /^\)|\\\($/,
              alias: "punctuation"
            },
            punctuation: /\\(?=[\r\n])/,
            string: /[\s\S]+/
          }
        },
        {
          pattern: RegExp(
            /(^|[^"#])(#+)/.source + "(?:" + // single-line string
            /"(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|\r\n|[^#])|[^\\\r\n])*?"/.source + "|" + // multi-line string
            /"""(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|[^#])|[^\\])*?"""/.source + ")\\2"
          ),
          lookbehind: !0,
          greedy: !0,
          inside: {
            interpolation: {
              pattern: /(\\#+\()(?:[^()]|\([^()]*\))*(?=\))/,
              lookbehind: !0,
              inside: null
              // see below
            },
            "interpolation-punctuation": {
              pattern: /^\)|\\#+\($/,
              alias: "punctuation"
            },
            string: /[\s\S]+/
          }
        }
      ],
      directive: {
        // directives with conditions
        pattern: RegExp(
          /#/.source + "(?:" + (/(?:elseif|if)\b/.source + "(?:[ 	]*" + // This regex is a little complex. It's equivalent to this:
          //   (?:![ \t]*)?(?:\b\w+\b(?:[ \t]*<round>)?|<round>)(?:[ \t]*(?:&&|\|\|))?
          // where <round> is a general parentheses expression.
          /(?:![ \t]*)?(?:\b\w+\b(?:[ \t]*\((?:[^()]|\([^()]*\))*\))?|\((?:[^()]|\([^()]*\))*\))(?:[ \t]*(?:&&|\|\|))?/.source + ")+") + "|" + /(?:else|endif)\b/.source + ")"
        ),
        alias: "property",
        inside: {
          "directive-name": /^#\w+/,
          boolean: /\b(?:false|true)\b/,
          number: /\b\d+(?:\.\d+)*\b/,
          operator: /!|&&|\|\||[<>]=?/,
          punctuation: /[(),]/
        }
      },
      literal: {
        pattern: /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\b/,
        alias: "constant"
      },
      "other-directive": {
        pattern: /#\w+\b/,
        alias: "property"
      },
      attribute: {
        pattern: /@\w+/,
        alias: "atrule"
      },
      "function-definition": {
        pattern: /(\bfunc\s+)\w+/,
        lookbehind: !0,
        alias: "function"
      },
      label: {
        // https://docs.swift.org/swift-book/LanguageGuide/ControlFlow.html#ID141
        pattern: /\b(break|continue)\s+\w+|\b[a-zA-Z_]\w*(?=\s*:\s*(?:for|repeat|while)\b)/,
        lookbehind: !0,
        alias: "important"
      },
      keyword: /\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\b/,
      boolean: /\b(?:false|true)\b/,
      nil: {
        pattern: /\bnil\b/,
        alias: "constant"
      },
      "short-argument": /\$\d+\b/,
      omit: {
        pattern: /\b_\b/,
        alias: "keyword"
      },
      number: /\b(?:[\d_]+(?:\.[\de_]+)?|0x[a-f0-9_]+(?:\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\b/i,
      // A class name must start with an upper-case letter and be either 1 letter long or contain a lower-case letter.
      "class-name": /\b[A-Z](?:[A-Z_\d]*[a-z]\w*)?\b/,
      function: /\b[a-z_]\w*(?=\s*\()/i,
      constant: /\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\b/,
      // Operators are generic in Swift. Developers can even create new operators (e.g. +++).
      // https://docs.swift.org/swift-book/ReferenceManual/zzSummaryOfTheGrammar.html#ID481
      // This regex only supports ASCII operators.
      operator: /[-+*/%=!<>&|^~?]+|\.[.\-+*/%=!<>&|^~?]+/,
      punctuation: /[{}[\]();,.:\\]/
    }, t.languages.swift["string-literal"].forEach(function(n) {
      n.inside.interpolation.inside = t.languages.swift;
    });
  }
  return O0;
}
var L0, Rw;
function n$() {
  if (Rw) return L0;
  Rw = 1, L0 = e, e.displayName = "systemd", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = {
        pattern: /^[;#].*/m,
        greedy: !0
      }, o = /"(?:[^\r\n"\\]|\\(?:[^\r]|\r\n?))*"(?!\S)/.source;
      n.languages.systemd = {
        comment: r,
        section: {
          pattern: /^\[[^\n\r\[\]]*\](?=[ \t]*$)/m,
          greedy: !0,
          inside: {
            punctuation: /^\[|\]$/,
            "section-name": {
              pattern: /[\s\S]+/,
              alias: "selector"
            }
          }
        },
        key: {
          pattern: /^[^\s=]+(?=[ \t]*=)/m,
          greedy: !0,
          alias: "attr-name"
        },
        value: {
          // This pattern is quite complex because of two properties:
          //  1) Quotes (strings) must be preceded by a space. Since we can't use lookbehinds, we have to "resolve"
          //     the lookbehind. You will see this in the main loop where spaces are handled separately.
          //  2) Line continuations.
          //     After line continuations, empty lines and comments are ignored so we have to consume them.
          pattern: RegExp(
            /(=[ \t]*(?!\s))/.source + // the value either starts with quotes or not
            "(?:" + o + `|(?=[^"\r
]))(?:` + (/[^\s\\]/.source + // handle spaces separately because of quotes
            '|[ 	]+(?:(?![ 	"])|' + o + ")|" + /\\[\r\n]+(?:[#;].*[\r\n]+)*(?![#;])/.source) + ")*"
          ),
          lookbehind: !0,
          greedy: !0,
          alias: "attr-value",
          inside: {
            comment: r,
            quoted: {
              pattern: RegExp(/(^|\s)/.source + o),
              lookbehind: !0,
              greedy: !0
            },
            punctuation: /\\$/m,
            boolean: {
              pattern: /^(?:false|no|off|on|true|yes)$/,
              greedy: !0
            }
          }
        },
        punctuation: /=/
      };
    })(t);
  }
  return L0;
}
var D0, xw;
function e1() {
  if (xw) return D0;
  xw = 1, D0 = e, e.displayName = "t4Templating", e.aliases = [];
  function e(t) {
    (function(n) {
      function r(s, u, c) {
        return {
          pattern: RegExp("<#" + s + "[\\s\\S]*?#>"),
          alias: "block",
          inside: {
            delimiter: {
              pattern: RegExp("^<#" + s + "|#>$"),
              alias: "important"
            },
            content: {
              pattern: /[\s\S]+/,
              inside: u,
              alias: c
            }
          }
        };
      }
      function o(s) {
        var u = n.languages[s], c = "language-" + s;
        return {
          block: {
            pattern: /<#[\s\S]+?#>/,
            inside: {
              directive: r("@", {
                "attr-value": {
                  pattern: /=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+)/,
                  inside: {
                    punctuation: /^=|^["']|["']$/
                  }
                },
                keyword: /\b\w+(?=\s)/,
                "attr-name": /\b\w+/
              }),
              expression: r("=", u, c),
              "class-feature": r("\\+", u, c),
              standard: r("", u, c)
            }
          }
        };
      }
      n.languages["t4-templating"] = Object.defineProperty({}, "createT4", {
        value: o
      });
    })(t);
  }
  return D0;
}
var M0, Nw;
function r$() {
  if (Nw) return M0;
  Nw = 1;
  var e = e1(), t = pc();
  M0 = n, n.displayName = "t4Cs", n.aliases = [];
  function n(r) {
    r.register(e), r.register(t), r.languages.t4 = r.languages["t4-cs"] = r.languages["t4-templating"].createT4("csharp");
  }
  return M0;
}
var P0, Ow;
function Jx() {
  if (Ow) return P0;
  Ow = 1;
  var e = Kx();
  P0 = t, t.displayName = "vbnet", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.vbnet = n.languages.extend("basic", {
      comment: [
        {
          pattern: /(?:!|REM\b).+/i,
          inside: {
            keyword: /^REM/i
          }
        },
        {
          pattern: /(^|[^\\:])'.*/,
          lookbehind: !0,
          greedy: !0
        }
      ],
      string: {
        pattern: /(^|[^"])"(?:""|[^"])*"(?!")/,
        lookbehind: !0,
        greedy: !0
      },
      keyword: /(?:\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDBL|CDEC|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DEFAULT|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LET|LIB|LIKE|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPERATOR|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHELL|SHORT|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SWAP|SYNCLOCK|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\$|\b)/i,
      punctuation: /[,;:(){}]/
    });
  }
  return P0;
}
var F0, Lw;
function a$() {
  if (Lw) return F0;
  Lw = 1;
  var e = e1(), t = Jx();
  F0 = n, n.displayName = "t4Vb", n.aliases = [];
  function n(r) {
    r.register(e), r.register(t), r.languages["t4-vb"] = r.languages["t4-templating"].createT4("vbnet");
  }
  return F0;
}
var B0, Dw;
function eN() {
  if (Dw) return B0;
  Dw = 1, B0 = e, e.displayName = "yaml", e.aliases = ["yml"];
  function e(t) {
    (function(n) {
      var r = /[*&][^\s[\]{},]+/, o = /!(?:<[\w\-%#;/?:@&=+$,.!~*'()[\]]+>|(?:[a-zA-Z\d-]*!)?[\w\-%#;/?:@&=+$.~*'()]+)?/, s = "(?:" + o.source + "(?:[ 	]+" + r.source + ")?|" + r.source + "(?:[ 	]+" + o.source + ")?)", u = /(?:[^\s\x00-\x08\x0e-\x1f!"#%&'*,\-:>?@[\]`{|}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]|[?:-]<PLAIN>)(?:[ \t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(
        /<PLAIN>/g,
        function() {
          return /[^\s\x00-\x08\x0e-\x1f,[\]{}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]/.source;
        }
      ), c = /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/.source;
      function p(f, b) {
        b = (b || "").replace(/m/g, "") + "m";
        var g = /([:\-,[{]\s*(?:\s<<prop>>[ \t]+)?)(?:<<value>>)(?=[ \t]*(?:$|,|\]|\}|(?:[\r\n]\s*)?#))/.source.replace(/<<prop>>/g, function() {
          return s;
        }).replace(/<<value>>/g, function() {
          return f;
        });
        return RegExp(g, b);
      }
      n.languages.yaml = {
        scalar: {
          pattern: RegExp(
            /([\-:]\s*(?:\s<<prop>>[ \t]+)?[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)\S[^\r\n]*(?:\2[^\r\n]+)*)/.source.replace(
              /<<prop>>/g,
              function() {
                return s;
              }
            )
          ),
          lookbehind: !0,
          alias: "string"
        },
        comment: /#.*/,
        key: {
          pattern: RegExp(
            /((?:^|[:\-,[{\r\n?])[ \t]*(?:<<prop>>[ \t]+)?)<<key>>(?=\s*:\s)/.source.replace(/<<prop>>/g, function() {
              return s;
            }).replace(/<<key>>/g, function() {
              return "(?:" + u + "|" + c + ")";
            })
          ),
          lookbehind: !0,
          greedy: !0,
          alias: "atrule"
        },
        directive: {
          pattern: /(^[ \t]*)%.+/m,
          lookbehind: !0,
          alias: "important"
        },
        datetime: {
          pattern: p(
            /\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?(?:[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?))?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?/.source
          ),
          lookbehind: !0,
          alias: "number"
        },
        boolean: {
          pattern: p(/false|true/.source, "i"),
          lookbehind: !0,
          alias: "important"
        },
        null: {
          pattern: p(/null|~/.source, "i"),
          lookbehind: !0,
          alias: "important"
        },
        string: {
          pattern: p(c),
          lookbehind: !0,
          greedy: !0
        },
        number: {
          pattern: p(
            /[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|\.inf|\.nan)/.source,
            "i"
          ),
          lookbehind: !0
        },
        tag: o,
        important: r,
        punctuation: /---|[:[\]{}\-,|>?]|\.\.\./
      }, n.languages.yml = n.languages.yaml;
    })(t);
  }
  return B0;
}
var U0, Mw;
function i$() {
  if (Mw) return U0;
  Mw = 1;
  var e = eN();
  U0 = t, t.displayName = "tap", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.tap = {
      fail: /not ok[^#{\n\r]*/,
      pass: /ok[^#{\n\r]*/,
      pragma: /pragma [+-][a-z]+/,
      bailout: /bail out!.*/i,
      version: /TAP version \d+/i,
      plan: /\b\d+\.\.\d+(?: +#.*)?/,
      subtest: {
        pattern: /# Subtest(?:: .*)?/,
        greedy: !0
      },
      punctuation: /[{}]/,
      directive: /#.*/,
      yamlish: {
        pattern: /(^[ \t]*)---[\s\S]*?[\r\n][ \t]*\.\.\.$/m,
        lookbehind: !0,
        inside: n.languages.yaml,
        alias: "language-yaml"
      }
    };
  }
  return U0;
}
var H0, Pw;
function o$() {
  if (Pw) return H0;
  Pw = 1, H0 = e, e.displayName = "tcl", e.aliases = [];
  function e(t) {
    t.languages.tcl = {
      comment: {
        pattern: /(^|[^\\])#.*/,
        lookbehind: !0
      },
      string: {
        pattern: /"(?:[^"\\\r\n]|\\(?:\r\n|[\s\S]))*"/,
        greedy: !0
      },
      variable: [
        {
          pattern: /(\$)(?:::)?(?:[a-zA-Z0-9]+::)*\w+/,
          lookbehind: !0
        },
        {
          pattern: /(\$)\{[^}]+\}/,
          lookbehind: !0
        },
        {
          pattern: /(^[\t ]*set[ \t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\w+/m,
          lookbehind: !0
        }
      ],
      function: {
        pattern: /(^[\t ]*proc[ \t]+)\S+/m,
        lookbehind: !0
      },
      builtin: [
        {
          pattern: /(^[\t ]*)(?:break|class|continue|error|eval|exit|for|foreach|if|proc|return|switch|while)\b/m,
          lookbehind: !0
        },
        /\b(?:else|elseif)\b/
      ],
      scope: {
        pattern: /(^[\t ]*)(?:global|upvar|variable)\b/m,
        lookbehind: !0,
        alias: "constant"
      },
      keyword: {
        pattern: /(^[\t ]*|\[)(?:Safe_Base|Tcl|after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|scan|seek|set|socket|source|split|string|subst|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|test|vars|wordBreak(?:After|Before))|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\b/m,
        lookbehind: !0
      },
      operator: /!=?|\*\*?|==|&&?|\|\|?|<[=<]?|>[=>]?|[-+~\/%?^]|\b(?:eq|in|ne|ni)\b/,
      punctuation: /[{}()\[\]]/
    };
  }
  return H0;
}
var $0, Fw;
function s$() {
  if (Fw) return $0;
  Fw = 1, $0 = e, e.displayName = "textile", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /\([^|()\n]+\)|\[[^\]\n]+\]|\{[^}\n]+\}/.source, o = /\)|\((?![^|()\n]+\))/.source;
      function s(T, y) {
        return RegExp(
          T.replace(/<MOD>/g, function() {
            return "(?:" + r + ")";
          }).replace(/<PAR>/g, function() {
            return "(?:" + o + ")";
          }),
          y || ""
        );
      }
      var u = {
        css: {
          pattern: /\{[^{}]+\}/,
          inside: {
            rest: n.languages.css
          }
        },
        "class-id": {
          pattern: /(\()[^()]+(?=\))/,
          lookbehind: !0,
          alias: "attr-value"
        },
        lang: {
          pattern: /(\[)[^\[\]]+(?=\])/,
          lookbehind: !0,
          alias: "attr-value"
        },
        // Anything else is punctuation (the first pattern is for row/col spans inside tables)
        punctuation: /[\\\/]\d+|\S/
      }, c = n.languages.textile = n.languages.extend("markup", {
        phrase: {
          pattern: /(^|\r|\n)\S[\s\S]*?(?=$|\r?\n\r?\n|\r\r)/,
          lookbehind: !0,
          inside: {
            // h1. Header 1
            "block-tag": {
              pattern: s(/^[a-z]\w*(?:<MOD>|<PAR>|[<>=])*\./.source),
              inside: {
                modifier: {
                  pattern: s(
                    /(^[a-z]\w*)(?:<MOD>|<PAR>|[<>=])+(?=\.)/.source
                  ),
                  lookbehind: !0,
                  inside: u
                },
                tag: /^[a-z]\w*/,
                punctuation: /\.$/
              }
            },
            // # List item
            // * List item
            list: {
              pattern: s(/^[*#]+<MOD>*\s+\S.*/.source, "m"),
              inside: {
                modifier: {
                  pattern: s(/(^[*#]+)<MOD>+/.source),
                  lookbehind: !0,
                  inside: u
                },
                punctuation: /^[*#]+/
              }
            },
            // | cell | cell | cell |
            table: {
              // Modifiers can be applied to the row: {color:red}.|1|2|3|
              // or the cell: |{color:red}.1|2|3|
              pattern: s(
                /^(?:(?:<MOD>|<PAR>|[<>=^~])+\.\s*)?(?:\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\/]\d+)+\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\/]\d+)+\.))[^|]*)+\|/.source,
                "m"
              ),
              inside: {
                modifier: {
                  // Modifiers for rows after the first one are
                  // preceded by a pipe and a line feed
                  pattern: s(
                    /(^|\|(?:\r?\n|\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\/]\d+)+(?=\.)/.source
                  ),
                  lookbehind: !0,
                  inside: u
                },
                punctuation: /\||^\./
              }
            },
            inline: {
              // eslint-disable-next-line regexp/no-super-linear-backtracking
              pattern: s(
                /(^|[^a-zA-Z\d])(\*\*|__|\?\?|[*_%@+\-^~])<MOD>*.+?\2(?![a-zA-Z\d])/.source
              ),
              lookbehind: !0,
              inside: {
                // Note: superscripts and subscripts are not handled specifically
                // *bold*, **bold**
                bold: {
                  // eslint-disable-next-line regexp/no-super-linear-backtracking
                  pattern: s(/(^(\*\*?)<MOD>*).+?(?=\2)/.source),
                  lookbehind: !0
                },
                // _italic_, __italic__
                italic: {
                  // eslint-disable-next-line regexp/no-super-linear-backtracking
                  pattern: s(/(^(__?)<MOD>*).+?(?=\2)/.source),
                  lookbehind: !0
                },
                // ??cite??
                cite: {
                  // eslint-disable-next-line regexp/no-super-linear-backtracking
                  pattern: s(/(^\?\?<MOD>*).+?(?=\?\?)/.source),
                  lookbehind: !0,
                  alias: "string"
                },
                // @code@
                code: {
                  // eslint-disable-next-line regexp/no-super-linear-backtracking
                  pattern: s(/(^@<MOD>*).+?(?=@)/.source),
                  lookbehind: !0,
                  alias: "keyword"
                },
                // +inserted+
                inserted: {
                  // eslint-disable-next-line regexp/no-super-linear-backtracking
                  pattern: s(/(^\+<MOD>*).+?(?=\+)/.source),
                  lookbehind: !0
                },
                // -deleted-
                deleted: {
                  // eslint-disable-next-line regexp/no-super-linear-backtracking
                  pattern: s(/(^-<MOD>*).+?(?=-)/.source),
                  lookbehind: !0
                },
                // %span%
                span: {
                  // eslint-disable-next-line regexp/no-super-linear-backtracking
                  pattern: s(/(^%<MOD>*).+?(?=%)/.source),
                  lookbehind: !0
                },
                modifier: {
                  pattern: s(
                    /(^\*\*|__|\?\?|[*_%@+\-^~])<MOD>+/.source
                  ),
                  lookbehind: !0,
                  inside: u
                },
                punctuation: /[*_%?@+\-^~]+/
              }
            },
            // [alias]http://example.com
            "link-ref": {
              pattern: /^\[[^\]]+\]\S+$/m,
              inside: {
                string: {
                  pattern: /(^\[)[^\]]+(?=\])/,
                  lookbehind: !0
                },
                url: {
                  pattern: /(^\])\S+$/,
                  lookbehind: !0
                },
                punctuation: /[\[\]]/
              }
            },
            // "text":http://example.com
            // "text":link-ref
            link: {
              // eslint-disable-next-line regexp/no-super-linear-backtracking
              pattern: s(
                /"<MOD>*[^"]+":.+?(?=[^\w/]?(?:\s|$))/.source
              ),
              inside: {
                text: {
                  // eslint-disable-next-line regexp/no-super-linear-backtracking
                  pattern: s(/(^"<MOD>*)[^"]+(?=")/.source),
                  lookbehind: !0
                },
                modifier: {
                  pattern: s(/(^")<MOD>+/.source),
                  lookbehind: !0,
                  inside: u
                },
                url: {
                  pattern: /(:).+/,
                  lookbehind: !0
                },
                punctuation: /[":]/
              }
            },
            // !image.jpg!
            // !image.jpg(Title)!:http://example.com
            image: {
              pattern: s(
                /!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\s()]+(?:\([^)]+\))?!(?::.+?(?=[^\w/]?(?:\s|$)))?/.source
              ),
              inside: {
                source: {
                  pattern: s(
                    /(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\s()]+(?:\([^)]+\))?(?=!)/.source
                  ),
                  lookbehind: !0,
                  alias: "url"
                },
                modifier: {
                  pattern: s(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),
                  lookbehind: !0,
                  inside: u
                },
                url: {
                  pattern: /(:).+/,
                  lookbehind: !0
                },
                punctuation: /[!:]/
              }
            },
            // Footnote[1]
            footnote: {
              pattern: /\b\[\d+\]/,
              alias: "comment",
              inside: {
                punctuation: /\[|\]/
              }
            },
            // CSS(Cascading Style Sheet)
            acronym: {
              pattern: /\b[A-Z\d]+\([^)]+\)/,
              inside: {
                comment: {
                  pattern: /(\()[^()]+(?=\))/,
                  lookbehind: !0
                },
                punctuation: /[()]/
              }
            },
            // Prism(C)
            mark: {
              pattern: /\b\((?:C|R|TM)\)/,
              alias: "comment",
              inside: {
                punctuation: /[()]/
              }
            }
          }
        }
      }), p = c.phrase.inside, f = {
        inline: p.inline,
        link: p.link,
        image: p.image,
        footnote: p.footnote,
        acronym: p.acronym,
        mark: p.mark
      };
      c.tag.pattern = /<\/?(?!\d)[a-z0-9]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/i;
      var b = p.inline.inside;
      b.bold.inside = f, b.italic.inside = f, b.inserted.inside = f, b.deleted.inside = f, b.span.inside = f;
      var g = p.table.inside;
      g.inline = f.inline, g.link = f.link, g.image = f.image, g.footnote = f.footnote, g.acronym = f.acronym, g.mark = f.mark;
    })(t);
  }
  return $0;
}
var z0, Bw;
function l$() {
  if (Bw) return z0;
  Bw = 1, z0 = e, e.displayName = "toml", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /(?:[\w-]+|'[^'\n\r]*'|"(?:\\.|[^\\"\r\n])*")/.source;
      function o(s) {
        return s.replace(/__/g, function() {
          return r;
        });
      }
      n.languages.toml = {
        comment: {
          pattern: /#.*/,
          greedy: !0
        },
        table: {
          pattern: RegExp(
            o(
              /(^[\t ]*\[\s*(?:\[\s*)?)__(?:\s*\.\s*__)*(?=\s*\])/.source
            ),
            "m"
          ),
          lookbehind: !0,
          greedy: !0,
          alias: "class-name"
        },
        key: {
          pattern: RegExp(
            o(/(^[\t ]*|[{,]\s*)__(?:\s*\.\s*__)*(?=\s*=)/.source),
            "m"
          ),
          lookbehind: !0,
          greedy: !0,
          alias: "property"
        },
        string: {
          pattern: /"""(?:\\[\s\S]|[^\\])*?"""|'''[\s\S]*?'''|'[^'\n\r]*'|"(?:\\.|[^\\"\r\n])*"/,
          greedy: !0
        },
        date: [
          {
            // Offset Date-Time, Local Date-Time, Local Date
            pattern: /\b\d{4}-\d{2}-\d{2}(?:[T\s]\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|[+-]\d{2}:\d{2})?)?\b/i,
            alias: "number"
          },
          {
            // Local Time
            pattern: /\b\d{2}:\d{2}:\d{2}(?:\.\d+)?\b/,
            alias: "number"
          }
        ],
        number: /(?:\b0(?:x[\da-zA-Z]+(?:_[\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\b|[-+]?\b\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?(?:[eE][+-]?\d+(?:_\d+)*)?\b|[-+]?\b(?:inf|nan)\b/,
        boolean: /\b(?:false|true)\b/,
        punctuation: /[.,=[\]{}]/
      };
    })(t);
  }
  return z0;
}
var G0, Uw;
function u$() {
  if (Uw) return G0;
  Uw = 1, G0 = e, e.displayName = "tremor", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.tremor = {
        comment: {
          pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,
          lookbehind: !0
        },
        "interpolated-string": null,
        // see below
        extractor: {
          pattern: /\b[a-z_]\w*\|(?:[^\r\n\\|]|\\(?:\r\n|[\s\S]))*\|/i,
          greedy: !0,
          inside: {
            regex: {
              pattern: /(^re)\|[\s\S]+/,
              lookbehind: !0
            },
            function: /^\w+/,
            value: /\|[\s\S]+/
          }
        },
        identifier: {
          pattern: /`[^`]*`/,
          greedy: !0
        },
        function: /\b[a-z_]\w*(?=\s*(?:::\s*<|\())\b/,
        keyword: /\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\b/,
        boolean: /\b(?:false|null|true)\b/i,
        number: /\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\d[\d_]*(?:\.\d[\d_]*)?(?:[Ee][+-]?[\d_]+)?)\b/,
        "pattern-punctuation": {
          pattern: /%(?=[({[])/,
          alias: "punctuation"
        },
        operator: /[-+*\/%~!^]=?|=[=>]?|&[&=]?|\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\b/,
        punctuation: /::|[;\[\]()\{\},.:]/
      };
      var r = /#\{(?:[^"{}]|\{[^{}]*\}|"(?:[^"\\\r\n]|\\(?:\r\n|[\s\S]))*")*\}/.source;
      n.languages.tremor["interpolated-string"] = {
        pattern: RegExp(
          /(^|[^\\])/.source + '(?:"""(?:' + /[^"\\#]|\\[\s\S]|"(?!"")|#(?!\{)/.source + "|" + r + ')*"""|"(?:' + /[^"\\\r\n#]|\\(?:\r\n|[\s\S])|#(?!\{)/.source + "|" + r + ')*")'
        ),
        lookbehind: !0,
        greedy: !0,
        inside: {
          interpolation: {
            pattern: RegExp(r),
            inside: {
              punctuation: /^#\{|\}$/,
              expression: {
                pattern: /[\s\S]+/,
                inside: n.languages.tremor
              }
            }
          },
          string: /[\s\S]+/
        }
      }, n.languages.troy = n.languages.tremor, n.languages.trickle = n.languages.tremor;
    })(t);
  }
  return G0;
}
var q0, Hw;
function c$() {
  if (Hw) return q0;
  Hw = 1;
  var e = Qx(), t = QE();
  q0 = n, n.displayName = "tsx", n.aliases = [];
  function n(r) {
    r.register(e), r.register(t), function(o) {
      var s = o.util.clone(o.languages.typescript);
      o.languages.tsx = o.languages.extend("jsx", s), delete o.languages.tsx.parameter, delete o.languages.tsx["literal-property"];
      var u = o.languages.tsx.tag;
      u.pattern = RegExp(
        /(^|[^\w$]|(?=<\/))/.source + "(?:" + u.pattern.source + ")",
        u.pattern.flags
      ), u.lookbehind = !0;
    }(r);
  }
  return q0;
}
var j0, $w;
function d$() {
  if ($w) return j0;
  $w = 1;
  var e = On();
  j0 = t, t.displayName = "tt2", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      r.languages.tt2 = r.languages.extend("clike", {
        comment: /#.*|\[%#[\s\S]*?%\]/,
        keyword: /\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|SWITCH|TAGS|THROW|TRY|UNLESS|USE|WHILE|WRAPPER)\b/,
        punctuation: /[[\]{},()]/
      }), r.languages.insertBefore("tt2", "number", {
        operator: /=[>=]?|!=?|<=?|>=?|&&|\|\|?|\b(?:and|not|or)\b/,
        variable: {
          pattern: /\b[a-z]\w*(?:\s*\.\s*(?:\d+|\$?[a-z]\w*))*\b/i
        }
      }), r.languages.insertBefore("tt2", "keyword", {
        delimiter: {
          pattern: /^(?:\[%|%%)-?|-?%\]$/,
          alias: "punctuation"
        }
      }), r.languages.insertBefore("tt2", "string", {
        "single-quoted-string": {
          pattern: /'[^\\']*(?:\\[\s\S][^\\']*)*'/,
          greedy: !0,
          alias: "string"
        },
        "double-quoted-string": {
          pattern: /"[^\\"]*(?:\\[\s\S][^\\"]*)*"/,
          greedy: !0,
          alias: "string",
          inside: {
            variable: {
              pattern: /\$(?:[a-z]\w*(?:\.(?:\d+|\$?[a-z]\w*))*)/i
            }
          }
        }
      }), delete r.languages.tt2.string, r.hooks.add("before-tokenize", function(o) {
        var s = /\[%[\s\S]+?%\]/g;
        r.languages["markup-templating"].buildPlaceholders(
          o,
          "tt2",
          s
        );
      }), r.hooks.add("after-tokenize", function(o) {
        r.languages["markup-templating"].tokenizePlaceholders(o, "tt2");
      });
    }(n);
  }
  return j0;
}
var V0, zw;
function p$() {
  if (zw) return V0;
  zw = 1;
  var e = On();
  V0 = t, t.displayName = "twig", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.twig = {
      comment: /^\{#[\s\S]*?#\}$/,
      "tag-name": {
        pattern: /(^\{%-?\s*)\w+/,
        lookbehind: !0,
        alias: "keyword"
      },
      delimiter: {
        pattern: /^\{[{%]-?|-?[%}]\}$/,
        alias: "punctuation"
      },
      string: {
        pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
        inside: {
          punctuation: /^['"]|['"]$/
        }
      },
      keyword: /\b(?:even|if|odd)\b/,
      boolean: /\b(?:false|null|true)\b/,
      number: /\b0x[\dA-Fa-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][-+]?\d+)?/,
      operator: [
        {
          pattern: /(\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\s)/,
          lookbehind: !0
        },
        /[=<>]=?|!=|\*\*?|\/\/?|\?:?|[-+~%|]/
      ],
      punctuation: /[()\[\]{}:.,]/
    }, n.hooks.add("before-tokenize", function(r) {
      if (r.language === "twig") {
        var o = /\{(?:#[\s\S]*?#|%[\s\S]*?%|\{[\s\S]*?\})\}/g;
        n.languages["markup-templating"].buildPlaceholders(r, "twig", o);
      }
    }), n.hooks.add("after-tokenize", function(r) {
      n.languages["markup-templating"].tokenizePlaceholders(r, "twig");
    });
  }
  return V0;
}
var W0, Gw;
function f$() {
  if (Gw) return W0;
  Gw = 1, W0 = e, e.displayName = "typoscript", e.aliases = ["tsconfig"];
  function e(t) {
    (function(n) {
      var r = /\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\b/;
      n.languages.typoscript = {
        comment: [
          {
            // multiline comments /* */
            pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
            lookbehind: !0
          },
          {
            // double-slash comments - ignored when backslashes or colon is found in front
            // also ignored whenever directly after an equal-sign, because it would probably be an url without protocol
            pattern: /(^|[^\\:= \t]|(?:^|[^= \t])[ \t]+)\/\/.*/,
            lookbehind: !0,
            greedy: !0
          },
          {
            // hash comments - ignored when leading quote is found for hex colors in strings
            pattern: /(^|[^"'])#.*/,
            lookbehind: !0,
            greedy: !0
          }
        ],
        function: [
          {
            // old include style
            pattern: /<INCLUDE_TYPOSCRIPT:\s*source\s*=\s*(?:"[^"\r\n]*"|'[^'\r\n]*')\s*>/,
            inside: {
              string: {
                pattern: /"[^"\r\n]*"|'[^'\r\n]*'/,
                inside: {
                  keyword: r
                }
              },
              keyword: {
                pattern: /INCLUDE_TYPOSCRIPT/
              }
            }
          },
          {
            // new include style
            pattern: /@import\s*(?:"[^"\r\n]*"|'[^'\r\n]*')/,
            inside: {
              string: /"[^"\r\n]*"|'[^'\r\n]*'/
            }
          }
        ],
        string: {
          pattern: /^([^=]*=[< ]?)(?:(?!\]\n).)*/,
          lookbehind: !0,
          inside: {
            function: /\{\$.*\}/,
            // constants include
            keyword: r,
            number: /^\d+$/,
            punctuation: /[,|:]/
          }
        },
        keyword: r,
        number: {
          // special highlighting for indexes of arrays in tags
          pattern: /\b\d+\s*[.{=]/,
          inside: {
            operator: /[.{=]/
          }
        },
        tag: {
          pattern: /\.?[-\w\\]+\.?/,
          inside: {
            punctuation: /\./
          }
        },
        punctuation: /[{}[\];(),.:|]/,
        operator: /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/
      }, n.languages.tsconfig = n.languages.typoscript;
    })(t);
  }
  return W0;
}
var Y0, qw;
function h$() {
  if (qw) return Y0;
  qw = 1, Y0 = e, e.displayName = "unrealscript", e.aliases = ["uc", "uscript"];
  function e(t) {
    t.languages.unrealscript = {
      comment: /\/\/.*|\/\*[\s\S]*?\*\//,
      string: {
        pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
        greedy: !0
      },
      category: {
        pattern: /(\b(?:(?:autoexpand|hide|show)categories|var)\s*\()[^()]+(?=\))/,
        lookbehind: !0,
        greedy: !0,
        alias: "property"
      },
      metadata: {
        pattern: /(\w\s*)<\s*\w+\s*=[^<>|=\r\n]+(?:\|\s*\w+\s*=[^<>|=\r\n]+)*>/,
        lookbehind: !0,
        greedy: !0,
        inside: {
          property: /\b\w+(?=\s*=)/,
          operator: /=/,
          punctuation: /[<>|]/
        }
      },
      macro: {
        pattern: /`\w+/,
        alias: "property"
      },
      "class-name": {
        pattern: /(\b(?:class|enum|extends|interface|state(?:\(\))?|struct|within)\s+)\w+/,
        lookbehind: !0
      },
      keyword: /\b(?:abstract|actor|array|auto|autoexpandcategories|bool|break|byte|case|class|classgroup|client|coerce|collapsecategories|config|const|continue|default|defaultproperties|delegate|dependson|deprecated|do|dontcollapsecategories|editconst|editinlinenew|else|enum|event|exec|export|extends|final|float|for|forcescriptorder|foreach|function|goto|guid|hidecategories|hidedropdown|if|ignores|implements|inherits|input|int|interface|iterator|latent|local|material|name|native|nativereplication|noexport|nontransient|noteditinlinenew|notplaceable|operator|optional|out|pawn|perobjectconfig|perobjectlocalized|placeable|postoperator|preoperator|private|protected|reliable|replication|return|server|showcategories|simulated|singular|state|static|string|struct|structdefault|structdefaultproperties|switch|texture|transient|travel|unreliable|until|var|vector|while|within)\b/,
      function: /\b[a-z_]\w*(?=\s*\()/i,
      boolean: /\b(?:false|true)\b/,
      number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
      // https://docs.unrealengine.com/udk/Three/UnrealScriptExpressions.html
      operator: />>|<<|--|\+\+|\*\*|[-+*/~!=<>$@]=?|&&?|\|\|?|\^\^?|[?:%]|\b(?:ClockwiseFrom|Cross|Dot)\b/,
      punctuation: /[()[\]{};,.]/
    }, t.languages.uc = t.languages.uscript = t.languages.unrealscript;
  }
  return Y0;
}
var K0, jw;
function g$() {
  if (jw) return K0;
  jw = 1, K0 = e, e.displayName = "uorazor", e.aliases = [];
  function e(t) {
    t.languages.uorazor = {
      "comment-hash": {
        pattern: /#.*/,
        alias: "comment",
        greedy: !0
      },
      "comment-slash": {
        pattern: /\/\/.*/,
        alias: "comment",
        greedy: !0
      },
      string: {
        pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
        inside: {
          punctuation: /^['"]|['"]$/
        },
        greedy: !0
      },
      "source-layers": {
        pattern: /\b(?:arms|backpack|blue|bracelet|cancel|clear|cloak|criminal|earrings|enemy|facialhair|friend|friendly|gloves|gray|grey|ground|hair|head|innerlegs|innertorso|innocent|lefthand|middletorso|murderer|neck|nonfriendly|onehandedsecondary|outerlegs|outertorso|pants|red|righthand|ring|self|shirt|shoes|talisman|waist)\b/i,
        alias: "function"
      },
      "source-commands": {
        pattern: /\b(?:alliance|attack|cast|clearall|clearignore|clearjournal|clearlist|clearsysmsg|createlist|createtimer|dclick|dclicktype|dclickvar|dress|dressconfig|drop|droprelloc|emote|getlabel|guild|gumpclose|gumpresponse|hotkey|ignore|lasttarget|lift|lifttype|menu|menuresponse|msg|org|organize|organizer|overhead|pause|poplist|potion|promptresponse|pushlist|removelist|removetimer|rename|restock|say|scav|scavenger|script|setability|setlasttarget|setskill|settimer|setvar|sysmsg|target|targetloc|targetrelloc|targettype|undress|unignore|unsetvar|useobject|useonce|useskill|usetype|virtue|wait|waitforgump|waitformenu|waitforprompt|waitforstat|waitforsysmsg|waitfortarget|walk|wfsysmsg|wft|whisper|yell)\b/,
        alias: "function"
      },
      "tag-name": {
        pattern: /(^\{%-?\s*)\w+/,
        lookbehind: !0,
        alias: "keyword"
      },
      delimiter: {
        pattern: /^\{[{%]-?|-?[%}]\}$/,
        alias: "punctuation"
      },
      function: /\b(?:atlist|close|closest|count|counter|counttype|dead|dex|diffhits|diffmana|diffstam|diffweight|find|findbuff|finddebuff|findlayer|findtype|findtypelist|followers|gumpexists|hidden|hits|hp|hue|human|humanoid|ingump|inlist|insysmessage|insysmsg|int|invul|lhandempty|list|listexists|mana|maxhits|maxhp|maxmana|maxstam|maxweight|monster|mounted|name|next|noto|paralyzed|poisoned|position|prev|previous|queued|rand|random|rhandempty|skill|stam|str|targetexists|timer|timerexists|varexist|warmode|weight)\b/,
      keyword: /\b(?:and|as|break|continue|else|elseif|endfor|endif|endwhile|for|if|loop|not|or|replay|stop|while)\b/,
      boolean: /\b(?:false|null|true)\b/,
      number: /\b0x[\dA-Fa-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][-+]?\d+)?/,
      operator: [
        {
          pattern: /(\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\s)/,
          lookbehind: !0
        },
        /[=<>]=?|!=|\*\*?|\/\/?|\?:?|[-+~%|]/
      ],
      punctuation: /[()\[\]{}:.,]/
    };
  }
  return K0;
}
var X0, Vw;
function m$() {
  if (Vw) return X0;
  Vw = 1, X0 = e, e.displayName = "uri", e.aliases = ["url"];
  function e(t) {
    t.languages.uri = {
      scheme: {
        pattern: /^[a-z][a-z0-9+.-]*:/im,
        greedy: !0,
        inside: {
          "scheme-delimiter": /:$/
        }
      },
      fragment: {
        pattern: /#[\w\-.~!$&'()*+,;=%:@/?]*/,
        inside: {
          "fragment-delimiter": /^#/
        }
      },
      query: {
        pattern: /\?[\w\-.~!$&'()*+,;=%:@/?]*/,
        inside: {
          "query-delimiter": {
            pattern: /^\?/,
            greedy: !0
          },
          "pair-delimiter": /[&;]/,
          pair: {
            pattern: /^[^=][\s\S]*/,
            inside: {
              key: /^[^=]+/,
              value: {
                pattern: /(^=)[\s\S]+/,
                lookbehind: !0
              }
            }
          }
        }
      },
      authority: {
        pattern: RegExp(
          /^\/\//.source + // [ userinfo "@" ]
          /(?:[\w\-.~!$&'()*+,;=%:]*@)?/.source + // host
          ("(?:" + // IP-literal
          /\[(?:[0-9a-fA-F:.]{2,48}|v[0-9a-fA-F]+\.[\w\-.~!$&'()*+,;=]+)\]/.source + "|" + // IPv4address or registered name
          /[\w\-.~!$&'()*+,;=%]*/.source + ")") + // [ ":" port ]
          /(?::\d*)?/.source,
          "m"
        ),
        inside: {
          "authority-delimiter": /^\/\//,
          "user-info-segment": {
            pattern: /^[\w\-.~!$&'()*+,;=%:]*@/,
            inside: {
              "user-info-delimiter": /@$/,
              "user-info": /^[\w\-.~!$&'()*+,;=%:]+/
            }
          },
          "port-segment": {
            pattern: /:\d*$/,
            inside: {
              "port-delimiter": /^:/,
              port: /^\d+/
            }
          },
          host: {
            pattern: /[\s\S]+/,
            inside: {
              "ip-literal": {
                pattern: /^\[[\s\S]+\]$/,
                inside: {
                  "ip-literal-delimiter": /^\[|\]$/,
                  "ipv-future": /^v[\s\S]+/,
                  "ipv6-address": /^[\s\S]+/
                }
              },
              "ipv4-address": /^(?:(?:[03-9]\d?|[12]\d{0,2})\.){3}(?:[03-9]\d?|[12]\d{0,2})$/
            }
          }
        }
      },
      path: {
        pattern: /^[\w\-.~!$&'()*+,;=%:@/]+/m,
        inside: {
          "path-separator": /\//
        }
      }
    }, t.languages.url = t.languages.uri;
  }
  return X0;
}
var Q0, Ww;
function b$() {
  if (Ww) return Q0;
  Ww = 1, Q0 = e, e.displayName = "v", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = {
        pattern: /[\s\S]+/,
        inside: null
      };
      n.languages.v = n.languages.extend("clike", {
        string: {
          pattern: /r?(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
          alias: "quoted-string",
          greedy: !0,
          inside: {
            interpolation: {
              pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:\{[^{}]*\}|\w+(?:\.\w+(?:\([^\(\)]*\))?|\[[^\[\]]+\])*)/,
              lookbehind: !0,
              inside: {
                "interpolation-variable": {
                  pattern: /^\$\w[\s\S]*$/,
                  alias: "variable"
                },
                "interpolation-punctuation": {
                  pattern: /^\$\{|\}$/,
                  alias: "punctuation"
                },
                "interpolation-expression": r
              }
            }
          }
        },
        "class-name": {
          pattern: /(\b(?:enum|interface|struct|type)\s+)(?:C\.)?\w+/,
          lookbehind: !0
        },
        keyword: /(?:\b(?:__global|as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\$(?:else|for|if)|#(?:flag|include))\b/,
        number: /\b(?:0x[a-f\d]+(?:_[a-f\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?)\b/i,
        operator: /~|\?|[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\.?/,
        builtin: /\b(?:any(?:_float|_int)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|64|128|nt)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\b/
      }), r.inside = n.languages.v, n.languages.insertBefore("v", "string", {
        char: {
          pattern: /`(?:\\`|\\?[^`]{1,2})`/,
          // using {1,2} instead of `u` flag for compatibility
          alias: "rune"
        }
      }), n.languages.insertBefore("v", "operator", {
        attribute: {
          pattern: /(^[\t ]*)\[(?:deprecated|direct_array_access|flag|inline|live|ref_only|typedef|unsafe_fn|windows_stdcall)\]/m,
          lookbehind: !0,
          alias: "annotation",
          inside: {
            punctuation: /[\[\]]/,
            keyword: /\w+/
          }
        },
        generic: {
          pattern: /<\w+>(?=\s*[\)\{])/,
          inside: {
            punctuation: /[<>]/,
            "class-name": /\w+/
          }
        }
      }), n.languages.insertBefore("v", "function", {
        "generic-function": {
          // e.g. foo<T>( ...
          pattern: /\b\w+\s*<\w+>(?=\()/,
          inside: {
            function: /^\w+/,
            generic: {
              pattern: /<\w+>/,
              inside: n.languages.v.generic.inside
            }
          }
        }
      });
    })(t);
  }
  return Q0;
}
var Z0, Yw;
function E$() {
  if (Yw) return Z0;
  Yw = 1, Z0 = e, e.displayName = "vala", e.aliases = [];
  function e(t) {
    t.languages.vala = t.languages.extend("clike", {
      // Classes copied from prism-csharp
      "class-name": [
        {
          // (Foo bar, Bar baz)
          pattern: /\b[A-Z]\w*(?:\.\w+)*\b(?=(?:\?\s+|\*?\s+\*?)\w)/,
          inside: {
            punctuation: /\./
          }
        },
        {
          // [Foo]
          pattern: /(\[)[A-Z]\w*(?:\.\w+)*\b/,
          lookbehind: !0,
          inside: {
            punctuation: /\./
          }
        },
        {
          // class Foo : Bar
          pattern: /(\b(?:class|interface)\s+[A-Z]\w*(?:\.\w+)*\s*:\s*)[A-Z]\w*(?:\.\w+)*\b/,
          lookbehind: !0,
          inside: {
            punctuation: /\./
          }
        },
        {
          // class Foo
          pattern: /((?:\b(?:class|enum|interface|new|struct)\s+)|(?:catch\s+\())[A-Z]\w*(?:\.\w+)*\b/,
          lookbehind: !0,
          inside: {
            punctuation: /\./
          }
        }
      ],
      keyword: /\b(?:abstract|as|assert|async|base|bool|break|case|catch|char|class|const|construct|continue|default|delegate|delete|do|double|dynamic|else|ensures|enum|errordomain|extern|finally|float|for|foreach|get|if|in|inline|int|int16|int32|int64|int8|interface|internal|is|lock|long|namespace|new|null|out|override|owned|params|private|protected|public|ref|requires|return|set|short|signal|sizeof|size_t|ssize_t|static|string|struct|switch|this|throw|throws|try|typeof|uchar|uint|uint16|uint32|uint64|uint8|ulong|unichar|unowned|ushort|using|value|var|virtual|void|volatile|weak|while|yield)\b/i,
      function: /\b\w+(?=\s*\()/,
      number: /(?:\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)(?:f|u?l?)?/i,
      operator: /\+\+|--|&&|\|\||<<=?|>>=?|=>|->|~|[+\-*\/%&^|=!<>]=?|\?\??|\.\.\./,
      punctuation: /[{}[\];(),.:]/,
      constant: /\b[A-Z0-9_]+\b/
    }), t.languages.insertBefore("vala", "string", {
      "raw-string": {
        pattern: /"""[\s\S]*?"""/,
        greedy: !0,
        alias: "string"
      },
      "template-string": {
        pattern: /@"[\s\S]*?"/,
        greedy: !0,
        inside: {
          interpolation: {
            pattern: /\$(?:\([^)]*\)|[a-zA-Z]\w*)/,
            inside: {
              delimiter: {
                pattern: /^\$\(?|\)$/,
                alias: "punctuation"
              },
              rest: t.languages.vala
            }
          },
          string: /[\s\S]+/
        }
      }
    }), t.languages.insertBefore("vala", "keyword", {
      regex: {
        pattern: /\/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[imsx]{0,4}(?=\s*(?:$|[\r\n,.;})\]]))/,
        greedy: !0,
        inside: {
          "regex-source": {
            pattern: /^(\/)[\s\S]+(?=\/[a-z]*$)/,
            lookbehind: !0,
            alias: "language-regex",
            inside: t.languages.regex
          },
          "regex-delimiter": /^\//,
          "regex-flags": /^[a-z]+$/
        }
      }
    });
  }
  return Z0;
}
var J0, Kw;
function y$() {
  if (Kw) return J0;
  Kw = 1, J0 = e, e.displayName = "velocity", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.velocity = n.languages.extend("markup", {});
      var r = {
        variable: {
          pattern: /(^|[^\\](?:\\\\)*)\$!?(?:[a-z][\w-]*(?:\([^)]*\))?(?:\.[a-z][\w-]*(?:\([^)]*\))?|\[[^\]]+\])*|\{[^}]+\})/i,
          lookbehind: !0,
          inside: {}
          // See below
        },
        string: {
          pattern: /"[^"]*"|'[^']*'/,
          greedy: !0
        },
        number: /\b\d+\b/,
        boolean: /\b(?:false|true)\b/,
        operator: /[=!<>]=?|[+*/%-]|&&|\|\||\.\.|\b(?:eq|g[et]|l[et]|n(?:e|ot))\b/,
        punctuation: /[(){}[\]:,.]/
      };
      r.variable.inside = {
        string: r.string,
        function: {
          pattern: /([^\w-])[a-z][\w-]*(?=\()/,
          lookbehind: !0
        },
        number: r.number,
        boolean: r.boolean,
        punctuation: r.punctuation
      }, n.languages.insertBefore("velocity", "comment", {
        unparsed: {
          pattern: /(^|[^\\])#\[\[[\s\S]*?\]\]#/,
          lookbehind: !0,
          greedy: !0,
          inside: {
            punctuation: /^#\[\[|\]\]#$/
          }
        },
        "velocity-comment": [
          {
            pattern: /(^|[^\\])#\*[\s\S]*?\*#/,
            lookbehind: !0,
            greedy: !0,
            alias: "comment"
          },
          {
            pattern: /(^|[^\\])##.*/,
            lookbehind: !0,
            greedy: !0,
            alias: "comment"
          }
        ],
        directive: {
          pattern: /(^|[^\\](?:\\\\)*)#@?(?:[a-z][\w-]*|\{[a-z][\w-]*\})(?:\s*\((?:[^()]|\([^()]*\))*\))?/i,
          lookbehind: !0,
          inside: {
            keyword: {
              pattern: /^#@?(?:[a-z][\w-]*|\{[a-z][\w-]*\})|\bin\b/,
              inside: {
                punctuation: /[{}]/
              }
            },
            rest: r
          }
        },
        variable: r.variable
      }), n.languages.velocity.tag.inside["attr-value"].inside.rest = n.languages.velocity;
    })(t);
  }
  return J0;
}
var eb, Xw;
function T$() {
  if (Xw) return eb;
  Xw = 1, eb = e, e.displayName = "verilog", e.aliases = [];
  function e(t) {
    t.languages.verilog = {
      comment: {
        pattern: /\/\/.*|\/\*[\s\S]*?\*\//,
        greedy: !0
      },
      string: {
        pattern: /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
        greedy: !0
      },
      "kernel-function": {
        // support for any kernel function (ex: $display())
        pattern: /\B\$\w+\b/,
        alias: "property"
      },
      // support for user defined constants (ex: `define)
      constant: /\B`\w+\b/,
      function: /\b\w+(?=\()/,
      // support for verilog and system verilog keywords
      keyword: /\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|case|casex|casez|cell|chandle|class|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endsequence|endspecify|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_ondetect|pulsestyle_onevent|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\b/,
      // bold highlighting for all verilog and system verilog logic blocks
      important: /\b(?:always|always_comb|always_ff|always_latch)\b(?: *@)?/,
      // support for time ticks, vectors, and real numbers
      number: /\B##?\d+|(?:\b\d+)?'[odbh] ?[\da-fzx_?]+|\b(?:\d*[._])?\d+(?:e[-+]?\d+)?/i,
      operator: /[-+{}^~%*\/?=!<>&|]+/,
      punctuation: /[[\];(),.:]/
    };
  }
  return eb;
}
var tb, Qw;
function S$() {
  if (Qw) return tb;
  Qw = 1, tb = e, e.displayName = "vhdl", e.aliases = [];
  function e(t) {
    t.languages.vhdl = {
      comment: /--.+/,
      // support for all logic vectors
      "vhdl-vectors": {
        pattern: /\b[oxb]"[\da-f_]+"|"[01uxzwlh-]+"/i,
        alias: "number"
      },
      // support for operator overloading included
      "quoted-function": {
        pattern: /"\S+?"(?=\()/,
        alias: "function"
      },
      string: /"(?:[^\\"\r\n]|\\(?:\r\n|[\s\S]))*"/,
      constant: /\b(?:library|use)\b/i,
      // support for predefined attributes included
      keyword: /\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\b/i,
      boolean: /\b(?:false|true)\b/i,
      function: /\w+(?=\()/,
      // decimal, based, physical, and exponential numbers supported
      number: /'[01uxzwlh-]'|\b(?:\d+#[\da-f_.]+#|\d[\d_.]*)(?:e[-+]?\d+)?/i,
      operator: /[<>]=?|:=|[-+*/&=]|\b(?:abs|and|mod|nand|nor|not|or|rem|rol|ror|sla|sll|sra|srl|xnor|xor)\b/i,
      punctuation: /[{}[\];(),.:]/
    };
  }
  return tb;
}
var nb, Zw;
function _$() {
  if (Zw) return nb;
  Zw = 1, nb = e, e.displayName = "vim", e.aliases = [];
  function e(t) {
    t.languages.vim = {
      string: /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\r\n]|'')*'/,
      comment: /".*/,
      function: /\b\w+(?=\()/,
      keyword: /\b(?:N|Next|P|Print|X|XMLent|XMLns|ab|abbreviate|abc|abclear|abo|aboveleft|al|all|ar|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|args|argu|argument|as|ascii|b|bN|bNext|ba|bad|badd|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bo|botright|bp|bprevious|br|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|brewind|bro|browse|bufdo|buffer|buffers|bun|bunload|bw|bwipeout|c|cN|cNext|cNfcNfile|ca|cabbrev|cabc|cabclear|cad|caddb|caddbuffer|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cg|cgetb|cgetbuffer|cgete|cgetexpr|cgetfile|change|changes|chd|chdir|che|checkpath|checkt|checktime|cl|cla|clast|clist|clo|close|cmapc|cmapclear|cn|cnew|cnewer|cnext|cnf|cnfile|cnorea|cnoreabbrev|co|col|colder|colo|colorscheme|comc|comclear|comp|compiler|con|conf|confirm|continue|cope|copen|copy|cp|cpf|cpfile|cprevious|cq|cquit|cr|crewind|cu|cuna|cunabbrev|cunmap|cw|cwindow|d|debugg|debuggreedy|delc|delcommand|delete|delf|delfunction|delm|delmarks|di|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|e|earlier|echoe|echoerr|echom|echomsg|echon|edit|el|else|elsei|elseif|em|emenu|en|endf|endfo|endfor|endfun|endfunction|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fin|fina|finally|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|foldd|folddoc|folddoclosed|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|h|ha|hardcopy|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iu|iuna|iunabbrev|iunmap|j|join|ju|jumps|k|kee|keepalt|keepj|keepjumps|keepmarks|l|lN|lNext|lNf|lNfile|la|lad|laddb|laddbuffer|laddexpr|laddf|laddfile|lan|language|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|left|lefta|leftabove|let|lex|lexpr|lf|lfile|lfir|lfirst|lg|lgetb|lgetbuffer|lgete|lgetexpr|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|list|ll|lla|llast|lli|llist|lm|lmak|lmake|lmap|lmapc|lmapclear|ln|lne|lnew|lnewer|lnext|lnf|lnfile|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lp|lpf|lpfile|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|m|ma|mak|make|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkv|mkvie|mkview|mkvimrc|mod|mode|move|mz|mzf|mzfile|mzscheme|n|nbkey|new|next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|o|omapc|omapclear|on|only|open|opt|options|ou|ounmap|p|pc|pclose|pe|ped|pedit|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|print|prof|profd|profdel|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|ptN|ptNext|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|py|pyf|pyfile|python|q|qa|qall|quit|quita|quitall|r|read|rec|recover|red|redi|redir|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|ru|rub|ruby|rubyd|rubydo|rubyf|rubyfile|runtime|rv|rviminfo|sN|sNext|sa|sal|sall|san|sandbox|sargument|sav|saveas|sb|sbN|sbNext|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbp|sbprevious|sbr|sbrewind|sbuffer|scrip|scripte|scriptencoding|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sl|sla|slast|sleep|sm|smagic|smap|smapc|smapclear|sme|smenu|sn|snext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|so|sor|sort|source|sp|spe|spelld|spelldump|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|split|spr|sprevious|sre|srewind|st|sta|stag|star|startg|startgreplace|startinsert|startr|startreplace|stj|stjump|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tN|tNext|ta|tab|tabN|tabNext|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabn|tabnew|tabnext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tmenu|tn|tnext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tunmenu|u|una|unabbreviate|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|ve|verb|verbose|version|vert|vertical|vi|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|w|wN|wNext|wa|wall|wh|while|win|winc|wincmd|windo|winp|winpos|winsize|wn|wnext|wp|wprevious|wq|wqa|wqall|write|ws|wsverb|wv|wviminfo|x|xa|xall|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\b/,
      builtin: /\b(?:acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autocmd|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|t_AB|t_AF|t_AL|t_CS|t_CV|t_Ce|t_Co|t_Cs|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_IE|t_IS|t_K1|t_K3|t_K4|t_K5|t_K6|t_K7|t_K8|t_K9|t_KA|t_KB|t_KC|t_KD|t_KE|t_KF|t_KG|t_KH|t_KI|t_KJ|t_KK|t_KL|t_RI|t_RV|t_SI|t_Sb|t_Sf|t_WP|t_WS|t_ZH|t_ZR|t_al|t_bc|t_cd|t_ce|t_cl|t_cm|t_cs|t_da|t_db|t_dl|t_fs|t_k1|t_k2|t_k3|t_k4|t_k5|t_k6|t_k7|t_k8|t_k9|t_kB|t_kD|t_kI|t_kN|t_kP|t_kb|t_kd|t_ke|t_kh|t_kl|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_se|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_xs|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww)\b/,
      number: /\b(?:0x[\da-f]+|\d+(?:\.\d+)?)\b/i,
      operator: /\|\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\/%?]|\b(?:is(?:not)?)\b/,
      punctuation: /[{}[\](),;:]/
    };
  }
  return nb;
}
var rb, Jw;
function v$() {
  if (Jw) return rb;
  Jw = 1, rb = e, e.displayName = "visualBasic", e.aliases = [];
  function e(t) {
    t.languages["visual-basic"] = {
      comment: {
        pattern: /(?:['‘’]|REM\b)(?:[^\r\n_]|_(?:\r\n?|\n)?)*/i,
        inside: {
          keyword: /^REM/i
        }
      },
      directive: {
        pattern: /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:\b_[ \t]*(?:\r\n?|\n)|.)+/i,
        alias: "property",
        greedy: !0
      },
      string: {
        pattern: /\$?["“”](?:["“”]{2}|[^"“”])*["“”]C?/i,
        greedy: !0
      },
      date: {
        pattern: /#[ \t]*(?:\d+([/-])\d+\1\d+(?:[ \t]+(?:\d+[ \t]*(?:AM|PM)|\d+:\d+(?::\d+)?(?:[ \t]*(?:AM|PM))?))?|\d+[ \t]*(?:AM|PM)|\d+:\d+(?::\d+)?(?:[ \t]*(?:AM|PM))?)[ \t]*#/i,
        alias: "number"
      },
      number: /(?:(?:\b\d+(?:\.\d+)?|\.\d+)(?:E[+-]?\d+)?|&[HO][\dA-F]+)(?:[FRD]|U?[ILS])?/i,
      boolean: /\b(?:False|Nothing|True)\b/i,
      keyword: /\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Currency|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|Type|TypeOf|U(?:Integer|Long|Short)|Until|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\b/i,
      operator: /[+\-*/\\^<=>&#@$%!]|\b_(?=[ \t]*[\r\n])/,
      punctuation: /[{}().,:?]/
    }, t.languages.vb = t.languages["visual-basic"], t.languages.vba = t.languages["visual-basic"];
  }
  return rb;
}
var ab, eI;
function A$() {
  if (eI) return ab;
  eI = 1, ab = e, e.displayName = "warpscript", e.aliases = [];
  function e(t) {
    t.languages.warpscript = {
      comment: /#.*|\/\/.*|\/\*[\s\S]*?\*\//,
      string: {
        pattern: /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'|<'(?:[^\\']|'(?!>)|\\.)*'>/,
        greedy: !0
      },
      variable: /\$\S+/,
      macro: {
        pattern: /@\S+/,
        alias: "property"
      },
      // WarpScript doesn't have any keywords, these are all functions under the control category
      // https://www.warp10.io/tags/control
      keyword: /\b(?:BREAK|CHECKMACRO|CONTINUE|CUDF|DEFINED|DEFINEDMACRO|EVAL|FAIL|FOR|FOREACH|FORSTEP|IFT|IFTE|MSGFAIL|NRETURN|RETHROW|RETURN|SWITCH|TRY|UDF|UNTIL|WHILE)\b/,
      number: /[+-]?\b(?:NaN|Infinity|\d+(?:\.\d*)?(?:[Ee][+-]?\d+)?|0x[\da-fA-F]+|0b[01]+)\b/,
      boolean: /\b(?:F|T|false|true)\b/,
      punctuation: /<%|%>|[{}[\]()]/,
      // Some operators from the "operators" category
      // https://www.warp10.io/tags/operators
      operator: /==|&&?|\|\|?|\*\*?|>>>?|<<|[<>!~]=?|[-/%^]|\+!?|\b(?:AND|NOT|OR)\b/
    };
  }
  return ab;
}
var ib, tI;
function k$() {
  if (tI) return ib;
  tI = 1, ib = e, e.displayName = "wasm", e.aliases = [];
  function e(t) {
    t.languages.wasm = {
      comment: [
        /\(;[\s\S]*?;\)/,
        {
          pattern: /;;.*/,
          greedy: !0
        }
      ],
      string: {
        pattern: /"(?:\\[\s\S]|[^"\\])*"/,
        greedy: !0
      },
      keyword: [
        {
          pattern: /\b(?:align|offset)=/,
          inside: {
            operator: /=/
          }
        },
        {
          pattern: /\b(?:(?:f32|f64|i32|i64)(?:\.(?:abs|add|and|ceil|clz|const|convert_[su]\/i(?:32|64)|copysign|ctz|demote\/f64|div(?:_[su])?|eqz?|extend_[su]\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\/f32|reinterpret\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\/f(?:32|64))?|wrap\/i64|xor))?|memory\.(?:grow|size))\b/,
          inside: {
            punctuation: /\./
          }
        },
        /\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\b/
      ],
      variable: /\$[\w!#$%&'*+\-./:<=>?@\\^`|~]+/,
      number: /[+-]?\b(?:\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:[eE][+-]?\d(?:_?\d)*)?|0x[\da-fA-F](?:_?[\da-fA-F])*(?:\.[\da-fA-F](?:_?[\da-fA-D])*)?(?:[pP][+-]?\d(?:_?\d)*)?)\b|\binf\b|\bnan(?::0x[\da-fA-F](?:_?[\da-fA-D])*)?\b/,
      punctuation: /[()]/
    };
  }
  return ib;
}
var ob, nI;
function C$() {
  if (nI) return ob;
  nI = 1, ob = e, e.displayName = "webIdl", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /(?:\B-|\b_|\b)[A-Za-z][\w-]*(?![\w-])/.source, o = "(?:" + /\b(?:unsigned\s+)?long\s+long(?![\w-])/.source + "|" + /\b(?:unrestricted|unsigned)\s+[a-z]+(?![\w-])/.source + "|" + /(?!(?:unrestricted|unsigned)\b)/.source + r + /(?:\s*<(?:[^<>]|<[^<>]*>)*>)?/.source + ")" + /(?:\s*\?)?/.source, s = {};
      n.languages["web-idl"] = {
        comment: {
          pattern: /\/\/.*|\/\*[\s\S]*?\*\//,
          greedy: !0
        },
        string: {
          pattern: /"[^"]*"/,
          greedy: !0
        },
        namespace: {
          pattern: RegExp(/(\bnamespace\s+)/.source + r),
          lookbehind: !0
        },
        "class-name": [
          {
            pattern: /(^|[^\w-])(?:iterable|maplike|setlike)\s*<(?:[^<>]|<[^<>]*>)*>/,
            lookbehind: !0,
            inside: s
          },
          {
            pattern: RegExp(
              /(\b(?:attribute|const|deleter|getter|optional|setter)\s+)/.source + o
            ),
            lookbehind: !0,
            inside: s
          },
          {
            // callback return type
            pattern: RegExp(
              "(" + /\bcallback\s+/.source + r + /\s*=\s*/.source + ")" + o
            ),
            lookbehind: !0,
            inside: s
          },
          {
            // typedef
            pattern: RegExp(/(\btypedef\b\s*)/.source + o),
            lookbehind: !0,
            inside: s
          },
          {
            pattern: RegExp(
              /(\b(?:callback|dictionary|enum|interface(?:\s+mixin)?)\s+)(?!(?:interface|mixin)\b)/.source + r
            ),
            lookbehind: !0
          },
          {
            // inheritance
            pattern: RegExp(/(:\s*)/.source + r),
            lookbehind: !0
          },
          // includes and implements
          RegExp(r + /(?=\s+(?:implements|includes)\b)/.source),
          {
            pattern: RegExp(/(\b(?:implements|includes)\s+)/.source + r),
            lookbehind: !0
          },
          {
            // function return type, parameter types, and dictionary members
            pattern: RegExp(
              o + "(?=" + /\s*(?:\.{3}\s*)?/.source + r + /\s*[(),;=]/.source + ")"
            ),
            inside: s
          }
        ],
        builtin: /\b(?:ArrayBuffer|BigInt64Array|BigUint64Array|ByteString|DOMString|DataView|Float32Array|Float64Array|FrozenArray|Int16Array|Int32Array|Int8Array|ObservableArray|Promise|USVString|Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray)\b/,
        keyword: [
          /\b(?:async|attribute|callback|const|constructor|deleter|dictionary|enum|getter|implements|includes|inherit|interface|mixin|namespace|null|optional|or|partial|readonly|required|setter|static|stringifier|typedef|unrestricted)\b/,
          // type keywords
          /\b(?:any|bigint|boolean|byte|double|float|iterable|long|maplike|object|octet|record|sequence|setlike|short|symbol|undefined|unsigned|void)\b/
        ],
        boolean: /\b(?:false|true)\b/,
        number: {
          pattern: /(^|[^\w-])-?(?:0x[0-9a-f]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|NaN|Infinity)(?![\w-])/i,
          lookbehind: !0
        },
        operator: /\.{3}|[=:?<>-]/,
        punctuation: /[(){}[\].,;]/
      };
      for (var u in n.languages["web-idl"])
        u !== "class-name" && (s[u] = n.languages["web-idl"][u]);
      n.languages.webidl = n.languages["web-idl"];
    })(t);
  }
  return ob;
}
var sb, rI;
function w$() {
  if (rI) return sb;
  rI = 1, sb = e, e.displayName = "wiki", e.aliases = [];
  function e(t) {
    t.languages.wiki = t.languages.extend("markup", {
      "block-comment": {
        pattern: /(^|[^\\])\/\*[\s\S]*?\*\//,
        lookbehind: !0,
        alias: "comment"
      },
      heading: {
        pattern: /^(=+)[^=\r\n].*?\1/m,
        inside: {
          punctuation: /^=+|=+$/,
          important: /.+/
        }
      },
      emphasis: {
        // TODO Multi-line
        pattern: /('{2,5}).+?\1/,
        inside: {
          "bold-italic": {
            pattern: /(''''').+?(?=\1)/,
            lookbehind: !0,
            alias: ["bold", "italic"]
          },
          bold: {
            pattern: /(''')[^'](?:.*?[^'])?(?=\1)/,
            lookbehind: !0
          },
          italic: {
            pattern: /('')[^'](?:.*?[^'])?(?=\1)/,
            lookbehind: !0
          },
          punctuation: /^''+|''+$/
        }
      },
      hr: {
        pattern: /^-{4,}/m,
        alias: "punctuation"
      },
      url: [
        /ISBN +(?:97[89][ -]?)?(?:\d[ -]?){9}[\dx]\b|(?:PMID|RFC) +\d+/i,
        /\[\[.+?\]\]|\[.+?\]/
      ],
      variable: [
        /__[A-Z]+__/,
        // FIXME Nested structures should be handled
        // {{formatnum:{{#expr:{{{3}}}}}}}
        /\{{3}.+?\}{3}/,
        /\{\{.+?\}\}/
      ],
      symbol: [/^#redirect/im, /~{3,5}/],
      // Handle table attrs:
      // {|
      // ! style="text-align:left;"| Item
      // |}
      "table-tag": {
        pattern: /((?:^|[|!])[|!])[^|\r\n]+\|(?!\|)/m,
        lookbehind: !0,
        inside: {
          "table-bar": {
            pattern: /\|$/,
            alias: "punctuation"
          },
          rest: t.languages.markup.tag.inside
        }
      },
      punctuation: /^(?:\{\||\|\}|\|-|[*#:;!|])|\|\||!!/m
    }), t.languages.insertBefore("wiki", "tag", {
      // Prevent highlighting inside <nowiki>, <source> and <pre> tags
      nowiki: {
        pattern: /<(nowiki|pre|source)\b[^>]*>[\s\S]*?<\/\1>/i,
        inside: {
          tag: {
            pattern: /<(?:nowiki|pre|source)\b[^>]*>|<\/(?:nowiki|pre|source)>/i,
            inside: t.languages.markup.tag.inside
          }
        }
      }
    });
  }
  return sb;
}
var lb, aI;
function I$() {
  if (aI) return lb;
  aI = 1, lb = e, e.displayName = "wolfram", e.aliases = ["mathematica", "wl", "nb"];
  function e(t) {
    t.languages.wolfram = {
      // Allow one level of nesting - note: regex taken from applescipt
      comment: /\(\*(?:\(\*(?:[^*]|\*(?!\)))*\*\)|(?!\(\*)[\s\S])*?\*\)/,
      string: {
        pattern: /"(?:\\.|[^"\\\r\n])*"/,
        greedy: !0
      },
      keyword: /\b(?:Abs|AbsArg|Accuracy|Block|Do|For|Function|If|Manipulate|Module|Nest|NestList|None|Return|Switch|Table|Which|While)\b/,
      context: {
        pattern: /\b\w+`+\w*/,
        alias: "class-name"
      },
      blank: {
        pattern: /\b\w+_\b/,
        alias: "regex"
      },
      "global-variable": {
        pattern: /\$\w+/,
        alias: "variable"
      },
      boolean: /\b(?:False|True)\b/,
      number: /(?:\b(?=\d)|\B(?=\.))(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?j?\b/i,
      operator: /\/\.|;|=\.|\^=|\^:=|:=|<<|>>|<\||\|>|:>|\|->|->|<-|@@@|@@|@|\/@|=!=|===|==|=|\+|-|\^|\[\/-+%=\]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
      punctuation: /[{}[\];(),.:]/
    }, t.languages.mathematica = t.languages.wolfram, t.languages.wl = t.languages.wolfram, t.languages.nb = t.languages.wolfram;
  }
  return lb;
}
var ub, iI;
function R$() {
  if (iI) return ub;
  iI = 1, ub = e, e.displayName = "wren", e.aliases = [];
  function e(t) {
    t.languages.wren = {
      // Multiline comments in Wren can have nested multiline comments
      // Comments: // and /* */
      comment: [
        {
          // support 3 levels of nesting
          // regex: \/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|<self>)*\*\/
          pattern: /\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|\/\*(?:[^*/]|\*(?!\/)|\/(?!\*))*\*\/)*\*\/)*\*\//,
          greedy: !0
        },
        {
          pattern: /(^|[^\\:])\/\/.*/,
          lookbehind: !0,
          greedy: !0
        }
      ],
      // Triple quoted strings are multiline but cannot have interpolation (raw strings)
      // Based on prism-python.js
      "triple-quoted-string": {
        pattern: /"""[\s\S]*?"""/,
        greedy: !0,
        alias: "string"
      },
      // see below
      "string-literal": null,
      // #!/usr/bin/env wren on the first line
      hashbang: {
        pattern: /^#!\/.+/,
        greedy: !0,
        alias: "comment"
      },
      // Attributes are special keywords to add meta data to classes
      attribute: {
        // #! attributes are stored in class properties
        // #!myvar = true
        // #attributes are not stored and dismissed at compilation
        pattern: /#!?[ \t\u3000]*\w+/,
        alias: "keyword"
      },
      "class-name": [
        {
          // class definition
          // class Meta {}
          pattern: /(\bclass\s+)\w+/,
          lookbehind: !0
        },
        // A class must always start with an uppercase.
        // File.read
        /\b[A-Z][a-z\d_]*\b/
      ],
      // A constant can be a variable, class, property or method. Just named in all uppercase letters
      constant: /\b[A-Z][A-Z\d_]*\b/,
      null: {
        pattern: /\bnull\b/,
        alias: "keyword"
      },
      keyword: /\b(?:as|break|class|construct|continue|else|for|foreign|if|import|in|is|return|static|super|this|var|while)\b/,
      boolean: /\b(?:false|true)\b/,
      number: /\b(?:0x[\da-f]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/i,
      // Functions can be Class.method()
      function: /\b[a-z_]\w*(?=\s*[({])/i,
      operator: /<<|>>|[=!<>]=?|&&|\|\||[-+*/%~^&|?:]|\.{2,3}/,
      punctuation: /[\[\](){}.,;]/
    }, t.languages.wren["string-literal"] = {
      // A single quote string is multiline and can have interpolation (similar to JS backticks ``)
      pattern: /(^|[^\\"])"(?:[^\\"%]|\\[\s\S]|%(?!\()|%\((?:[^()]|\((?:[^()]|\([^)]*\))*\))*\))*"/,
      lookbehind: !0,
      greedy: !0,
      inside: {
        interpolation: {
          // "%(interpolation)"
          pattern: /((?:^|[^\\])(?:\\{2})*)%\((?:[^()]|\((?:[^()]|\([^)]*\))*\))*\)/,
          lookbehind: !0,
          inside: {
            expression: {
              pattern: /^(%\()[\s\S]+(?=\)$)/,
              lookbehind: !0,
              inside: t.languages.wren
            },
            "interpolation-punctuation": {
              pattern: /^%\(|\)$/,
              alias: "punctuation"
            }
          }
        },
        string: /[\s\S]+/
      }
    };
  }
  return ub;
}
var cb, oI;
function x$() {
  if (oI) return cb;
  oI = 1, cb = e, e.displayName = "xeora", e.aliases = ["xeoracube"];
  function e(t) {
    (function(n) {
      n.languages.xeora = n.languages.extend("markup", {
        constant: {
          pattern: /\$(?:DomainContents|PageRenderDuration)\$/,
          inside: {
            punctuation: {
              pattern: /\$/
            }
          }
        },
        variable: {
          pattern: /\$@?(?:#+|[-+*~=^])?[\w.]+\$/,
          inside: {
            punctuation: {
              pattern: /[$.]/
            },
            operator: {
              pattern: /#+|[-+*~=^@]/
            }
          }
        },
        "function-inline": {
          pattern: /\$F:[-\w.]+\?[-\w.]+(?:,(?:(?:@[-#]*\w+\.[\w+.]\.*)*\|)*(?:(?:[\w+]|[-#*.~^]+[\w+]|=\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\w+\.[\w+.]\.*)+(?:(?:[\w+]|[-#*~^][-#*.~^]*[\w+]|=\S)(?:[^$=]|=+[^=])*=*)?)?)?\$/,
          inside: {
            variable: {
              pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\w.]+/,
              inside: {
                punctuation: {
                  pattern: /[,.|]/
                },
                operator: {
                  pattern: /#+|[-+*~=^@]/
                }
              }
            },
            punctuation: {
              pattern: /\$\w:|[$:?.,|]/
            }
          },
          alias: "function"
        },
        "function-block": {
          pattern: /\$XF:\{[-\w.]+\?[-\w.]+(?:,(?:(?:@[-#]*\w+\.[\w+.]\.*)*\|)*(?:(?:[\w+]|[-#*.~^]+[\w+]|=\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\w+\.[\w+.]\.*)+(?:(?:[\w+]|[-#*~^][-#*.~^]*[\w+]|=\S)(?:[^$=]|=+[^=])*=*)?)?)?\}:XF\$/,
          inside: {
            punctuation: {
              pattern: /[$:{}?.,|]/
            }
          },
          alias: "function"
        },
        "directive-inline": {
          pattern: /\$\w(?:#\d+\+?)?(?:\[[-\w.]+\])?:[-\/\w.]+\$/,
          inside: {
            punctuation: {
              pattern: /\$(?:\w:|C(?:\[|#\d))?|[:{[\]]/,
              inside: {
                tag: {
                  pattern: /#\d/
                }
              }
            }
          },
          alias: "function"
        },
        "directive-block-open": {
          pattern: /\$\w+:\{|\$\w(?:#\d+\+?)?(?:\[[-\w.]+\])?:[-\w.]+:\{(?:![A-Z]+)?/,
          inside: {
            punctuation: {
              pattern: /\$(?:\w:|C(?:\[|#\d))?|[:{[\]]/,
              inside: {
                tag: {
                  pattern: /#\d/
                }
              }
            },
            attribute: {
              pattern: /![A-Z]+$/,
              inside: {
                punctuation: {
                  pattern: /!/
                }
              },
              alias: "keyword"
            }
          },
          alias: "function"
        },
        "directive-block-separator": {
          pattern: /\}:[-\w.]+:\{/,
          inside: {
            punctuation: {
              pattern: /[:{}]/
            }
          },
          alias: "function"
        },
        "directive-block-close": {
          pattern: /\}:[-\w.]+\$/,
          inside: {
            punctuation: {
              pattern: /[:{}$]/
            }
          },
          alias: "function"
        }
      }), n.languages.insertBefore(
        "inside",
        "punctuation",
        {
          variable: n.languages.xeora["function-inline"].inside.variable
        },
        n.languages.xeora["function-block"]
      ), n.languages.xeoracube = n.languages.xeora;
    })(t);
  }
  return cb;
}
var db, sI;
function N$() {
  if (sI) return db;
  sI = 1, db = e, e.displayName = "xmlDoc", e.aliases = [];
  function e(t) {
    (function(n) {
      function r(c, p) {
        n.languages[c] && n.languages.insertBefore(c, "comment", {
          "doc-comment": p
        });
      }
      var o = n.languages.markup.tag, s = {
        pattern: /\/\/\/.*/,
        greedy: !0,
        alias: "comment",
        inside: {
          tag: o
        }
      }, u = {
        pattern: /'''.*/,
        greedy: !0,
        alias: "comment",
        inside: {
          tag: o
        }
      };
      r("csharp", s), r("fsharp", s), r("vbnet", u);
    })(t);
  }
  return db;
}
var pb, lI;
function O$() {
  if (lI) return pb;
  lI = 1, pb = e, e.displayName = "xojo", e.aliases = [];
  function e(t) {
    t.languages.xojo = {
      comment: {
        pattern: /(?:'|\/\/|Rem\b).+/i,
        greedy: !0
      },
      string: {
        pattern: /"(?:""|[^"])*"/,
        greedy: !0
      },
      number: [/(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i, /&[bchou][a-z\d]+/i],
      directive: {
        pattern: /#(?:Else|ElseIf|Endif|If|Pragma)\b/i,
        alias: "property"
      },
      keyword: /\b(?:AddHandler|App|Array|As(?:signs)?|Auto|Boolean|Break|By(?:Ref|Val)|Byte|Call|Case|Catch|CFStringRef|CGFloat|Class|Color|Const|Continue|CString|Currency|CurrentMethodName|Declare|Delegate|Dim|Do(?:uble|wnTo)?|Each|Else(?:If)?|End|Enumeration|Event|Exception|Exit|Extends|False|Finally|For|Function|Get|GetTypeInfo|Global|GOTO|If|Implements|In|Inherits|Int(?:8|16|32|64|eger|erface)?|Lib|Loop|Me|Module|Next|Nil|Object|Optional|OSType|ParamArray|Private|Property|Protected|PString|Ptr|Raise(?:Event)?|ReDim|RemoveHandler|Return|Select(?:or)?|Self|Set|Shared|Short|Single|Soft|Static|Step|String|Sub|Super|Text|Then|To|True|Try|Ubound|UInt(?:8|16|32|64|eger)?|Until|Using|Var(?:iant)?|Wend|While|WindowPtr|WString)\b/i,
      operator: /<[=>]?|>=?|[+\-*\/\\^=]|\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|WeakAddressOf|Xor)\b/i,
      punctuation: /[.,;:()]/
    };
  }
  return pb;
}
var fb, uI;
function L$() {
  if (uI) return fb;
  uI = 1, fb = e, e.displayName = "xquery", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.xquery = n.languages.extend("markup", {
        "xquery-comment": {
          pattern: /\(:[\s\S]*?:\)/,
          greedy: !0,
          alias: "comment"
        },
        string: {
          pattern: /(["'])(?:\1\1|(?!\1)[\s\S])*\1/,
          greedy: !0
        },
        extension: {
          pattern: /\(#.+?#\)/,
          alias: "symbol"
        },
        variable: /\$[-\w:]+/,
        axis: {
          pattern: /(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,
          lookbehind: !0,
          alias: "operator"
        },
        "keyword-operator": {
          pattern: /(^|[^:-])\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\b(?=$|[^:-])/,
          lookbehind: !0,
          alias: "operator"
        },
        keyword: {
          pattern: /(^|[^:-])\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\b(?=$|[^:-])/,
          lookbehind: !0
        },
        function: /[\w-]+(?::[\w-]+)*(?=\s*\()/,
        "xquery-element": {
          pattern: /(element\s+)[\w-]+(?::[\w-]+)*/,
          lookbehind: !0,
          alias: "tag"
        },
        "xquery-attribute": {
          pattern: /(attribute\s+)[\w-]+(?::[\w-]+)*/,
          lookbehind: !0,
          alias: "attr-name"
        },
        builtin: {
          pattern: /(^|[^:-])\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:ENTITIES|ENTITY|ID|IDREFS?|NCName|NMTOKENS?|NOTATION|Name|QName|anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|int|integer|language|long|negativeInteger|nonNegativeInteger|nonPositiveInteger|normalizedString|positiveInteger|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\b(?=$|[^:-])/,
          lookbehind: !0
        },
        number: /\b\d+(?:\.\d+)?(?:E[+-]?\d+)?/,
        operator: [
          /[+*=?|@]|\.\.?|:=|!=|<[=<]?|>[=>]?/,
          {
            pattern: /(\s)-(?=\s)/,
            lookbehind: !0
          }
        ],
        punctuation: /[[\](){},;:/]/
      }), n.languages.xquery.tag.pattern = /<\/?(?!\d)[^\s>\/=$<%]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|\{(?!\{)(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])+\}|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/, n.languages.xquery.tag.inside["attr-value"].pattern = /=(?:("|')(?:\\[\s\S]|\{(?!\{)(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])+\}|(?!\1)[^\\])*\1|[^\s'">=]+)/, n.languages.xquery.tag.inside["attr-value"].inside.punctuation = /^="|"$/, n.languages.xquery.tag.inside["attr-value"].inside.expression = {
        // Allow for two levels of nesting
        pattern: /\{(?!\{)(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])+\}/,
        inside: n.languages.xquery,
        alias: "language-xquery"
      };
      var r = function(s) {
        return typeof s == "string" ? s : typeof s.content == "string" ? s.content : s.content.map(r).join("");
      }, o = function(s) {
        for (var u = [], c = 0; c < s.length; c++) {
          var p = s[c], f = !1;
          if (typeof p != "string" && (p.type === "tag" && p.content[0] && p.content[0].type === "tag" ? p.content[0].content[0].content === "</" ? u.length > 0 && u[u.length - 1].tagName === r(p.content[0].content[1]) && u.pop() : p.content[p.content.length - 1].content === "/>" || u.push({
            tagName: r(p.content[0].content[1]),
            openedBraces: 0
          }) : u.length > 0 && p.type === "punctuation" && p.content === "{" && // Ignore `{{`
          (!s[c + 1] || s[c + 1].type !== "punctuation" || s[c + 1].content !== "{") && (!s[c - 1] || s[c - 1].type !== "plain-text" || s[c - 1].content !== "{") ? u[u.length - 1].openedBraces++ : u.length > 0 && u[u.length - 1].openedBraces > 0 && p.type === "punctuation" && p.content === "}" ? u[u.length - 1].openedBraces-- : p.type !== "comment" && (f = !0)), (f || typeof p == "string") && u.length > 0 && u[u.length - 1].openedBraces === 0) {
            var b = r(p);
            c < s.length - 1 && (typeof s[c + 1] == "string" || s[c + 1].type === "plain-text") && (b += r(s[c + 1]), s.splice(c + 1, 1)), c > 0 && (typeof s[c - 1] == "string" || s[c - 1].type === "plain-text") && (b = r(s[c - 1]) + b, s.splice(c - 1, 1), c--), /^\s+$/.test(b) ? s[c] = b : s[c] = new n.Token(
              "plain-text",
              b,
              null,
              b
            );
          }
          p.content && typeof p.content != "string" && o(p.content);
        }
      };
      n.hooks.add("after-tokenize", function(s) {
        s.language === "xquery" && o(s.tokens);
      });
    })(t);
  }
  return fb;
}
var hb, cI;
function D$() {
  if (cI) return hb;
  cI = 1, hb = e, e.displayName = "yang", e.aliases = [];
  function e(t) {
    t.languages.yang = {
      // https://tools.ietf.org/html/rfc6020#page-34
      // http://www.yang-central.org/twiki/bin/view/Main/YangExamples
      comment: /\/\*[\s\S]*?\*\/|\/\/.*/,
      string: {
        pattern: /"(?:[^\\"]|\\.)*"|'[^']*'/,
        greedy: !0
      },
      keyword: {
        pattern: /(^|[{};\r\n][ \t]*)[a-z_][\w.-]*/i,
        lookbehind: !0
      },
      namespace: {
        pattern: /(\s)[a-z_][\w.-]*(?=:)/i,
        lookbehind: !0
      },
      boolean: /\b(?:false|true)\b/,
      operator: /\+/,
      punctuation: /[{};:]/
    };
  }
  return hb;
}
var gb, dI;
function M$() {
  if (dI) return gb;
  dI = 1, gb = e, e.displayName = "zig", e.aliases = [];
  function e(t) {
    (function(n) {
      function r(b) {
        return function() {
          return b;
        };
      }
      var o = /\b(?:align|allowzero|and|anyframe|anytype|asm|async|await|break|cancel|catch|comptime|const|continue|defer|else|enum|errdefer|error|export|extern|fn|for|if|inline|linksection|nakedcc|noalias|nosuspend|null|or|orelse|packed|promise|pub|resume|return|stdcallcc|struct|suspend|switch|test|threadlocal|try|undefined|union|unreachable|usingnamespace|var|volatile|while)\b/, s = "\\b(?!" + o.source + ")(?!\\d)\\w+\\b", u = /align\s*\((?:[^()]|\([^()]*\))*\)/.source, c = /(?:\?|\bpromise->|(?:\[[^[\]]*\]|\*(?!\*)|\*\*)(?:\s*<ALIGN>|\s*const\b|\s*volatile\b|\s*allowzero\b)*)/.source.replace(
        /<ALIGN>/g,
        r(u)
      ), p = /(?:\bpromise\b|(?:\berror\.)?<ID>(?:\.<ID>)*(?!\s+<ID>))/.source.replace(
        /<ID>/g,
        r(s)
      ), f = "(?!\\s)(?:!?\\s*(?:" + c + "\\s*)*" + p + ")+";
      n.languages.zig = {
        comment: [
          {
            pattern: /\/\/[/!].*/,
            alias: "doc-comment"
          },
          /\/{2}.*/
        ],
        string: [
          {
            // "string" and c"string"
            pattern: /(^|[^\\@])c?"(?:[^"\\\r\n]|\\.)*"/,
            lookbehind: !0,
            greedy: !0
          },
          {
            // multiline strings and c-strings
            pattern: /([\r\n])([ \t]+c?\\{2}).*(?:(?:\r\n?|\n)\2.*)*/,
            lookbehind: !0,
            greedy: !0
          }
        ],
        char: {
          // characters 'a', '\n', '\xFF', '\u{10FFFF}'
          pattern: /(^|[^\\])'(?:[^'\\\r\n]|[\uD800-\uDFFF]{2}|\\(?:.|x[a-fA-F\d]{2}|u\{[a-fA-F\d]{1,6}\}))'/,
          lookbehind: !0,
          greedy: !0
        },
        builtin: /\B@(?!\d)\w+(?=\s*\()/,
        label: {
          pattern: /(\b(?:break|continue)\s*:\s*)\w+\b|\b(?!\d)\w+\b(?=\s*:\s*(?:\{|while\b))/,
          lookbehind: !0
        },
        "class-name": [
          // const Foo = struct {};
          /\b(?!\d)\w+(?=\s*=\s*(?:(?:extern|packed)\s+)?(?:enum|struct|union)\s*[({])/,
          {
            // const x: i32 = 9;
            // var x: Bar;
            // fn foo(x: bool, y: f32) void {}
            pattern: RegExp(
              /(:\s*)<TYPE>(?=\s*(?:<ALIGN>\s*)?[=;,)])|<TYPE>(?=\s*(?:<ALIGN>\s*)?\{)/.source.replace(/<TYPE>/g, r(f)).replace(/<ALIGN>/g, r(u))
            ),
            lookbehind: !0,
            inside: null
            // see below
          },
          {
            // extern fn foo(x: f64) f64; (optional alignment)
            pattern: RegExp(
              /(\)\s*)<TYPE>(?=\s*(?:<ALIGN>\s*)?;)/.source.replace(/<TYPE>/g, r(f)).replace(/<ALIGN>/g, r(u))
            ),
            lookbehind: !0,
            inside: null
            // see below
          }
        ],
        "builtin-type": {
          pattern: /\b(?:anyerror|bool|c_u?(?:int|long|longlong|short)|c_longdouble|c_void|comptime_(?:float|int)|f(?:16|32|64|128)|[iu](?:8|16|32|64|128|size)|noreturn|type|void)\b/,
          alias: "keyword"
        },
        keyword: o,
        function: /\b(?!\d)\w+(?=\s*\()/,
        number: /\b(?:0b[01]+|0o[0-7]+|0x[a-fA-F\d]+(?:\.[a-fA-F\d]*)?(?:[pP][+-]?[a-fA-F\d]+)?|\d+(?:\.\d*)?(?:[eE][+-]?\d+)?)\b/,
        boolean: /\b(?:false|true)\b/,
        operator: /\.[*?]|\.{2,3}|[-=]>|\*\*|\+\+|\|\||(?:<<|>>|[-+*]%|[-+*/%^&|<>!=])=?|[?~]/,
        punctuation: /[.:,;(){}[\]]/
      }, n.languages.zig["class-name"].forEach(function(b) {
        b.inside === null && (b.inside = n.languages.zig);
      });
    })(t);
  }
  return gb;
}
var mb, pI;
function P$() {
  if (pI) return mb;
  pI = 1;
  var e = ZB();
  return mb = e, e.register(eU()), e.register(tU()), e.register(nU()), e.register(rU()), e.register(aU()), e.register(iU()), e.register(oU()), e.register(sU()), e.register(lU()), e.register(uU()), e.register(cU()), e.register(dU()), e.register(pU()), e.register(fU()), e.register(hU()), e.register(gU()), e.register(mU()), e.register(bU()), e.register(EU()), e.register(yU()), e.register(TU()), e.register(SU()), e.register(Yx()), e.register(Kx()), e.register(_U()), e.register(vU()), e.register(AU()), e.register(kU()), e.register(CU()), e.register(wU()), e.register(IU()), e.register(RU()), e.register(xU()), e.register(NU()), e.register(hi()), e.register(OU()), e.register(LU()), e.register(DU()), e.register(MU()), e.register(PU()), e.register(FU()), e.register(BU()), e.register(UU()), e.register(HU()), e.register(YE()), e.register($U()), e.register(pc()), e.register(zU()), e.register(GU()), e.register(qU()), e.register(jU()), e.register(VU()), e.register(WU()), e.register(YU()), e.register(KU()), e.register(XU()), e.register(QU()), e.register(ZU()), e.register(JU()), e.register(e9()), e.register(t9()), e.register(n9()), e.register(r9()), e.register(a9()), e.register(i9()), e.register(o9()), e.register(s9()), e.register(l9()), e.register(u9()), e.register(c9()), e.register(d9()), e.register(p9()), e.register(f9()), e.register(h9()), e.register(g9()), e.register(m9()), e.register(b9()), e.register(E9()), e.register(y9()), e.register(T9()), e.register(S9()), e.register(_9()), e.register(v9()), e.register(A9()), e.register(k9()), e.register(C9()), e.register(w9()), e.register(I9()), e.register(R9()), e.register(x9()), e.register(N9()), e.register(O9()), e.register(L9()), e.register(D9()), e.register(KE()), e.register(M9()), e.register(P9()), e.register(F9()), e.register(B9()), e.register(U9()), e.register(H9()), e.register($9()), e.register(z9()), e.register(G9()), e.register(q9()), e.register(j9()), e.register(V9()), e.register(W9()), e.register(Y9()), e.register(K9()), e.register(X9()), e.register(Q9()), e.register(XE()), e.register(Z9()), e.register(hc()), e.register(J9()), e.register(e7()), e.register(t7()), e.register(n7()), e.register(r7()), e.register(a7()), e.register(i7()), e.register(ZE()), e.register(o7()), e.register(s7()), e.register(l7()), e.register(Qx()), e.register(u7()), e.register(c7()), e.register(d7()), e.register(p7()), e.register(f7()), e.register(h7()), e.register(g7()), e.register(m7()), e.register(b7()), e.register(E7()), e.register(y7()), e.register(T7()), e.register(S7()), e.register(_7()), e.register(v7()), e.register(A7()), e.register(Xx()), e.register(k7()), e.register(C7()), e.register(w7()), e.register(On()), e.register(I7()), e.register(R7()), e.register(x7()), e.register(N7()), e.register(O7()), e.register(L7()), e.register(D7()), e.register(M7()), e.register(P7()), e.register(F7()), e.register(B7()), e.register(U7()), e.register(H7()), e.register($7()), e.register(z7()), e.register(G7()), e.register(q7()), e.register(j7()), e.register(V7()), e.register(W7()), e.register(Y7()), e.register(K7()), e.register(X7()), e.register(Q7()), e.register(Z7()), e.register(J7()), e.register(eH()), e.register(tH()), e.register(nH()), e.register(rH()), e.register(aH()), e.register(iH()), e.register(gc()), e.register(oH()), e.register(sH()), e.register(lH()), e.register(uH()), e.register(cH()), e.register(dH()), e.register(pH()), e.register(fH()), e.register(hH()), e.register(gH()), e.register(mH()), e.register(bH()), e.register(EH()), e.register(yH()), e.register(TH()), e.register(SH()), e.register(_H()), e.register(vH()), e.register(AH()), e.register(kH()), e.register(CH()), e.register(wH()), e.register(IH()), e.register(RH()), e.register(xH()), e.register(NH()), e.register(OH()), e.register(LH()), e.register(DH()), e.register(MH()), e.register(fc()), e.register(PH()), e.register(FH()), e.register(BH()), e.register(UH()), e.register(JE()), e.register(HH()), e.register($H()), e.register(zH()), e.register(GH()), e.register(qH()), e.register(jH()), e.register(VH()), e.register(WH()), e.register(YH()), e.register(KH()), e.register(XH()), e.register(QH()), e.register(WE()), e.register(ZH()), e.register(JH()), e.register(e$()), e.register(t$()), e.register(n$()), e.register(r$()), e.register(e1()), e.register(a$()), e.register(i$()), e.register(o$()), e.register(s$()), e.register(l$()), e.register(u$()), e.register(c$()), e.register(d$()), e.register(Zx()), e.register(p$()), e.register(QE()), e.register(f$()), e.register(h$()), e.register(g$()), e.register(m$()), e.register(b$()), e.register(E$()), e.register(Jx()), e.register(y$()), e.register(T$()), e.register(S$()), e.register(_$()), e.register(v$()), e.register(A$()), e.register(k$()), e.register(C$()), e.register(w$()), e.register(I$()), e.register(R$()), e.register(x$()), e.register(N$()), e.register(O$()), e.register(L$()), e.register(eN()), e.register(D$()), e.register(M$()), mb;
}
var F$ = P$();
const B$ = /* @__PURE__ */ To(F$);
var tN = A5(B$, JB);
tN.supportedLanguages = k5;
const U$ = {
  'pre[class*="language-"]': {
    color: "#d4d4d4",
    fontSize: "13px",
    textShadow: "none",
    fontFamily: 'Menlo, Monaco, Consolas, "Andale Mono", "Ubuntu Mono", "Courier New", monospace',
    direction: "ltr",
    textAlign: "left",
    whiteSpace: "pre",
    wordSpacing: "normal",
    wordBreak: "normal",
    lineHeight: "1.5",
    MozTabSize: "4",
    OTabSize: "4",
    tabSize: "4",
    WebkitHyphens: "none",
    MozHyphens: "none",
    msHyphens: "none",
    hyphens: "none",
    padding: "1em",
    margin: ".5em 0",
    overflow: "auto",
    background: "#1e1e1e"
  },
  'code[class*="language-"]': {
    color: "#d4d4d4",
    fontSize: "13px",
    textShadow: "none",
    fontFamily: 'Menlo, Monaco, Consolas, "Andale Mono", "Ubuntu Mono", "Courier New", monospace',
    direction: "ltr",
    textAlign: "left",
    whiteSpace: "pre",
    wordSpacing: "normal",
    wordBreak: "normal",
    lineHeight: "1.5",
    MozTabSize: "4",
    OTabSize: "4",
    tabSize: "4",
    WebkitHyphens: "none",
    MozHyphens: "none",
    msHyphens: "none",
    hyphens: "none"
  },
  'pre[class*="language-"]::selection': {
    textShadow: "none",
    background: "#264F78"
  },
  'code[class*="language-"]::selection': {
    textShadow: "none",
    background: "#264F78"
  },
  'pre[class*="language-"] *::selection': {
    textShadow: "none",
    background: "#264F78"
  },
  'code[class*="language-"] *::selection': {
    textShadow: "none",
    background: "#264F78"
  },
  ':not(pre) > code[class*="language-"]': {
    padding: ".1em .3em",
    borderRadius: ".3em",
    color: "#db4c69",
    background: "#1e1e1e"
  },
  ".namespace": {
    Opacity: ".7"
  },
  "doctype.doctype-tag": {
    color: "#569CD6"
  },
  "doctype.name": {
    color: "#9cdcfe"
  },
  comment: {
    color: "#6a9955"
  },
  prolog: {
    color: "#6a9955"
  },
  punctuation: {
    color: "#d4d4d4"
  },
  ".language-html .language-css .token.punctuation": {
    color: "#d4d4d4"
  },
  ".language-html .language-javascript .token.punctuation": {
    color: "#d4d4d4"
  },
  property: {
    color: "#9cdcfe"
  },
  tag: {
    color: "#569cd6"
  },
  boolean: {
    color: "#569cd6"
  },
  number: {
    color: "#b5cea8"
  },
  constant: {
    color: "#9cdcfe"
  },
  symbol: {
    color: "#b5cea8"
  },
  inserted: {
    color: "#b5cea8"
  },
  unit: {
    color: "#b5cea8"
  },
  selector: {
    color: "#d7ba7d"
  },
  "attr-name": {
    color: "#9cdcfe"
  },
  string: {
    color: "#ce9178"
  },
  char: {
    color: "#ce9178"
  },
  builtin: {
    color: "#ce9178"
  },
  deleted: {
    color: "#ce9178"
  },
  ".language-css .token.string.url": {
    textDecoration: "underline"
  },
  operator: {
    color: "#d4d4d4"
  },
  entity: {
    color: "#569cd6"
  },
  "operator.arrow": {
    color: "#569CD6"
  },
  atrule: {
    color: "#ce9178"
  },
  "atrule.rule": {
    color: "#c586c0"
  },
  "atrule.url": {
    color: "#9cdcfe"
  },
  "atrule.url.function": {
    color: "#dcdcaa"
  },
  "atrule.url.punctuation": {
    color: "#d4d4d4"
  },
  keyword: {
    color: "#569CD6"
  },
  "keyword.module": {
    color: "#c586c0"
  },
  "keyword.control-flow": {
    color: "#c586c0"
  },
  function: {
    color: "#dcdcaa"
  },
  "function.maybe-class-name": {
    color: "#dcdcaa"
  },
  regex: {
    color: "#d16969"
  },
  important: {
    color: "#569cd6"
  },
  italic: {
    fontStyle: "italic"
  },
  "class-name": {
    color: "#4ec9b0"
  },
  "maybe-class-name": {
    color: "#4ec9b0"
  },
  console: {
    color: "#9cdcfe"
  },
  parameter: {
    color: "#9cdcfe"
  },
  interpolation: {
    color: "#9cdcfe"
  },
  "punctuation.interpolation-punctuation": {
    color: "#569cd6"
  },
  variable: {
    color: "#9cdcfe"
  },
  "imports.maybe-class-name": {
    color: "#9cdcfe"
  },
  "exports.maybe-class-name": {
    color: "#9cdcfe"
  },
  escape: {
    color: "#d7ba7d"
  },
  "tag.punctuation": {
    color: "#808080"
  },
  cdata: {
    color: "#808080"
  },
  "attr-value": {
    color: "#ce9178"
  },
  "attr-value.punctuation": {
    color: "#ce9178"
  },
  "attr-value.punctuation.attr-equals": {
    color: "#d4d4d4"
  },
  namespace: {
    color: "#4ec9b0"
  },
  'pre[class*="language-javascript"]': {
    color: "#9cdcfe"
  },
  'code[class*="language-javascript"]': {
    color: "#9cdcfe"
  },
  'pre[class*="language-jsx"]': {
    color: "#9cdcfe"
  },
  'code[class*="language-jsx"]': {
    color: "#9cdcfe"
  },
  'pre[class*="language-typescript"]': {
    color: "#9cdcfe"
  },
  'code[class*="language-typescript"]': {
    color: "#9cdcfe"
  },
  'pre[class*="language-tsx"]': {
    color: "#9cdcfe"
  },
  'code[class*="language-tsx"]': {
    color: "#9cdcfe"
  },
  'pre[class*="language-css"]': {
    color: "#ce9178"
  },
  'code[class*="language-css"]': {
    color: "#ce9178"
  },
  'pre[class*="language-html"]': {
    color: "#d4d4d4"
  },
  'code[class*="language-html"]': {
    color: "#d4d4d4"
  },
  ".language-regex .token.anchor": {
    color: "#dcdcaa"
  },
  ".language-html .token.punctuation": {
    color: "#808080"
  },
  'pre[class*="language-"] > code[class*="language-"]': {
    position: "relative",
    zIndex: "1"
  },
  ".line-highlight.line-highlight": {
    background: "#f7ebc6",
    boxShadow: "inset 5px 0 0 #f7d87c",
    zIndex: "0"
  }
};
class Zs {
  /**
   * @param {SchemaType['property']} property
   *   Property.
   * @param {SchemaType['normal']} normal
   *   Normal.
   * @param {Space | undefined} [space]
   *   Space.
   * @returns
   *   Schema.
   */
  constructor(t, n, r) {
    this.normal = n, this.property = t, r && (this.space = r);
  }
}
Zs.prototype.normal = {};
Zs.prototype.property = {};
Zs.prototype.space = void 0;
function nN(e, t) {
  const n = {}, r = {};
  for (const o of e)
    Object.assign(n, o.property), Object.assign(r, o.normal);
  return new Zs(n, r, t);
}
function Us(e) {
  return e.toLowerCase();
}
class Ln {
  /**
   * @param {string} property
   *   Property.
   * @param {string} attribute
   *   Attribute.
   * @returns
   *   Info.
   */
  constructor(t, n) {
    this.attribute = n, this.property = t;
  }
}
Ln.prototype.attribute = "";
Ln.prototype.booleanish = !1;
Ln.prototype.boolean = !1;
Ln.prototype.commaOrSpaceSeparated = !1;
Ln.prototype.commaSeparated = !1;
Ln.prototype.defined = !1;
Ln.prototype.mustUseProperty = !1;
Ln.prototype.number = !1;
Ln.prototype.overloadedBoolean = !1;
Ln.prototype.property = "";
Ln.prototype.spaceSeparated = !1;
Ln.prototype.space = void 0;
let H$ = 0;
const je = gi(), Mt = gi(), oE = gi(), ge = gi(), ct = gi(), Ki = gi(), Un = gi();
function gi() {
  return 2 ** ++H$;
}
const sE = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  boolean: je,
  booleanish: Mt,
  commaOrSpaceSeparated: Un,
  commaSeparated: Ki,
  number: ge,
  overloadedBoolean: oE,
  spaceSeparated: ct
}, Symbol.toStringTag, { value: "Module" })), bb = (
  /** @type {ReadonlyArray<keyof typeof types>} */
  Object.keys(sE)
);
class t1 extends Ln {
  /**
   * @constructor
   * @param {string} property
   *   Property.
   * @param {string} attribute
   *   Attribute.
   * @param {number | null | undefined} [mask]
   *   Mask.
   * @param {Space | undefined} [space]
   *   Space.
   * @returns
   *   Info.
   */
  constructor(t, n, r, o) {
    let s = -1;
    if (super(t, n), fI(this, "space", o), typeof r == "number")
      for (; ++s < bb.length; ) {
        const u = bb[s];
        fI(this, bb[s], (r & sE[u]) === sE[u]);
      }
  }
}
t1.prototype.defined = !0;
function fI(e, t, n) {
  n && (e[t] = n);
}
function Ao(e) {
  const t = {}, n = {};
  for (const [r, o] of Object.entries(e.properties)) {
    const s = new t1(
      r,
      e.transform(e.attributes || {}, r),
      o,
      e.space
    );
    e.mustUseProperty && e.mustUseProperty.includes(r) && (s.mustUseProperty = !0), t[r] = s, n[Us(r)] = r, n[Us(s.attribute)] = r;
  }
  return new Zs(t, n, e.space);
}
const rN = Ao({
  properties: {
    ariaActiveDescendant: null,
    ariaAtomic: Mt,
    ariaAutoComplete: null,
    ariaBusy: Mt,
    ariaChecked: Mt,
    ariaColCount: ge,
    ariaColIndex: ge,
    ariaColSpan: ge,
    ariaControls: ct,
    ariaCurrent: null,
    ariaDescribedBy: ct,
    ariaDetails: null,
    ariaDisabled: Mt,
    ariaDropEffect: ct,
    ariaErrorMessage: null,
    ariaExpanded: Mt,
    ariaFlowTo: ct,
    ariaGrabbed: Mt,
    ariaHasPopup: null,
    ariaHidden: Mt,
    ariaInvalid: null,
    ariaKeyShortcuts: null,
    ariaLabel: null,
    ariaLabelledBy: ct,
    ariaLevel: ge,
    ariaLive: null,
    ariaModal: Mt,
    ariaMultiLine: Mt,
    ariaMultiSelectable: Mt,
    ariaOrientation: null,
    ariaOwns: ct,
    ariaPlaceholder: null,
    ariaPosInSet: ge,
    ariaPressed: Mt,
    ariaReadOnly: Mt,
    ariaRelevant: null,
    ariaRequired: Mt,
    ariaRoleDescription: ct,
    ariaRowCount: ge,
    ariaRowIndex: ge,
    ariaRowSpan: ge,
    ariaSelected: Mt,
    ariaSetSize: ge,
    ariaSort: null,
    ariaValueMax: ge,
    ariaValueMin: ge,
    ariaValueNow: ge,
    ariaValueText: null,
    role: null
  },
  transform(e, t) {
    return t === "role" ? t : "aria-" + t.slice(4).toLowerCase();
  }
});
function aN(e, t) {
  return t in e ? e[t] : t;
}
function iN(e, t) {
  return aN(e, t.toLowerCase());
}
const $$ = Ao({
  attributes: {
    acceptcharset: "accept-charset",
    classname: "class",
    htmlfor: "for",
    httpequiv: "http-equiv"
  },
  mustUseProperty: ["checked", "multiple", "muted", "selected"],
  properties: {
    // Standard Properties.
    abbr: null,
    accept: Ki,
    acceptCharset: ct,
    accessKey: ct,
    action: null,
    allow: null,
    allowFullScreen: je,
    allowPaymentRequest: je,
    allowUserMedia: je,
    alt: null,
    as: null,
    async: je,
    autoCapitalize: null,
    autoComplete: ct,
    autoFocus: je,
    autoPlay: je,
    blocking: ct,
    capture: null,
    charSet: null,
    checked: je,
    cite: null,
    className: ct,
    cols: ge,
    colSpan: null,
    content: null,
    contentEditable: Mt,
    controls: je,
    controlsList: ct,
    coords: ge | Ki,
    crossOrigin: null,
    data: null,
    dateTime: null,
    decoding: null,
    default: je,
    defer: je,
    dir: null,
    dirName: null,
    disabled: je,
    download: oE,
    draggable: Mt,
    encType: null,
    enterKeyHint: null,
    fetchPriority: null,
    form: null,
    formAction: null,
    formEncType: null,
    formMethod: null,
    formNoValidate: je,
    formTarget: null,
    headers: ct,
    height: ge,
    hidden: oE,
    high: ge,
    href: null,
    hrefLang: null,
    htmlFor: ct,
    httpEquiv: ct,
    id: null,
    imageSizes: null,
    imageSrcSet: null,
    inert: je,
    inputMode: null,
    integrity: null,
    is: null,
    isMap: je,
    itemId: null,
    itemProp: ct,
    itemRef: ct,
    itemScope: je,
    itemType: ct,
    kind: null,
    label: null,
    lang: null,
    language: null,
    list: null,
    loading: null,
    loop: je,
    low: ge,
    manifest: null,
    max: null,
    maxLength: ge,
    media: null,
    method: null,
    min: null,
    minLength: ge,
    multiple: je,
    muted: je,
    name: null,
    nonce: null,
    noModule: je,
    noValidate: je,
    onAbort: null,
    onAfterPrint: null,
    onAuxClick: null,
    onBeforeMatch: null,
    onBeforePrint: null,
    onBeforeToggle: null,
    onBeforeUnload: null,
    onBlur: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onContextLost: null,
    onContextMenu: null,
    onContextRestored: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFormData: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLanguageChange: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadEnd: null,
    onLoadStart: null,
    onMessage: null,
    onMessageError: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRejectionHandled: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onScrollEnd: null,
    onSecurityPolicyViolation: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onSlotChange: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnhandledRejection: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onWheel: null,
    open: je,
    optimum: ge,
    pattern: null,
    ping: ct,
    placeholder: null,
    playsInline: je,
    popover: null,
    popoverTarget: null,
    popoverTargetAction: null,
    poster: null,
    preload: null,
    readOnly: je,
    referrerPolicy: null,
    rel: ct,
    required: je,
    reversed: je,
    rows: ge,
    rowSpan: ge,
    sandbox: ct,
    scope: null,
    scoped: je,
    seamless: je,
    selected: je,
    shadowRootClonable: je,
    shadowRootDelegatesFocus: je,
    shadowRootMode: null,
    shape: null,
    size: ge,
    sizes: null,
    slot: null,
    span: ge,
    spellCheck: Mt,
    src: null,
    srcDoc: null,
    srcLang: null,
    srcSet: null,
    start: ge,
    step: null,
    style: null,
    tabIndex: ge,
    target: null,
    title: null,
    translate: null,
    type: null,
    typeMustMatch: je,
    useMap: null,
    value: Mt,
    width: ge,
    wrap: null,
    writingSuggestions: null,
    // Legacy.
    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis
    align: null,
    // Several. Use CSS `text-align` instead,
    aLink: null,
    // `<body>`. Use CSS `a:active {color}` instead
    archive: ct,
    // `<object>`. List of URIs to archives
    axis: null,
    // `<td>` and `<th>`. Use `scope` on `<th>`
    background: null,
    // `<body>`. Use CSS `background-image` instead
    bgColor: null,
    // `<body>` and table elements. Use CSS `background-color` instead
    border: ge,
    // `<table>`. Use CSS `border-width` instead,
    borderColor: null,
    // `<table>`. Use CSS `border-color` instead,
    bottomMargin: ge,
    // `<body>`
    cellPadding: null,
    // `<table>`
    cellSpacing: null,
    // `<table>`
    char: null,
    // Several table elements. When `align=char`, sets the character to align on
    charOff: null,
    // Several table elements. When `char`, offsets the alignment
    classId: null,
    // `<object>`
    clear: null,
    // `<br>`. Use CSS `clear` instead
    code: null,
    // `<object>`
    codeBase: null,
    // `<object>`
    codeType: null,
    // `<object>`
    color: null,
    // `<font>` and `<hr>`. Use CSS instead
    compact: je,
    // Lists. Use CSS to reduce space between items instead
    declare: je,
    // `<object>`
    event: null,
    // `<script>`
    face: null,
    // `<font>`. Use CSS instead
    frame: null,
    // `<table>`
    frameBorder: null,
    // `<iframe>`. Use CSS `border` instead
    hSpace: ge,
    // `<img>` and `<object>`
    leftMargin: ge,
    // `<body>`
    link: null,
    // `<body>`. Use CSS `a:link {color: *}` instead
    longDesc: null,
    // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`
    lowSrc: null,
    // `<img>`. Use a `<picture>`
    marginHeight: ge,
    // `<body>`
    marginWidth: ge,
    // `<body>`
    noResize: je,
    // `<frame>`
    noHref: je,
    // `<area>`. Use no href instead of an explicit `nohref`
    noShade: je,
    // `<hr>`. Use background-color and height instead of borders
    noWrap: je,
    // `<td>` and `<th>`
    object: null,
    // `<applet>`
    profile: null,
    // `<head>`
    prompt: null,
    // `<isindex>`
    rev: null,
    // `<link>`
    rightMargin: ge,
    // `<body>`
    rules: null,
    // `<table>`
    scheme: null,
    // `<meta>`
    scrolling: Mt,
    // `<frame>`. Use overflow in the child context
    standby: null,
    // `<object>`
    summary: null,
    // `<table>`
    text: null,
    // `<body>`. Use CSS `color` instead
    topMargin: ge,
    // `<body>`
    valueType: null,
    // `<param>`
    version: null,
    // `<html>`. Use a doctype.
    vAlign: null,
    // Several. Use CSS `vertical-align` instead
    vLink: null,
    // `<body>`. Use CSS `a:visited {color}` instead
    vSpace: ge,
    // `<img>` and `<object>`
    // Non-standard Properties.
    allowTransparency: null,
    autoCorrect: null,
    autoSave: null,
    disablePictureInPicture: je,
    disableRemotePlayback: je,
    prefix: null,
    property: null,
    results: ge,
    security: null,
    unselectable: null
  },
  space: "html",
  transform: iN
}), z$ = Ao({
  attributes: {
    accentHeight: "accent-height",
    alignmentBaseline: "alignment-baseline",
    arabicForm: "arabic-form",
    baselineShift: "baseline-shift",
    capHeight: "cap-height",
    className: "class",
    clipPath: "clip-path",
    clipRule: "clip-rule",
    colorInterpolation: "color-interpolation",
    colorInterpolationFilters: "color-interpolation-filters",
    colorProfile: "color-profile",
    colorRendering: "color-rendering",
    crossOrigin: "crossorigin",
    dataType: "datatype",
    dominantBaseline: "dominant-baseline",
    enableBackground: "enable-background",
    fillOpacity: "fill-opacity",
    fillRule: "fill-rule",
    floodColor: "flood-color",
    floodOpacity: "flood-opacity",
    fontFamily: "font-family",
    fontSize: "font-size",
    fontSizeAdjust: "font-size-adjust",
    fontStretch: "font-stretch",
    fontStyle: "font-style",
    fontVariant: "font-variant",
    fontWeight: "font-weight",
    glyphName: "glyph-name",
    glyphOrientationHorizontal: "glyph-orientation-horizontal",
    glyphOrientationVertical: "glyph-orientation-vertical",
    hrefLang: "hreflang",
    horizAdvX: "horiz-adv-x",
    horizOriginX: "horiz-origin-x",
    horizOriginY: "horiz-origin-y",
    imageRendering: "image-rendering",
    letterSpacing: "letter-spacing",
    lightingColor: "lighting-color",
    markerEnd: "marker-end",
    markerMid: "marker-mid",
    markerStart: "marker-start",
    navDown: "nav-down",
    navDownLeft: "nav-down-left",
    navDownRight: "nav-down-right",
    navLeft: "nav-left",
    navNext: "nav-next",
    navPrev: "nav-prev",
    navRight: "nav-right",
    navUp: "nav-up",
    navUpLeft: "nav-up-left",
    navUpRight: "nav-up-right",
    onAbort: "onabort",
    onActivate: "onactivate",
    onAfterPrint: "onafterprint",
    onBeforePrint: "onbeforeprint",
    onBegin: "onbegin",
    onCancel: "oncancel",
    onCanPlay: "oncanplay",
    onCanPlayThrough: "oncanplaythrough",
    onChange: "onchange",
    onClick: "onclick",
    onClose: "onclose",
    onCopy: "oncopy",
    onCueChange: "oncuechange",
    onCut: "oncut",
    onDblClick: "ondblclick",
    onDrag: "ondrag",
    onDragEnd: "ondragend",
    onDragEnter: "ondragenter",
    onDragExit: "ondragexit",
    onDragLeave: "ondragleave",
    onDragOver: "ondragover",
    onDragStart: "ondragstart",
    onDrop: "ondrop",
    onDurationChange: "ondurationchange",
    onEmptied: "onemptied",
    onEnd: "onend",
    onEnded: "onended",
    onError: "onerror",
    onFocus: "onfocus",
    onFocusIn: "onfocusin",
    onFocusOut: "onfocusout",
    onHashChange: "onhashchange",
    onInput: "oninput",
    onInvalid: "oninvalid",
    onKeyDown: "onkeydown",
    onKeyPress: "onkeypress",
    onKeyUp: "onkeyup",
    onLoad: "onload",
    onLoadedData: "onloadeddata",
    onLoadedMetadata: "onloadedmetadata",
    onLoadStart: "onloadstart",
    onMessage: "onmessage",
    onMouseDown: "onmousedown",
    onMouseEnter: "onmouseenter",
    onMouseLeave: "onmouseleave",
    onMouseMove: "onmousemove",
    onMouseOut: "onmouseout",
    onMouseOver: "onmouseover",
    onMouseUp: "onmouseup",
    onMouseWheel: "onmousewheel",
    onOffline: "onoffline",
    onOnline: "ononline",
    onPageHide: "onpagehide",
    onPageShow: "onpageshow",
    onPaste: "onpaste",
    onPause: "onpause",
    onPlay: "onplay",
    onPlaying: "onplaying",
    onPopState: "onpopstate",
    onProgress: "onprogress",
    onRateChange: "onratechange",
    onRepeat: "onrepeat",
    onReset: "onreset",
    onResize: "onresize",
    onScroll: "onscroll",
    onSeeked: "onseeked",
    onSeeking: "onseeking",
    onSelect: "onselect",
    onShow: "onshow",
    onStalled: "onstalled",
    onStorage: "onstorage",
    onSubmit: "onsubmit",
    onSuspend: "onsuspend",
    onTimeUpdate: "ontimeupdate",
    onToggle: "ontoggle",
    onUnload: "onunload",
    onVolumeChange: "onvolumechange",
    onWaiting: "onwaiting",
    onZoom: "onzoom",
    overlinePosition: "overline-position",
    overlineThickness: "overline-thickness",
    paintOrder: "paint-order",
    panose1: "panose-1",
    pointerEvents: "pointer-events",
    referrerPolicy: "referrerpolicy",
    renderingIntent: "rendering-intent",
    shapeRendering: "shape-rendering",
    stopColor: "stop-color",
    stopOpacity: "stop-opacity",
    strikethroughPosition: "strikethrough-position",
    strikethroughThickness: "strikethrough-thickness",
    strokeDashArray: "stroke-dasharray",
    strokeDashOffset: "stroke-dashoffset",
    strokeLineCap: "stroke-linecap",
    strokeLineJoin: "stroke-linejoin",
    strokeMiterLimit: "stroke-miterlimit",
    strokeOpacity: "stroke-opacity",
    strokeWidth: "stroke-width",
    tabIndex: "tabindex",
    textAnchor: "text-anchor",
    textDecoration: "text-decoration",
    textRendering: "text-rendering",
    transformOrigin: "transform-origin",
    typeOf: "typeof",
    underlinePosition: "underline-position",
    underlineThickness: "underline-thickness",
    unicodeBidi: "unicode-bidi",
    unicodeRange: "unicode-range",
    unitsPerEm: "units-per-em",
    vAlphabetic: "v-alphabetic",
    vHanging: "v-hanging",
    vIdeographic: "v-ideographic",
    vMathematical: "v-mathematical",
    vectorEffect: "vector-effect",
    vertAdvY: "vert-adv-y",
    vertOriginX: "vert-origin-x",
    vertOriginY: "vert-origin-y",
    wordSpacing: "word-spacing",
    writingMode: "writing-mode",
    xHeight: "x-height",
    // These were camelcased in Tiny. Now lowercased in SVG 2
    playbackOrder: "playbackorder",
    timelineBegin: "timelinebegin"
  },
  properties: {
    about: Un,
    accentHeight: ge,
    accumulate: null,
    additive: null,
    alignmentBaseline: null,
    alphabetic: ge,
    amplitude: ge,
    arabicForm: null,
    ascent: ge,
    attributeName: null,
    attributeType: null,
    azimuth: ge,
    bandwidth: null,
    baselineShift: null,
    baseFrequency: null,
    baseProfile: null,
    bbox: null,
    begin: null,
    bias: ge,
    by: null,
    calcMode: null,
    capHeight: ge,
    className: ct,
    clip: null,
    clipPath: null,
    clipPathUnits: null,
    clipRule: null,
    color: null,
    colorInterpolation: null,
    colorInterpolationFilters: null,
    colorProfile: null,
    colorRendering: null,
    content: null,
    contentScriptType: null,
    contentStyleType: null,
    crossOrigin: null,
    cursor: null,
    cx: null,
    cy: null,
    d: null,
    dataType: null,
    defaultAction: null,
    descent: ge,
    diffuseConstant: ge,
    direction: null,
    display: null,
    dur: null,
    divisor: ge,
    dominantBaseline: null,
    download: je,
    dx: null,
    dy: null,
    edgeMode: null,
    editable: null,
    elevation: ge,
    enableBackground: null,
    end: null,
    event: null,
    exponent: ge,
    externalResourcesRequired: null,
    fill: null,
    fillOpacity: ge,
    fillRule: null,
    filter: null,
    filterRes: null,
    filterUnits: null,
    floodColor: null,
    floodOpacity: null,
    focusable: null,
    focusHighlight: null,
    fontFamily: null,
    fontSize: null,
    fontSizeAdjust: null,
    fontStretch: null,
    fontStyle: null,
    fontVariant: null,
    fontWeight: null,
    format: null,
    fr: null,
    from: null,
    fx: null,
    fy: null,
    g1: Ki,
    g2: Ki,
    glyphName: Ki,
    glyphOrientationHorizontal: null,
    glyphOrientationVertical: null,
    glyphRef: null,
    gradientTransform: null,
    gradientUnits: null,
    handler: null,
    hanging: ge,
    hatchContentUnits: null,
    hatchUnits: null,
    height: null,
    href: null,
    hrefLang: null,
    horizAdvX: ge,
    horizOriginX: ge,
    horizOriginY: ge,
    id: null,
    ideographic: ge,
    imageRendering: null,
    initialVisibility: null,
    in: null,
    in2: null,
    intercept: ge,
    k: ge,
    k1: ge,
    k2: ge,
    k3: ge,
    k4: ge,
    kernelMatrix: Un,
    kernelUnitLength: null,
    keyPoints: null,
    // SEMI_COLON_SEPARATED
    keySplines: null,
    // SEMI_COLON_SEPARATED
    keyTimes: null,
    // SEMI_COLON_SEPARATED
    kerning: null,
    lang: null,
    lengthAdjust: null,
    letterSpacing: null,
    lightingColor: null,
    limitingConeAngle: ge,
    local: null,
    markerEnd: null,
    markerMid: null,
    markerStart: null,
    markerHeight: null,
    markerUnits: null,
    markerWidth: null,
    mask: null,
    maskContentUnits: null,
    maskUnits: null,
    mathematical: null,
    max: null,
    media: null,
    mediaCharacterEncoding: null,
    mediaContentEncodings: null,
    mediaSize: ge,
    mediaTime: null,
    method: null,
    min: null,
    mode: null,
    name: null,
    navDown: null,
    navDownLeft: null,
    navDownRight: null,
    navLeft: null,
    navNext: null,
    navPrev: null,
    navRight: null,
    navUp: null,
    navUpLeft: null,
    navUpRight: null,
    numOctaves: null,
    observer: null,
    offset: null,
    onAbort: null,
    onActivate: null,
    onAfterPrint: null,
    onBeforePrint: null,
    onBegin: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnd: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFocusIn: null,
    onFocusOut: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadStart: null,
    onMessage: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onMouseWheel: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRepeat: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onShow: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onZoom: null,
    opacity: null,
    operator: null,
    order: null,
    orient: null,
    orientation: null,
    origin: null,
    overflow: null,
    overlay: null,
    overlinePosition: ge,
    overlineThickness: ge,
    paintOrder: null,
    panose1: null,
    path: null,
    pathLength: ge,
    patternContentUnits: null,
    patternTransform: null,
    patternUnits: null,
    phase: null,
    ping: ct,
    pitch: null,
    playbackOrder: null,
    pointerEvents: null,
    points: null,
    pointsAtX: ge,
    pointsAtY: ge,
    pointsAtZ: ge,
    preserveAlpha: null,
    preserveAspectRatio: null,
    primitiveUnits: null,
    propagate: null,
    property: Un,
    r: null,
    radius: null,
    referrerPolicy: null,
    refX: null,
    refY: null,
    rel: Un,
    rev: Un,
    renderingIntent: null,
    repeatCount: null,
    repeatDur: null,
    requiredExtensions: Un,
    requiredFeatures: Un,
    requiredFonts: Un,
    requiredFormats: Un,
    resource: null,
    restart: null,
    result: null,
    rotate: null,
    rx: null,
    ry: null,
    scale: null,
    seed: null,
    shapeRendering: null,
    side: null,
    slope: null,
    snapshotTime: null,
    specularConstant: ge,
    specularExponent: ge,
    spreadMethod: null,
    spacing: null,
    startOffset: null,
    stdDeviation: null,
    stemh: null,
    stemv: null,
    stitchTiles: null,
    stopColor: null,
    stopOpacity: null,
    strikethroughPosition: ge,
    strikethroughThickness: ge,
    string: null,
    stroke: null,
    strokeDashArray: Un,
    strokeDashOffset: null,
    strokeLineCap: null,
    strokeLineJoin: null,
    strokeMiterLimit: ge,
    strokeOpacity: ge,
    strokeWidth: null,
    style: null,
    surfaceScale: ge,
    syncBehavior: null,
    syncBehaviorDefault: null,
    syncMaster: null,
    syncTolerance: null,
    syncToleranceDefault: null,
    systemLanguage: Un,
    tabIndex: ge,
    tableValues: null,
    target: null,
    targetX: ge,
    targetY: ge,
    textAnchor: null,
    textDecoration: null,
    textRendering: null,
    textLength: null,
    timelineBegin: null,
    title: null,
    transformBehavior: null,
    type: null,
    typeOf: Un,
    to: null,
    transform: null,
    transformOrigin: null,
    u1: null,
    u2: null,
    underlinePosition: ge,
    underlineThickness: ge,
    unicode: null,
    unicodeBidi: null,
    unicodeRange: null,
    unitsPerEm: ge,
    values: null,
    vAlphabetic: ge,
    vMathematical: ge,
    vectorEffect: null,
    vHanging: ge,
    vIdeographic: ge,
    version: null,
    vertAdvY: ge,
    vertOriginX: ge,
    vertOriginY: ge,
    viewBox: null,
    viewTarget: null,
    visibility: null,
    width: null,
    widths: null,
    wordSpacing: null,
    writingMode: null,
    x: null,
    x1: null,
    x2: null,
    xChannelSelector: null,
    xHeight: ge,
    y: null,
    y1: null,
    y2: null,
    yChannelSelector: null,
    z: null,
    zoomAndPan: null
  },
  space: "svg",
  transform: aN
}), oN = Ao({
  properties: {
    xLinkActuate: null,
    xLinkArcRole: null,
    xLinkHref: null,
    xLinkRole: null,
    xLinkShow: null,
    xLinkTitle: null,
    xLinkType: null
  },
  space: "xlink",
  transform(e, t) {
    return "xlink:" + t.slice(5).toLowerCase();
  }
}), sN = Ao({
  attributes: { xmlnsxlink: "xmlns:xlink" },
  properties: { xmlnsXLink: null, xmlns: null },
  space: "xmlns",
  transform: iN
}), lN = Ao({
  properties: { xmlBase: null, xmlLang: null, xmlSpace: null },
  space: "xml",
  transform(e, t) {
    return "xml:" + t.slice(3).toLowerCase();
  }
}), G$ = /[A-Z]/g, hI = /-[a-z]/g, q$ = /^data[-\w.:]+$/i;
function uN(e, t) {
  const n = Us(t);
  let r = t, o = Ln;
  if (n in e.normal)
    return e.property[e.normal[n]];
  if (n.length > 4 && n.slice(0, 4) === "data" && q$.test(t)) {
    if (t.charAt(4) === "-") {
      const s = t.slice(5).replace(hI, V$);
      r = "data" + s.charAt(0).toUpperCase() + s.slice(1);
    } else {
      const s = t.slice(4);
      if (!hI.test(s)) {
        let u = s.replace(G$, j$);
        u.charAt(0) !== "-" && (u = "-" + u), t = "data" + u;
      }
    }
    o = t1;
  }
  return new o(r, t);
}
function j$(e) {
  return "-" + e.toLowerCase();
}
function V$(e) {
  return e.charAt(1).toUpperCase();
}
const n1 = nN([rN, $$, oN, sN, lN], "html"), r1 = nN([rN, z$, oN, sN, lN], "svg"), gI = /[#.]/g;
function W$(e, t) {
  const n = e || "", r = {};
  let o = 0, s, u;
  for (; o < n.length; ) {
    gI.lastIndex = o;
    const c = gI.exec(n), p = n.slice(o, c ? c.index : n.length);
    p && (s ? s === "#" ? r.id = p : Array.isArray(r.className) ? r.className.push(p) : r.className = [p] : u = p, o += p.length), c && (s = c[0], o++);
  }
  return {
    type: "element",
    // @ts-expect-error: tag name is parsed.
    tagName: u || t || "div",
    properties: r,
    children: []
  };
}
function cN(e, t, n) {
  const r = n ? Q$(n) : void 0;
  function o(s, u, ...c) {
    let p;
    if (s == null) {
      p = { type: "root", children: [] };
      const f = (
        /** @type {Child} */
        u
      );
      c.unshift(f);
    } else {
      p = W$(s, t);
      const f = p.tagName.toLowerCase(), b = r ? r.get(f) : void 0;
      if (p.tagName = b || f, Y$(u))
        c.unshift(u);
      else
        for (const [g, T] of Object.entries(u))
          K$(e, p.properties, g, T);
    }
    for (const f of c)
      lE(p.children, f);
    return p.type === "element" && p.tagName === "template" && (p.content = { type: "root", children: p.children }, p.children = []), p;
  }
  return o;
}
function Y$(e) {
  if (e === null || typeof e != "object" || Array.isArray(e))
    return !0;
  if (typeof e.type != "string") return !1;
  const t = (
    /** @type {Record<string, unknown>} */
    e
  ), n = Object.keys(e);
  for (const r of n) {
    const o = t[r];
    if (o && typeof o == "object") {
      if (!Array.isArray(o)) return !0;
      const s = (
        /** @type {ReadonlyArray<unknown>} */
        o
      );
      for (const u of s)
        if (typeof u != "number" && typeof u != "string")
          return !0;
    }
  }
  return !!("children" in e && Array.isArray(e.children));
}
function K$(e, t, n, r) {
  const o = uN(e, n);
  let s;
  if (r != null) {
    if (typeof r == "number") {
      if (Number.isNaN(r)) return;
      s = r;
    } else typeof r == "boolean" ? s = r : typeof r == "string" ? o.spaceSeparated ? s = WS(r) : o.commaSeparated ? s = zS(r) : o.commaOrSpaceSeparated ? s = WS(zS(r).join(" ")) : s = mI(o, o.property, r) : Array.isArray(r) ? s = [...r] : s = o.property === "style" ? X$(r) : String(r);
    if (Array.isArray(s)) {
      const u = [];
      for (const c of s)
        u.push(
          /** @type {number | string} */
          mI(o, o.property, c)
        );
      s = u;
    }
    o.property === "className" && Array.isArray(t.className) && (s = t.className.concat(
      /** @type {Array<number | string> | number | string} */
      s
    )), t[o.property] = s;
  }
}
function lE(e, t) {
  if (t != null) if (typeof t == "number" || typeof t == "string")
    e.push({ type: "text", value: String(t) });
  else if (Array.isArray(t))
    for (const n of t)
      lE(e, n);
  else if (typeof t == "object" && "type" in t)
    t.type === "root" ? lE(e, t.children) : e.push(t);
  else
    throw new Error("Expected node, nodes, or string, got `" + t + "`");
}
function mI(e, t, n) {
  if (typeof n == "string") {
    if (e.number && n && !Number.isNaN(Number(n)))
      return Number(n);
    if ((e.boolean || e.overloadedBoolean) && (n === "" || Us(n) === Us(t)))
      return !0;
  }
  return n;
}
function X$(e) {
  const t = [];
  for (const [n, r] of Object.entries(e))
    t.push([n, r].join(": "));
  return t.join("; ");
}
function Q$(e) {
  const t = /* @__PURE__ */ new Map();
  for (const n of e)
    t.set(n.toLowerCase(), n);
  return t;
}
const Z$ = [
  "altGlyph",
  "altGlyphDef",
  "altGlyphItem",
  "animateColor",
  "animateMotion",
  "animateTransform",
  "clipPath",
  "feBlend",
  "feColorMatrix",
  "feComponentTransfer",
  "feComposite",
  "feConvolveMatrix",
  "feDiffuseLighting",
  "feDisplacementMap",
  "feDistantLight",
  "feDropShadow",
  "feFlood",
  "feFuncA",
  "feFuncB",
  "feFuncG",
  "feFuncR",
  "feGaussianBlur",
  "feImage",
  "feMerge",
  "feMergeNode",
  "feMorphology",
  "feOffset",
  "fePointLight",
  "feSpecularLighting",
  "feSpotLight",
  "feTile",
  "feTurbulence",
  "foreignObject",
  "glyphRef",
  "linearGradient",
  "radialGradient",
  "solidColor",
  "textArea",
  "textPath"
], J$ = cN(n1, "div"), ez = cN(r1, "g", Z$);
function tz(e) {
  const t = String(e), n = [];
  return { toOffset: o, toPoint: r };
  function r(s) {
    if (typeof s == "number" && s > -1 && s <= t.length) {
      let u = 0;
      for (; ; ) {
        let c = n[u];
        if (c === void 0) {
          const p = bI(t, n[u - 1]);
          c = p === -1 ? t.length + 1 : p + 1, n[u] = c;
        }
        if (c > s)
          return {
            line: u + 1,
            column: s - (u > 0 ? n[u - 1] : 0) + 1,
            offset: s
          };
        u++;
      }
    }
  }
  function o(s) {
    if (s && typeof s.line == "number" && typeof s.column == "number" && !Number.isNaN(s.line) && !Number.isNaN(s.column)) {
      for (; n.length < s.line; ) {
        const c = n[n.length - 1], p = bI(t, c), f = p === -1 ? t.length + 1 : p + 1;
        if (c === f) break;
        n.push(f);
      }
      const u = (s.line > 1 ? n[s.line - 2] : 0) + s.column - 1;
      if (u < n[s.line - 1]) return u;
    }
  }
}
function bI(e, t) {
  const n = e.indexOf("\r", t), r = e.indexOf(`
`, t);
  return r === -1 ? n : n === -1 || n + 1 === r ? r : n < r ? n : r;
}
const Ja = {
  html: "http://www.w3.org/1999/xhtml",
  mathml: "http://www.w3.org/1998/Math/MathML",
  svg: "http://www.w3.org/2000/svg",
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
}, dN = {}.hasOwnProperty, nz = Object.prototype;
function rz(e, t) {
  const n = t || {};
  return a1(
    {
      file: n.file || void 0,
      location: !1,
      schema: n.space === "svg" ? r1 : n1,
      verbose: n.verbose || !1
    },
    e
  );
}
function a1(e, t) {
  let n;
  switch (t.nodeName) {
    case "#comment": {
      const r = (
        /** @type {DefaultTreeAdapterMap['commentNode']} */
        t
      );
      return n = { type: "comment", value: r.data }, Nu(e, r, n), n;
    }
    case "#document":
    case "#document-fragment": {
      const r = (
        /** @type {DefaultTreeAdapterMap['document'] | DefaultTreeAdapterMap['documentFragment']} */
        t
      ), o = "mode" in r ? r.mode === "quirks" || r.mode === "limited-quirks" : !1;
      if (n = {
        type: "root",
        children: pN(e, t.childNodes),
        data: { quirksMode: o }
      }, e.file && e.location) {
        const s = String(e.file), u = tz(s), c = u.toPoint(0), p = u.toPoint(s.length);
        n.position = { start: c, end: p };
      }
      return n;
    }
    case "#documentType": {
      const r = (
        /** @type {DefaultTreeAdapterMap['documentType']} */
        t
      );
      return n = { type: "doctype" }, Nu(e, r, n), n;
    }
    case "#text": {
      const r = (
        /** @type {DefaultTreeAdapterMap['textNode']} */
        t
      );
      return n = { type: "text", value: r.value }, Nu(e, r, n), n;
    }
    // Element.
    default:
      return n = az(
        e,
        /** @type {DefaultTreeAdapterMap['element']} */
        t
      ), n;
  }
}
function pN(e, t) {
  let n = -1;
  const r = [];
  for (; ++n < t.length; ) {
    const o = (
      /** @type {RootContent} */
      a1(e, t[n])
    );
    r.push(o);
  }
  return r;
}
function az(e, t) {
  const n = e.schema;
  e.schema = t.namespaceURI === Ja.svg ? r1 : n1;
  let r = -1;
  const o = {};
  for (; ++r < t.attrs.length; ) {
    const c = t.attrs[r], p = (c.prefix ? c.prefix + ":" : "") + c.name;
    dN.call(nz, p) || (o[p] = c.value);
  }
  const u = (e.schema.space === "svg" ? ez : J$)(t.tagName, o, pN(e, t.childNodes));
  if (Nu(e, t, u), u.tagName === "template") {
    const c = (
      /** @type {DefaultTreeAdapterMap['template']} */
      t
    ), p = c.sourceCodeLocation, f = p && p.startTag && Vi(p.startTag), b = p && p.endTag && Vi(p.endTag), g = (
      /** @type {Root} */
      a1(e, c.content)
    );
    f && b && e.file && (g.position = { start: f.end, end: b.start }), u.content = g;
  }
  return e.schema = n, u;
}
function Nu(e, t, n) {
  if ("sourceCodeLocation" in t && t.sourceCodeLocation && e.file) {
    const r = iz(e, n, t.sourceCodeLocation);
    r && (e.location = !0, n.position = r);
  }
}
function iz(e, t, n) {
  const r = Vi(n);
  if (t.type === "element") {
    const o = t.children[t.children.length - 1];
    if (r && !n.endTag && o && o.position && o.position.end && (r.end = Object.assign({}, o.position.end)), e.verbose) {
      const s = {};
      let u;
      if (n.attrs)
        for (u in n.attrs)
          dN.call(n.attrs, u) && (s[uN(e.schema, u).property] = Vi(
            n.attrs[u]
          ));
      n.startTag;
      const c = Vi(n.startTag), p = n.endTag ? Vi(n.endTag) : void 0, f = { opening: c };
      p && (f.closing = p), f.properties = s, t.data = { position: f };
    }
  }
  return r;
}
function Vi(e) {
  const t = EI({
    line: e.startLine,
    column: e.startCol,
    offset: e.startOffset
  }), n = EI({
    line: e.endLine,
    column: e.endCol,
    offset: e.endOffset
  });
  return t || n ? { start: t, end: n } : void 0;
}
function EI(e) {
  return e.line && e.column ? e : void 0;
}
const yI = {}.hasOwnProperty;
function fN(e, t) {
  const n = t || {};
  function r(o, ...s) {
    let u = r.invalid;
    const c = r.handlers;
    if (o && yI.call(o, e)) {
      const p = String(o[e]);
      u = yI.call(c, p) ? c[p] : r.unknown;
    }
    if (u)
      return u.call(this, o, ...s);
  }
  return r.handlers = n.handlers || {}, r.invalid = n.invalid, r.unknown = n.unknown, r;
}
const oz = {}, sz = {}.hasOwnProperty, hN = fN("type", { handlers: { root: uz, element: hz, text: pz, comment: fz, doctype: dz } });
function lz(e, t) {
  const r = (t || oz).space;
  return hN(e, r === "svg" ? Ys : sx);
}
function uz(e, t) {
  const n = {
    nodeName: "#document",
    // @ts-expect-error: `parse5` uses enums, which are actually strings.
    mode: (e.data || {}).quirksMode ? "quirks" : "no-quirks",
    childNodes: []
  };
  return n.childNodes = i1(e.children, n, t), ko(e, n), n;
}
function cz(e, t) {
  const n = { nodeName: "#document-fragment", childNodes: [] };
  return n.childNodes = i1(e.children, n, t), ko(e, n), n;
}
function dz(e) {
  const t = {
    nodeName: "#documentType",
    name: "html",
    publicId: "",
    systemId: "",
    parentNode: null
  };
  return ko(e, t), t;
}
function pz(e) {
  const t = {
    nodeName: "#text",
    value: e.value,
    parentNode: null
  };
  return ko(e, t), t;
}
function fz(e) {
  const t = {
    nodeName: "#comment",
    data: e.value,
    parentNode: null
  };
  return ko(e, t), t;
}
function hz(e, t) {
  const n = t;
  let r = n;
  e.type === "element" && e.tagName.toLowerCase() === "svg" && n.space === "html" && (r = Ys);
  const o = [];
  let s;
  if (e.properties) {
    for (s in e.properties)
      if (s !== "children" && sz.call(e.properties, s)) {
        const p = gz(
          r,
          s,
          e.properties[s]
        );
        p && o.push(p);
      }
  }
  const u = r.space, c = {
    nodeName: e.tagName,
    tagName: e.tagName,
    attrs: o,
    // @ts-expect-error: `parse5` types are wrong.
    namespaceURI: Ja[u],
    childNodes: [],
    parentNode: null
  };
  return c.childNodes = i1(e.children, c, r), ko(e, c), e.tagName === "template" && e.content && (c.content = cz(e.content, r)), c;
}
function gz(e, t, n) {
  const r = ox(e, t);
  if (n === !1 || n === null || n === void 0 || typeof n == "number" && Number.isNaN(n) || !n && r.boolean)
    return;
  Array.isArray(n) && (n = r.commaSeparated ? QR(n) : lx(n));
  const o = {
    name: r.attribute,
    value: n === !0 ? "" : String(n)
  };
  if (r.space && r.space !== "html" && r.space !== "svg") {
    const s = o.name.indexOf(":");
    s < 0 ? o.prefix = "" : (o.name = o.name.slice(s + 1), o.prefix = r.attribute.slice(0, s)), o.namespace = Ja[r.space];
  }
  return o;
}
function i1(e, t, n) {
  let r = -1;
  const o = [];
  if (e)
    for (; ++r < e.length; ) {
      const s = hN(e[r], n);
      s.parentNode = t, o.push(s);
    }
  return o;
}
function ko(e, t) {
  const n = e.position;
  n && n.start && n.end && (n.start.offset, n.end.offset, t.sourceCodeLocation = {
    startLine: n.start.line,
    startCol: n.start.column,
    startOffset: n.start.offset,
    endLine: n.end.line,
    endCol: n.end.column,
    endOffset: n.end.offset
  });
}
const mz = [
  "area",
  "base",
  "basefont",
  "bgsound",
  "br",
  "col",
  "command",
  "embed",
  "frame",
  "hr",
  "image",
  "img",
  "input",
  "keygen",
  "link",
  "meta",
  "param",
  "source",
  "track",
  "wbr"
], bz = /* @__PURE__ */ new Set([
  65534,
  65535,
  131070,
  131071,
  196606,
  196607,
  262142,
  262143,
  327678,
  327679,
  393214,
  393215,
  458750,
  458751,
  524286,
  524287,
  589822,
  589823,
  655358,
  655359,
  720894,
  720895,
  786430,
  786431,
  851966,
  851967,
  917502,
  917503,
  983038,
  983039,
  1048574,
  1048575,
  1114110,
  1114111
]), bt = "�";
var N;
(function(e) {
  e[e.EOF = -1] = "EOF", e[e.NULL = 0] = "NULL", e[e.TABULATION = 9] = "TABULATION", e[e.CARRIAGE_RETURN = 13] = "CARRIAGE_RETURN", e[e.LINE_FEED = 10] = "LINE_FEED", e[e.FORM_FEED = 12] = "FORM_FEED", e[e.SPACE = 32] = "SPACE", e[e.EXCLAMATION_MARK = 33] = "EXCLAMATION_MARK", e[e.QUOTATION_MARK = 34] = "QUOTATION_MARK", e[e.AMPERSAND = 38] = "AMPERSAND", e[e.APOSTROPHE = 39] = "APOSTROPHE", e[e.HYPHEN_MINUS = 45] = "HYPHEN_MINUS", e[e.SOLIDUS = 47] = "SOLIDUS", e[e.DIGIT_0 = 48] = "DIGIT_0", e[e.DIGIT_9 = 57] = "DIGIT_9", e[e.SEMICOLON = 59] = "SEMICOLON", e[e.LESS_THAN_SIGN = 60] = "LESS_THAN_SIGN", e[e.EQUALS_SIGN = 61] = "EQUALS_SIGN", e[e.GREATER_THAN_SIGN = 62] = "GREATER_THAN_SIGN", e[e.QUESTION_MARK = 63] = "QUESTION_MARK", e[e.LATIN_CAPITAL_A = 65] = "LATIN_CAPITAL_A", e[e.LATIN_CAPITAL_Z = 90] = "LATIN_CAPITAL_Z", e[e.RIGHT_SQUARE_BRACKET = 93] = "RIGHT_SQUARE_BRACKET", e[e.GRAVE_ACCENT = 96] = "GRAVE_ACCENT", e[e.LATIN_SMALL_A = 97] = "LATIN_SMALL_A", e[e.LATIN_SMALL_Z = 122] = "LATIN_SMALL_Z";
})(N || (N = {}));
const In = {
  DASH_DASH: "--",
  CDATA_START: "[CDATA[",
  DOCTYPE: "doctype",
  SCRIPT: "script",
  PUBLIC: "public",
  SYSTEM: "system"
};
function gN(e) {
  return e >= 55296 && e <= 57343;
}
function Ez(e) {
  return e >= 56320 && e <= 57343;
}
function yz(e, t) {
  return (e - 55296) * 1024 + 9216 + t;
}
function mN(e) {
  return e !== 32 && e !== 10 && e !== 13 && e !== 9 && e !== 12 && e >= 1 && e <= 31 || e >= 127 && e <= 159;
}
function bN(e) {
  return e >= 64976 && e <= 65007 || bz.has(e);
}
var te;
(function(e) {
  e.controlCharacterInInputStream = "control-character-in-input-stream", e.noncharacterInInputStream = "noncharacter-in-input-stream", e.surrogateInInputStream = "surrogate-in-input-stream", e.nonVoidHtmlElementStartTagWithTrailingSolidus = "non-void-html-element-start-tag-with-trailing-solidus", e.endTagWithAttributes = "end-tag-with-attributes", e.endTagWithTrailingSolidus = "end-tag-with-trailing-solidus", e.unexpectedSolidusInTag = "unexpected-solidus-in-tag", e.unexpectedNullCharacter = "unexpected-null-character", e.unexpectedQuestionMarkInsteadOfTagName = "unexpected-question-mark-instead-of-tag-name", e.invalidFirstCharacterOfTagName = "invalid-first-character-of-tag-name", e.unexpectedEqualsSignBeforeAttributeName = "unexpected-equals-sign-before-attribute-name", e.missingEndTagName = "missing-end-tag-name", e.unexpectedCharacterInAttributeName = "unexpected-character-in-attribute-name", e.unknownNamedCharacterReference = "unknown-named-character-reference", e.missingSemicolonAfterCharacterReference = "missing-semicolon-after-character-reference", e.unexpectedCharacterAfterDoctypeSystemIdentifier = "unexpected-character-after-doctype-system-identifier", e.unexpectedCharacterInUnquotedAttributeValue = "unexpected-character-in-unquoted-attribute-value", e.eofBeforeTagName = "eof-before-tag-name", e.eofInTag = "eof-in-tag", e.missingAttributeValue = "missing-attribute-value", e.missingWhitespaceBetweenAttributes = "missing-whitespace-between-attributes", e.missingWhitespaceAfterDoctypePublicKeyword = "missing-whitespace-after-doctype-public-keyword", e.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers = "missing-whitespace-between-doctype-public-and-system-identifiers", e.missingWhitespaceAfterDoctypeSystemKeyword = "missing-whitespace-after-doctype-system-keyword", e.missingQuoteBeforeDoctypePublicIdentifier = "missing-quote-before-doctype-public-identifier", e.missingQuoteBeforeDoctypeSystemIdentifier = "missing-quote-before-doctype-system-identifier", e.missingDoctypePublicIdentifier = "missing-doctype-public-identifier", e.missingDoctypeSystemIdentifier = "missing-doctype-system-identifier", e.abruptDoctypePublicIdentifier = "abrupt-doctype-public-identifier", e.abruptDoctypeSystemIdentifier = "abrupt-doctype-system-identifier", e.cdataInHtmlContent = "cdata-in-html-content", e.incorrectlyOpenedComment = "incorrectly-opened-comment", e.eofInScriptHtmlCommentLikeText = "eof-in-script-html-comment-like-text", e.eofInDoctype = "eof-in-doctype", e.nestedComment = "nested-comment", e.abruptClosingOfEmptyComment = "abrupt-closing-of-empty-comment", e.eofInComment = "eof-in-comment", e.incorrectlyClosedComment = "incorrectly-closed-comment", e.eofInCdata = "eof-in-cdata", e.absenceOfDigitsInNumericCharacterReference = "absence-of-digits-in-numeric-character-reference", e.nullCharacterReference = "null-character-reference", e.surrogateCharacterReference = "surrogate-character-reference", e.characterReferenceOutsideUnicodeRange = "character-reference-outside-unicode-range", e.controlCharacterReference = "control-character-reference", e.noncharacterCharacterReference = "noncharacter-character-reference", e.missingWhitespaceBeforeDoctypeName = "missing-whitespace-before-doctype-name", e.missingDoctypeName = "missing-doctype-name", e.invalidCharacterSequenceAfterDoctypeName = "invalid-character-sequence-after-doctype-name", e.duplicateAttribute = "duplicate-attribute", e.nonConformingDoctype = "non-conforming-doctype", e.missingDoctype = "missing-doctype", e.misplacedDoctype = "misplaced-doctype", e.endTagWithoutMatchingOpenElement = "end-tag-without-matching-open-element", e.closingOfElementWithOpenChildElements = "closing-of-element-with-open-child-elements", e.disallowedContentInNoscriptInHead = "disallowed-content-in-noscript-in-head", e.openElementsLeftAfterEof = "open-elements-left-after-eof", e.abandonedHeadElementChild = "abandoned-head-element-child", e.misplacedStartTagForHeadElement = "misplaced-start-tag-for-head-element", e.nestedNoscriptInHead = "nested-noscript-in-head", e.eofInElementThatCanContainOnlyText = "eof-in-element-that-can-contain-only-text";
})(te || (te = {}));
const Tz = 65536;
class Sz {
  constructor(t) {
    this.handler = t, this.html = "", this.pos = -1, this.lastGapPos = -2, this.gapStack = [], this.skipNextNewLine = !1, this.lastChunkWritten = !1, this.endOfChunkHit = !1, this.bufferWaterline = Tz, this.isEol = !1, this.lineStartPos = 0, this.droppedBufferSize = 0, this.line = 1, this.lastErrOffset = -1;
  }
  /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */
  get col() {
    return this.pos - this.lineStartPos + +(this.lastGapPos !== this.pos);
  }
  get offset() {
    return this.droppedBufferSize + this.pos;
  }
  getError(t, n) {
    const { line: r, col: o, offset: s } = this, u = o + n, c = s + n;
    return {
      code: t,
      startLine: r,
      endLine: r,
      startCol: u,
      endCol: u,
      startOffset: c,
      endOffset: c
    };
  }
  _err(t) {
    this.handler.onParseError && this.lastErrOffset !== this.offset && (this.lastErrOffset = this.offset, this.handler.onParseError(this.getError(t, 0)));
  }
  _addGap() {
    this.gapStack.push(this.lastGapPos), this.lastGapPos = this.pos;
  }
  _processSurrogate(t) {
    if (this.pos !== this.html.length - 1) {
      const n = this.html.charCodeAt(this.pos + 1);
      if (Ez(n))
        return this.pos++, this._addGap(), yz(t, n);
    } else if (!this.lastChunkWritten)
      return this.endOfChunkHit = !0, N.EOF;
    return this._err(te.surrogateInInputStream), t;
  }
  willDropParsedChunk() {
    return this.pos > this.bufferWaterline;
  }
  dropParsedChunk() {
    this.willDropParsedChunk() && (this.html = this.html.substring(this.pos), this.lineStartPos -= this.pos, this.droppedBufferSize += this.pos, this.pos = 0, this.lastGapPos = -2, this.gapStack.length = 0);
  }
  write(t, n) {
    this.html.length > 0 ? this.html += t : this.html = t, this.endOfChunkHit = !1, this.lastChunkWritten = n;
  }
  insertHtmlAtCurrentPos(t) {
    this.html = this.html.substring(0, this.pos + 1) + t + this.html.substring(this.pos + 1), this.endOfChunkHit = !1;
  }
  startsWith(t, n) {
    if (this.pos + t.length > this.html.length)
      return this.endOfChunkHit = !this.lastChunkWritten, !1;
    if (n)
      return this.html.startsWith(t, this.pos);
    for (let r = 0; r < t.length; r++)
      if ((this.html.charCodeAt(this.pos + r) | 32) !== t.charCodeAt(r))
        return !1;
    return !0;
  }
  peek(t) {
    const n = this.pos + t;
    if (n >= this.html.length)
      return this.endOfChunkHit = !this.lastChunkWritten, N.EOF;
    const r = this.html.charCodeAt(n);
    return r === N.CARRIAGE_RETURN ? N.LINE_FEED : r;
  }
  advance() {
    if (this.pos++, this.isEol && (this.isEol = !1, this.line++, this.lineStartPos = this.pos), this.pos >= this.html.length)
      return this.endOfChunkHit = !this.lastChunkWritten, N.EOF;
    let t = this.html.charCodeAt(this.pos);
    return t === N.CARRIAGE_RETURN ? (this.isEol = !0, this.skipNextNewLine = !0, N.LINE_FEED) : t === N.LINE_FEED && (this.isEol = !0, this.skipNextNewLine) ? (this.line--, this.skipNextNewLine = !1, this._addGap(), this.advance()) : (this.skipNextNewLine = !1, gN(t) && (t = this._processSurrogate(t)), this.handler.onParseError === null || t > 31 && t < 127 || t === N.LINE_FEED || t === N.CARRIAGE_RETURN || t > 159 && t < 64976 || this._checkForProblematicCharacters(t), t);
  }
  _checkForProblematicCharacters(t) {
    mN(t) ? this._err(te.controlCharacterInInputStream) : bN(t) && this._err(te.noncharacterInInputStream);
  }
  retreat(t) {
    for (this.pos -= t; this.pos < this.lastGapPos; )
      this.lastGapPos = this.gapStack.pop(), this.pos--;
    this.isEol = !1;
  }
}
var Ye;
(function(e) {
  e[e.CHARACTER = 0] = "CHARACTER", e[e.NULL_CHARACTER = 1] = "NULL_CHARACTER", e[e.WHITESPACE_CHARACTER = 2] = "WHITESPACE_CHARACTER", e[e.START_TAG = 3] = "START_TAG", e[e.END_TAG = 4] = "END_TAG", e[e.COMMENT = 5] = "COMMENT", e[e.DOCTYPE = 6] = "DOCTYPE", e[e.EOF = 7] = "EOF", e[e.HIBERNATION = 8] = "HIBERNATION";
})(Ye || (Ye = {}));
function EN(e, t) {
  for (let n = e.attrs.length - 1; n >= 0; n--)
    if (e.attrs[n].name === t)
      return e.attrs[n].value;
  return null;
}
const _z = /* @__PURE__ */ new Uint16Array(
  // prettier-ignore
  /* @__PURE__ */ 'ᵁ<Õıʊҝջאٵ۞ޢߖࠏ੊ઑඡ๭༉༦჊ረዡᐕᒝᓃᓟᔥ\0\0\0\0\0\0ᕫᛍᦍᰒᷝ὾⁠↰⊍⏀⏻⑂⠤⤒ⴈ⹈⿎〖㊺㘹㞬㣾㨨㩱㫠㬮ࠀEMabcfglmnoprstu\\bfms¦³¹ÈÏlig耻Æ䃆P耻&䀦cute耻Á䃁reve;䄂Āiyx}rc耻Â䃂;䐐r;쀀𝔄rave耻À䃀pha;䎑acr;䄀d;橓Āgp¡on;䄄f;쀀𝔸plyFunction;恡ing耻Å䃅Ācs¾Ãr;쀀𝒜ign;扔ilde耻Ã䃃ml耻Ä䃄ЀaceforsuåûþėĜĢħĪĀcrêòkslash;或Ŷöø;櫧ed;挆y;䐑ƀcrtąċĔause;戵noullis;愬a;䎒r;쀀𝔅pf;쀀𝔹eve;䋘còēmpeq;扎܀HOacdefhilorsuōőŖƀƞƢƵƷƺǜȕɳɸɾcy;䐧PY耻©䂩ƀcpyŝŢźute;䄆Ā;iŧŨ拒talDifferentialD;慅leys;愭ȀaeioƉƎƔƘron;䄌dil耻Ç䃇rc;䄈nint;戰ot;䄊ĀdnƧƭilla;䂸terDot;䂷òſi;䎧rcleȀDMPTǇǋǑǖot;抙inus;抖lus;投imes;抗oĀcsǢǸkwiseContourIntegral;戲eCurlyĀDQȃȏoubleQuote;思uote;怙ȀlnpuȞȨɇɕonĀ;eȥȦ户;橴ƀgitȯȶȺruent;扡nt;戯ourIntegral;戮ĀfrɌɎ;愂oduct;成nterClockwiseContourIntegral;戳oss;樯cr;쀀𝒞pĀ;Cʄʅ拓ap;才րDJSZacefiosʠʬʰʴʸˋ˗ˡ˦̳ҍĀ;oŹʥtrahd;椑cy;䐂cy;䐅cy;䐏ƀgrsʿ˄ˇger;怡r;憡hv;櫤Āayː˕ron;䄎;䐔lĀ;t˝˞戇a;䎔r;쀀𝔇Āaf˫̧Ācm˰̢riticalȀADGT̖̜̀̆cute;䂴oŴ̋̍;䋙bleAcute;䋝rave;䁠ilde;䋜ond;拄ferentialD;慆Ѱ̽\0\0\0͔͂\0Ѕf;쀀𝔻ƀ;DE͈͉͍䂨ot;惜qual;扐blèCDLRUVͣͲ΂ϏϢϸontourIntegraìȹoɴ͹\0\0ͻ»͉nArrow;懓Āeo·ΤftƀARTΐΖΡrrow;懐ightArrow;懔eåˊngĀLRΫτeftĀARγιrrow;柸ightArrow;柺ightArrow;柹ightĀATϘϞrrow;懒ee;抨pɁϩ\0\0ϯrrow;懑ownArrow;懕erticalBar;戥ǹABLRTaВЪаўѿͼrrowƀ;BUНОТ憓ar;椓pArrow;懵reve;䌑eft˒к\0ц\0ѐightVector;楐eeVector;楞ectorĀ;Bљњ憽ar;楖ightǔѧ\0ѱeeVector;楟ectorĀ;BѺѻ懁ar;楗eeĀ;A҆҇护rrow;憧ĀctҒҗr;쀀𝒟rok;䄐ࠀNTacdfglmopqstuxҽӀӄӋӞӢӧӮӵԡԯԶՒ՝ՠեG;䅊H耻Ð䃐cute耻É䃉ƀaiyӒӗӜron;䄚rc耻Ê䃊;䐭ot;䄖r;쀀𝔈rave耻È䃈ement;戈ĀapӺӾcr;䄒tyɓԆ\0\0ԒmallSquare;旻erySmallSquare;斫ĀgpԦԪon;䄘f;쀀𝔼silon;䎕uĀaiԼՉlĀ;TՂՃ橵ilde;扂librium;懌Āci՗՚r;愰m;橳a;䎗ml耻Ë䃋Āipժկsts;戃onentialE;慇ʀcfiosօֈ֍ֲ׌y;䐤r;쀀𝔉lledɓ֗\0\0֣mallSquare;旼erySmallSquare;斪Ͱֺ\0ֿ\0\0ׄf;쀀𝔽All;戀riertrf;愱cò׋؀JTabcdfgorstר׬ׯ׺؀ؒؖ؛؝أ٬ٲcy;䐃耻>䀾mmaĀ;d׷׸䎓;䏜reve;䄞ƀeiy؇،ؐdil;䄢rc;䄜;䐓ot;䄠r;쀀𝔊;拙pf;쀀𝔾eater̀EFGLSTصلَٖٛ٦qualĀ;Lؾؿ扥ess;招ullEqual;执reater;檢ess;扷lantEqual;橾ilde;扳cr;쀀𝒢;扫ЀAacfiosuڅڋږڛڞڪھۊRDcy;䐪Āctڐڔek;䋇;䁞irc;䄤r;愌lbertSpace;愋ǰگ\0ڲf;愍izontalLine;攀Āctۃۅòکrok;䄦mpńېۘownHumðįqual;扏܀EJOacdfgmnostuۺ۾܃܇܎ܚܞܡܨ݄ݸދޏޕcy;䐕lig;䄲cy;䐁cute耻Í䃍Āiyܓܘrc耻Î䃎;䐘ot;䄰r;愑rave耻Ì䃌ƀ;apܠܯܿĀcgܴܷr;䄪inaryI;慈lieóϝǴ݉\0ݢĀ;eݍݎ戬Āgrݓݘral;戫section;拂isibleĀCTݬݲomma;恣imes;恢ƀgptݿރވon;䄮f;쀀𝕀a;䎙cr;愐ilde;䄨ǫޚ\0ޞcy;䐆l耻Ï䃏ʀcfosuެ޷޼߂ߐĀiyޱ޵rc;䄴;䐙r;쀀𝔍pf;쀀𝕁ǣ߇\0ߌr;쀀𝒥rcy;䐈kcy;䐄΀HJacfosߤߨ߽߬߱ࠂࠈcy;䐥cy;䐌ppa;䎚Āey߶߻dil;䄶;䐚r;쀀𝔎pf;쀀𝕂cr;쀀𝒦րJTaceflmostࠥࠩࠬࡐࡣ঳সে্਷ੇcy;䐉耻<䀼ʀcmnpr࠷࠼ࡁࡄࡍute;䄹bda;䎛g;柪lacetrf;愒r;憞ƀaeyࡗ࡜ࡡron;䄽dil;䄻;䐛Āfsࡨ॰tԀACDFRTUVarࡾࢩࢱࣦ࣠ࣼयज़ΐ४Ānrࢃ࢏gleBracket;柨rowƀ;BR࢙࢚࢞憐ar;懤ightArrow;懆eiling;挈oǵࢷ\0ࣃbleBracket;柦nǔࣈ\0࣒eeVector;楡ectorĀ;Bࣛࣜ懃ar;楙loor;挊ightĀAV࣯ࣵrrow;憔ector;楎Āerँगeƀ;AVउऊऐ抣rrow;憤ector;楚iangleƀ;BEतथऩ抲ar;槏qual;抴pƀDTVषूौownVector;楑eeVector;楠ectorĀ;Bॖॗ憿ar;楘ectorĀ;B॥०憼ar;楒ightáΜs̀EFGLSTॾঋকঝঢভqualGreater;拚ullEqual;扦reater;扶ess;檡lantEqual;橽ilde;扲r;쀀𝔏Ā;eঽা拘ftarrow;懚idot;䄿ƀnpw৔ਖਛgȀLRlr৞৷ਂਐeftĀAR০৬rrow;柵ightArrow;柷ightArrow;柶eftĀarγਊightáοightáϊf;쀀𝕃erĀLRਢਬeftArrow;憙ightArrow;憘ƀchtਾੀੂòࡌ;憰rok;䅁;扪Ѐacefiosuਗ਼੝੠੷੼અઋ઎p;椅y;䐜Ādl੥੯iumSpace;恟lintrf;愳r;쀀𝔐nusPlus;戓pf;쀀𝕄cò੶;䎜ҀJacefostuણધભીଔଙඑ඗ඞcy;䐊cute;䅃ƀaey઴હાron;䅇dil;䅅;䐝ƀgswે૰଎ativeƀMTV૓૟૨ediumSpace;怋hiĀcn૦૘ë૙eryThiî૙tedĀGL૸ଆreaterGreateòٳessLesóੈLine;䀊r;쀀𝔑ȀBnptଢନଷ଺reak;恠BreakingSpace;䂠f;愕ڀ;CDEGHLNPRSTV୕ୖ୪୼஡௫ఄ౞಄ದ೘ൡඅ櫬Āou୛୤ngruent;扢pCap;扭oubleVerticalBar;戦ƀlqxஃஊ஛ement;戉ualĀ;Tஒஓ扠ilde;쀀≂̸ists;戄reater΀;EFGLSTஶஷ஽௉௓௘௥扯qual;扱ullEqual;쀀≧̸reater;쀀≫̸ess;批lantEqual;쀀⩾̸ilde;扵umpń௲௽ownHump;쀀≎̸qual;쀀≏̸eĀfsఊధtTriangleƀ;BEచఛడ拪ar;쀀⧏̸qual;括s̀;EGLSTవశ఼ౄోౘ扮qual;扰reater;扸ess;쀀≪̸lantEqual;쀀⩽̸ilde;扴estedĀGL౨౹reaterGreater;쀀⪢̸essLess;쀀⪡̸recedesƀ;ESಒಓಛ技qual;쀀⪯̸lantEqual;拠ĀeiಫಹverseElement;戌ghtTriangleƀ;BEೋೌ೒拫ar;쀀⧐̸qual;拭ĀquೝഌuareSuĀbp೨೹setĀ;E೰ೳ쀀⊏̸qual;拢ersetĀ;Eഃആ쀀⊐̸qual;拣ƀbcpഓതൎsetĀ;Eഛഞ쀀⊂⃒qual;抈ceedsȀ;ESTലള഻െ抁qual;쀀⪰̸lantEqual;拡ilde;쀀≿̸ersetĀ;E൘൛쀀⊃⃒qual;抉ildeȀ;EFT൮൯൵ൿ扁qual;扄ullEqual;扇ilde;扉erticalBar;戤cr;쀀𝒩ilde耻Ñ䃑;䎝܀Eacdfgmoprstuvලෂ෉෕ෛ෠෧෼ขภยา฿ไlig;䅒cute耻Ó䃓Āiy෎ීrc耻Ô䃔;䐞blac;䅐r;쀀𝔒rave耻Ò䃒ƀaei෮ෲ෶cr;䅌ga;䎩cron;䎟pf;쀀𝕆enCurlyĀDQฎบoubleQuote;怜uote;怘;橔Āclวฬr;쀀𝒪ash耻Ø䃘iŬื฼de耻Õ䃕es;樷ml耻Ö䃖erĀBP๋๠Āar๐๓r;怾acĀek๚๜;揞et;掴arenthesis;揜Ҁacfhilors๿ງຊຏຒດຝະ໼rtialD;戂y;䐟r;쀀𝔓i;䎦;䎠usMinus;䂱Āipຢອncareplanåڝf;愙Ȁ;eio຺ູ໠໤檻cedesȀ;EST່້໏໚扺qual;檯lantEqual;扼ilde;找me;怳Ādp໩໮uct;戏ortionĀ;aȥ໹l;戝Āci༁༆r;쀀𝒫;䎨ȀUfos༑༖༛༟OT耻"䀢r;쀀𝔔pf;愚cr;쀀𝒬؀BEacefhiorsu༾གྷཇའཱིྦྷྪྭ႖ႩႴႾarr;椐G耻®䂮ƀcnrཎནབute;䅔g;柫rĀ;tཛྷཝ憠l;椖ƀaeyཧཬཱron;䅘dil;䅖;䐠Ā;vླྀཹ愜erseĀEUྂྙĀlq྇ྎement;戋uilibrium;懋pEquilibrium;楯r»ཹo;䎡ghtЀACDFTUVa࿁࿫࿳ဢဨၛႇϘĀnr࿆࿒gleBracket;柩rowƀ;BL࿜࿝࿡憒ar;懥eftArrow;懄eiling;按oǵ࿹\0စbleBracket;柧nǔည\0နeeVector;楝ectorĀ;Bဝသ懂ar;楕loor;挋Āerိ၃eƀ;AVဵံြ抢rrow;憦ector;楛iangleƀ;BEၐၑၕ抳ar;槐qual;抵pƀDTVၣၮၸownVector;楏eeVector;楜ectorĀ;Bႂႃ憾ar;楔ectorĀ;B႑႒懀ar;楓Āpuႛ႞f;愝ndImplies;楰ightarrow;懛ĀchႹႼr;愛;憱leDelayed;槴ڀHOacfhimoqstuფჱჷჽᄙᄞᅑᅖᅡᅧᆵᆻᆿĀCcჩხHcy;䐩y;䐨FTcy;䐬cute;䅚ʀ;aeiyᄈᄉᄎᄓᄗ檼ron;䅠dil;䅞rc;䅜;䐡r;쀀𝔖ortȀDLRUᄪᄴᄾᅉownArrow»ОeftArrow»࢚ightArrow»࿝pArrow;憑gma;䎣allCircle;战pf;쀀𝕊ɲᅭ\0\0ᅰt;戚areȀ;ISUᅻᅼᆉᆯ斡ntersection;抓uĀbpᆏᆞsetĀ;Eᆗᆘ抏qual;抑ersetĀ;Eᆨᆩ抐qual;抒nion;抔cr;쀀𝒮ar;拆ȀbcmpᇈᇛሉላĀ;sᇍᇎ拐etĀ;Eᇍᇕqual;抆ĀchᇠህeedsȀ;ESTᇭᇮᇴᇿ扻qual;檰lantEqual;扽ilde;承Tháྌ;我ƀ;esሒሓሣ拑rsetĀ;Eሜም抃qual;抇et»ሓրHRSacfhiorsሾቄ቉ቕ቞ቱቶኟዂወዑORN耻Þ䃞ADE;愢ĀHc቎ቒcy;䐋y;䐦Ābuቚቜ;䀉;䎤ƀaeyብቪቯron;䅤dil;䅢;䐢r;쀀𝔗Āeiቻ኉ǲኀ\0ኇefore;戴a;䎘Ācn኎ኘkSpace;쀀  Space;怉ldeȀ;EFTካኬኲኼ戼qual;扃ullEqual;扅ilde;扈pf;쀀𝕋ipleDot;惛Āctዖዛr;쀀𝒯rok;䅦ૡዷጎጚጦ\0ጬጱ\0\0\0\0\0ጸጽ፷ᎅ\0᏿ᐄᐊᐐĀcrዻጁute耻Ú䃚rĀ;oጇገ憟cir;楉rǣጓ\0጖y;䐎ve;䅬Āiyጞጣrc耻Û䃛;䐣blac;䅰r;쀀𝔘rave耻Ù䃙acr;䅪Ādiፁ፩erĀBPፈ፝Āarፍፐr;䁟acĀekፗፙ;揟et;掵arenthesis;揝onĀ;P፰፱拃lus;抎Āgp፻፿on;䅲f;쀀𝕌ЀADETadps᎕ᎮᎸᏄϨᏒᏗᏳrrowƀ;BDᅐᎠᎤar;椒ownArrow;懅ownArrow;憕quilibrium;楮eeĀ;AᏋᏌ报rrow;憥ownáϳerĀLRᏞᏨeftArrow;憖ightArrow;憗iĀ;lᏹᏺ䏒on;䎥ing;䅮cr;쀀𝒰ilde;䅨ml耻Ü䃜ҀDbcdefosvᐧᐬᐰᐳᐾᒅᒊᒐᒖash;披ar;櫫y;䐒ashĀ;lᐻᐼ抩;櫦Āerᑃᑅ;拁ƀbtyᑌᑐᑺar;怖Ā;iᑏᑕcalȀBLSTᑡᑥᑪᑴar;戣ine;䁼eparator;杘ilde;所ThinSpace;怊r;쀀𝔙pf;쀀𝕍cr;쀀𝒱dash;抪ʀcefosᒧᒬᒱᒶᒼirc;䅴dge;拀r;쀀𝔚pf;쀀𝕎cr;쀀𝒲Ȁfiosᓋᓐᓒᓘr;쀀𝔛;䎞pf;쀀𝕏cr;쀀𝒳ҀAIUacfosuᓱᓵᓹᓽᔄᔏᔔᔚᔠcy;䐯cy;䐇cy;䐮cute耻Ý䃝Āiyᔉᔍrc;䅶;䐫r;쀀𝔜pf;쀀𝕐cr;쀀𝒴ml;䅸ЀHacdefosᔵᔹᔿᕋᕏᕝᕠᕤcy;䐖cute;䅹Āayᕄᕉron;䅽;䐗ot;䅻ǲᕔ\0ᕛoWidtè૙a;䎖r;愨pf;愤cr;쀀𝒵௡ᖃᖊᖐ\0ᖰᖶᖿ\0\0\0\0ᗆᗛᗫᙟ᙭\0ᚕ᚛ᚲᚹ\0ᚾcute耻á䃡reve;䄃̀;Ediuyᖜᖝᖡᖣᖨᖭ戾;쀀∾̳;房rc耻â䃢te肻´̆;䐰lig耻æ䃦Ā;r²ᖺ;쀀𝔞rave耻à䃠ĀepᗊᗖĀfpᗏᗔsym;愵èᗓha;䎱ĀapᗟcĀclᗤᗧr;䄁g;樿ɤᗰ\0\0ᘊʀ;adsvᗺᗻᗿᘁᘇ戧nd;橕;橜lope;橘;橚΀;elmrszᘘᘙᘛᘞᘿᙏᙙ戠;榤e»ᘙsdĀ;aᘥᘦ戡ѡᘰᘲᘴᘶᘸᘺᘼᘾ;榨;榩;榪;榫;榬;榭;榮;榯tĀ;vᙅᙆ戟bĀ;dᙌᙍ抾;榝Āptᙔᙗh;戢»¹arr;捼Āgpᙣᙧon;䄅f;쀀𝕒΀;Eaeiop዁ᙻᙽᚂᚄᚇᚊ;橰cir;橯;扊d;手s;䀧roxĀ;e዁ᚒñᚃing耻å䃥ƀctyᚡᚦᚨr;쀀𝒶;䀪mpĀ;e዁ᚯñʈilde耻ã䃣ml耻ä䃤Āciᛂᛈoninôɲnt;樑ࠀNabcdefiklnoprsu᛭ᛱᜰ᜼ᝃᝈ᝸᝽០៦ᠹᡐᜍ᤽᥈ᥰot;櫭Ācrᛶ᜞kȀcepsᜀᜅᜍᜓong;扌psilon;䏶rime;怵imĀ;e᜚᜛戽q;拍Ŷᜢᜦee;抽edĀ;gᜬᜭ挅e»ᜭrkĀ;t፜᜷brk;掶Āoyᜁᝁ;䐱quo;怞ʀcmprtᝓ᝛ᝡᝤᝨausĀ;eĊĉptyv;榰séᜌnoõēƀahwᝯ᝱ᝳ;䎲;愶een;扬r;쀀𝔟g΀costuvwឍឝឳេ៕៛៞ƀaiuបពរðݠrc;旯p»፱ƀdptឤឨឭot;樀lus;樁imes;樂ɱឹ\0\0ើcup;樆ar;昅riangleĀdu៍្own;施p;斳plus;樄eåᑄåᒭarow;植ƀako៭ᠦᠵĀcn៲ᠣkƀlst៺֫᠂ozenge;槫riangleȀ;dlr᠒᠓᠘᠝斴own;斾eft;旂ight;斸k;搣Ʊᠫ\0ᠳƲᠯ\0ᠱ;斒;斑4;斓ck;斈ĀeoᠾᡍĀ;qᡃᡆ쀀=⃥uiv;쀀≡⃥t;挐Ȁptwxᡙᡞᡧᡬf;쀀𝕓Ā;tᏋᡣom»Ꮜtie;拈؀DHUVbdhmptuvᢅᢖᢪᢻᣗᣛᣬ᣿ᤅᤊᤐᤡȀLRlrᢎᢐᢒᢔ;敗;敔;敖;敓ʀ;DUduᢡᢢᢤᢦᢨ敐;敦;敩;敤;敧ȀLRlrᢳᢵᢷᢹ;敝;敚;敜;教΀;HLRhlrᣊᣋᣍᣏᣑᣓᣕ救;敬;散;敠;敫;敢;敟ox;槉ȀLRlrᣤᣦᣨᣪ;敕;敒;攐;攌ʀ;DUduڽ᣷᣹᣻᣽;敥;敨;攬;攴inus;抟lus;択imes;抠ȀLRlrᤙᤛᤝ᤟;敛;敘;攘;攔΀;HLRhlrᤰᤱᤳᤵᤷ᤻᤹攂;敪;敡;敞;攼;攤;攜Āevģ᥂bar耻¦䂦Ȁceioᥑᥖᥚᥠr;쀀𝒷mi;恏mĀ;e᜚᜜lƀ;bhᥨᥩᥫ䁜;槅sub;柈Ŭᥴ᥾lĀ;e᥹᥺怢t»᥺pƀ;Eeįᦅᦇ;檮Ā;qۜۛೡᦧ\0᧨ᨑᨕᨲ\0ᨷᩐ\0\0᪴\0\0᫁\0\0ᬡᬮ᭍᭒\0᯽\0ᰌƀcpr᦭ᦲ᧝ute;䄇̀;abcdsᦿᧀᧄ᧊᧕᧙戩nd;橄rcup;橉Āau᧏᧒p;橋p;橇ot;橀;쀀∩︀Āeo᧢᧥t;恁îړȀaeiu᧰᧻ᨁᨅǰ᧵\0᧸s;橍on;䄍dil耻ç䃧rc;䄉psĀ;sᨌᨍ橌m;橐ot;䄋ƀdmnᨛᨠᨦil肻¸ƭptyv;榲t脀¢;eᨭᨮ䂢räƲr;쀀𝔠ƀceiᨽᩀᩍy;䑇ckĀ;mᩇᩈ朓ark»ᩈ;䏇r΀;Ecefms᩟᩠ᩢᩫ᪤᪪᪮旋;槃ƀ;elᩩᩪᩭ䋆q;扗eɡᩴ\0\0᪈rrowĀlr᩼᪁eft;憺ight;憻ʀRSacd᪒᪔᪖᪚᪟»ཇ;擈st;抛irc;抚ash;抝nint;樐id;櫯cir;槂ubsĀ;u᪻᪼晣it»᪼ˬ᫇᫔᫺\0ᬊonĀ;eᫍᫎ䀺Ā;qÇÆɭ᫙\0\0᫢aĀ;t᫞᫟䀬;䁀ƀ;fl᫨᫩᫫戁îᅠeĀmx᫱᫶ent»᫩eóɍǧ᫾\0ᬇĀ;dኻᬂot;橭nôɆƀfryᬐᬔᬗ;쀀𝕔oäɔ脀©;sŕᬝr;愗Āaoᬥᬩrr;憵ss;朗Ācuᬲᬷr;쀀𝒸Ābpᬼ᭄Ā;eᭁᭂ櫏;櫑Ā;eᭉᭊ櫐;櫒dot;拯΀delprvw᭠᭬᭷ᮂᮬᯔ᯹arrĀlr᭨᭪;椸;椵ɰ᭲\0\0᭵r;拞c;拟arrĀ;p᭿ᮀ憶;椽̀;bcdosᮏᮐᮖᮡᮥᮨ截rcap;橈Āauᮛᮞp;橆p;橊ot;抍r;橅;쀀∪︀Ȁalrv᮵ᮿᯞᯣrrĀ;mᮼᮽ憷;椼yƀevwᯇᯔᯘqɰᯎ\0\0ᯒreã᭳uã᭵ee;拎edge;拏en耻¤䂤earrowĀlrᯮ᯳eft»ᮀight»ᮽeäᯝĀciᰁᰇoninôǷnt;戱lcty;挭ঀAHabcdefhijlorstuwz᰸᰻᰿ᱝᱩᱵᲊᲞᲬᲷ᳻᳿ᴍᵻᶑᶫᶻ᷆᷍rò΁ar;楥Ȁglrs᱈ᱍ᱒᱔ger;怠eth;愸òᄳhĀ;vᱚᱛ怐»ऊūᱡᱧarow;椏aã̕Āayᱮᱳron;䄏;䐴ƀ;ao̲ᱼᲄĀgrʿᲁr;懊tseq;橷ƀglmᲑᲔᲘ耻°䂰ta;䎴ptyv;榱ĀirᲣᲨsht;楿;쀀𝔡arĀlrᲳᲵ»ࣜ»သʀaegsv᳂͸᳖᳜᳠mƀ;oș᳊᳔ndĀ;ș᳑uit;晦amma;䏝in;拲ƀ;io᳧᳨᳸䃷de脀÷;o᳧ᳰntimes;拇nø᳷cy;䑒cɯᴆ\0\0ᴊrn;挞op;挍ʀlptuwᴘᴝᴢᵉᵕlar;䀤f;쀀𝕕ʀ;emps̋ᴭᴷᴽᵂqĀ;d͒ᴳot;扑inus;戸lus;戔quare;抡blebarwedgåúnƀadhᄮᵝᵧownarrowóᲃarpoonĀlrᵲᵶefôᲴighôᲶŢᵿᶅkaro÷གɯᶊ\0\0ᶎrn;挟op;挌ƀcotᶘᶣᶦĀryᶝᶡ;쀀𝒹;䑕l;槶rok;䄑Ādrᶰᶴot;拱iĀ;fᶺ᠖斿Āah᷀᷃ròЩaòྦangle;榦Āci᷒ᷕy;䑟grarr;柿ऀDacdefglmnopqrstuxḁḉḙḸոḼṉṡṾấắẽỡἪἷὄ὎὚ĀDoḆᴴoôᲉĀcsḎḔute耻é䃩ter;橮ȀaioyḢḧḱḶron;䄛rĀ;cḭḮ扖耻ê䃪lon;払;䑍ot;䄗ĀDrṁṅot;扒;쀀𝔢ƀ;rsṐṑṗ檚ave耻è䃨Ā;dṜṝ檖ot;檘Ȁ;ilsṪṫṲṴ檙nters;揧;愓Ā;dṹṺ檕ot;檗ƀapsẅẉẗcr;䄓tyƀ;svẒẓẕ戅et»ẓpĀ1;ẝẤĳạả;怄;怅怃ĀgsẪẬ;䅋p;怂ĀgpẴẸon;䄙f;쀀𝕖ƀalsỄỎỒrĀ;sỊị拕l;槣us;橱iƀ;lvỚớở䎵on»ớ;䏵ȀcsuvỪỳἋἣĀioữḱrc»Ḯɩỹ\0\0ỻíՈantĀglἂἆtr»ṝess»Ṻƀaeiἒ἖Ἒls;䀽st;扟vĀ;DȵἠD;橸parsl;槥ĀDaἯἳot;打rr;楱ƀcdiἾὁỸr;愯oô͒ĀahὉὋ;䎷耻ð䃰Āmrὓὗl耻ë䃫o;悬ƀcipὡὤὧl;䀡sôծĀeoὬὴctatioîՙnentialåչৡᾒ\0ᾞ\0ᾡᾧ\0\0ῆῌ\0ΐ\0ῦῪ \0 ⁚llingdotseñṄy;䑄male;晀ƀilrᾭᾳ῁lig;耀ﬃɩᾹ\0\0᾽g;耀ﬀig;耀ﬄ;쀀𝔣lig;耀ﬁlig;쀀fjƀaltῙ῜ῡt;晭ig;耀ﬂns;斱of;䆒ǰ΅\0ῳf;쀀𝕗ĀakֿῷĀ;vῼ´拔;櫙artint;樍Āao‌⁕Ācs‑⁒α‚‰‸⁅⁈\0⁐β•‥‧‪‬\0‮耻½䂽;慓耻¼䂼;慕;慙;慛Ƴ‴\0‶;慔;慖ʴ‾⁁\0\0⁃耻¾䂾;慗;慜5;慘ƶ⁌\0⁎;慚;慝8;慞l;恄wn;挢cr;쀀𝒻ࢀEabcdefgijlnorstv₂₉₟₥₰₴⃰⃵⃺⃿℃ℒℸ̗ℾ⅒↞Ā;lٍ₇;檌ƀcmpₐₕ₝ute;䇵maĀ;dₜ᳚䎳;檆reve;䄟Āiy₪₮rc;䄝;䐳ot;䄡Ȁ;lqsؾق₽⃉ƀ;qsؾٌ⃄lanô٥Ȁ;cdl٥⃒⃥⃕c;檩otĀ;o⃜⃝檀Ā;l⃢⃣檂;檄Ā;e⃪⃭쀀⋛︀s;檔r;쀀𝔤Ā;gٳ؛mel;愷cy;䑓Ȁ;Eajٚℌℎℐ;檒;檥;檤ȀEaesℛℝ℩ℴ;扩pĀ;p℣ℤ檊rox»ℤĀ;q℮ℯ檈Ā;q℮ℛim;拧pf;쀀𝕘Āci⅃ⅆr;愊mƀ;el٫ⅎ⅐;檎;檐茀>;cdlqr׮ⅠⅪⅮⅳⅹĀciⅥⅧ;檧r;橺ot;拗Par;榕uest;橼ʀadelsↄⅪ←ٖ↛ǰ↉\0↎proø₞r;楸qĀlqؿ↖lesó₈ií٫Āen↣↭rtneqq;쀀≩︀Å↪ԀAabcefkosy⇄⇇⇱⇵⇺∘∝∯≨≽ròΠȀilmr⇐⇔⇗⇛rsðᒄf»․ilôکĀdr⇠⇤cy;䑊ƀ;cwࣴ⇫⇯ir;楈;憭ar;意irc;䄥ƀalr∁∎∓rtsĀ;u∉∊晥it»∊lip;怦con;抹r;쀀𝔥sĀew∣∩arow;椥arow;椦ʀamopr∺∾≃≞≣rr;懿tht;戻kĀlr≉≓eftarrow;憩ightarrow;憪f;쀀𝕙bar;怕ƀclt≯≴≸r;쀀𝒽asè⇴rok;䄧Ābp⊂⊇ull;恃hen»ᱛૡ⊣\0⊪\0⊸⋅⋎\0⋕⋳\0\0⋸⌢⍧⍢⍿\0⎆⎪⎴cute耻í䃭ƀ;iyݱ⊰⊵rc耻î䃮;䐸Ācx⊼⊿y;䐵cl耻¡䂡ĀfrΟ⋉;쀀𝔦rave耻ì䃬Ȁ;inoܾ⋝⋩⋮Āin⋢⋦nt;樌t;戭fin;槜ta;愩lig;䄳ƀaop⋾⌚⌝ƀcgt⌅⌈⌗r;䄫ƀelpܟ⌏⌓inåގarôܠh;䄱f;抷ed;䆵ʀ;cfotӴ⌬⌱⌽⍁are;愅inĀ;t⌸⌹戞ie;槝doô⌙ʀ;celpݗ⍌⍐⍛⍡al;抺Āgr⍕⍙eróᕣã⍍arhk;樗rod;樼Ȁcgpt⍯⍲⍶⍻y;䑑on;䄯f;쀀𝕚a;䎹uest耻¿䂿Āci⎊⎏r;쀀𝒾nʀ;EdsvӴ⎛⎝⎡ӳ;拹ot;拵Ā;v⎦⎧拴;拳Ā;iݷ⎮lde;䄩ǫ⎸\0⎼cy;䑖l耻ï䃯̀cfmosu⏌⏗⏜⏡⏧⏵Āiy⏑⏕rc;䄵;䐹r;쀀𝔧ath;䈷pf;쀀𝕛ǣ⏬\0⏱r;쀀𝒿rcy;䑘kcy;䑔Ѐacfghjos␋␖␢␧␭␱␵␻ppaĀ;v␓␔䎺;䏰Āey␛␠dil;䄷;䐺r;쀀𝔨reen;䄸cy;䑅cy;䑜pf;쀀𝕜cr;쀀𝓀஀ABEHabcdefghjlmnoprstuv⑰⒁⒆⒍⒑┎┽╚▀♎♞♥♹♽⚚⚲⛘❝❨➋⟀⠁⠒ƀart⑷⑺⑼rò৆òΕail;椛arr;椎Ā;gঔ⒋;檋ar;楢ॣ⒥\0⒪\0⒱\0\0\0\0\0⒵Ⓔ\0ⓆⓈⓍ\0⓹ute;䄺mptyv;榴raîࡌbda;䎻gƀ;dlࢎⓁⓃ;榑åࢎ;檅uo耻«䂫rЀ;bfhlpst࢙ⓞⓦⓩ⓫⓮⓱⓵Ā;f࢝ⓣs;椟s;椝ë≒p;憫l;椹im;楳l;憢ƀ;ae⓿─┄檫il;椙Ā;s┉┊檭;쀀⪭︀ƀabr┕┙┝rr;椌rk;杲Āak┢┬cĀek┨┪;䁻;䁛Āes┱┳;榋lĀdu┹┻;榏;榍Ȁaeuy╆╋╖╘ron;䄾Ādi═╔il;䄼ìࢰâ┩;䐻Ȁcqrs╣╦╭╽a;椶uoĀ;rนᝆĀdu╲╷har;楧shar;楋h;憲ʀ;fgqs▋▌উ◳◿扤tʀahlrt▘▤▷◂◨rrowĀ;t࢙□aé⓶arpoonĀdu▯▴own»њp»०eftarrows;懇ightƀahs◍◖◞rrowĀ;sࣴࢧarpoonó྘quigarro÷⇰hreetimes;拋ƀ;qs▋ও◺lanôবʀ;cdgsব☊☍☝☨c;檨otĀ;o☔☕橿Ā;r☚☛檁;檃Ā;e☢☥쀀⋚︀s;檓ʀadegs☳☹☽♉♋pproøⓆot;拖qĀgq♃♅ôউgtò⒌ôছiíলƀilr♕࣡♚sht;楼;쀀𝔩Ā;Eজ♣;檑š♩♶rĀdu▲♮Ā;l॥♳;楪lk;斄cy;䑙ʀ;achtੈ⚈⚋⚑⚖rò◁orneòᴈard;楫ri;旺Āio⚟⚤dot;䅀ustĀ;a⚬⚭掰che»⚭ȀEaes⚻⚽⛉⛔;扨pĀ;p⛃⛄檉rox»⛄Ā;q⛎⛏檇Ā;q⛎⚻im;拦Ѐabnoptwz⛩⛴⛷✚✯❁❇❐Ānr⛮⛱g;柬r;懽rëࣁgƀlmr⛿✍✔eftĀar০✇ightá৲apsto;柼ightá৽parrowĀlr✥✩efô⓭ight;憬ƀafl✶✹✽r;榅;쀀𝕝us;樭imes;樴š❋❏st;戗áፎƀ;ef❗❘᠀旊nge»❘arĀ;l❤❥䀨t;榓ʀachmt❳❶❼➅➇ròࢨorneòᶌarĀ;d྘➃;業;怎ri;抿̀achiqt➘➝ੀ➢➮➻quo;怹r;쀀𝓁mƀ;egল➪➬;檍;檏Ābu┪➳oĀ;rฟ➹;怚rok;䅂萀<;cdhilqrࠫ⟒☹⟜⟠⟥⟪⟰Āci⟗⟙;檦r;橹reå◲mes;拉arr;楶uest;橻ĀPi⟵⟹ar;榖ƀ;ef⠀भ᠛旃rĀdu⠇⠍shar;楊har;楦Āen⠗⠡rtneqq;쀀≨︀Å⠞܀Dacdefhilnopsu⡀⡅⢂⢎⢓⢠⢥⢨⣚⣢⣤ઃ⣳⤂Dot;戺Ȁclpr⡎⡒⡣⡽r耻¯䂯Āet⡗⡙;時Ā;e⡞⡟朠se»⡟Ā;sျ⡨toȀ;dluျ⡳⡷⡻owîҌefôएðᏑker;斮Āoy⢇⢌mma;権;䐼ash;怔asuredangle»ᘦr;쀀𝔪o;愧ƀcdn⢯⢴⣉ro耻µ䂵Ȁ;acdᑤ⢽⣀⣄sôᚧir;櫰ot肻·Ƶusƀ;bd⣒ᤃ⣓戒Ā;uᴼ⣘;横ţ⣞⣡p;櫛ò−ðઁĀdp⣩⣮els;抧f;쀀𝕞Āct⣸⣽r;쀀𝓂pos»ᖝƀ;lm⤉⤊⤍䎼timap;抸ఀGLRVabcdefghijlmoprstuvw⥂⥓⥾⦉⦘⧚⧩⨕⨚⩘⩝⪃⪕⪤⪨⬄⬇⭄⭿⮮ⰴⱧⱼ⳩Āgt⥇⥋;쀀⋙̸Ā;v⥐௏쀀≫⃒ƀelt⥚⥲⥶ftĀar⥡⥧rrow;懍ightarrow;懎;쀀⋘̸Ā;v⥻ే쀀≪⃒ightarrow;懏ĀDd⦎⦓ash;抯ash;抮ʀbcnpt⦣⦧⦬⦱⧌la»˞ute;䅄g;쀀∠⃒ʀ;Eiop඄⦼⧀⧅⧈;쀀⩰̸d;쀀≋̸s;䅉roø඄urĀ;a⧓⧔普lĀ;s⧓ସǳ⧟\0⧣p肻 ଷmpĀ;e௹ఀʀaeouy⧴⧾⨃⨐⨓ǰ⧹\0⧻;橃on;䅈dil;䅆ngĀ;dൾ⨊ot;쀀⩭̸p;橂;䐽ash;怓΀;Aadqsxஒ⨩⨭⨻⩁⩅⩐rr;懗rĀhr⨳⨶k;椤Ā;oᏲᏰot;쀀≐̸uiöୣĀei⩊⩎ar;椨í஘istĀ;s஠டr;쀀𝔫ȀEest௅⩦⩹⩼ƀ;qs஼⩭௡ƀ;qs஼௅⩴lanô௢ií௪Ā;rஶ⪁»ஷƀAap⪊⪍⪑rò⥱rr;憮ar;櫲ƀ;svྍ⪜ྌĀ;d⪡⪢拼;拺cy;䑚΀AEadest⪷⪺⪾⫂⫅⫶⫹rò⥦;쀀≦̸rr;憚r;急Ȁ;fqs఻⫎⫣⫯tĀar⫔⫙rro÷⫁ightarro÷⪐ƀ;qs఻⪺⫪lanôౕĀ;sౕ⫴»శiíౝĀ;rవ⫾iĀ;eచథiäඐĀpt⬌⬑f;쀀𝕟膀¬;in⬙⬚⬶䂬nȀ;Edvஉ⬤⬨⬮;쀀⋹̸ot;쀀⋵̸ǡஉ⬳⬵;拷;拶iĀ;vಸ⬼ǡಸ⭁⭃;拾;拽ƀaor⭋⭣⭩rȀ;ast୻⭕⭚⭟lleì୻l;쀀⫽⃥;쀀∂̸lint;樔ƀ;ceಒ⭰⭳uåಥĀ;cಘ⭸Ā;eಒ⭽ñಘȀAait⮈⮋⮝⮧rò⦈rrƀ;cw⮔⮕⮙憛;쀀⤳̸;쀀↝̸ghtarrow»⮕riĀ;eೋೖ΀chimpqu⮽⯍⯙⬄୸⯤⯯Ȁ;cerല⯆ഷ⯉uå൅;쀀𝓃ortɭ⬅\0\0⯖ará⭖mĀ;e൮⯟Ā;q൴൳suĀbp⯫⯭å೸åഋƀbcp⯶ⰑⰙȀ;Ees⯿ⰀഢⰄ抄;쀀⫅̸etĀ;eഛⰋqĀ;qണⰀcĀ;eലⰗñസȀ;EesⰢⰣൟⰧ抅;쀀⫆̸etĀ;e൘ⰮqĀ;qൠⰣȀgilrⰽⰿⱅⱇìௗlde耻ñ䃱çృiangleĀlrⱒⱜeftĀ;eచⱚñదightĀ;eೋⱥñ೗Ā;mⱬⱭ䎽ƀ;esⱴⱵⱹ䀣ro;愖p;怇ҀDHadgilrsⲏⲔⲙⲞⲣⲰⲶⳓⳣash;抭arr;椄p;쀀≍⃒ash;抬ĀetⲨⲬ;쀀≥⃒;쀀>⃒nfin;槞ƀAetⲽⳁⳅrr;椂;쀀≤⃒Ā;rⳊⳍ쀀<⃒ie;쀀⊴⃒ĀAtⳘⳜrr;椃rie;쀀⊵⃒im;쀀∼⃒ƀAan⳰⳴ⴂrr;懖rĀhr⳺⳽k;椣Ā;oᏧᏥear;椧ቓ᪕\0\0\0\0\0\0\0\0\0\0\0\0\0ⴭ\0ⴸⵈⵠⵥ⵲ⶄᬇ\0\0ⶍⶫ\0ⷈⷎ\0ⷜ⸙⸫⸾⹃Ācsⴱ᪗ute耻ó䃳ĀiyⴼⵅrĀ;c᪞ⵂ耻ô䃴;䐾ʀabios᪠ⵒⵗǈⵚlac;䅑v;樸old;榼lig;䅓Ācr⵩⵭ir;榿;쀀𝔬ͯ⵹\0\0⵼\0ⶂn;䋛ave耻ò䃲;槁Ābmⶈ෴ar;榵Ȁacitⶕ⶘ⶥⶨrò᪀Āir⶝ⶠr;榾oss;榻nå๒;槀ƀaeiⶱⶵⶹcr;䅍ga;䏉ƀcdnⷀⷅǍron;䎿;榶pf;쀀𝕠ƀaelⷔ⷗ǒr;榷rp;榹΀;adiosvⷪⷫⷮ⸈⸍⸐⸖戨rò᪆Ȁ;efmⷷⷸ⸂⸅橝rĀ;oⷾⷿ愴f»ⷿ耻ª䂪耻º䂺gof;抶r;橖lope;橗;橛ƀclo⸟⸡⸧ò⸁ash耻ø䃸l;折iŬⸯ⸴de耻õ䃵esĀ;aǛ⸺s;樶ml耻ö䃶bar;挽ૡ⹞\0⹽\0⺀⺝\0⺢⺹\0\0⻋ຜ\0⼓\0\0⼫⾼\0⿈rȀ;astЃ⹧⹲຅脀¶;l⹭⹮䂶leìЃɩ⹸\0\0⹻m;櫳;櫽y;䐿rʀcimpt⺋⺏⺓ᡥ⺗nt;䀥od;䀮il;怰enk;怱r;쀀𝔭ƀimo⺨⺰⺴Ā;v⺭⺮䏆;䏕maô੶ne;明ƀ;tv⺿⻀⻈䏀chfork»´;䏖Āau⻏⻟nĀck⻕⻝kĀ;h⇴⻛;愎ö⇴sҀ;abcdemst⻳⻴ᤈ⻹⻽⼄⼆⼊⼎䀫cir;樣ir;樢Āouᵀ⼂;樥;橲n肻±ຝim;樦wo;樧ƀipu⼙⼠⼥ntint;樕f;쀀𝕡nd耻£䂣Ԁ;Eaceinosu່⼿⽁⽄⽇⾁⾉⾒⽾⾶;檳p;檷uå໙Ā;c໎⽌̀;acens່⽙⽟⽦⽨⽾pproø⽃urlyeñ໙ñ໎ƀaes⽯⽶⽺pprox;檹qq;檵im;拨iíໟmeĀ;s⾈ຮ怲ƀEas⽸⾐⽺ð⽵ƀdfp໬⾙⾯ƀals⾠⾥⾪lar;挮ine;挒urf;挓Ā;t໻⾴ï໻rel;抰Āci⿀⿅r;쀀𝓅;䏈ncsp;怈̀fiopsu⿚⋢⿟⿥⿫⿱r;쀀𝔮pf;쀀𝕢rime;恗cr;쀀𝓆ƀaeo⿸〉〓tĀei⿾々rnionóڰnt;樖stĀ;e【】䀿ñἙô༔઀ABHabcdefhilmnoprstux぀けさすムㄎㄫㅇㅢㅲㆎ㈆㈕㈤㈩㉘㉮㉲㊐㊰㊷ƀartぇおがròႳòϝail;検aròᱥar;楤΀cdenqrtとふへみわゔヌĀeuねぱ;쀀∽̱te;䅕iãᅮmptyv;榳gȀ;del࿑らるろ;榒;榥å࿑uo耻»䂻rր;abcfhlpstw࿜ガクシスゼゾダッデナp;極Ā;f࿠ゴs;椠;椳s;椞ë≝ð✮l;楅im;楴l;憣;憝Āaiパフil;椚oĀ;nホボ戶aló༞ƀabrョリヮrò៥rk;杳ĀakンヽcĀekヹ・;䁽;䁝Āes㄂㄄;榌lĀduㄊㄌ;榎;榐Ȁaeuyㄗㄜㄧㄩron;䅙Ādiㄡㄥil;䅗ì࿲âヺ;䑀Ȁclqsㄴㄷㄽㅄa;椷dhar;楩uoĀ;rȎȍh;憳ƀacgㅎㅟངlȀ;ipsླྀㅘㅛႜnåႻarôྩt;断ƀilrㅩဣㅮsht;楽;쀀𝔯ĀaoㅷㆆrĀduㅽㅿ»ѻĀ;l႑ㆄ;楬Ā;vㆋㆌ䏁;䏱ƀgns㆕ㇹㇼht̀ahlrstㆤㆰ㇂㇘㇤㇮rrowĀ;t࿜ㆭaéトarpoonĀduㆻㆿowîㅾp»႒eftĀah㇊㇐rrowó࿪arpoonóՑightarrows;應quigarro÷ニhreetimes;拌g;䋚ingdotseñἲƀahm㈍㈐㈓rò࿪aòՑ;怏oustĀ;a㈞㈟掱che»㈟mid;櫮Ȁabpt㈲㈽㉀㉒Ānr㈷㈺g;柭r;懾rëဃƀafl㉇㉊㉎r;榆;쀀𝕣us;樮imes;樵Āap㉝㉧rĀ;g㉣㉤䀩t;榔olint;樒arò㇣Ȁachq㉻㊀Ⴜ㊅quo;怺r;쀀𝓇Ābu・㊊oĀ;rȔȓƀhir㊗㊛㊠reåㇸmes;拊iȀ;efl㊪ၙᠡ㊫方tri;槎luhar;楨;愞ൡ㋕㋛㋟㌬㌸㍱\0㍺㎤\0\0㏬㏰\0㐨㑈㑚㒭㒱㓊㓱\0㘖\0\0㘳cute;䅛quï➺Ԁ;Eaceinpsyᇭ㋳㋵㋿㌂㌋㌏㌟㌦㌩;檴ǰ㋺\0㋼;檸on;䅡uåᇾĀ;dᇳ㌇il;䅟rc;䅝ƀEas㌖㌘㌛;檶p;檺im;择olint;樓iíሄ;䑁otƀ;be㌴ᵇ㌵担;橦΀Aacmstx㍆㍊㍗㍛㍞㍣㍭rr;懘rĀhr㍐㍒ë∨Ā;oਸ਼਴t耻§䂧i;䀻war;椩mĀin㍩ðnuóñt;朶rĀ;o㍶⁕쀀𝔰Ȁacoy㎂㎆㎑㎠rp;景Āhy㎋㎏cy;䑉;䑈rtɭ㎙\0\0㎜iäᑤaraì⹯耻­䂭Āgm㎨㎴maƀ;fv㎱㎲㎲䏃;䏂Ѐ;deglnprካ㏅㏉㏎㏖㏞㏡㏦ot;橪Ā;q኱ኰĀ;E㏓㏔檞;檠Ā;E㏛㏜檝;檟e;扆lus;樤arr;楲aròᄽȀaeit㏸㐈㐏㐗Āls㏽㐄lsetmé㍪hp;樳parsl;槤Ādlᑣ㐔e;挣Ā;e㐜㐝檪Ā;s㐢㐣檬;쀀⪬︀ƀflp㐮㐳㑂tcy;䑌Ā;b㐸㐹䀯Ā;a㐾㐿槄r;挿f;쀀𝕤aĀdr㑍ЂesĀ;u㑔㑕晠it»㑕ƀcsu㑠㑹㒟Āau㑥㑯pĀ;sᆈ㑫;쀀⊓︀pĀ;sᆴ㑵;쀀⊔︀uĀbp㑿㒏ƀ;esᆗᆜ㒆etĀ;eᆗ㒍ñᆝƀ;esᆨᆭ㒖etĀ;eᆨ㒝ñᆮƀ;afᅻ㒦ְrť㒫ֱ»ᅼaròᅈȀcemt㒹㒾㓂㓅r;쀀𝓈tmîñiì㐕aræᆾĀar㓎㓕rĀ;f㓔ឿ昆Āan㓚㓭ightĀep㓣㓪psiloîỠhé⺯s»⡒ʀbcmnp㓻㕞ሉ㖋㖎Ҁ;Edemnprs㔎㔏㔑㔕㔞㔣㔬㔱㔶抂;櫅ot;檽Ā;dᇚ㔚ot;櫃ult;櫁ĀEe㔨㔪;櫋;把lus;檿arr;楹ƀeiu㔽㕒㕕tƀ;en㔎㕅㕋qĀ;qᇚ㔏eqĀ;q㔫㔨m;櫇Ābp㕚㕜;櫕;櫓c̀;acensᇭ㕬㕲㕹㕻㌦pproø㋺urlyeñᇾñᇳƀaes㖂㖈㌛pproø㌚qñ㌗g;晪ڀ123;Edehlmnps㖩㖬㖯ሜ㖲㖴㗀㗉㗕㗚㗟㗨㗭耻¹䂹耻²䂲耻³䂳;櫆Āos㖹㖼t;檾ub;櫘Ā;dሢ㗅ot;櫄sĀou㗏㗒l;柉b;櫗arr;楻ult;櫂ĀEe㗤㗦;櫌;抋lus;櫀ƀeiu㗴㘉㘌tƀ;enሜ㗼㘂qĀ;qሢ㖲eqĀ;q㗧㗤m;櫈Ābp㘑㘓;櫔;櫖ƀAan㘜㘠㘭rr;懙rĀhr㘦㘨ë∮Ā;oਫ਩war;椪lig耻ß䃟௡㙑㙝㙠ዎ㙳㙹\0㙾㛂\0\0\0\0\0㛛㜃\0㜉㝬\0\0\0㞇ɲ㙖\0\0㙛get;挖;䏄rë๟ƀaey㙦㙫㙰ron;䅥dil;䅣;䑂lrec;挕r;쀀𝔱Ȁeiko㚆㚝㚵㚼ǲ㚋\0㚑eĀ4fኄኁaƀ;sv㚘㚙㚛䎸ym;䏑Ācn㚢㚲kĀas㚨㚮pproø዁im»ኬsðኞĀas㚺㚮ð዁rn耻þ䃾Ǭ̟㛆⋧es膀×;bd㛏㛐㛘䃗Ā;aᤏ㛕r;樱;樰ƀeps㛡㛣㜀á⩍Ȁ;bcf҆㛬㛰㛴ot;挶ir;櫱Ā;o㛹㛼쀀𝕥rk;櫚á㍢rime;怴ƀaip㜏㜒㝤dåቈ΀adempst㜡㝍㝀㝑㝗㝜㝟ngleʀ;dlqr㜰㜱㜶㝀㝂斵own»ᶻeftĀ;e⠀㜾ñम;扜ightĀ;e㊪㝋ñၚot;旬inus;樺lus;樹b;槍ime;樻ezium;揢ƀcht㝲㝽㞁Āry㝷㝻;쀀𝓉;䑆cy;䑛rok;䅧Āio㞋㞎xô᝷headĀlr㞗㞠eftarro÷ࡏightarrow»ཝऀAHabcdfghlmoprstuw㟐㟓㟗㟤㟰㟼㠎㠜㠣㠴㡑㡝㡫㢩㣌㣒㣪㣶ròϭar;楣Ācr㟜㟢ute耻ú䃺òᅐrǣ㟪\0㟭y;䑞ve;䅭Āiy㟵㟺rc耻û䃻;䑃ƀabh㠃㠆㠋ròᎭlac;䅱aòᏃĀir㠓㠘sht;楾;쀀𝔲rave耻ù䃹š㠧㠱rĀlr㠬㠮»ॗ»ႃlk;斀Āct㠹㡍ɯ㠿\0\0㡊rnĀ;e㡅㡆挜r»㡆op;挏ri;旸Āal㡖㡚cr;䅫肻¨͉Āgp㡢㡦on;䅳f;쀀𝕦̀adhlsuᅋ㡸㡽፲㢑㢠ownáᎳarpoonĀlr㢈㢌efô㠭ighô㠯iƀ;hl㢙㢚㢜䏅»ᏺon»㢚parrows;懈ƀcit㢰㣄㣈ɯ㢶\0\0㣁rnĀ;e㢼㢽挝r»㢽op;挎ng;䅯ri;旹cr;쀀𝓊ƀdir㣙㣝㣢ot;拰lde;䅩iĀ;f㜰㣨»᠓Āam㣯㣲rò㢨l耻ü䃼angle;榧ހABDacdeflnoprsz㤜㤟㤩㤭㦵㦸㦽㧟㧤㧨㧳㧹㧽㨁㨠ròϷarĀ;v㤦㤧櫨;櫩asèϡĀnr㤲㤷grt;榜΀eknprst㓣㥆㥋㥒㥝㥤㦖appá␕othinçẖƀhir㓫⻈㥙opô⾵Ā;hᎷ㥢ïㆍĀiu㥩㥭gmá㎳Ābp㥲㦄setneqĀ;q㥽㦀쀀⊊︀;쀀⫋︀setneqĀ;q㦏㦒쀀⊋︀;쀀⫌︀Āhr㦛㦟etá㚜iangleĀlr㦪㦯eft»थight»ၑy;䐲ash»ံƀelr㧄㧒㧗ƀ;beⷪ㧋㧏ar;抻q;扚lip;拮Ābt㧜ᑨaòᑩr;쀀𝔳tré㦮suĀbp㧯㧱»ജ»൙pf;쀀𝕧roð໻tré㦴Ācu㨆㨋r;쀀𝓋Ābp㨐㨘nĀEe㦀㨖»㥾nĀEe㦒㨞»㦐igzag;榚΀cefoprs㨶㨻㩖㩛㩔㩡㩪irc;䅵Ādi㩀㩑Ābg㩅㩉ar;機eĀ;qᗺ㩏;扙erp;愘r;쀀𝔴pf;쀀𝕨Ā;eᑹ㩦atèᑹcr;쀀𝓌ૣណ㪇\0㪋\0㪐㪛\0\0㪝㪨㪫㪯\0\0㫃㫎\0㫘ៜ៟tré៑r;쀀𝔵ĀAa㪔㪗ròσrò৶;䎾ĀAa㪡㪤ròθrò৫að✓is;拻ƀdptឤ㪵㪾Āfl㪺ឩ;쀀𝕩imåឲĀAa㫇㫊ròώròਁĀcq㫒ីr;쀀𝓍Āpt៖㫜ré។Ѐacefiosu㫰㫽㬈㬌㬑㬕㬛㬡cĀuy㫶㫻te耻ý䃽;䑏Āiy㬂㬆rc;䅷;䑋n耻¥䂥r;쀀𝔶cy;䑗pf;쀀𝕪cr;쀀𝓎Ācm㬦㬩y;䑎l耻ÿ䃿Ԁacdefhiosw㭂㭈㭔㭘㭤㭩㭭㭴㭺㮀cute;䅺Āay㭍㭒ron;䅾;䐷ot;䅼Āet㭝㭡træᕟa;䎶r;쀀𝔷cy;䐶grarr;懝pf;쀀𝕫cr;쀀𝓏Ājn㮅㮇;怍j;怌'.split("").map((e) => e.charCodeAt(0))
), vz = /* @__PURE__ */ new Map([
  [0, 65533],
  // C1 Unicode control character reference replacements
  [128, 8364],
  [130, 8218],
  [131, 402],
  [132, 8222],
  [133, 8230],
  [134, 8224],
  [135, 8225],
  [136, 710],
  [137, 8240],
  [138, 352],
  [139, 8249],
  [140, 338],
  [142, 381],
  [145, 8216],
  [146, 8217],
  [147, 8220],
  [148, 8221],
  [149, 8226],
  [150, 8211],
  [151, 8212],
  [152, 732],
  [153, 8482],
  [154, 353],
  [155, 8250],
  [156, 339],
  [158, 382],
  [159, 376]
]);
function Az(e) {
  var t;
  return e >= 55296 && e <= 57343 || e > 1114111 ? 65533 : (t = vz.get(e)) !== null && t !== void 0 ? t : e;
}
var Qt;
(function(e) {
  e[e.NUM = 35] = "NUM", e[e.SEMI = 59] = "SEMI", e[e.EQUALS = 61] = "EQUALS", e[e.ZERO = 48] = "ZERO", e[e.NINE = 57] = "NINE", e[e.LOWER_A = 97] = "LOWER_A", e[e.LOWER_F = 102] = "LOWER_F", e[e.LOWER_X = 120] = "LOWER_X", e[e.LOWER_Z = 122] = "LOWER_Z", e[e.UPPER_A = 65] = "UPPER_A", e[e.UPPER_F = 70] = "UPPER_F", e[e.UPPER_Z = 90] = "UPPER_Z";
})(Qt || (Qt = {}));
const kz = 32;
var Na;
(function(e) {
  e[e.VALUE_LENGTH = 49152] = "VALUE_LENGTH", e[e.BRANCH_LENGTH = 16256] = "BRANCH_LENGTH", e[e.JUMP_TABLE = 127] = "JUMP_TABLE";
})(Na || (Na = {}));
function uE(e) {
  return e >= Qt.ZERO && e <= Qt.NINE;
}
function Cz(e) {
  return e >= Qt.UPPER_A && e <= Qt.UPPER_F || e >= Qt.LOWER_A && e <= Qt.LOWER_F;
}
function wz(e) {
  return e >= Qt.UPPER_A && e <= Qt.UPPER_Z || e >= Qt.LOWER_A && e <= Qt.LOWER_Z || uE(e);
}
function Iz(e) {
  return e === Qt.EQUALS || wz(e);
}
var Kt;
(function(e) {
  e[e.EntityStart = 0] = "EntityStart", e[e.NumericStart = 1] = "NumericStart", e[e.NumericDecimal = 2] = "NumericDecimal", e[e.NumericHex = 3] = "NumericHex", e[e.NamedEntity = 4] = "NamedEntity";
})(Kt || (Kt = {}));
var Yr;
(function(e) {
  e[e.Legacy = 0] = "Legacy", e[e.Strict = 1] = "Strict", e[e.Attribute = 2] = "Attribute";
})(Yr || (Yr = {}));
class Rz {
  constructor(t, n, r) {
    this.decodeTree = t, this.emitCodePoint = n, this.errors = r, this.state = Kt.EntityStart, this.consumed = 1, this.result = 0, this.treeIndex = 0, this.excess = 1, this.decodeMode = Yr.Strict;
  }
  /** Resets the instance to make it reusable. */
  startEntity(t) {
    this.decodeMode = t, this.state = Kt.EntityStart, this.result = 0, this.treeIndex = 0, this.excess = 1, this.consumed = 1;
  }
  /**
   * Write an entity to the decoder. This can be called multiple times with partial entities.
   * If the entity is incomplete, the decoder will return -1.
   *
   * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the
   * entity is incomplete, and resume when the next string is written.
   *
   * @param input The string containing the entity (or a continuation of the entity).
   * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  write(t, n) {
    switch (this.state) {
      case Kt.EntityStart:
        return t.charCodeAt(n) === Qt.NUM ? (this.state = Kt.NumericStart, this.consumed += 1, this.stateNumericStart(t, n + 1)) : (this.state = Kt.NamedEntity, this.stateNamedEntity(t, n));
      case Kt.NumericStart:
        return this.stateNumericStart(t, n);
      case Kt.NumericDecimal:
        return this.stateNumericDecimal(t, n);
      case Kt.NumericHex:
        return this.stateNumericHex(t, n);
      case Kt.NamedEntity:
        return this.stateNamedEntity(t, n);
    }
  }
  /**
   * Switches between the numeric decimal and hexadecimal states.
   *
   * Equivalent to the `Numeric character reference state` in the HTML spec.
   *
   * @param input The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNumericStart(t, n) {
    return n >= t.length ? -1 : (t.charCodeAt(n) | kz) === Qt.LOWER_X ? (this.state = Kt.NumericHex, this.consumed += 1, this.stateNumericHex(t, n + 1)) : (this.state = Kt.NumericDecimal, this.stateNumericDecimal(t, n));
  }
  addToNumericResult(t, n, r, o) {
    if (n !== r) {
      const s = r - n;
      this.result = this.result * Math.pow(o, s) + Number.parseInt(t.substr(n, s), o), this.consumed += s;
    }
  }
  /**
   * Parses a hexadecimal numeric entity.
   *
   * Equivalent to the `Hexademical character reference state` in the HTML spec.
   *
   * @param input The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNumericHex(t, n) {
    const r = n;
    for (; n < t.length; ) {
      const o = t.charCodeAt(n);
      if (uE(o) || Cz(o))
        n += 1;
      else
        return this.addToNumericResult(t, r, n, 16), this.emitNumericEntity(o, 3);
    }
    return this.addToNumericResult(t, r, n, 16), -1;
  }
  /**
   * Parses a decimal numeric entity.
   *
   * Equivalent to the `Decimal character reference state` in the HTML spec.
   *
   * @param input The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNumericDecimal(t, n) {
    const r = n;
    for (; n < t.length; ) {
      const o = t.charCodeAt(n);
      if (uE(o))
        n += 1;
      else
        return this.addToNumericResult(t, r, n, 10), this.emitNumericEntity(o, 2);
    }
    return this.addToNumericResult(t, r, n, 10), -1;
  }
  /**
   * Validate and emit a numeric entity.
   *
   * Implements the logic from the `Hexademical character reference start
   * state` and `Numeric character reference end state` in the HTML spec.
   *
   * @param lastCp The last code point of the entity. Used to see if the
   *               entity was terminated with a semicolon.
   * @param expectedLength The minimum number of characters that should be
   *                       consumed. Used to validate that at least one digit
   *                       was consumed.
   * @returns The number of characters that were consumed.
   */
  emitNumericEntity(t, n) {
    var r;
    if (this.consumed <= n)
      return (r = this.errors) === null || r === void 0 || r.absenceOfDigitsInNumericCharacterReference(this.consumed), 0;
    if (t === Qt.SEMI)
      this.consumed += 1;
    else if (this.decodeMode === Yr.Strict)
      return 0;
    return this.emitCodePoint(Az(this.result), this.consumed), this.errors && (t !== Qt.SEMI && this.errors.missingSemicolonAfterCharacterReference(), this.errors.validateNumericCharacterReference(this.result)), this.consumed;
  }
  /**
   * Parses a named entity.
   *
   * Equivalent to the `Named character reference state` in the HTML spec.
   *
   * @param input The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNamedEntity(t, n) {
    const { decodeTree: r } = this;
    let o = r[this.treeIndex], s = (o & Na.VALUE_LENGTH) >> 14;
    for (; n < t.length; n++, this.excess++) {
      const u = t.charCodeAt(n);
      if (this.treeIndex = xz(r, o, this.treeIndex + Math.max(1, s), u), this.treeIndex < 0)
        return this.result === 0 || // If we are parsing an attribute
        this.decodeMode === Yr.Attribute && // We shouldn't have consumed any characters after the entity,
        (s === 0 || // And there should be no invalid characters.
        Iz(u)) ? 0 : this.emitNotTerminatedNamedEntity();
      if (o = r[this.treeIndex], s = (o & Na.VALUE_LENGTH) >> 14, s !== 0) {
        if (u === Qt.SEMI)
          return this.emitNamedEntityData(this.treeIndex, s, this.consumed + this.excess);
        this.decodeMode !== Yr.Strict && (this.result = this.treeIndex, this.consumed += this.excess, this.excess = 0);
      }
    }
    return -1;
  }
  /**
   * Emit a named entity that was not terminated with a semicolon.
   *
   * @returns The number of characters consumed.
   */
  emitNotTerminatedNamedEntity() {
    var t;
    const { result: n, decodeTree: r } = this, o = (r[n] & Na.VALUE_LENGTH) >> 14;
    return this.emitNamedEntityData(n, o, this.consumed), (t = this.errors) === null || t === void 0 || t.missingSemicolonAfterCharacterReference(), this.consumed;
  }
  /**
   * Emit a named entity.
   *
   * @param result The index of the entity in the decode tree.
   * @param valueLength The number of bytes in the entity.
   * @param consumed The number of characters consumed.
   *
   * @returns The number of characters consumed.
   */
  emitNamedEntityData(t, n, r) {
    const { decodeTree: o } = this;
    return this.emitCodePoint(n === 1 ? o[t] & ~Na.VALUE_LENGTH : o[t + 1], r), n === 3 && this.emitCodePoint(o[t + 2], r), r;
  }
  /**
   * Signal to the parser that the end of the input was reached.
   *
   * Remaining data will be emitted and relevant errors will be produced.
   *
   * @returns The number of characters consumed.
   */
  end() {
    var t;
    switch (this.state) {
      case Kt.NamedEntity:
        return this.result !== 0 && (this.decodeMode !== Yr.Attribute || this.result === this.treeIndex) ? this.emitNotTerminatedNamedEntity() : 0;
      // Otherwise, emit a numeric entity if we have one.
      case Kt.NumericDecimal:
        return this.emitNumericEntity(0, 2);
      case Kt.NumericHex:
        return this.emitNumericEntity(0, 3);
      case Kt.NumericStart:
        return (t = this.errors) === null || t === void 0 || t.absenceOfDigitsInNumericCharacterReference(this.consumed), 0;
      case Kt.EntityStart:
        return 0;
    }
  }
}
function xz(e, t, n, r) {
  const o = (t & Na.BRANCH_LENGTH) >> 7, s = t & Na.JUMP_TABLE;
  if (o === 0)
    return s !== 0 && r === s ? n : -1;
  if (s) {
    const p = r - s;
    return p < 0 || p >= o ? -1 : e[n + p] - 1;
  }
  let u = n, c = u + o - 1;
  for (; u <= c; ) {
    const p = u + c >>> 1, f = e[p];
    if (f < r)
      u = p + 1;
    else if (f > r)
      c = p - 1;
    else
      return e[p + o];
  }
  return -1;
}
var ue;
(function(e) {
  e.HTML = "http://www.w3.org/1999/xhtml", e.MATHML = "http://www.w3.org/1998/Math/MathML", e.SVG = "http://www.w3.org/2000/svg", e.XLINK = "http://www.w3.org/1999/xlink", e.XML = "http://www.w3.org/XML/1998/namespace", e.XMLNS = "http://www.w3.org/2000/xmlns/";
})(ue || (ue = {}));
var li;
(function(e) {
  e.TYPE = "type", e.ACTION = "action", e.ENCODING = "encoding", e.PROMPT = "prompt", e.NAME = "name", e.COLOR = "color", e.FACE = "face", e.SIZE = "size";
})(li || (li = {}));
var Jn;
(function(e) {
  e.NO_QUIRKS = "no-quirks", e.QUIRKS = "quirks", e.LIMITED_QUIRKS = "limited-quirks";
})(Jn || (Jn = {}));
var X;
(function(e) {
  e.A = "a", e.ADDRESS = "address", e.ANNOTATION_XML = "annotation-xml", e.APPLET = "applet", e.AREA = "area", e.ARTICLE = "article", e.ASIDE = "aside", e.B = "b", e.BASE = "base", e.BASEFONT = "basefont", e.BGSOUND = "bgsound", e.BIG = "big", e.BLOCKQUOTE = "blockquote", e.BODY = "body", e.BR = "br", e.BUTTON = "button", e.CAPTION = "caption", e.CENTER = "center", e.CODE = "code", e.COL = "col", e.COLGROUP = "colgroup", e.DD = "dd", e.DESC = "desc", e.DETAILS = "details", e.DIALOG = "dialog", e.DIR = "dir", e.DIV = "div", e.DL = "dl", e.DT = "dt", e.EM = "em", e.EMBED = "embed", e.FIELDSET = "fieldset", e.FIGCAPTION = "figcaption", e.FIGURE = "figure", e.FONT = "font", e.FOOTER = "footer", e.FOREIGN_OBJECT = "foreignObject", e.FORM = "form", e.FRAME = "frame", e.FRAMESET = "frameset", e.H1 = "h1", e.H2 = "h2", e.H3 = "h3", e.H4 = "h4", e.H5 = "h5", e.H6 = "h6", e.HEAD = "head", e.HEADER = "header", e.HGROUP = "hgroup", e.HR = "hr", e.HTML = "html", e.I = "i", e.IMG = "img", e.IMAGE = "image", e.INPUT = "input", e.IFRAME = "iframe", e.KEYGEN = "keygen", e.LABEL = "label", e.LI = "li", e.LINK = "link", e.LISTING = "listing", e.MAIN = "main", e.MALIGNMARK = "malignmark", e.MARQUEE = "marquee", e.MATH = "math", e.MENU = "menu", e.META = "meta", e.MGLYPH = "mglyph", e.MI = "mi", e.MO = "mo", e.MN = "mn", e.MS = "ms", e.MTEXT = "mtext", e.NAV = "nav", e.NOBR = "nobr", e.NOFRAMES = "noframes", e.NOEMBED = "noembed", e.NOSCRIPT = "noscript", e.OBJECT = "object", e.OL = "ol", e.OPTGROUP = "optgroup", e.OPTION = "option", e.P = "p", e.PARAM = "param", e.PLAINTEXT = "plaintext", e.PRE = "pre", e.RB = "rb", e.RP = "rp", e.RT = "rt", e.RTC = "rtc", e.RUBY = "ruby", e.S = "s", e.SCRIPT = "script", e.SEARCH = "search", e.SECTION = "section", e.SELECT = "select", e.SOURCE = "source", e.SMALL = "small", e.SPAN = "span", e.STRIKE = "strike", e.STRONG = "strong", e.STYLE = "style", e.SUB = "sub", e.SUMMARY = "summary", e.SUP = "sup", e.TABLE = "table", e.TBODY = "tbody", e.TEMPLATE = "template", e.TEXTAREA = "textarea", e.TFOOT = "tfoot", e.TD = "td", e.TH = "th", e.THEAD = "thead", e.TITLE = "title", e.TR = "tr", e.TRACK = "track", e.TT = "tt", e.U = "u", e.UL = "ul", e.SVG = "svg", e.VAR = "var", e.WBR = "wbr", e.XMP = "xmp";
})(X || (X = {}));
var h;
(function(e) {
  e[e.UNKNOWN = 0] = "UNKNOWN", e[e.A = 1] = "A", e[e.ADDRESS = 2] = "ADDRESS", e[e.ANNOTATION_XML = 3] = "ANNOTATION_XML", e[e.APPLET = 4] = "APPLET", e[e.AREA = 5] = "AREA", e[e.ARTICLE = 6] = "ARTICLE", e[e.ASIDE = 7] = "ASIDE", e[e.B = 8] = "B", e[e.BASE = 9] = "BASE", e[e.BASEFONT = 10] = "BASEFONT", e[e.BGSOUND = 11] = "BGSOUND", e[e.BIG = 12] = "BIG", e[e.BLOCKQUOTE = 13] = "BLOCKQUOTE", e[e.BODY = 14] = "BODY", e[e.BR = 15] = "BR", e[e.BUTTON = 16] = "BUTTON", e[e.CAPTION = 17] = "CAPTION", e[e.CENTER = 18] = "CENTER", e[e.CODE = 19] = "CODE", e[e.COL = 20] = "COL", e[e.COLGROUP = 21] = "COLGROUP", e[e.DD = 22] = "DD", e[e.DESC = 23] = "DESC", e[e.DETAILS = 24] = "DETAILS", e[e.DIALOG = 25] = "DIALOG", e[e.DIR = 26] = "DIR", e[e.DIV = 27] = "DIV", e[e.DL = 28] = "DL", e[e.DT = 29] = "DT", e[e.EM = 30] = "EM", e[e.EMBED = 31] = "EMBED", e[e.FIELDSET = 32] = "FIELDSET", e[e.FIGCAPTION = 33] = "FIGCAPTION", e[e.FIGURE = 34] = "FIGURE", e[e.FONT = 35] = "FONT", e[e.FOOTER = 36] = "FOOTER", e[e.FOREIGN_OBJECT = 37] = "FOREIGN_OBJECT", e[e.FORM = 38] = "FORM", e[e.FRAME = 39] = "FRAME", e[e.FRAMESET = 40] = "FRAMESET", e[e.H1 = 41] = "H1", e[e.H2 = 42] = "H2", e[e.H3 = 43] = "H3", e[e.H4 = 44] = "H4", e[e.H5 = 45] = "H5", e[e.H6 = 46] = "H6", e[e.HEAD = 47] = "HEAD", e[e.HEADER = 48] = "HEADER", e[e.HGROUP = 49] = "HGROUP", e[e.HR = 50] = "HR", e[e.HTML = 51] = "HTML", e[e.I = 52] = "I", e[e.IMG = 53] = "IMG", e[e.IMAGE = 54] = "IMAGE", e[e.INPUT = 55] = "INPUT", e[e.IFRAME = 56] = "IFRAME", e[e.KEYGEN = 57] = "KEYGEN", e[e.LABEL = 58] = "LABEL", e[e.LI = 59] = "LI", e[e.LINK = 60] = "LINK", e[e.LISTING = 61] = "LISTING", e[e.MAIN = 62] = "MAIN", e[e.MALIGNMARK = 63] = "MALIGNMARK", e[e.MARQUEE = 64] = "MARQUEE", e[e.MATH = 65] = "MATH", e[e.MENU = 66] = "MENU", e[e.META = 67] = "META", e[e.MGLYPH = 68] = "MGLYPH", e[e.MI = 69] = "MI", e[e.MO = 70] = "MO", e[e.MN = 71] = "MN", e[e.MS = 72] = "MS", e[e.MTEXT = 73] = "MTEXT", e[e.NAV = 74] = "NAV", e[e.NOBR = 75] = "NOBR", e[e.NOFRAMES = 76] = "NOFRAMES", e[e.NOEMBED = 77] = "NOEMBED", e[e.NOSCRIPT = 78] = "NOSCRIPT", e[e.OBJECT = 79] = "OBJECT", e[e.OL = 80] = "OL", e[e.OPTGROUP = 81] = "OPTGROUP", e[e.OPTION = 82] = "OPTION", e[e.P = 83] = "P", e[e.PARAM = 84] = "PARAM", e[e.PLAINTEXT = 85] = "PLAINTEXT", e[e.PRE = 86] = "PRE", e[e.RB = 87] = "RB", e[e.RP = 88] = "RP", e[e.RT = 89] = "RT", e[e.RTC = 90] = "RTC", e[e.RUBY = 91] = "RUBY", e[e.S = 92] = "S", e[e.SCRIPT = 93] = "SCRIPT", e[e.SEARCH = 94] = "SEARCH", e[e.SECTION = 95] = "SECTION", e[e.SELECT = 96] = "SELECT", e[e.SOURCE = 97] = "SOURCE", e[e.SMALL = 98] = "SMALL", e[e.SPAN = 99] = "SPAN", e[e.STRIKE = 100] = "STRIKE", e[e.STRONG = 101] = "STRONG", e[e.STYLE = 102] = "STYLE", e[e.SUB = 103] = "SUB", e[e.SUMMARY = 104] = "SUMMARY", e[e.SUP = 105] = "SUP", e[e.TABLE = 106] = "TABLE", e[e.TBODY = 107] = "TBODY", e[e.TEMPLATE = 108] = "TEMPLATE", e[e.TEXTAREA = 109] = "TEXTAREA", e[e.TFOOT = 110] = "TFOOT", e[e.TD = 111] = "TD", e[e.TH = 112] = "TH", e[e.THEAD = 113] = "THEAD", e[e.TITLE = 114] = "TITLE", e[e.TR = 115] = "TR", e[e.TRACK = 116] = "TRACK", e[e.TT = 117] = "TT", e[e.U = 118] = "U", e[e.UL = 119] = "UL", e[e.SVG = 120] = "SVG", e[e.VAR = 121] = "VAR", e[e.WBR = 122] = "WBR", e[e.XMP = 123] = "XMP";
})(h || (h = {}));
const Nz = /* @__PURE__ */ new Map([
  [X.A, h.A],
  [X.ADDRESS, h.ADDRESS],
  [X.ANNOTATION_XML, h.ANNOTATION_XML],
  [X.APPLET, h.APPLET],
  [X.AREA, h.AREA],
  [X.ARTICLE, h.ARTICLE],
  [X.ASIDE, h.ASIDE],
  [X.B, h.B],
  [X.BASE, h.BASE],
  [X.BASEFONT, h.BASEFONT],
  [X.BGSOUND, h.BGSOUND],
  [X.BIG, h.BIG],
  [X.BLOCKQUOTE, h.BLOCKQUOTE],
  [X.BODY, h.BODY],
  [X.BR, h.BR],
  [X.BUTTON, h.BUTTON],
  [X.CAPTION, h.CAPTION],
  [X.CENTER, h.CENTER],
  [X.CODE, h.CODE],
  [X.COL, h.COL],
  [X.COLGROUP, h.COLGROUP],
  [X.DD, h.DD],
  [X.DESC, h.DESC],
  [X.DETAILS, h.DETAILS],
  [X.DIALOG, h.DIALOG],
  [X.DIR, h.DIR],
  [X.DIV, h.DIV],
  [X.DL, h.DL],
  [X.DT, h.DT],
  [X.EM, h.EM],
  [X.EMBED, h.EMBED],
  [X.FIELDSET, h.FIELDSET],
  [X.FIGCAPTION, h.FIGCAPTION],
  [X.FIGURE, h.FIGURE],
  [X.FONT, h.FONT],
  [X.FOOTER, h.FOOTER],
  [X.FOREIGN_OBJECT, h.FOREIGN_OBJECT],
  [X.FORM, h.FORM],
  [X.FRAME, h.FRAME],
  [X.FRAMESET, h.FRAMESET],
  [X.H1, h.H1],
  [X.H2, h.H2],
  [X.H3, h.H3],
  [X.H4, h.H4],
  [X.H5, h.H5],
  [X.H6, h.H6],
  [X.HEAD, h.HEAD],
  [X.HEADER, h.HEADER],
  [X.HGROUP, h.HGROUP],
  [X.HR, h.HR],
  [X.HTML, h.HTML],
  [X.I, h.I],
  [X.IMG, h.IMG],
  [X.IMAGE, h.IMAGE],
  [X.INPUT, h.INPUT],
  [X.IFRAME, h.IFRAME],
  [X.KEYGEN, h.KEYGEN],
  [X.LABEL, h.LABEL],
  [X.LI, h.LI],
  [X.LINK, h.LINK],
  [X.LISTING, h.LISTING],
  [X.MAIN, h.MAIN],
  [X.MALIGNMARK, h.MALIGNMARK],
  [X.MARQUEE, h.MARQUEE],
  [X.MATH, h.MATH],
  [X.MENU, h.MENU],
  [X.META, h.META],
  [X.MGLYPH, h.MGLYPH],
  [X.MI, h.MI],
  [X.MO, h.MO],
  [X.MN, h.MN],
  [X.MS, h.MS],
  [X.MTEXT, h.MTEXT],
  [X.NAV, h.NAV],
  [X.NOBR, h.NOBR],
  [X.NOFRAMES, h.NOFRAMES],
  [X.NOEMBED, h.NOEMBED],
  [X.NOSCRIPT, h.NOSCRIPT],
  [X.OBJECT, h.OBJECT],
  [X.OL, h.OL],
  [X.OPTGROUP, h.OPTGROUP],
  [X.OPTION, h.OPTION],
  [X.P, h.P],
  [X.PARAM, h.PARAM],
  [X.PLAINTEXT, h.PLAINTEXT],
  [X.PRE, h.PRE],
  [X.RB, h.RB],
  [X.RP, h.RP],
  [X.RT, h.RT],
  [X.RTC, h.RTC],
  [X.RUBY, h.RUBY],
  [X.S, h.S],
  [X.SCRIPT, h.SCRIPT],
  [X.SEARCH, h.SEARCH],
  [X.SECTION, h.SECTION],
  [X.SELECT, h.SELECT],
  [X.SOURCE, h.SOURCE],
  [X.SMALL, h.SMALL],
  [X.SPAN, h.SPAN],
  [X.STRIKE, h.STRIKE],
  [X.STRONG, h.STRONG],
  [X.STYLE, h.STYLE],
  [X.SUB, h.SUB],
  [X.SUMMARY, h.SUMMARY],
  [X.SUP, h.SUP],
  [X.TABLE, h.TABLE],
  [X.TBODY, h.TBODY],
  [X.TEMPLATE, h.TEMPLATE],
  [X.TEXTAREA, h.TEXTAREA],
  [X.TFOOT, h.TFOOT],
  [X.TD, h.TD],
  [X.TH, h.TH],
  [X.THEAD, h.THEAD],
  [X.TITLE, h.TITLE],
  [X.TR, h.TR],
  [X.TRACK, h.TRACK],
  [X.TT, h.TT],
  [X.U, h.U],
  [X.UL, h.UL],
  [X.SVG, h.SVG],
  [X.VAR, h.VAR],
  [X.WBR, h.WBR],
  [X.XMP, h.XMP]
]);
function Co(e) {
  var t;
  return (t = Nz.get(e)) !== null && t !== void 0 ? t : h.UNKNOWN;
}
const fe = h, Oz = {
  [ue.HTML]: /* @__PURE__ */ new Set([
    fe.ADDRESS,
    fe.APPLET,
    fe.AREA,
    fe.ARTICLE,
    fe.ASIDE,
    fe.BASE,
    fe.BASEFONT,
    fe.BGSOUND,
    fe.BLOCKQUOTE,
    fe.BODY,
    fe.BR,
    fe.BUTTON,
    fe.CAPTION,
    fe.CENTER,
    fe.COL,
    fe.COLGROUP,
    fe.DD,
    fe.DETAILS,
    fe.DIR,
    fe.DIV,
    fe.DL,
    fe.DT,
    fe.EMBED,
    fe.FIELDSET,
    fe.FIGCAPTION,
    fe.FIGURE,
    fe.FOOTER,
    fe.FORM,
    fe.FRAME,
    fe.FRAMESET,
    fe.H1,
    fe.H2,
    fe.H3,
    fe.H4,
    fe.H5,
    fe.H6,
    fe.HEAD,
    fe.HEADER,
    fe.HGROUP,
    fe.HR,
    fe.HTML,
    fe.IFRAME,
    fe.IMG,
    fe.INPUT,
    fe.LI,
    fe.LINK,
    fe.LISTING,
    fe.MAIN,
    fe.MARQUEE,
    fe.MENU,
    fe.META,
    fe.NAV,
    fe.NOEMBED,
    fe.NOFRAMES,
    fe.NOSCRIPT,
    fe.OBJECT,
    fe.OL,
    fe.P,
    fe.PARAM,
    fe.PLAINTEXT,
    fe.PRE,
    fe.SCRIPT,
    fe.SECTION,
    fe.SELECT,
    fe.SOURCE,
    fe.STYLE,
    fe.SUMMARY,
    fe.TABLE,
    fe.TBODY,
    fe.TD,
    fe.TEMPLATE,
    fe.TEXTAREA,
    fe.TFOOT,
    fe.TH,
    fe.THEAD,
    fe.TITLE,
    fe.TR,
    fe.TRACK,
    fe.UL,
    fe.WBR,
    fe.XMP
  ]),
  [ue.MATHML]: /* @__PURE__ */ new Set([fe.MI, fe.MO, fe.MN, fe.MS, fe.MTEXT, fe.ANNOTATION_XML]),
  [ue.SVG]: /* @__PURE__ */ new Set([fe.TITLE, fe.FOREIGN_OBJECT, fe.DESC]),
  [ue.XLINK]: /* @__PURE__ */ new Set(),
  [ue.XML]: /* @__PURE__ */ new Set(),
  [ue.XMLNS]: /* @__PURE__ */ new Set()
}, cE = /* @__PURE__ */ new Set([fe.H1, fe.H2, fe.H3, fe.H4, fe.H5, fe.H6]);
X.STYLE, X.SCRIPT, X.XMP, X.IFRAME, X.NOEMBED, X.NOFRAMES, X.PLAINTEXT;
var D;
(function(e) {
  e[e.DATA = 0] = "DATA", e[e.RCDATA = 1] = "RCDATA", e[e.RAWTEXT = 2] = "RAWTEXT", e[e.SCRIPT_DATA = 3] = "SCRIPT_DATA", e[e.PLAINTEXT = 4] = "PLAINTEXT", e[e.TAG_OPEN = 5] = "TAG_OPEN", e[e.END_TAG_OPEN = 6] = "END_TAG_OPEN", e[e.TAG_NAME = 7] = "TAG_NAME", e[e.RCDATA_LESS_THAN_SIGN = 8] = "RCDATA_LESS_THAN_SIGN", e[e.RCDATA_END_TAG_OPEN = 9] = "RCDATA_END_TAG_OPEN", e[e.RCDATA_END_TAG_NAME = 10] = "RCDATA_END_TAG_NAME", e[e.RAWTEXT_LESS_THAN_SIGN = 11] = "RAWTEXT_LESS_THAN_SIGN", e[e.RAWTEXT_END_TAG_OPEN = 12] = "RAWTEXT_END_TAG_OPEN", e[e.RAWTEXT_END_TAG_NAME = 13] = "RAWTEXT_END_TAG_NAME", e[e.SCRIPT_DATA_LESS_THAN_SIGN = 14] = "SCRIPT_DATA_LESS_THAN_SIGN", e[e.SCRIPT_DATA_END_TAG_OPEN = 15] = "SCRIPT_DATA_END_TAG_OPEN", e[e.SCRIPT_DATA_END_TAG_NAME = 16] = "SCRIPT_DATA_END_TAG_NAME", e[e.SCRIPT_DATA_ESCAPE_START = 17] = "SCRIPT_DATA_ESCAPE_START", e[e.SCRIPT_DATA_ESCAPE_START_DASH = 18] = "SCRIPT_DATA_ESCAPE_START_DASH", e[e.SCRIPT_DATA_ESCAPED = 19] = "SCRIPT_DATA_ESCAPED", e[e.SCRIPT_DATA_ESCAPED_DASH = 20] = "SCRIPT_DATA_ESCAPED_DASH", e[e.SCRIPT_DATA_ESCAPED_DASH_DASH = 21] = "SCRIPT_DATA_ESCAPED_DASH_DASH", e[e.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN = 22] = "SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN", e[e.SCRIPT_DATA_ESCAPED_END_TAG_OPEN = 23] = "SCRIPT_DATA_ESCAPED_END_TAG_OPEN", e[e.SCRIPT_DATA_ESCAPED_END_TAG_NAME = 24] = "SCRIPT_DATA_ESCAPED_END_TAG_NAME", e[e.SCRIPT_DATA_DOUBLE_ESCAPE_START = 25] = "SCRIPT_DATA_DOUBLE_ESCAPE_START", e[e.SCRIPT_DATA_DOUBLE_ESCAPED = 26] = "SCRIPT_DATA_DOUBLE_ESCAPED", e[e.SCRIPT_DATA_DOUBLE_ESCAPED_DASH = 27] = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH", e[e.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH = 28] = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH", e[e.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN = 29] = "SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN", e[e.SCRIPT_DATA_DOUBLE_ESCAPE_END = 30] = "SCRIPT_DATA_DOUBLE_ESCAPE_END", e[e.BEFORE_ATTRIBUTE_NAME = 31] = "BEFORE_ATTRIBUTE_NAME", e[e.ATTRIBUTE_NAME = 32] = "ATTRIBUTE_NAME", e[e.AFTER_ATTRIBUTE_NAME = 33] = "AFTER_ATTRIBUTE_NAME", e[e.BEFORE_ATTRIBUTE_VALUE = 34] = "BEFORE_ATTRIBUTE_VALUE", e[e.ATTRIBUTE_VALUE_DOUBLE_QUOTED = 35] = "ATTRIBUTE_VALUE_DOUBLE_QUOTED", e[e.ATTRIBUTE_VALUE_SINGLE_QUOTED = 36] = "ATTRIBUTE_VALUE_SINGLE_QUOTED", e[e.ATTRIBUTE_VALUE_UNQUOTED = 37] = "ATTRIBUTE_VALUE_UNQUOTED", e[e.AFTER_ATTRIBUTE_VALUE_QUOTED = 38] = "AFTER_ATTRIBUTE_VALUE_QUOTED", e[e.SELF_CLOSING_START_TAG = 39] = "SELF_CLOSING_START_TAG", e[e.BOGUS_COMMENT = 40] = "BOGUS_COMMENT", e[e.MARKUP_DECLARATION_OPEN = 41] = "MARKUP_DECLARATION_OPEN", e[e.COMMENT_START = 42] = "COMMENT_START", e[e.COMMENT_START_DASH = 43] = "COMMENT_START_DASH", e[e.COMMENT = 44] = "COMMENT", e[e.COMMENT_LESS_THAN_SIGN = 45] = "COMMENT_LESS_THAN_SIGN", e[e.COMMENT_LESS_THAN_SIGN_BANG = 46] = "COMMENT_LESS_THAN_SIGN_BANG", e[e.COMMENT_LESS_THAN_SIGN_BANG_DASH = 47] = "COMMENT_LESS_THAN_SIGN_BANG_DASH", e[e.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH = 48] = "COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH", e[e.COMMENT_END_DASH = 49] = "COMMENT_END_DASH", e[e.COMMENT_END = 50] = "COMMENT_END", e[e.COMMENT_END_BANG = 51] = "COMMENT_END_BANG", e[e.DOCTYPE = 52] = "DOCTYPE", e[e.BEFORE_DOCTYPE_NAME = 53] = "BEFORE_DOCTYPE_NAME", e[e.DOCTYPE_NAME = 54] = "DOCTYPE_NAME", e[e.AFTER_DOCTYPE_NAME = 55] = "AFTER_DOCTYPE_NAME", e[e.AFTER_DOCTYPE_PUBLIC_KEYWORD = 56] = "AFTER_DOCTYPE_PUBLIC_KEYWORD", e[e.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER = 57] = "BEFORE_DOCTYPE_PUBLIC_IDENTIFIER", e[e.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED = 58] = "DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED", e[e.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED = 59] = "DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED", e[e.AFTER_DOCTYPE_PUBLIC_IDENTIFIER = 60] = "AFTER_DOCTYPE_PUBLIC_IDENTIFIER", e[e.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS = 61] = "BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS", e[e.AFTER_DOCTYPE_SYSTEM_KEYWORD = 62] = "AFTER_DOCTYPE_SYSTEM_KEYWORD", e[e.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER = 63] = "BEFORE_DOCTYPE_SYSTEM_IDENTIFIER", e[e.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED = 64] = "DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED", e[e.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED = 65] = "DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED", e[e.AFTER_DOCTYPE_SYSTEM_IDENTIFIER = 66] = "AFTER_DOCTYPE_SYSTEM_IDENTIFIER", e[e.BOGUS_DOCTYPE = 67] = "BOGUS_DOCTYPE", e[e.CDATA_SECTION = 68] = "CDATA_SECTION", e[e.CDATA_SECTION_BRACKET = 69] = "CDATA_SECTION_BRACKET", e[e.CDATA_SECTION_END = 70] = "CDATA_SECTION_END", e[e.CHARACTER_REFERENCE = 71] = "CHARACTER_REFERENCE", e[e.AMBIGUOUS_AMPERSAND = 72] = "AMBIGUOUS_AMPERSAND";
})(D || (D = {}));
const xt = {
  DATA: D.DATA,
  RCDATA: D.RCDATA,
  RAWTEXT: D.RAWTEXT,
  SCRIPT_DATA: D.SCRIPT_DATA,
  PLAINTEXT: D.PLAINTEXT,
  CDATA_SECTION: D.CDATA_SECTION
};
function Lz(e) {
  return e >= N.DIGIT_0 && e <= N.DIGIT_9;
}
function Ts(e) {
  return e >= N.LATIN_CAPITAL_A && e <= N.LATIN_CAPITAL_Z;
}
function Dz(e) {
  return e >= N.LATIN_SMALL_A && e <= N.LATIN_SMALL_Z;
}
function Sa(e) {
  return Dz(e) || Ts(e);
}
function TI(e) {
  return Sa(e) || Lz(e);
}
function Eu(e) {
  return e + 32;
}
function yN(e) {
  return e === N.SPACE || e === N.LINE_FEED || e === N.TABULATION || e === N.FORM_FEED;
}
function SI(e) {
  return yN(e) || e === N.SOLIDUS || e === N.GREATER_THAN_SIGN;
}
function Mz(e) {
  return e === N.NULL ? te.nullCharacterReference : e > 1114111 ? te.characterReferenceOutsideUnicodeRange : gN(e) ? te.surrogateCharacterReference : bN(e) ? te.noncharacterCharacterReference : mN(e) || e === N.CARRIAGE_RETURN ? te.controlCharacterReference : null;
}
class Pz {
  constructor(t, n) {
    this.options = t, this.handler = n, this.paused = !1, this.inLoop = !1, this.inForeignNode = !1, this.lastStartTagName = "", this.active = !1, this.state = D.DATA, this.returnState = D.DATA, this.entityStartPos = 0, this.consumedAfterSnapshot = -1, this.currentCharacterToken = null, this.currentToken = null, this.currentAttr = { name: "", value: "" }, this.preprocessor = new Sz(n), this.currentLocation = this.getCurrentLocation(-1), this.entityDecoder = new Rz(_z, (r, o) => {
      this.preprocessor.pos = this.entityStartPos + o - 1, this._flushCodePointConsumedAsCharacterReference(r);
    }, n.onParseError ? {
      missingSemicolonAfterCharacterReference: () => {
        this._err(te.missingSemicolonAfterCharacterReference, 1);
      },
      absenceOfDigitsInNumericCharacterReference: (r) => {
        this._err(te.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + r);
      },
      validateNumericCharacterReference: (r) => {
        const o = Mz(r);
        o && this._err(o, 1);
      }
    } : void 0);
  }
  //Errors
  _err(t, n = 0) {
    var r, o;
    (o = (r = this.handler).onParseError) === null || o === void 0 || o.call(r, this.preprocessor.getError(t, n));
  }
  // NOTE: `offset` may never run across line boundaries.
  getCurrentLocation(t) {
    return this.options.sourceCodeLocationInfo ? {
      startLine: this.preprocessor.line,
      startCol: this.preprocessor.col - t,
      startOffset: this.preprocessor.offset - t,
      endLine: -1,
      endCol: -1,
      endOffset: -1
    } : null;
  }
  _runParsingLoop() {
    if (!this.inLoop) {
      for (this.inLoop = !0; this.active && !this.paused; ) {
        this.consumedAfterSnapshot = 0;
        const t = this._consume();
        this._ensureHibernation() || this._callState(t);
      }
      this.inLoop = !1;
    }
  }
  //API
  pause() {
    this.paused = !0;
  }
  resume(t) {
    if (!this.paused)
      throw new Error("Parser was already resumed");
    this.paused = !1, !this.inLoop && (this._runParsingLoop(), this.paused || t == null || t());
  }
  write(t, n, r) {
    this.active = !0, this.preprocessor.write(t, n), this._runParsingLoop(), this.paused || r == null || r();
  }
  insertHtmlAtCurrentPos(t) {
    this.active = !0, this.preprocessor.insertHtmlAtCurrentPos(t), this._runParsingLoop();
  }
  //Hibernation
  _ensureHibernation() {
    return this.preprocessor.endOfChunkHit ? (this.preprocessor.retreat(this.consumedAfterSnapshot), this.consumedAfterSnapshot = 0, this.active = !1, !0) : !1;
  }
  //Consumption
  _consume() {
    return this.consumedAfterSnapshot++, this.preprocessor.advance();
  }
  _advanceBy(t) {
    this.consumedAfterSnapshot += t;
    for (let n = 0; n < t; n++)
      this.preprocessor.advance();
  }
  _consumeSequenceIfMatch(t, n) {
    return this.preprocessor.startsWith(t, n) ? (this._advanceBy(t.length - 1), !0) : !1;
  }
  //Token creation
  _createStartTagToken() {
    this.currentToken = {
      type: Ye.START_TAG,
      tagName: "",
      tagID: h.UNKNOWN,
      selfClosing: !1,
      ackSelfClosing: !1,
      attrs: [],
      location: this.getCurrentLocation(1)
    };
  }
  _createEndTagToken() {
    this.currentToken = {
      type: Ye.END_TAG,
      tagName: "",
      tagID: h.UNKNOWN,
      selfClosing: !1,
      ackSelfClosing: !1,
      attrs: [],
      location: this.getCurrentLocation(2)
    };
  }
  _createCommentToken(t) {
    this.currentToken = {
      type: Ye.COMMENT,
      data: "",
      location: this.getCurrentLocation(t)
    };
  }
  _createDoctypeToken(t) {
    this.currentToken = {
      type: Ye.DOCTYPE,
      name: t,
      forceQuirks: !1,
      publicId: null,
      systemId: null,
      location: this.currentLocation
    };
  }
  _createCharacterToken(t, n) {
    this.currentCharacterToken = {
      type: t,
      chars: n,
      location: this.currentLocation
    };
  }
  //Tag attributes
  _createAttr(t) {
    this.currentAttr = {
      name: t,
      value: ""
    }, this.currentLocation = this.getCurrentLocation(0);
  }
  _leaveAttrName() {
    var t, n;
    const r = this.currentToken;
    if (EN(r, this.currentAttr.name) === null) {
      if (r.attrs.push(this.currentAttr), r.location && this.currentLocation) {
        const o = (t = (n = r.location).attrs) !== null && t !== void 0 ? t : n.attrs = /* @__PURE__ */ Object.create(null);
        o[this.currentAttr.name] = this.currentLocation, this._leaveAttrValue();
      }
    } else
      this._err(te.duplicateAttribute);
  }
  _leaveAttrValue() {
    this.currentLocation && (this.currentLocation.endLine = this.preprocessor.line, this.currentLocation.endCol = this.preprocessor.col, this.currentLocation.endOffset = this.preprocessor.offset);
  }
  //Token emission
  prepareToken(t) {
    this._emitCurrentCharacterToken(t.location), this.currentToken = null, t.location && (t.location.endLine = this.preprocessor.line, t.location.endCol = this.preprocessor.col + 1, t.location.endOffset = this.preprocessor.offset + 1), this.currentLocation = this.getCurrentLocation(-1);
  }
  emitCurrentTagToken() {
    const t = this.currentToken;
    this.prepareToken(t), t.tagID = Co(t.tagName), t.type === Ye.START_TAG ? (this.lastStartTagName = t.tagName, this.handler.onStartTag(t)) : (t.attrs.length > 0 && this._err(te.endTagWithAttributes), t.selfClosing && this._err(te.endTagWithTrailingSolidus), this.handler.onEndTag(t)), this.preprocessor.dropParsedChunk();
  }
  emitCurrentComment(t) {
    this.prepareToken(t), this.handler.onComment(t), this.preprocessor.dropParsedChunk();
  }
  emitCurrentDoctype(t) {
    this.prepareToken(t), this.handler.onDoctype(t), this.preprocessor.dropParsedChunk();
  }
  _emitCurrentCharacterToken(t) {
    if (this.currentCharacterToken) {
      switch (t && this.currentCharacterToken.location && (this.currentCharacterToken.location.endLine = t.startLine, this.currentCharacterToken.location.endCol = t.startCol, this.currentCharacterToken.location.endOffset = t.startOffset), this.currentCharacterToken.type) {
        case Ye.CHARACTER: {
          this.handler.onCharacter(this.currentCharacterToken);
          break;
        }
        case Ye.NULL_CHARACTER: {
          this.handler.onNullCharacter(this.currentCharacterToken);
          break;
        }
        case Ye.WHITESPACE_CHARACTER: {
          this.handler.onWhitespaceCharacter(this.currentCharacterToken);
          break;
        }
      }
      this.currentCharacterToken = null;
    }
  }
  _emitEOFToken() {
    const t = this.getCurrentLocation(0);
    t && (t.endLine = t.startLine, t.endCol = t.startCol, t.endOffset = t.startOffset), this._emitCurrentCharacterToken(t), this.handler.onEof({ type: Ye.EOF, location: t }), this.active = !1;
  }
  //Characters emission
  //OPTIMIZATION: The specification uses only one type of character token (one token per character).
  //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.
  //If we have a sequence of characters that belong to the same group, the parser can process it
  //as a single solid character token.
  //So, there are 3 types of character tokens in parse5:
  //1)TokenType.NULL_CHARACTER - \u0000-character sequences (e.g. '\u0000\u0000\u0000')
  //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\n  \r\t   \f')
  //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')
  _appendCharToCurrentCharacterToken(t, n) {
    if (this.currentCharacterToken)
      if (this.currentCharacterToken.type === t) {
        this.currentCharacterToken.chars += n;
        return;
      } else
        this.currentLocation = this.getCurrentLocation(0), this._emitCurrentCharacterToken(this.currentLocation), this.preprocessor.dropParsedChunk();
    this._createCharacterToken(t, n);
  }
  _emitCodePoint(t) {
    const n = yN(t) ? Ye.WHITESPACE_CHARACTER : t === N.NULL ? Ye.NULL_CHARACTER : Ye.CHARACTER;
    this._appendCharToCurrentCharacterToken(n, String.fromCodePoint(t));
  }
  //NOTE: used when we emit characters explicitly.
  //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.
  _emitChars(t) {
    this._appendCharToCurrentCharacterToken(Ye.CHARACTER, t);
  }
  // Character reference helpers
  _startCharacterReference() {
    this.returnState = this.state, this.state = D.CHARACTER_REFERENCE, this.entityStartPos = this.preprocessor.pos, this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? Yr.Attribute : Yr.Legacy);
  }
  _isCharacterReferenceInAttribute() {
    return this.returnState === D.ATTRIBUTE_VALUE_DOUBLE_QUOTED || this.returnState === D.ATTRIBUTE_VALUE_SINGLE_QUOTED || this.returnState === D.ATTRIBUTE_VALUE_UNQUOTED;
  }
  _flushCodePointConsumedAsCharacterReference(t) {
    this._isCharacterReferenceInAttribute() ? this.currentAttr.value += String.fromCodePoint(t) : this._emitCodePoint(t);
  }
  // Calling states this way turns out to be much faster than any other approach.
  _callState(t) {
    switch (this.state) {
      case D.DATA: {
        this._stateData(t);
        break;
      }
      case D.RCDATA: {
        this._stateRcdata(t);
        break;
      }
      case D.RAWTEXT: {
        this._stateRawtext(t);
        break;
      }
      case D.SCRIPT_DATA: {
        this._stateScriptData(t);
        break;
      }
      case D.PLAINTEXT: {
        this._statePlaintext(t);
        break;
      }
      case D.TAG_OPEN: {
        this._stateTagOpen(t);
        break;
      }
      case D.END_TAG_OPEN: {
        this._stateEndTagOpen(t);
        break;
      }
      case D.TAG_NAME: {
        this._stateTagName(t);
        break;
      }
      case D.RCDATA_LESS_THAN_SIGN: {
        this._stateRcdataLessThanSign(t);
        break;
      }
      case D.RCDATA_END_TAG_OPEN: {
        this._stateRcdataEndTagOpen(t);
        break;
      }
      case D.RCDATA_END_TAG_NAME: {
        this._stateRcdataEndTagName(t);
        break;
      }
      case D.RAWTEXT_LESS_THAN_SIGN: {
        this._stateRawtextLessThanSign(t);
        break;
      }
      case D.RAWTEXT_END_TAG_OPEN: {
        this._stateRawtextEndTagOpen(t);
        break;
      }
      case D.RAWTEXT_END_TAG_NAME: {
        this._stateRawtextEndTagName(t);
        break;
      }
      case D.SCRIPT_DATA_LESS_THAN_SIGN: {
        this._stateScriptDataLessThanSign(t);
        break;
      }
      case D.SCRIPT_DATA_END_TAG_OPEN: {
        this._stateScriptDataEndTagOpen(t);
        break;
      }
      case D.SCRIPT_DATA_END_TAG_NAME: {
        this._stateScriptDataEndTagName(t);
        break;
      }
      case D.SCRIPT_DATA_ESCAPE_START: {
        this._stateScriptDataEscapeStart(t);
        break;
      }
      case D.SCRIPT_DATA_ESCAPE_START_DASH: {
        this._stateScriptDataEscapeStartDash(t);
        break;
      }
      case D.SCRIPT_DATA_ESCAPED: {
        this._stateScriptDataEscaped(t);
        break;
      }
      case D.SCRIPT_DATA_ESCAPED_DASH: {
        this._stateScriptDataEscapedDash(t);
        break;
      }
      case D.SCRIPT_DATA_ESCAPED_DASH_DASH: {
        this._stateScriptDataEscapedDashDash(t);
        break;
      }
      case D.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {
        this._stateScriptDataEscapedLessThanSign(t);
        break;
      }
      case D.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {
        this._stateScriptDataEscapedEndTagOpen(t);
        break;
      }
      case D.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {
        this._stateScriptDataEscapedEndTagName(t);
        break;
      }
      case D.SCRIPT_DATA_DOUBLE_ESCAPE_START: {
        this._stateScriptDataDoubleEscapeStart(t);
        break;
      }
      case D.SCRIPT_DATA_DOUBLE_ESCAPED: {
        this._stateScriptDataDoubleEscaped(t);
        break;
      }
      case D.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {
        this._stateScriptDataDoubleEscapedDash(t);
        break;
      }
      case D.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {
        this._stateScriptDataDoubleEscapedDashDash(t);
        break;
      }
      case D.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {
        this._stateScriptDataDoubleEscapedLessThanSign(t);
        break;
      }
      case D.SCRIPT_DATA_DOUBLE_ESCAPE_END: {
        this._stateScriptDataDoubleEscapeEnd(t);
        break;
      }
      case D.BEFORE_ATTRIBUTE_NAME: {
        this._stateBeforeAttributeName(t);
        break;
      }
      case D.ATTRIBUTE_NAME: {
        this._stateAttributeName(t);
        break;
      }
      case D.AFTER_ATTRIBUTE_NAME: {
        this._stateAfterAttributeName(t);
        break;
      }
      case D.BEFORE_ATTRIBUTE_VALUE: {
        this._stateBeforeAttributeValue(t);
        break;
      }
      case D.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {
        this._stateAttributeValueDoubleQuoted(t);
        break;
      }
      case D.ATTRIBUTE_VALUE_SINGLE_QUOTED: {
        this._stateAttributeValueSingleQuoted(t);
        break;
      }
      case D.ATTRIBUTE_VALUE_UNQUOTED: {
        this._stateAttributeValueUnquoted(t);
        break;
      }
      case D.AFTER_ATTRIBUTE_VALUE_QUOTED: {
        this._stateAfterAttributeValueQuoted(t);
        break;
      }
      case D.SELF_CLOSING_START_TAG: {
        this._stateSelfClosingStartTag(t);
        break;
      }
      case D.BOGUS_COMMENT: {
        this._stateBogusComment(t);
        break;
      }
      case D.MARKUP_DECLARATION_OPEN: {
        this._stateMarkupDeclarationOpen(t);
        break;
      }
      case D.COMMENT_START: {
        this._stateCommentStart(t);
        break;
      }
      case D.COMMENT_START_DASH: {
        this._stateCommentStartDash(t);
        break;
      }
      case D.COMMENT: {
        this._stateComment(t);
        break;
      }
      case D.COMMENT_LESS_THAN_SIGN: {
        this._stateCommentLessThanSign(t);
        break;
      }
      case D.COMMENT_LESS_THAN_SIGN_BANG: {
        this._stateCommentLessThanSignBang(t);
        break;
      }
      case D.COMMENT_LESS_THAN_SIGN_BANG_DASH: {
        this._stateCommentLessThanSignBangDash(t);
        break;
      }
      case D.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {
        this._stateCommentLessThanSignBangDashDash(t);
        break;
      }
      case D.COMMENT_END_DASH: {
        this._stateCommentEndDash(t);
        break;
      }
      case D.COMMENT_END: {
        this._stateCommentEnd(t);
        break;
      }
      case D.COMMENT_END_BANG: {
        this._stateCommentEndBang(t);
        break;
      }
      case D.DOCTYPE: {
        this._stateDoctype(t);
        break;
      }
      case D.BEFORE_DOCTYPE_NAME: {
        this._stateBeforeDoctypeName(t);
        break;
      }
      case D.DOCTYPE_NAME: {
        this._stateDoctypeName(t);
        break;
      }
      case D.AFTER_DOCTYPE_NAME: {
        this._stateAfterDoctypeName(t);
        break;
      }
      case D.AFTER_DOCTYPE_PUBLIC_KEYWORD: {
        this._stateAfterDoctypePublicKeyword(t);
        break;
      }
      case D.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {
        this._stateBeforeDoctypePublicIdentifier(t);
        break;
      }
      case D.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {
        this._stateDoctypePublicIdentifierDoubleQuoted(t);
        break;
      }
      case D.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {
        this._stateDoctypePublicIdentifierSingleQuoted(t);
        break;
      }
      case D.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {
        this._stateAfterDoctypePublicIdentifier(t);
        break;
      }
      case D.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {
        this._stateBetweenDoctypePublicAndSystemIdentifiers(t);
        break;
      }
      case D.AFTER_DOCTYPE_SYSTEM_KEYWORD: {
        this._stateAfterDoctypeSystemKeyword(t);
        break;
      }
      case D.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {
        this._stateBeforeDoctypeSystemIdentifier(t);
        break;
      }
      case D.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {
        this._stateDoctypeSystemIdentifierDoubleQuoted(t);
        break;
      }
      case D.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {
        this._stateDoctypeSystemIdentifierSingleQuoted(t);
        break;
      }
      case D.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {
        this._stateAfterDoctypeSystemIdentifier(t);
        break;
      }
      case D.BOGUS_DOCTYPE: {
        this._stateBogusDoctype(t);
        break;
      }
      case D.CDATA_SECTION: {
        this._stateCdataSection(t);
        break;
      }
      case D.CDATA_SECTION_BRACKET: {
        this._stateCdataSectionBracket(t);
        break;
      }
      case D.CDATA_SECTION_END: {
        this._stateCdataSectionEnd(t);
        break;
      }
      case D.CHARACTER_REFERENCE: {
        this._stateCharacterReference();
        break;
      }
      case D.AMBIGUOUS_AMPERSAND: {
        this._stateAmbiguousAmpersand(t);
        break;
      }
      default:
        throw new Error("Unknown state");
    }
  }
  // State machine
  // Data state
  //------------------------------------------------------------------
  _stateData(t) {
    switch (t) {
      case N.LESS_THAN_SIGN: {
        this.state = D.TAG_OPEN;
        break;
      }
      case N.AMPERSAND: {
        this._startCharacterReference();
        break;
      }
      case N.NULL: {
        this._err(te.unexpectedNullCharacter), this._emitCodePoint(t);
        break;
      }
      case N.EOF: {
        this._emitEOFToken();
        break;
      }
      default:
        this._emitCodePoint(t);
    }
  }
  //  RCDATA state
  //------------------------------------------------------------------
  _stateRcdata(t) {
    switch (t) {
      case N.AMPERSAND: {
        this._startCharacterReference();
        break;
      }
      case N.LESS_THAN_SIGN: {
        this.state = D.RCDATA_LESS_THAN_SIGN;
        break;
      }
      case N.NULL: {
        this._err(te.unexpectedNullCharacter), this._emitChars(bt);
        break;
      }
      case N.EOF: {
        this._emitEOFToken();
        break;
      }
      default:
        this._emitCodePoint(t);
    }
  }
  // RAWTEXT state
  //------------------------------------------------------------------
  _stateRawtext(t) {
    switch (t) {
      case N.LESS_THAN_SIGN: {
        this.state = D.RAWTEXT_LESS_THAN_SIGN;
        break;
      }
      case N.NULL: {
        this._err(te.unexpectedNullCharacter), this._emitChars(bt);
        break;
      }
      case N.EOF: {
        this._emitEOFToken();
        break;
      }
      default:
        this._emitCodePoint(t);
    }
  }
  // Script data state
  //------------------------------------------------------------------
  _stateScriptData(t) {
    switch (t) {
      case N.LESS_THAN_SIGN: {
        this.state = D.SCRIPT_DATA_LESS_THAN_SIGN;
        break;
      }
      case N.NULL: {
        this._err(te.unexpectedNullCharacter), this._emitChars(bt);
        break;
      }
      case N.EOF: {
        this._emitEOFToken();
        break;
      }
      default:
        this._emitCodePoint(t);
    }
  }
  // PLAINTEXT state
  //------------------------------------------------------------------
  _statePlaintext(t) {
    switch (t) {
      case N.NULL: {
        this._err(te.unexpectedNullCharacter), this._emitChars(bt);
        break;
      }
      case N.EOF: {
        this._emitEOFToken();
        break;
      }
      default:
        this._emitCodePoint(t);
    }
  }
  // Tag open state
  //------------------------------------------------------------------
  _stateTagOpen(t) {
    if (Sa(t))
      this._createStartTagToken(), this.state = D.TAG_NAME, this._stateTagName(t);
    else
      switch (t) {
        case N.EXCLAMATION_MARK: {
          this.state = D.MARKUP_DECLARATION_OPEN;
          break;
        }
        case N.SOLIDUS: {
          this.state = D.END_TAG_OPEN;
          break;
        }
        case N.QUESTION_MARK: {
          this._err(te.unexpectedQuestionMarkInsteadOfTagName), this._createCommentToken(1), this.state = D.BOGUS_COMMENT, this._stateBogusComment(t);
          break;
        }
        case N.EOF: {
          this._err(te.eofBeforeTagName), this._emitChars("<"), this._emitEOFToken();
          break;
        }
        default:
          this._err(te.invalidFirstCharacterOfTagName), this._emitChars("<"), this.state = D.DATA, this._stateData(t);
      }
  }
  // End tag open state
  //------------------------------------------------------------------
  _stateEndTagOpen(t) {
    if (Sa(t))
      this._createEndTagToken(), this.state = D.TAG_NAME, this._stateTagName(t);
    else
      switch (t) {
        case N.GREATER_THAN_SIGN: {
          this._err(te.missingEndTagName), this.state = D.DATA;
          break;
        }
        case N.EOF: {
          this._err(te.eofBeforeTagName), this._emitChars("</"), this._emitEOFToken();
          break;
        }
        default:
          this._err(te.invalidFirstCharacterOfTagName), this._createCommentToken(2), this.state = D.BOGUS_COMMENT, this._stateBogusComment(t);
      }
  }
  // Tag name state
  //------------------------------------------------------------------
  _stateTagName(t) {
    const n = this.currentToken;
    switch (t) {
      case N.SPACE:
      case N.LINE_FEED:
      case N.TABULATION:
      case N.FORM_FEED: {
        this.state = D.BEFORE_ATTRIBUTE_NAME;
        break;
      }
      case N.SOLIDUS: {
        this.state = D.SELF_CLOSING_START_TAG;
        break;
      }
      case N.GREATER_THAN_SIGN: {
        this.state = D.DATA, this.emitCurrentTagToken();
        break;
      }
      case N.NULL: {
        this._err(te.unexpectedNullCharacter), n.tagName += bt;
        break;
      }
      case N.EOF: {
        this._err(te.eofInTag), this._emitEOFToken();
        break;
      }
      default:
        n.tagName += String.fromCodePoint(Ts(t) ? Eu(t) : t);
    }
  }
  // RCDATA less-than sign state
  //------------------------------------------------------------------
  _stateRcdataLessThanSign(t) {
    t === N.SOLIDUS ? this.state = D.RCDATA_END_TAG_OPEN : (this._emitChars("<"), this.state = D.RCDATA, this._stateRcdata(t));
  }
  // RCDATA end tag open state
  //------------------------------------------------------------------
  _stateRcdataEndTagOpen(t) {
    Sa(t) ? (this.state = D.RCDATA_END_TAG_NAME, this._stateRcdataEndTagName(t)) : (this._emitChars("</"), this.state = D.RCDATA, this._stateRcdata(t));
  }
  handleSpecialEndTag(t) {
    if (!this.preprocessor.startsWith(this.lastStartTagName, !1))
      return !this._ensureHibernation();
    this._createEndTagToken();
    const n = this.currentToken;
    switch (n.tagName = this.lastStartTagName, this.preprocessor.peek(this.lastStartTagName.length)) {
      case N.SPACE:
      case N.LINE_FEED:
      case N.TABULATION:
      case N.FORM_FEED:
        return this._advanceBy(this.lastStartTagName.length), this.state = D.BEFORE_ATTRIBUTE_NAME, !1;
      case N.SOLIDUS:
        return this._advanceBy(this.lastStartTagName.length), this.state = D.SELF_CLOSING_START_TAG, !1;
      case N.GREATER_THAN_SIGN:
        return this._advanceBy(this.lastStartTagName.length), this.emitCurrentTagToken(), this.state = D.DATA, !1;
      default:
        return !this._ensureHibernation();
    }
  }
  // RCDATA end tag name state
  //------------------------------------------------------------------
  _stateRcdataEndTagName(t) {
    this.handleSpecialEndTag(t) && (this._emitChars("</"), this.state = D.RCDATA, this._stateRcdata(t));
  }
  // RAWTEXT less-than sign state
  //------------------------------------------------------------------
  _stateRawtextLessThanSign(t) {
    t === N.SOLIDUS ? this.state = D.RAWTEXT_END_TAG_OPEN : (this._emitChars("<"), this.state = D.RAWTEXT, this._stateRawtext(t));
  }
  // RAWTEXT end tag open state
  //------------------------------------------------------------------
  _stateRawtextEndTagOpen(t) {
    Sa(t) ? (this.state = D.RAWTEXT_END_TAG_NAME, this._stateRawtextEndTagName(t)) : (this._emitChars("</"), this.state = D.RAWTEXT, this._stateRawtext(t));
  }
  // RAWTEXT end tag name state
  //------------------------------------------------------------------
  _stateRawtextEndTagName(t) {
    this.handleSpecialEndTag(t) && (this._emitChars("</"), this.state = D.RAWTEXT, this._stateRawtext(t));
  }
  // Script data less-than sign state
  //------------------------------------------------------------------
  _stateScriptDataLessThanSign(t) {
    switch (t) {
      case N.SOLIDUS: {
        this.state = D.SCRIPT_DATA_END_TAG_OPEN;
        break;
      }
      case N.EXCLAMATION_MARK: {
        this.state = D.SCRIPT_DATA_ESCAPE_START, this._emitChars("<!");
        break;
      }
      default:
        this._emitChars("<"), this.state = D.SCRIPT_DATA, this._stateScriptData(t);
    }
  }
  // Script data end tag open state
  //------------------------------------------------------------------
  _stateScriptDataEndTagOpen(t) {
    Sa(t) ? (this.state = D.SCRIPT_DATA_END_TAG_NAME, this._stateScriptDataEndTagName(t)) : (this._emitChars("</"), this.state = D.SCRIPT_DATA, this._stateScriptData(t));
  }
  // Script data end tag name state
  //------------------------------------------------------------------
  _stateScriptDataEndTagName(t) {
    this.handleSpecialEndTag(t) && (this._emitChars("</"), this.state = D.SCRIPT_DATA, this._stateScriptData(t));
  }
  // Script data escape start state
  //------------------------------------------------------------------
  _stateScriptDataEscapeStart(t) {
    t === N.HYPHEN_MINUS ? (this.state = D.SCRIPT_DATA_ESCAPE_START_DASH, this._emitChars("-")) : (this.state = D.SCRIPT_DATA, this._stateScriptData(t));
  }
  // Script data escape start dash state
  //------------------------------------------------------------------
  _stateScriptDataEscapeStartDash(t) {
    t === N.HYPHEN_MINUS ? (this.state = D.SCRIPT_DATA_ESCAPED_DASH_DASH, this._emitChars("-")) : (this.state = D.SCRIPT_DATA, this._stateScriptData(t));
  }
  // Script data escaped state
  //------------------------------------------------------------------
  _stateScriptDataEscaped(t) {
    switch (t) {
      case N.HYPHEN_MINUS: {
        this.state = D.SCRIPT_DATA_ESCAPED_DASH, this._emitChars("-");
        break;
      }
      case N.LESS_THAN_SIGN: {
        this.state = D.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;
        break;
      }
      case N.NULL: {
        this._err(te.unexpectedNullCharacter), this._emitChars(bt);
        break;
      }
      case N.EOF: {
        this._err(te.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
        break;
      }
      default:
        this._emitCodePoint(t);
    }
  }
  // Script data escaped dash state
  //------------------------------------------------------------------
  _stateScriptDataEscapedDash(t) {
    switch (t) {
      case N.HYPHEN_MINUS: {
        this.state = D.SCRIPT_DATA_ESCAPED_DASH_DASH, this._emitChars("-");
        break;
      }
      case N.LESS_THAN_SIGN: {
        this.state = D.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;
        break;
      }
      case N.NULL: {
        this._err(te.unexpectedNullCharacter), this.state = D.SCRIPT_DATA_ESCAPED, this._emitChars(bt);
        break;
      }
      case N.EOF: {
        this._err(te.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
        break;
      }
      default:
        this.state = D.SCRIPT_DATA_ESCAPED, this._emitCodePoint(t);
    }
  }
  // Script data escaped dash dash state
  //------------------------------------------------------------------
  _stateScriptDataEscapedDashDash(t) {
    switch (t) {
      case N.HYPHEN_MINUS: {
        this._emitChars("-");
        break;
      }
      case N.LESS_THAN_SIGN: {
        this.state = D.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;
        break;
      }
      case N.GREATER_THAN_SIGN: {
        this.state = D.SCRIPT_DATA, this._emitChars(">");
        break;
      }
      case N.NULL: {
        this._err(te.unexpectedNullCharacter), this.state = D.SCRIPT_DATA_ESCAPED, this._emitChars(bt);
        break;
      }
      case N.EOF: {
        this._err(te.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
        break;
      }
      default:
        this.state = D.SCRIPT_DATA_ESCAPED, this._emitCodePoint(t);
    }
  }
  // Script data escaped less-than sign state
  //------------------------------------------------------------------
  _stateScriptDataEscapedLessThanSign(t) {
    t === N.SOLIDUS ? this.state = D.SCRIPT_DATA_ESCAPED_END_TAG_OPEN : Sa(t) ? (this._emitChars("<"), this.state = D.SCRIPT_DATA_DOUBLE_ESCAPE_START, this._stateScriptDataDoubleEscapeStart(t)) : (this._emitChars("<"), this.state = D.SCRIPT_DATA_ESCAPED, this._stateScriptDataEscaped(t));
  }
  // Script data escaped end tag open state
  //------------------------------------------------------------------
  _stateScriptDataEscapedEndTagOpen(t) {
    Sa(t) ? (this.state = D.SCRIPT_DATA_ESCAPED_END_TAG_NAME, this._stateScriptDataEscapedEndTagName(t)) : (this._emitChars("</"), this.state = D.SCRIPT_DATA_ESCAPED, this._stateScriptDataEscaped(t));
  }
  // Script data escaped end tag name state
  //------------------------------------------------------------------
  _stateScriptDataEscapedEndTagName(t) {
    this.handleSpecialEndTag(t) && (this._emitChars("</"), this.state = D.SCRIPT_DATA_ESCAPED, this._stateScriptDataEscaped(t));
  }
  // Script data double escape start state
  //------------------------------------------------------------------
  _stateScriptDataDoubleEscapeStart(t) {
    if (this.preprocessor.startsWith(In.SCRIPT, !1) && SI(this.preprocessor.peek(In.SCRIPT.length))) {
      this._emitCodePoint(t);
      for (let n = 0; n < In.SCRIPT.length; n++)
        this._emitCodePoint(this._consume());
      this.state = D.SCRIPT_DATA_DOUBLE_ESCAPED;
    } else this._ensureHibernation() || (this.state = D.SCRIPT_DATA_ESCAPED, this._stateScriptDataEscaped(t));
  }
  // Script data double escaped state
  //------------------------------------------------------------------
  _stateScriptDataDoubleEscaped(t) {
    switch (t) {
      case N.HYPHEN_MINUS: {
        this.state = D.SCRIPT_DATA_DOUBLE_ESCAPED_DASH, this._emitChars("-");
        break;
      }
      case N.LESS_THAN_SIGN: {
        this.state = D.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN, this._emitChars("<");
        break;
      }
      case N.NULL: {
        this._err(te.unexpectedNullCharacter), this._emitChars(bt);
        break;
      }
      case N.EOF: {
        this._err(te.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
        break;
      }
      default:
        this._emitCodePoint(t);
    }
  }
  // Script data double escaped dash state
  //------------------------------------------------------------------
  _stateScriptDataDoubleEscapedDash(t) {
    switch (t) {
      case N.HYPHEN_MINUS: {
        this.state = D.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH, this._emitChars("-");
        break;
      }
      case N.LESS_THAN_SIGN: {
        this.state = D.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN, this._emitChars("<");
        break;
      }
      case N.NULL: {
        this._err(te.unexpectedNullCharacter), this.state = D.SCRIPT_DATA_DOUBLE_ESCAPED, this._emitChars(bt);
        break;
      }
      case N.EOF: {
        this._err(te.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
        break;
      }
      default:
        this.state = D.SCRIPT_DATA_DOUBLE_ESCAPED, this._emitCodePoint(t);
    }
  }
  // Script data double escaped dash dash state
  //------------------------------------------------------------------
  _stateScriptDataDoubleEscapedDashDash(t) {
    switch (t) {
      case N.HYPHEN_MINUS: {
        this._emitChars("-");
        break;
      }
      case N.LESS_THAN_SIGN: {
        this.state = D.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN, this._emitChars("<");
        break;
      }
      case N.GREATER_THAN_SIGN: {
        this.state = D.SCRIPT_DATA, this._emitChars(">");
        break;
      }
      case N.NULL: {
        this._err(te.unexpectedNullCharacter), this.state = D.SCRIPT_DATA_DOUBLE_ESCAPED, this._emitChars(bt);
        break;
      }
      case N.EOF: {
        this._err(te.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
        break;
      }
      default:
        this.state = D.SCRIPT_DATA_DOUBLE_ESCAPED, this._emitCodePoint(t);
    }
  }
  // Script data double escaped less-than sign state
  //------------------------------------------------------------------
  _stateScriptDataDoubleEscapedLessThanSign(t) {
    t === N.SOLIDUS ? (this.state = D.SCRIPT_DATA_DOUBLE_ESCAPE_END, this._emitChars("/")) : (this.state = D.SCRIPT_DATA_DOUBLE_ESCAPED, this._stateScriptDataDoubleEscaped(t));
  }
  // Script data double escape end state
  //------------------------------------------------------------------
  _stateScriptDataDoubleEscapeEnd(t) {
    if (this.preprocessor.startsWith(In.SCRIPT, !1) && SI(this.preprocessor.peek(In.SCRIPT.length))) {
      this._emitCodePoint(t);
      for (let n = 0; n < In.SCRIPT.length; n++)
        this._emitCodePoint(this._consume());
      this.state = D.SCRIPT_DATA_ESCAPED;
    } else this._ensureHibernation() || (this.state = D.SCRIPT_DATA_DOUBLE_ESCAPED, this._stateScriptDataDoubleEscaped(t));
  }
  // Before attribute name state
  //------------------------------------------------------------------
  _stateBeforeAttributeName(t) {
    switch (t) {
      case N.SPACE:
      case N.LINE_FEED:
      case N.TABULATION:
      case N.FORM_FEED:
        break;
      case N.SOLIDUS:
      case N.GREATER_THAN_SIGN:
      case N.EOF: {
        this.state = D.AFTER_ATTRIBUTE_NAME, this._stateAfterAttributeName(t);
        break;
      }
      case N.EQUALS_SIGN: {
        this._err(te.unexpectedEqualsSignBeforeAttributeName), this._createAttr("="), this.state = D.ATTRIBUTE_NAME;
        break;
      }
      default:
        this._createAttr(""), this.state = D.ATTRIBUTE_NAME, this._stateAttributeName(t);
    }
  }
  // Attribute name state
  //------------------------------------------------------------------
  _stateAttributeName(t) {
    switch (t) {
      case N.SPACE:
      case N.LINE_FEED:
      case N.TABULATION:
      case N.FORM_FEED:
      case N.SOLIDUS:
      case N.GREATER_THAN_SIGN:
      case N.EOF: {
        this._leaveAttrName(), this.state = D.AFTER_ATTRIBUTE_NAME, this._stateAfterAttributeName(t);
        break;
      }
      case N.EQUALS_SIGN: {
        this._leaveAttrName(), this.state = D.BEFORE_ATTRIBUTE_VALUE;
        break;
      }
      case N.QUOTATION_MARK:
      case N.APOSTROPHE:
      case N.LESS_THAN_SIGN: {
        this._err(te.unexpectedCharacterInAttributeName), this.currentAttr.name += String.fromCodePoint(t);
        break;
      }
      case N.NULL: {
        this._err(te.unexpectedNullCharacter), this.currentAttr.name += bt;
        break;
      }
      default:
        this.currentAttr.name += String.fromCodePoint(Ts(t) ? Eu(t) : t);
    }
  }
  // After attribute name state
  //------------------------------------------------------------------
  _stateAfterAttributeName(t) {
    switch (t) {
      case N.SPACE:
      case N.LINE_FEED:
      case N.TABULATION:
      case N.FORM_FEED:
        break;
      case N.SOLIDUS: {
        this.state = D.SELF_CLOSING_START_TAG;
        break;
      }
      case N.EQUALS_SIGN: {
        this.state = D.BEFORE_ATTRIBUTE_VALUE;
        break;
      }
      case N.GREATER_THAN_SIGN: {
        this.state = D.DATA, this.emitCurrentTagToken();
        break;
      }
      case N.EOF: {
        this._err(te.eofInTag), this._emitEOFToken();
        break;
      }
      default:
        this._createAttr(""), this.state = D.ATTRIBUTE_NAME, this._stateAttributeName(t);
    }
  }
  // Before attribute value state
  //------------------------------------------------------------------
  _stateBeforeAttributeValue(t) {
    switch (t) {
      case N.SPACE:
      case N.LINE_FEED:
      case N.TABULATION:
      case N.FORM_FEED:
        break;
      case N.QUOTATION_MARK: {
        this.state = D.ATTRIBUTE_VALUE_DOUBLE_QUOTED;
        break;
      }
      case N.APOSTROPHE: {
        this.state = D.ATTRIBUTE_VALUE_SINGLE_QUOTED;
        break;
      }
      case N.GREATER_THAN_SIGN: {
        this._err(te.missingAttributeValue), this.state = D.DATA, this.emitCurrentTagToken();
        break;
      }
      default:
        this.state = D.ATTRIBUTE_VALUE_UNQUOTED, this._stateAttributeValueUnquoted(t);
    }
  }
  // Attribute value (double-quoted) state
  //------------------------------------------------------------------
  _stateAttributeValueDoubleQuoted(t) {
    switch (t) {
      case N.QUOTATION_MARK: {
        this.state = D.AFTER_ATTRIBUTE_VALUE_QUOTED;
        break;
      }
      case N.AMPERSAND: {
        this._startCharacterReference();
        break;
      }
      case N.NULL: {
        this._err(te.unexpectedNullCharacter), this.currentAttr.value += bt;
        break;
      }
      case N.EOF: {
        this._err(te.eofInTag), this._emitEOFToken();
        break;
      }
      default:
        this.currentAttr.value += String.fromCodePoint(t);
    }
  }
  // Attribute value (single-quoted) state
  //------------------------------------------------------------------
  _stateAttributeValueSingleQuoted(t) {
    switch (t) {
      case N.APOSTROPHE: {
        this.state = D.AFTER_ATTRIBUTE_VALUE_QUOTED;
        break;
      }
      case N.AMPERSAND: {
        this._startCharacterReference();
        break;
      }
      case N.NULL: {
        this._err(te.unexpectedNullCharacter), this.currentAttr.value += bt;
        break;
      }
      case N.EOF: {
        this._err(te.eofInTag), this._emitEOFToken();
        break;
      }
      default:
        this.currentAttr.value += String.fromCodePoint(t);
    }
  }
  // Attribute value (unquoted) state
  //------------------------------------------------------------------
  _stateAttributeValueUnquoted(t) {
    switch (t) {
      case N.SPACE:
      case N.LINE_FEED:
      case N.TABULATION:
      case N.FORM_FEED: {
        this._leaveAttrValue(), this.state = D.BEFORE_ATTRIBUTE_NAME;
        break;
      }
      case N.AMPERSAND: {
        this._startCharacterReference();
        break;
      }
      case N.GREATER_THAN_SIGN: {
        this._leaveAttrValue(), this.state = D.DATA, this.emitCurrentTagToken();
        break;
      }
      case N.NULL: {
        this._err(te.unexpectedNullCharacter), this.currentAttr.value += bt;
        break;
      }
      case N.QUOTATION_MARK:
      case N.APOSTROPHE:
      case N.LESS_THAN_SIGN:
      case N.EQUALS_SIGN:
      case N.GRAVE_ACCENT: {
        this._err(te.unexpectedCharacterInUnquotedAttributeValue), this.currentAttr.value += String.fromCodePoint(t);
        break;
      }
      case N.EOF: {
        this._err(te.eofInTag), this._emitEOFToken();
        break;
      }
      default:
        this.currentAttr.value += String.fromCodePoint(t);
    }
  }
  // After attribute value (quoted) state
  //------------------------------------------------------------------
  _stateAfterAttributeValueQuoted(t) {
    switch (t) {
      case N.SPACE:
      case N.LINE_FEED:
      case N.TABULATION:
      case N.FORM_FEED: {
        this._leaveAttrValue(), this.state = D.BEFORE_ATTRIBUTE_NAME;
        break;
      }
      case N.SOLIDUS: {
        this._leaveAttrValue(), this.state = D.SELF_CLOSING_START_TAG;
        break;
      }
      case N.GREATER_THAN_SIGN: {
        this._leaveAttrValue(), this.state = D.DATA, this.emitCurrentTagToken();
        break;
      }
      case N.EOF: {
        this._err(te.eofInTag), this._emitEOFToken();
        break;
      }
      default:
        this._err(te.missingWhitespaceBetweenAttributes), this.state = D.BEFORE_ATTRIBUTE_NAME, this._stateBeforeAttributeName(t);
    }
  }
  // Self-closing start tag state
  //------------------------------------------------------------------
  _stateSelfClosingStartTag(t) {
    switch (t) {
      case N.GREATER_THAN_SIGN: {
        const n = this.currentToken;
        n.selfClosing = !0, this.state = D.DATA, this.emitCurrentTagToken();
        break;
      }
      case N.EOF: {
        this._err(te.eofInTag), this._emitEOFToken();
        break;
      }
      default:
        this._err(te.unexpectedSolidusInTag), this.state = D.BEFORE_ATTRIBUTE_NAME, this._stateBeforeAttributeName(t);
    }
  }
  // Bogus comment state
  //------------------------------------------------------------------
  _stateBogusComment(t) {
    const n = this.currentToken;
    switch (t) {
      case N.GREATER_THAN_SIGN: {
        this.state = D.DATA, this.emitCurrentComment(n);
        break;
      }
      case N.EOF: {
        this.emitCurrentComment(n), this._emitEOFToken();
        break;
      }
      case N.NULL: {
        this._err(te.unexpectedNullCharacter), n.data += bt;
        break;
      }
      default:
        n.data += String.fromCodePoint(t);
    }
  }
  // Markup declaration open state
  //------------------------------------------------------------------
  _stateMarkupDeclarationOpen(t) {
    this._consumeSequenceIfMatch(In.DASH_DASH, !0) ? (this._createCommentToken(In.DASH_DASH.length + 1), this.state = D.COMMENT_START) : this._consumeSequenceIfMatch(In.DOCTYPE, !1) ? (this.currentLocation = this.getCurrentLocation(In.DOCTYPE.length + 1), this.state = D.DOCTYPE) : this._consumeSequenceIfMatch(In.CDATA_START, !0) ? this.inForeignNode ? this.state = D.CDATA_SECTION : (this._err(te.cdataInHtmlContent), this._createCommentToken(In.CDATA_START.length + 1), this.currentToken.data = "[CDATA[", this.state = D.BOGUS_COMMENT) : this._ensureHibernation() || (this._err(te.incorrectlyOpenedComment), this._createCommentToken(2), this.state = D.BOGUS_COMMENT, this._stateBogusComment(t));
  }
  // Comment start state
  //------------------------------------------------------------------
  _stateCommentStart(t) {
    switch (t) {
      case N.HYPHEN_MINUS: {
        this.state = D.COMMENT_START_DASH;
        break;
      }
      case N.GREATER_THAN_SIGN: {
        this._err(te.abruptClosingOfEmptyComment), this.state = D.DATA;
        const n = this.currentToken;
        this.emitCurrentComment(n);
        break;
      }
      default:
        this.state = D.COMMENT, this._stateComment(t);
    }
  }
  // Comment start dash state
  //------------------------------------------------------------------
  _stateCommentStartDash(t) {
    const n = this.currentToken;
    switch (t) {
      case N.HYPHEN_MINUS: {
        this.state = D.COMMENT_END;
        break;
      }
      case N.GREATER_THAN_SIGN: {
        this._err(te.abruptClosingOfEmptyComment), this.state = D.DATA, this.emitCurrentComment(n);
        break;
      }
      case N.EOF: {
        this._err(te.eofInComment), this.emitCurrentComment(n), this._emitEOFToken();
        break;
      }
      default:
        n.data += "-", this.state = D.COMMENT, this._stateComment(t);
    }
  }
  // Comment state
  //------------------------------------------------------------------
  _stateComment(t) {
    const n = this.currentToken;
    switch (t) {
      case N.HYPHEN_MINUS: {
        this.state = D.COMMENT_END_DASH;
        break;
      }
      case N.LESS_THAN_SIGN: {
        n.data += "<", this.state = D.COMMENT_LESS_THAN_SIGN;
        break;
      }
      case N.NULL: {
        this._err(te.unexpectedNullCharacter), n.data += bt;
        break;
      }
      case N.EOF: {
        this._err(te.eofInComment), this.emitCurrentComment(n), this._emitEOFToken();
        break;
      }
      default:
        n.data += String.fromCodePoint(t);
    }
  }
  // Comment less-than sign state
  //------------------------------------------------------------------
  _stateCommentLessThanSign(t) {
    const n = this.currentToken;
    switch (t) {
      case N.EXCLAMATION_MARK: {
        n.data += "!", this.state = D.COMMENT_LESS_THAN_SIGN_BANG;
        break;
      }
      case N.LESS_THAN_SIGN: {
        n.data += "<";
        break;
      }
      default:
        this.state = D.COMMENT, this._stateComment(t);
    }
  }
  // Comment less-than sign bang state
  //------------------------------------------------------------------
  _stateCommentLessThanSignBang(t) {
    t === N.HYPHEN_MINUS ? this.state = D.COMMENT_LESS_THAN_SIGN_BANG_DASH : (this.state = D.COMMENT, this._stateComment(t));
  }
  // Comment less-than sign bang dash state
  //------------------------------------------------------------------
  _stateCommentLessThanSignBangDash(t) {
    t === N.HYPHEN_MINUS ? this.state = D.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH : (this.state = D.COMMENT_END_DASH, this._stateCommentEndDash(t));
  }
  // Comment less-than sign bang dash dash state
  //------------------------------------------------------------------
  _stateCommentLessThanSignBangDashDash(t) {
    t !== N.GREATER_THAN_SIGN && t !== N.EOF && this._err(te.nestedComment), this.state = D.COMMENT_END, this._stateCommentEnd(t);
  }
  // Comment end dash state
  //------------------------------------------------------------------
  _stateCommentEndDash(t) {
    const n = this.currentToken;
    switch (t) {
      case N.HYPHEN_MINUS: {
        this.state = D.COMMENT_END;
        break;
      }
      case N.EOF: {
        this._err(te.eofInComment), this.emitCurrentComment(n), this._emitEOFToken();
        break;
      }
      default:
        n.data += "-", this.state = D.COMMENT, this._stateComment(t);
    }
  }
  // Comment end state
  //------------------------------------------------------------------
  _stateCommentEnd(t) {
    const n = this.currentToken;
    switch (t) {
      case N.GREATER_THAN_SIGN: {
        this.state = D.DATA, this.emitCurrentComment(n);
        break;
      }
      case N.EXCLAMATION_MARK: {
        this.state = D.COMMENT_END_BANG;
        break;
      }
      case N.HYPHEN_MINUS: {
        n.data += "-";
        break;
      }
      case N.EOF: {
        this._err(te.eofInComment), this.emitCurrentComment(n), this._emitEOFToken();
        break;
      }
      default:
        n.data += "--", this.state = D.COMMENT, this._stateComment(t);
    }
  }
  // Comment end bang state
  //------------------------------------------------------------------
  _stateCommentEndBang(t) {
    const n = this.currentToken;
    switch (t) {
      case N.HYPHEN_MINUS: {
        n.data += "--!", this.state = D.COMMENT_END_DASH;
        break;
      }
      case N.GREATER_THAN_SIGN: {
        this._err(te.incorrectlyClosedComment), this.state = D.DATA, this.emitCurrentComment(n);
        break;
      }
      case N.EOF: {
        this._err(te.eofInComment), this.emitCurrentComment(n), this._emitEOFToken();
        break;
      }
      default:
        n.data += "--!", this.state = D.COMMENT, this._stateComment(t);
    }
  }
  // DOCTYPE state
  //------------------------------------------------------------------
  _stateDoctype(t) {
    switch (t) {
      case N.SPACE:
      case N.LINE_FEED:
      case N.TABULATION:
      case N.FORM_FEED: {
        this.state = D.BEFORE_DOCTYPE_NAME;
        break;
      }
      case N.GREATER_THAN_SIGN: {
        this.state = D.BEFORE_DOCTYPE_NAME, this._stateBeforeDoctypeName(t);
        break;
      }
      case N.EOF: {
        this._err(te.eofInDoctype), this._createDoctypeToken(null);
        const n = this.currentToken;
        n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        this._err(te.missingWhitespaceBeforeDoctypeName), this.state = D.BEFORE_DOCTYPE_NAME, this._stateBeforeDoctypeName(t);
    }
  }
  // Before DOCTYPE name state
  //------------------------------------------------------------------
  _stateBeforeDoctypeName(t) {
    if (Ts(t))
      this._createDoctypeToken(String.fromCharCode(Eu(t))), this.state = D.DOCTYPE_NAME;
    else
      switch (t) {
        case N.SPACE:
        case N.LINE_FEED:
        case N.TABULATION:
        case N.FORM_FEED:
          break;
        case N.NULL: {
          this._err(te.unexpectedNullCharacter), this._createDoctypeToken(bt), this.state = D.DOCTYPE_NAME;
          break;
        }
        case N.GREATER_THAN_SIGN: {
          this._err(te.missingDoctypeName), this._createDoctypeToken(null);
          const n = this.currentToken;
          n.forceQuirks = !0, this.emitCurrentDoctype(n), this.state = D.DATA;
          break;
        }
        case N.EOF: {
          this._err(te.eofInDoctype), this._createDoctypeToken(null);
          const n = this.currentToken;
          n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
          break;
        }
        default:
          this._createDoctypeToken(String.fromCodePoint(t)), this.state = D.DOCTYPE_NAME;
      }
  }
  // DOCTYPE name state
  //------------------------------------------------------------------
  _stateDoctypeName(t) {
    const n = this.currentToken;
    switch (t) {
      case N.SPACE:
      case N.LINE_FEED:
      case N.TABULATION:
      case N.FORM_FEED: {
        this.state = D.AFTER_DOCTYPE_NAME;
        break;
      }
      case N.GREATER_THAN_SIGN: {
        this.state = D.DATA, this.emitCurrentDoctype(n);
        break;
      }
      case N.NULL: {
        this._err(te.unexpectedNullCharacter), n.name += bt;
        break;
      }
      case N.EOF: {
        this._err(te.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        n.name += String.fromCodePoint(Ts(t) ? Eu(t) : t);
    }
  }
  // After DOCTYPE name state
  //------------------------------------------------------------------
  _stateAfterDoctypeName(t) {
    const n = this.currentToken;
    switch (t) {
      case N.SPACE:
      case N.LINE_FEED:
      case N.TABULATION:
      case N.FORM_FEED:
        break;
      case N.GREATER_THAN_SIGN: {
        this.state = D.DATA, this.emitCurrentDoctype(n);
        break;
      }
      case N.EOF: {
        this._err(te.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        this._consumeSequenceIfMatch(In.PUBLIC, !1) ? this.state = D.AFTER_DOCTYPE_PUBLIC_KEYWORD : this._consumeSequenceIfMatch(In.SYSTEM, !1) ? this.state = D.AFTER_DOCTYPE_SYSTEM_KEYWORD : this._ensureHibernation() || (this._err(te.invalidCharacterSequenceAfterDoctypeName), n.forceQuirks = !0, this.state = D.BOGUS_DOCTYPE, this._stateBogusDoctype(t));
    }
  }
  // After DOCTYPE public keyword state
  //------------------------------------------------------------------
  _stateAfterDoctypePublicKeyword(t) {
    const n = this.currentToken;
    switch (t) {
      case N.SPACE:
      case N.LINE_FEED:
      case N.TABULATION:
      case N.FORM_FEED: {
        this.state = D.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;
        break;
      }
      case N.QUOTATION_MARK: {
        this._err(te.missingWhitespaceAfterDoctypePublicKeyword), n.publicId = "", this.state = D.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;
        break;
      }
      case N.APOSTROPHE: {
        this._err(te.missingWhitespaceAfterDoctypePublicKeyword), n.publicId = "", this.state = D.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;
        break;
      }
      case N.GREATER_THAN_SIGN: {
        this._err(te.missingDoctypePublicIdentifier), n.forceQuirks = !0, this.state = D.DATA, this.emitCurrentDoctype(n);
        break;
      }
      case N.EOF: {
        this._err(te.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        this._err(te.missingQuoteBeforeDoctypePublicIdentifier), n.forceQuirks = !0, this.state = D.BOGUS_DOCTYPE, this._stateBogusDoctype(t);
    }
  }
  // Before DOCTYPE public identifier state
  //------------------------------------------------------------------
  _stateBeforeDoctypePublicIdentifier(t) {
    const n = this.currentToken;
    switch (t) {
      case N.SPACE:
      case N.LINE_FEED:
      case N.TABULATION:
      case N.FORM_FEED:
        break;
      case N.QUOTATION_MARK: {
        n.publicId = "", this.state = D.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;
        break;
      }
      case N.APOSTROPHE: {
        n.publicId = "", this.state = D.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;
        break;
      }
      case N.GREATER_THAN_SIGN: {
        this._err(te.missingDoctypePublicIdentifier), n.forceQuirks = !0, this.state = D.DATA, this.emitCurrentDoctype(n);
        break;
      }
      case N.EOF: {
        this._err(te.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        this._err(te.missingQuoteBeforeDoctypePublicIdentifier), n.forceQuirks = !0, this.state = D.BOGUS_DOCTYPE, this._stateBogusDoctype(t);
    }
  }
  // DOCTYPE public identifier (double-quoted) state
  //------------------------------------------------------------------
  _stateDoctypePublicIdentifierDoubleQuoted(t) {
    const n = this.currentToken;
    switch (t) {
      case N.QUOTATION_MARK: {
        this.state = D.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;
        break;
      }
      case N.NULL: {
        this._err(te.unexpectedNullCharacter), n.publicId += bt;
        break;
      }
      case N.GREATER_THAN_SIGN: {
        this._err(te.abruptDoctypePublicIdentifier), n.forceQuirks = !0, this.emitCurrentDoctype(n), this.state = D.DATA;
        break;
      }
      case N.EOF: {
        this._err(te.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        n.publicId += String.fromCodePoint(t);
    }
  }
  // DOCTYPE public identifier (single-quoted) state
  //------------------------------------------------------------------
  _stateDoctypePublicIdentifierSingleQuoted(t) {
    const n = this.currentToken;
    switch (t) {
      case N.APOSTROPHE: {
        this.state = D.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;
        break;
      }
      case N.NULL: {
        this._err(te.unexpectedNullCharacter), n.publicId += bt;
        break;
      }
      case N.GREATER_THAN_SIGN: {
        this._err(te.abruptDoctypePublicIdentifier), n.forceQuirks = !0, this.emitCurrentDoctype(n), this.state = D.DATA;
        break;
      }
      case N.EOF: {
        this._err(te.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        n.publicId += String.fromCodePoint(t);
    }
  }
  // After DOCTYPE public identifier state
  //------------------------------------------------------------------
  _stateAfterDoctypePublicIdentifier(t) {
    const n = this.currentToken;
    switch (t) {
      case N.SPACE:
      case N.LINE_FEED:
      case N.TABULATION:
      case N.FORM_FEED: {
        this.state = D.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;
        break;
      }
      case N.GREATER_THAN_SIGN: {
        this.state = D.DATA, this.emitCurrentDoctype(n);
        break;
      }
      case N.QUOTATION_MARK: {
        this._err(te.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers), n.systemId = "", this.state = D.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
        break;
      }
      case N.APOSTROPHE: {
        this._err(te.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers), n.systemId = "", this.state = D.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
        break;
      }
      case N.EOF: {
        this._err(te.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        this._err(te.missingQuoteBeforeDoctypeSystemIdentifier), n.forceQuirks = !0, this.state = D.BOGUS_DOCTYPE, this._stateBogusDoctype(t);
    }
  }
  // Between DOCTYPE public and system identifiers state
  //------------------------------------------------------------------
  _stateBetweenDoctypePublicAndSystemIdentifiers(t) {
    const n = this.currentToken;
    switch (t) {
      case N.SPACE:
      case N.LINE_FEED:
      case N.TABULATION:
      case N.FORM_FEED:
        break;
      case N.GREATER_THAN_SIGN: {
        this.emitCurrentDoctype(n), this.state = D.DATA;
        break;
      }
      case N.QUOTATION_MARK: {
        n.systemId = "", this.state = D.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
        break;
      }
      case N.APOSTROPHE: {
        n.systemId = "", this.state = D.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
        break;
      }
      case N.EOF: {
        this._err(te.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        this._err(te.missingQuoteBeforeDoctypeSystemIdentifier), n.forceQuirks = !0, this.state = D.BOGUS_DOCTYPE, this._stateBogusDoctype(t);
    }
  }
  // After DOCTYPE system keyword state
  //------------------------------------------------------------------
  _stateAfterDoctypeSystemKeyword(t) {
    const n = this.currentToken;
    switch (t) {
      case N.SPACE:
      case N.LINE_FEED:
      case N.TABULATION:
      case N.FORM_FEED: {
        this.state = D.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;
        break;
      }
      case N.QUOTATION_MARK: {
        this._err(te.missingWhitespaceAfterDoctypeSystemKeyword), n.systemId = "", this.state = D.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
        break;
      }
      case N.APOSTROPHE: {
        this._err(te.missingWhitespaceAfterDoctypeSystemKeyword), n.systemId = "", this.state = D.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
        break;
      }
      case N.GREATER_THAN_SIGN: {
        this._err(te.missingDoctypeSystemIdentifier), n.forceQuirks = !0, this.state = D.DATA, this.emitCurrentDoctype(n);
        break;
      }
      case N.EOF: {
        this._err(te.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        this._err(te.missingQuoteBeforeDoctypeSystemIdentifier), n.forceQuirks = !0, this.state = D.BOGUS_DOCTYPE, this._stateBogusDoctype(t);
    }
  }
  // Before DOCTYPE system identifier state
  //------------------------------------------------------------------
  _stateBeforeDoctypeSystemIdentifier(t) {
    const n = this.currentToken;
    switch (t) {
      case N.SPACE:
      case N.LINE_FEED:
      case N.TABULATION:
      case N.FORM_FEED:
        break;
      case N.QUOTATION_MARK: {
        n.systemId = "", this.state = D.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
        break;
      }
      case N.APOSTROPHE: {
        n.systemId = "", this.state = D.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
        break;
      }
      case N.GREATER_THAN_SIGN: {
        this._err(te.missingDoctypeSystemIdentifier), n.forceQuirks = !0, this.state = D.DATA, this.emitCurrentDoctype(n);
        break;
      }
      case N.EOF: {
        this._err(te.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        this._err(te.missingQuoteBeforeDoctypeSystemIdentifier), n.forceQuirks = !0, this.state = D.BOGUS_DOCTYPE, this._stateBogusDoctype(t);
    }
  }
  // DOCTYPE system identifier (double-quoted) state
  //------------------------------------------------------------------
  _stateDoctypeSystemIdentifierDoubleQuoted(t) {
    const n = this.currentToken;
    switch (t) {
      case N.QUOTATION_MARK: {
        this.state = D.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;
        break;
      }
      case N.NULL: {
        this._err(te.unexpectedNullCharacter), n.systemId += bt;
        break;
      }
      case N.GREATER_THAN_SIGN: {
        this._err(te.abruptDoctypeSystemIdentifier), n.forceQuirks = !0, this.emitCurrentDoctype(n), this.state = D.DATA;
        break;
      }
      case N.EOF: {
        this._err(te.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        n.systemId += String.fromCodePoint(t);
    }
  }
  // DOCTYPE system identifier (single-quoted) state
  //------------------------------------------------------------------
  _stateDoctypeSystemIdentifierSingleQuoted(t) {
    const n = this.currentToken;
    switch (t) {
      case N.APOSTROPHE: {
        this.state = D.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;
        break;
      }
      case N.NULL: {
        this._err(te.unexpectedNullCharacter), n.systemId += bt;
        break;
      }
      case N.GREATER_THAN_SIGN: {
        this._err(te.abruptDoctypeSystemIdentifier), n.forceQuirks = !0, this.emitCurrentDoctype(n), this.state = D.DATA;
        break;
      }
      case N.EOF: {
        this._err(te.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        n.systemId += String.fromCodePoint(t);
    }
  }
  // After DOCTYPE system identifier state
  //------------------------------------------------------------------
  _stateAfterDoctypeSystemIdentifier(t) {
    const n = this.currentToken;
    switch (t) {
      case N.SPACE:
      case N.LINE_FEED:
      case N.TABULATION:
      case N.FORM_FEED:
        break;
      case N.GREATER_THAN_SIGN: {
        this.emitCurrentDoctype(n), this.state = D.DATA;
        break;
      }
      case N.EOF: {
        this._err(te.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        this._err(te.unexpectedCharacterAfterDoctypeSystemIdentifier), this.state = D.BOGUS_DOCTYPE, this._stateBogusDoctype(t);
    }
  }
  // Bogus DOCTYPE state
  //------------------------------------------------------------------
  _stateBogusDoctype(t) {
    const n = this.currentToken;
    switch (t) {
      case N.GREATER_THAN_SIGN: {
        this.emitCurrentDoctype(n), this.state = D.DATA;
        break;
      }
      case N.NULL: {
        this._err(te.unexpectedNullCharacter);
        break;
      }
      case N.EOF: {
        this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
    }
  }
  // CDATA section state
  //------------------------------------------------------------------
  _stateCdataSection(t) {
    switch (t) {
      case N.RIGHT_SQUARE_BRACKET: {
        this.state = D.CDATA_SECTION_BRACKET;
        break;
      }
      case N.EOF: {
        this._err(te.eofInCdata), this._emitEOFToken();
        break;
      }
      default:
        this._emitCodePoint(t);
    }
  }
  // CDATA section bracket state
  //------------------------------------------------------------------
  _stateCdataSectionBracket(t) {
    t === N.RIGHT_SQUARE_BRACKET ? this.state = D.CDATA_SECTION_END : (this._emitChars("]"), this.state = D.CDATA_SECTION, this._stateCdataSection(t));
  }
  // CDATA section end state
  //------------------------------------------------------------------
  _stateCdataSectionEnd(t) {
    switch (t) {
      case N.GREATER_THAN_SIGN: {
        this.state = D.DATA;
        break;
      }
      case N.RIGHT_SQUARE_BRACKET: {
        this._emitChars("]");
        break;
      }
      default:
        this._emitChars("]]"), this.state = D.CDATA_SECTION, this._stateCdataSection(t);
    }
  }
  // Character reference state
  //------------------------------------------------------------------
  _stateCharacterReference() {
    let t = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);
    if (t < 0)
      if (this.preprocessor.lastChunkWritten)
        t = this.entityDecoder.end();
      else {
        this.active = !1, this.preprocessor.pos = this.preprocessor.html.length - 1, this.consumedAfterSnapshot = 0, this.preprocessor.endOfChunkHit = !0;
        return;
      }
    t === 0 ? (this.preprocessor.pos = this.entityStartPos, this._flushCodePointConsumedAsCharacterReference(N.AMPERSAND), this.state = !this._isCharacterReferenceInAttribute() && TI(this.preprocessor.peek(1)) ? D.AMBIGUOUS_AMPERSAND : this.returnState) : this.state = this.returnState;
  }
  // Ambiguos ampersand state
  //------------------------------------------------------------------
  _stateAmbiguousAmpersand(t) {
    TI(t) ? this._flushCodePointConsumedAsCharacterReference(t) : (t === N.SEMICOLON && this._err(te.unknownNamedCharacterReference), this.state = this.returnState, this._callState(t));
  }
}
const TN = /* @__PURE__ */ new Set([h.DD, h.DT, h.LI, h.OPTGROUP, h.OPTION, h.P, h.RB, h.RP, h.RT, h.RTC]), _I = /* @__PURE__ */ new Set([
  ...TN,
  h.CAPTION,
  h.COLGROUP,
  h.TBODY,
  h.TD,
  h.TFOOT,
  h.TH,
  h.THEAD,
  h.TR
]), ju = /* @__PURE__ */ new Set([
  h.APPLET,
  h.CAPTION,
  h.HTML,
  h.MARQUEE,
  h.OBJECT,
  h.TABLE,
  h.TD,
  h.TEMPLATE,
  h.TH
]), Fz = /* @__PURE__ */ new Set([...ju, h.OL, h.UL]), Bz = /* @__PURE__ */ new Set([...ju, h.BUTTON]), vI = /* @__PURE__ */ new Set([h.ANNOTATION_XML, h.MI, h.MN, h.MO, h.MS, h.MTEXT]), AI = /* @__PURE__ */ new Set([h.DESC, h.FOREIGN_OBJECT, h.TITLE]), Uz = /* @__PURE__ */ new Set([h.TR, h.TEMPLATE, h.HTML]), Hz = /* @__PURE__ */ new Set([h.TBODY, h.TFOOT, h.THEAD, h.TEMPLATE, h.HTML]), $z = /* @__PURE__ */ new Set([h.TABLE, h.TEMPLATE, h.HTML]), zz = /* @__PURE__ */ new Set([h.TD, h.TH]);
class Gz {
  get currentTmplContentOrNode() {
    return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;
  }
  constructor(t, n, r) {
    this.treeAdapter = n, this.handler = r, this.items = [], this.tagIDs = [], this.stackTop = -1, this.tmplCount = 0, this.currentTagId = h.UNKNOWN, this.current = t;
  }
  //Index of element
  _indexOf(t) {
    return this.items.lastIndexOf(t, this.stackTop);
  }
  //Update current element
  _isInTemplate() {
    return this.currentTagId === h.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === ue.HTML;
  }
  _updateCurrentElement() {
    this.current = this.items[this.stackTop], this.currentTagId = this.tagIDs[this.stackTop];
  }
  //Mutations
  push(t, n) {
    this.stackTop++, this.items[this.stackTop] = t, this.current = t, this.tagIDs[this.stackTop] = n, this.currentTagId = n, this._isInTemplate() && this.tmplCount++, this.handler.onItemPush(t, n, !0);
  }
  pop() {
    const t = this.current;
    this.tmplCount > 0 && this._isInTemplate() && this.tmplCount--, this.stackTop--, this._updateCurrentElement(), this.handler.onItemPop(t, !0);
  }
  replace(t, n) {
    const r = this._indexOf(t);
    this.items[r] = n, r === this.stackTop && (this.current = n);
  }
  insertAfter(t, n, r) {
    const o = this._indexOf(t) + 1;
    this.items.splice(o, 0, n), this.tagIDs.splice(o, 0, r), this.stackTop++, o === this.stackTop && this._updateCurrentElement(), this.current && this.currentTagId !== void 0 && this.handler.onItemPush(this.current, this.currentTagId, o === this.stackTop);
  }
  popUntilTagNamePopped(t) {
    let n = this.stackTop + 1;
    do
      n = this.tagIDs.lastIndexOf(t, n - 1);
    while (n > 0 && this.treeAdapter.getNamespaceURI(this.items[n]) !== ue.HTML);
    this.shortenToLength(Math.max(n, 0));
  }
  shortenToLength(t) {
    for (; this.stackTop >= t; ) {
      const n = this.current;
      this.tmplCount > 0 && this._isInTemplate() && (this.tmplCount -= 1), this.stackTop--, this._updateCurrentElement(), this.handler.onItemPop(n, this.stackTop < t);
    }
  }
  popUntilElementPopped(t) {
    const n = this._indexOf(t);
    this.shortenToLength(Math.max(n, 0));
  }
  popUntilPopped(t, n) {
    const r = this._indexOfTagNames(t, n);
    this.shortenToLength(Math.max(r, 0));
  }
  popUntilNumberedHeaderPopped() {
    this.popUntilPopped(cE, ue.HTML);
  }
  popUntilTableCellPopped() {
    this.popUntilPopped(zz, ue.HTML);
  }
  popAllUpToHtmlElement() {
    this.tmplCount = 0, this.shortenToLength(1);
  }
  _indexOfTagNames(t, n) {
    for (let r = this.stackTop; r >= 0; r--)
      if (t.has(this.tagIDs[r]) && this.treeAdapter.getNamespaceURI(this.items[r]) === n)
        return r;
    return -1;
  }
  clearBackTo(t, n) {
    const r = this._indexOfTagNames(t, n);
    this.shortenToLength(r + 1);
  }
  clearBackToTableContext() {
    this.clearBackTo($z, ue.HTML);
  }
  clearBackToTableBodyContext() {
    this.clearBackTo(Hz, ue.HTML);
  }
  clearBackToTableRowContext() {
    this.clearBackTo(Uz, ue.HTML);
  }
  remove(t) {
    const n = this._indexOf(t);
    n >= 0 && (n === this.stackTop ? this.pop() : (this.items.splice(n, 1), this.tagIDs.splice(n, 1), this.stackTop--, this._updateCurrentElement(), this.handler.onItemPop(t, !1)));
  }
  //Search
  tryPeekProperlyNestedBodyElement() {
    return this.stackTop >= 1 && this.tagIDs[1] === h.BODY ? this.items[1] : null;
  }
  contains(t) {
    return this._indexOf(t) > -1;
  }
  getCommonAncestor(t) {
    const n = this._indexOf(t) - 1;
    return n >= 0 ? this.items[n] : null;
  }
  isRootHtmlElementCurrent() {
    return this.stackTop === 0 && this.tagIDs[0] === h.HTML;
  }
  //Element in scope
  hasInDynamicScope(t, n) {
    for (let r = this.stackTop; r >= 0; r--) {
      const o = this.tagIDs[r];
      switch (this.treeAdapter.getNamespaceURI(this.items[r])) {
        case ue.HTML: {
          if (o === t)
            return !0;
          if (n.has(o))
            return !1;
          break;
        }
        case ue.SVG: {
          if (AI.has(o))
            return !1;
          break;
        }
        case ue.MATHML: {
          if (vI.has(o))
            return !1;
          break;
        }
      }
    }
    return !0;
  }
  hasInScope(t) {
    return this.hasInDynamicScope(t, ju);
  }
  hasInListItemScope(t) {
    return this.hasInDynamicScope(t, Fz);
  }
  hasInButtonScope(t) {
    return this.hasInDynamicScope(t, Bz);
  }
  hasNumberedHeaderInScope() {
    for (let t = this.stackTop; t >= 0; t--) {
      const n = this.tagIDs[t];
      switch (this.treeAdapter.getNamespaceURI(this.items[t])) {
        case ue.HTML: {
          if (cE.has(n))
            return !0;
          if (ju.has(n))
            return !1;
          break;
        }
        case ue.SVG: {
          if (AI.has(n))
            return !1;
          break;
        }
        case ue.MATHML: {
          if (vI.has(n))
            return !1;
          break;
        }
      }
    }
    return !0;
  }
  hasInTableScope(t) {
    for (let n = this.stackTop; n >= 0; n--)
      if (this.treeAdapter.getNamespaceURI(this.items[n]) === ue.HTML)
        switch (this.tagIDs[n]) {
          case t:
            return !0;
          case h.TABLE:
          case h.HTML:
            return !1;
        }
    return !0;
  }
  hasTableBodyContextInTableScope() {
    for (let t = this.stackTop; t >= 0; t--)
      if (this.treeAdapter.getNamespaceURI(this.items[t]) === ue.HTML)
        switch (this.tagIDs[t]) {
          case h.TBODY:
          case h.THEAD:
          case h.TFOOT:
            return !0;
          case h.TABLE:
          case h.HTML:
            return !1;
        }
    return !0;
  }
  hasInSelectScope(t) {
    for (let n = this.stackTop; n >= 0; n--)
      if (this.treeAdapter.getNamespaceURI(this.items[n]) === ue.HTML)
        switch (this.tagIDs[n]) {
          case t:
            return !0;
          case h.OPTION:
          case h.OPTGROUP:
            break;
          default:
            return !1;
        }
    return !0;
  }
  //Implied end tags
  generateImpliedEndTags() {
    for (; this.currentTagId !== void 0 && TN.has(this.currentTagId); )
      this.pop();
  }
  generateImpliedEndTagsThoroughly() {
    for (; this.currentTagId !== void 0 && _I.has(this.currentTagId); )
      this.pop();
  }
  generateImpliedEndTagsWithExclusion(t) {
    for (; this.currentTagId !== void 0 && this.currentTagId !== t && _I.has(this.currentTagId); )
      this.pop();
  }
}
const Eb = 3;
var Nr;
(function(e) {
  e[e.Marker = 0] = "Marker", e[e.Element = 1] = "Element";
})(Nr || (Nr = {}));
const kI = { type: Nr.Marker };
class qz {
  constructor(t) {
    this.treeAdapter = t, this.entries = [], this.bookmark = null;
  }
  //Noah Ark's condition
  //OPTIMIZATION: at first we try to find possible candidates for exclusion using
  //lightweight heuristics without thorough attributes check.
  _getNoahArkConditionCandidates(t, n) {
    const r = [], o = n.length, s = this.treeAdapter.getTagName(t), u = this.treeAdapter.getNamespaceURI(t);
    for (let c = 0; c < this.entries.length; c++) {
      const p = this.entries[c];
      if (p.type === Nr.Marker)
        break;
      const { element: f } = p;
      if (this.treeAdapter.getTagName(f) === s && this.treeAdapter.getNamespaceURI(f) === u) {
        const b = this.treeAdapter.getAttrList(f);
        b.length === o && r.push({ idx: c, attrs: b });
      }
    }
    return r;
  }
  _ensureNoahArkCondition(t) {
    if (this.entries.length < Eb)
      return;
    const n = this.treeAdapter.getAttrList(t), r = this._getNoahArkConditionCandidates(t, n);
    if (r.length < Eb)
      return;
    const o = new Map(n.map((u) => [u.name, u.value]));
    let s = 0;
    for (let u = 0; u < r.length; u++) {
      const c = r[u];
      c.attrs.every((p) => o.get(p.name) === p.value) && (s += 1, s >= Eb && this.entries.splice(c.idx, 1));
    }
  }
  //Mutations
  insertMarker() {
    this.entries.unshift(kI);
  }
  pushElement(t, n) {
    this._ensureNoahArkCondition(t), this.entries.unshift({
      type: Nr.Element,
      element: t,
      token: n
    });
  }
  insertElementAfterBookmark(t, n) {
    const r = this.entries.indexOf(this.bookmark);
    this.entries.splice(r, 0, {
      type: Nr.Element,
      element: t,
      token: n
    });
  }
  removeEntry(t) {
    const n = this.entries.indexOf(t);
    n !== -1 && this.entries.splice(n, 1);
  }
  /**
   * Clears the list of formatting elements up to the last marker.
   *
   * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker
   */
  clearToLastMarker() {
    const t = this.entries.indexOf(kI);
    t === -1 ? this.entries.length = 0 : this.entries.splice(0, t + 1);
  }
  //Search
  getElementEntryInScopeWithTagName(t) {
    const n = this.entries.find((r) => r.type === Nr.Marker || this.treeAdapter.getTagName(r.element) === t);
    return n && n.type === Nr.Element ? n : null;
  }
  getElementEntry(t) {
    return this.entries.find((n) => n.type === Nr.Element && n.element === t);
  }
}
const _a = {
  //Node construction
  createDocument() {
    return {
      nodeName: "#document",
      mode: Jn.NO_QUIRKS,
      childNodes: []
    };
  },
  createDocumentFragment() {
    return {
      nodeName: "#document-fragment",
      childNodes: []
    };
  },
  createElement(e, t, n) {
    return {
      nodeName: e,
      tagName: e,
      attrs: n,
      namespaceURI: t,
      childNodes: [],
      parentNode: null
    };
  },
  createCommentNode(e) {
    return {
      nodeName: "#comment",
      data: e,
      parentNode: null
    };
  },
  createTextNode(e) {
    return {
      nodeName: "#text",
      value: e,
      parentNode: null
    };
  },
  //Tree mutation
  appendChild(e, t) {
    e.childNodes.push(t), t.parentNode = e;
  },
  insertBefore(e, t, n) {
    const r = e.childNodes.indexOf(n);
    e.childNodes.splice(r, 0, t), t.parentNode = e;
  },
  setTemplateContent(e, t) {
    e.content = t;
  },
  getTemplateContent(e) {
    return e.content;
  },
  setDocumentType(e, t, n, r) {
    const o = e.childNodes.find((s) => s.nodeName === "#documentType");
    if (o)
      o.name = t, o.publicId = n, o.systemId = r;
    else {
      const s = {
        nodeName: "#documentType",
        name: t,
        publicId: n,
        systemId: r,
        parentNode: null
      };
      _a.appendChild(e, s);
    }
  },
  setDocumentMode(e, t) {
    e.mode = t;
  },
  getDocumentMode(e) {
    return e.mode;
  },
  detachNode(e) {
    if (e.parentNode) {
      const t = e.parentNode.childNodes.indexOf(e);
      e.parentNode.childNodes.splice(t, 1), e.parentNode = null;
    }
  },
  insertText(e, t) {
    if (e.childNodes.length > 0) {
      const n = e.childNodes[e.childNodes.length - 1];
      if (_a.isTextNode(n)) {
        n.value += t;
        return;
      }
    }
    _a.appendChild(e, _a.createTextNode(t));
  },
  insertTextBefore(e, t, n) {
    const r = e.childNodes[e.childNodes.indexOf(n) - 1];
    r && _a.isTextNode(r) ? r.value += t : _a.insertBefore(e, _a.createTextNode(t), n);
  },
  adoptAttributes(e, t) {
    const n = new Set(e.attrs.map((r) => r.name));
    for (let r = 0; r < t.length; r++)
      n.has(t[r].name) || e.attrs.push(t[r]);
  },
  //Tree traversing
  getFirstChild(e) {
    return e.childNodes[0];
  },
  getChildNodes(e) {
    return e.childNodes;
  },
  getParentNode(e) {
    return e.parentNode;
  },
  getAttrList(e) {
    return e.attrs;
  },
  //Node data
  getTagName(e) {
    return e.tagName;
  },
  getNamespaceURI(e) {
    return e.namespaceURI;
  },
  getTextNodeContent(e) {
    return e.value;
  },
  getCommentNodeContent(e) {
    return e.data;
  },
  getDocumentTypeNodeName(e) {
    return e.name;
  },
  getDocumentTypeNodePublicId(e) {
    return e.publicId;
  },
  getDocumentTypeNodeSystemId(e) {
    return e.systemId;
  },
  //Node types
  isTextNode(e) {
    return e.nodeName === "#text";
  },
  isCommentNode(e) {
    return e.nodeName === "#comment";
  },
  isDocumentTypeNode(e) {
    return e.nodeName === "#documentType";
  },
  isElementNode(e) {
    return Object.prototype.hasOwnProperty.call(e, "tagName");
  },
  // Source code location
  setNodeSourceCodeLocation(e, t) {
    e.sourceCodeLocation = t;
  },
  getNodeSourceCodeLocation(e) {
    return e.sourceCodeLocation;
  },
  updateNodeSourceCodeLocation(e, t) {
    e.sourceCodeLocation = { ...e.sourceCodeLocation, ...t };
  }
}, SN = "html", jz = "about:legacy-compat", Vz = "http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd", _N = [
  "+//silmaril//dtd html pro v0r11 19970101//",
  "-//as//dtd html 3.0 aswedit + extensions//",
  "-//advasoft ltd//dtd html 3.0 aswedit + extensions//",
  "-//ietf//dtd html 2.0 level 1//",
  "-//ietf//dtd html 2.0 level 2//",
  "-//ietf//dtd html 2.0 strict level 1//",
  "-//ietf//dtd html 2.0 strict level 2//",
  "-//ietf//dtd html 2.0 strict//",
  "-//ietf//dtd html 2.0//",
  "-//ietf//dtd html 2.1e//",
  "-//ietf//dtd html 3.0//",
  "-//ietf//dtd html 3.2 final//",
  "-//ietf//dtd html 3.2//",
  "-//ietf//dtd html 3//",
  "-//ietf//dtd html level 0//",
  "-//ietf//dtd html level 1//",
  "-//ietf//dtd html level 2//",
  "-//ietf//dtd html level 3//",
  "-//ietf//dtd html strict level 0//",
  "-//ietf//dtd html strict level 1//",
  "-//ietf//dtd html strict level 2//",
  "-//ietf//dtd html strict level 3//",
  "-//ietf//dtd html strict//",
  "-//ietf//dtd html//",
  "-//metrius//dtd metrius presentational//",
  "-//microsoft//dtd internet explorer 2.0 html strict//",
  "-//microsoft//dtd internet explorer 2.0 html//",
  "-//microsoft//dtd internet explorer 2.0 tables//",
  "-//microsoft//dtd internet explorer 3.0 html strict//",
  "-//microsoft//dtd internet explorer 3.0 html//",
  "-//microsoft//dtd internet explorer 3.0 tables//",
  "-//netscape comm. corp.//dtd html//",
  "-//netscape comm. corp.//dtd strict html//",
  "-//o'reilly and associates//dtd html 2.0//",
  "-//o'reilly and associates//dtd html extended 1.0//",
  "-//o'reilly and associates//dtd html extended relaxed 1.0//",
  "-//sq//dtd html 2.0 hotmetal + extensions//",
  "-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//",
  "-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//",
  "-//spyglass//dtd html 2.0 extended//",
  "-//sun microsystems corp.//dtd hotjava html//",
  "-//sun microsystems corp.//dtd hotjava strict html//",
  "-//w3c//dtd html 3 1995-03-24//",
  "-//w3c//dtd html 3.2 draft//",
  "-//w3c//dtd html 3.2 final//",
  "-//w3c//dtd html 3.2//",
  "-//w3c//dtd html 3.2s draft//",
  "-//w3c//dtd html 4.0 frameset//",
  "-//w3c//dtd html 4.0 transitional//",
  "-//w3c//dtd html experimental 19960712//",
  "-//w3c//dtd html experimental 970421//",
  "-//w3c//dtd w3 html//",
  "-//w3o//dtd w3 html 3.0//",
  "-//webtechs//dtd mozilla html 2.0//",
  "-//webtechs//dtd mozilla html//"
], Wz = [
  ..._N,
  "-//w3c//dtd html 4.01 frameset//",
  "-//w3c//dtd html 4.01 transitional//"
], Yz = /* @__PURE__ */ new Set([
  "-//w3o//dtd w3 html strict 3.0//en//",
  "-/w3c/dtd html 4.0 transitional/en",
  "html"
]), vN = ["-//w3c//dtd xhtml 1.0 frameset//", "-//w3c//dtd xhtml 1.0 transitional//"], Kz = [
  ...vN,
  "-//w3c//dtd html 4.01 frameset//",
  "-//w3c//dtd html 4.01 transitional//"
];
function CI(e, t) {
  return t.some((n) => e.startsWith(n));
}
function Xz(e) {
  return e.name === SN && e.publicId === null && (e.systemId === null || e.systemId === jz);
}
function Qz(e) {
  if (e.name !== SN)
    return Jn.QUIRKS;
  const { systemId: t } = e;
  if (t && t.toLowerCase() === Vz)
    return Jn.QUIRKS;
  let { publicId: n } = e;
  if (n !== null) {
    if (n = n.toLowerCase(), Yz.has(n))
      return Jn.QUIRKS;
    let r = t === null ? Wz : _N;
    if (CI(n, r))
      return Jn.QUIRKS;
    if (r = t === null ? vN : Kz, CI(n, r))
      return Jn.LIMITED_QUIRKS;
  }
  return Jn.NO_QUIRKS;
}
const wI = {
  TEXT_HTML: "text/html",
  APPLICATION_XML: "application/xhtml+xml"
}, Zz = "definitionurl", Jz = "definitionURL", eG = new Map([
  "attributeName",
  "attributeType",
  "baseFrequency",
  "baseProfile",
  "calcMode",
  "clipPathUnits",
  "diffuseConstant",
  "edgeMode",
  "filterUnits",
  "glyphRef",
  "gradientTransform",
  "gradientUnits",
  "kernelMatrix",
  "kernelUnitLength",
  "keyPoints",
  "keySplines",
  "keyTimes",
  "lengthAdjust",
  "limitingConeAngle",
  "markerHeight",
  "markerUnits",
  "markerWidth",
  "maskContentUnits",
  "maskUnits",
  "numOctaves",
  "pathLength",
  "patternContentUnits",
  "patternTransform",
  "patternUnits",
  "pointsAtX",
  "pointsAtY",
  "pointsAtZ",
  "preserveAlpha",
  "preserveAspectRatio",
  "primitiveUnits",
  "refX",
  "refY",
  "repeatCount",
  "repeatDur",
  "requiredExtensions",
  "requiredFeatures",
  "specularConstant",
  "specularExponent",
  "spreadMethod",
  "startOffset",
  "stdDeviation",
  "stitchTiles",
  "surfaceScale",
  "systemLanguage",
  "tableValues",
  "targetX",
  "targetY",
  "textLength",
  "viewBox",
  "viewTarget",
  "xChannelSelector",
  "yChannelSelector",
  "zoomAndPan"
].map((e) => [e.toLowerCase(), e])), tG = /* @__PURE__ */ new Map([
  ["xlink:actuate", { prefix: "xlink", name: "actuate", namespace: ue.XLINK }],
  ["xlink:arcrole", { prefix: "xlink", name: "arcrole", namespace: ue.XLINK }],
  ["xlink:href", { prefix: "xlink", name: "href", namespace: ue.XLINK }],
  ["xlink:role", { prefix: "xlink", name: "role", namespace: ue.XLINK }],
  ["xlink:show", { prefix: "xlink", name: "show", namespace: ue.XLINK }],
  ["xlink:title", { prefix: "xlink", name: "title", namespace: ue.XLINK }],
  ["xlink:type", { prefix: "xlink", name: "type", namespace: ue.XLINK }],
  ["xml:lang", { prefix: "xml", name: "lang", namespace: ue.XML }],
  ["xml:space", { prefix: "xml", name: "space", namespace: ue.XML }],
  ["xmlns", { prefix: "", name: "xmlns", namespace: ue.XMLNS }],
  ["xmlns:xlink", { prefix: "xmlns", name: "xlink", namespace: ue.XMLNS }]
]), nG = new Map([
  "altGlyph",
  "altGlyphDef",
  "altGlyphItem",
  "animateColor",
  "animateMotion",
  "animateTransform",
  "clipPath",
  "feBlend",
  "feColorMatrix",
  "feComponentTransfer",
  "feComposite",
  "feConvolveMatrix",
  "feDiffuseLighting",
  "feDisplacementMap",
  "feDistantLight",
  "feFlood",
  "feFuncA",
  "feFuncB",
  "feFuncG",
  "feFuncR",
  "feGaussianBlur",
  "feImage",
  "feMerge",
  "feMergeNode",
  "feMorphology",
  "feOffset",
  "fePointLight",
  "feSpecularLighting",
  "feSpotLight",
  "feTile",
  "feTurbulence",
  "foreignObject",
  "glyphRef",
  "linearGradient",
  "radialGradient",
  "textPath"
].map((e) => [e.toLowerCase(), e])), rG = /* @__PURE__ */ new Set([
  h.B,
  h.BIG,
  h.BLOCKQUOTE,
  h.BODY,
  h.BR,
  h.CENTER,
  h.CODE,
  h.DD,
  h.DIV,
  h.DL,
  h.DT,
  h.EM,
  h.EMBED,
  h.H1,
  h.H2,
  h.H3,
  h.H4,
  h.H5,
  h.H6,
  h.HEAD,
  h.HR,
  h.I,
  h.IMG,
  h.LI,
  h.LISTING,
  h.MENU,
  h.META,
  h.NOBR,
  h.OL,
  h.P,
  h.PRE,
  h.RUBY,
  h.S,
  h.SMALL,
  h.SPAN,
  h.STRONG,
  h.STRIKE,
  h.SUB,
  h.SUP,
  h.TABLE,
  h.TT,
  h.U,
  h.UL,
  h.VAR
]);
function aG(e) {
  const t = e.tagID;
  return t === h.FONT && e.attrs.some(({ name: r }) => r === li.COLOR || r === li.SIZE || r === li.FACE) || rG.has(t);
}
function AN(e) {
  for (let t = 0; t < e.attrs.length; t++)
    if (e.attrs[t].name === Zz) {
      e.attrs[t].name = Jz;
      break;
    }
}
function kN(e) {
  for (let t = 0; t < e.attrs.length; t++) {
    const n = eG.get(e.attrs[t].name);
    n != null && (e.attrs[t].name = n);
  }
}
function o1(e) {
  for (let t = 0; t < e.attrs.length; t++) {
    const n = tG.get(e.attrs[t].name);
    n && (e.attrs[t].prefix = n.prefix, e.attrs[t].name = n.name, e.attrs[t].namespace = n.namespace);
  }
}
function iG(e) {
  const t = nG.get(e.tagName);
  t != null && (e.tagName = t, e.tagID = Co(e.tagName));
}
function oG(e, t) {
  return t === ue.MATHML && (e === h.MI || e === h.MO || e === h.MN || e === h.MS || e === h.MTEXT);
}
function sG(e, t, n) {
  if (t === ue.MATHML && e === h.ANNOTATION_XML) {
    for (let r = 0; r < n.length; r++)
      if (n[r].name === li.ENCODING) {
        const o = n[r].value.toLowerCase();
        return o === wI.TEXT_HTML || o === wI.APPLICATION_XML;
      }
  }
  return t === ue.SVG && (e === h.FOREIGN_OBJECT || e === h.DESC || e === h.TITLE);
}
function lG(e, t, n, r) {
  return (!r || r === ue.HTML) && sG(e, t, n) || (!r || r === ue.MATHML) && oG(e, t);
}
const uG = "hidden", cG = 8, dG = 3;
var U;
(function(e) {
  e[e.INITIAL = 0] = "INITIAL", e[e.BEFORE_HTML = 1] = "BEFORE_HTML", e[e.BEFORE_HEAD = 2] = "BEFORE_HEAD", e[e.IN_HEAD = 3] = "IN_HEAD", e[e.IN_HEAD_NO_SCRIPT = 4] = "IN_HEAD_NO_SCRIPT", e[e.AFTER_HEAD = 5] = "AFTER_HEAD", e[e.IN_BODY = 6] = "IN_BODY", e[e.TEXT = 7] = "TEXT", e[e.IN_TABLE = 8] = "IN_TABLE", e[e.IN_TABLE_TEXT = 9] = "IN_TABLE_TEXT", e[e.IN_CAPTION = 10] = "IN_CAPTION", e[e.IN_COLUMN_GROUP = 11] = "IN_COLUMN_GROUP", e[e.IN_TABLE_BODY = 12] = "IN_TABLE_BODY", e[e.IN_ROW = 13] = "IN_ROW", e[e.IN_CELL = 14] = "IN_CELL", e[e.IN_SELECT = 15] = "IN_SELECT", e[e.IN_SELECT_IN_TABLE = 16] = "IN_SELECT_IN_TABLE", e[e.IN_TEMPLATE = 17] = "IN_TEMPLATE", e[e.AFTER_BODY = 18] = "AFTER_BODY", e[e.IN_FRAMESET = 19] = "IN_FRAMESET", e[e.AFTER_FRAMESET = 20] = "AFTER_FRAMESET", e[e.AFTER_AFTER_BODY = 21] = "AFTER_AFTER_BODY", e[e.AFTER_AFTER_FRAMESET = 22] = "AFTER_AFTER_FRAMESET";
})(U || (U = {}));
const pG = {
  startLine: -1,
  startCol: -1,
  startOffset: -1,
  endLine: -1,
  endCol: -1,
  endOffset: -1
}, CN = /* @__PURE__ */ new Set([h.TABLE, h.TBODY, h.TFOOT, h.THEAD, h.TR]), II = {
  scriptingEnabled: !0,
  sourceCodeLocationInfo: !1,
  treeAdapter: _a,
  onParseError: null
};
class RI {
  constructor(t, n, r = null, o = null) {
    this.fragmentContext = r, this.scriptHandler = o, this.currentToken = null, this.stopped = !1, this.insertionMode = U.INITIAL, this.originalInsertionMode = U.INITIAL, this.headElement = null, this.formElement = null, this.currentNotInHTML = !1, this.tmplInsertionModeStack = [], this.pendingCharacterTokens = [], this.hasNonWhitespacePendingCharacterToken = !1, this.framesetOk = !0, this.skipNextNewLine = !1, this.fosterParentingEnabled = !1, this.options = {
      ...II,
      ...t
    }, this.treeAdapter = this.options.treeAdapter, this.onParseError = this.options.onParseError, this.onParseError && (this.options.sourceCodeLocationInfo = !0), this.document = n ?? this.treeAdapter.createDocument(), this.tokenizer = new Pz(this.options, this), this.activeFormattingElements = new qz(this.treeAdapter), this.fragmentContextID = r ? Co(this.treeAdapter.getTagName(r)) : h.UNKNOWN, this._setContextModes(r ?? this.document, this.fragmentContextID), this.openElements = new Gz(this.document, this.treeAdapter, this);
  }
  // API
  static parse(t, n) {
    const r = new this(n);
    return r.tokenizer.write(t, !0), r.document;
  }
  static getFragmentParser(t, n) {
    const r = {
      ...II,
      ...n
    };
    t ?? (t = r.treeAdapter.createElement(X.TEMPLATE, ue.HTML, []));
    const o = r.treeAdapter.createElement("documentmock", ue.HTML, []), s = new this(r, o, t);
    return s.fragmentContextID === h.TEMPLATE && s.tmplInsertionModeStack.unshift(U.IN_TEMPLATE), s._initTokenizerForFragmentParsing(), s._insertFakeRootElement(), s._resetInsertionMode(), s._findFormInFragmentContext(), s;
  }
  getFragment() {
    const t = this.treeAdapter.getFirstChild(this.document), n = this.treeAdapter.createDocumentFragment();
    return this._adoptNodes(t, n), n;
  }
  //Errors
  /** @internal */
  _err(t, n, r) {
    var o;
    if (!this.onParseError)
      return;
    const s = (o = t.location) !== null && o !== void 0 ? o : pG, u = {
      code: n,
      startLine: s.startLine,
      startCol: s.startCol,
      startOffset: s.startOffset,
      endLine: r ? s.startLine : s.endLine,
      endCol: r ? s.startCol : s.endCol,
      endOffset: r ? s.startOffset : s.endOffset
    };
    this.onParseError(u);
  }
  //Stack events
  /** @internal */
  onItemPush(t, n, r) {
    var o, s;
    (s = (o = this.treeAdapter).onItemPush) === null || s === void 0 || s.call(o, t), r && this.openElements.stackTop > 0 && this._setContextModes(t, n);
  }
  /** @internal */
  onItemPop(t, n) {
    var r, o;
    if (this.options.sourceCodeLocationInfo && this._setEndLocation(t, this.currentToken), (o = (r = this.treeAdapter).onItemPop) === null || o === void 0 || o.call(r, t, this.openElements.current), n) {
      let s, u;
      this.openElements.stackTop === 0 && this.fragmentContext ? (s = this.fragmentContext, u = this.fragmentContextID) : { current: s, currentTagId: u } = this.openElements, this._setContextModes(s, u);
    }
  }
  _setContextModes(t, n) {
    const r = t === this.document || t && this.treeAdapter.getNamespaceURI(t) === ue.HTML;
    this.currentNotInHTML = !r, this.tokenizer.inForeignNode = !r && t !== void 0 && n !== void 0 && !this._isIntegrationPoint(n, t);
  }
  /** @protected */
  _switchToTextParsing(t, n) {
    this._insertElement(t, ue.HTML), this.tokenizer.state = n, this.originalInsertionMode = this.insertionMode, this.insertionMode = U.TEXT;
  }
  switchToPlaintextParsing() {
    this.insertionMode = U.TEXT, this.originalInsertionMode = U.IN_BODY, this.tokenizer.state = xt.PLAINTEXT;
  }
  //Fragment parsing
  /** @protected */
  _getAdjustedCurrentElement() {
    return this.openElements.stackTop === 0 && this.fragmentContext ? this.fragmentContext : this.openElements.current;
  }
  /** @protected */
  _findFormInFragmentContext() {
    let t = this.fragmentContext;
    for (; t; ) {
      if (this.treeAdapter.getTagName(t) === X.FORM) {
        this.formElement = t;
        break;
      }
      t = this.treeAdapter.getParentNode(t);
    }
  }
  _initTokenizerForFragmentParsing() {
    if (!(!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== ue.HTML))
      switch (this.fragmentContextID) {
        case h.TITLE:
        case h.TEXTAREA: {
          this.tokenizer.state = xt.RCDATA;
          break;
        }
        case h.STYLE:
        case h.XMP:
        case h.IFRAME:
        case h.NOEMBED:
        case h.NOFRAMES:
        case h.NOSCRIPT: {
          this.tokenizer.state = xt.RAWTEXT;
          break;
        }
        case h.SCRIPT: {
          this.tokenizer.state = xt.SCRIPT_DATA;
          break;
        }
        case h.PLAINTEXT: {
          this.tokenizer.state = xt.PLAINTEXT;
          break;
        }
      }
  }
  //Tree mutation
  /** @protected */
  _setDocumentType(t) {
    const n = t.name || "", r = t.publicId || "", o = t.systemId || "";
    if (this.treeAdapter.setDocumentType(this.document, n, r, o), t.location) {
      const u = this.treeAdapter.getChildNodes(this.document).find((c) => this.treeAdapter.isDocumentTypeNode(c));
      u && this.treeAdapter.setNodeSourceCodeLocation(u, t.location);
    }
  }
  /** @protected */
  _attachElementToTree(t, n) {
    if (this.options.sourceCodeLocationInfo) {
      const r = n && {
        ...n,
        startTag: n
      };
      this.treeAdapter.setNodeSourceCodeLocation(t, r);
    }
    if (this._shouldFosterParentOnInsertion())
      this._fosterParentElement(t);
    else {
      const r = this.openElements.currentTmplContentOrNode;
      this.treeAdapter.appendChild(r ?? this.document, t);
    }
  }
  /**
   * For self-closing tags. Add an element to the tree, but skip adding it
   * to the stack.
   */
  /** @protected */
  _appendElement(t, n) {
    const r = this.treeAdapter.createElement(t.tagName, n, t.attrs);
    this._attachElementToTree(r, t.location);
  }
  /** @protected */
  _insertElement(t, n) {
    const r = this.treeAdapter.createElement(t.tagName, n, t.attrs);
    this._attachElementToTree(r, t.location), this.openElements.push(r, t.tagID);
  }
  /** @protected */
  _insertFakeElement(t, n) {
    const r = this.treeAdapter.createElement(t, ue.HTML, []);
    this._attachElementToTree(r, null), this.openElements.push(r, n);
  }
  /** @protected */
  _insertTemplate(t) {
    const n = this.treeAdapter.createElement(t.tagName, ue.HTML, t.attrs), r = this.treeAdapter.createDocumentFragment();
    this.treeAdapter.setTemplateContent(n, r), this._attachElementToTree(n, t.location), this.openElements.push(n, t.tagID), this.options.sourceCodeLocationInfo && this.treeAdapter.setNodeSourceCodeLocation(r, null);
  }
  /** @protected */
  _insertFakeRootElement() {
    const t = this.treeAdapter.createElement(X.HTML, ue.HTML, []);
    this.options.sourceCodeLocationInfo && this.treeAdapter.setNodeSourceCodeLocation(t, null), this.treeAdapter.appendChild(this.openElements.current, t), this.openElements.push(t, h.HTML);
  }
  /** @protected */
  _appendCommentNode(t, n) {
    const r = this.treeAdapter.createCommentNode(t.data);
    this.treeAdapter.appendChild(n, r), this.options.sourceCodeLocationInfo && this.treeAdapter.setNodeSourceCodeLocation(r, t.location);
  }
  /** @protected */
  _insertCharacters(t) {
    let n, r;
    if (this._shouldFosterParentOnInsertion() ? ({ parent: n, beforeElement: r } = this._findFosterParentingLocation(), r ? this.treeAdapter.insertTextBefore(n, t.chars, r) : this.treeAdapter.insertText(n, t.chars)) : (n = this.openElements.currentTmplContentOrNode, this.treeAdapter.insertText(n, t.chars)), !t.location)
      return;
    const o = this.treeAdapter.getChildNodes(n), s = r ? o.lastIndexOf(r) : o.length, u = o[s - 1];
    if (this.treeAdapter.getNodeSourceCodeLocation(u)) {
      const { endLine: p, endCol: f, endOffset: b } = t.location;
      this.treeAdapter.updateNodeSourceCodeLocation(u, { endLine: p, endCol: f, endOffset: b });
    } else this.options.sourceCodeLocationInfo && this.treeAdapter.setNodeSourceCodeLocation(u, t.location);
  }
  /** @protected */
  _adoptNodes(t, n) {
    for (let r = this.treeAdapter.getFirstChild(t); r; r = this.treeAdapter.getFirstChild(t))
      this.treeAdapter.detachNode(r), this.treeAdapter.appendChild(n, r);
  }
  /** @protected */
  _setEndLocation(t, n) {
    if (this.treeAdapter.getNodeSourceCodeLocation(t) && n.location) {
      const r = n.location, o = this.treeAdapter.getTagName(t), s = (
        // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing
        // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.
        n.type === Ye.END_TAG && o === n.tagName ? {
          endTag: { ...r },
          endLine: r.endLine,
          endCol: r.endCol,
          endOffset: r.endOffset
        } : {
          endLine: r.startLine,
          endCol: r.startCol,
          endOffset: r.startOffset
        }
      );
      this.treeAdapter.updateNodeSourceCodeLocation(t, s);
    }
  }
  //Token processing
  shouldProcessStartTagTokenInForeignContent(t) {
    if (!this.currentNotInHTML)
      return !1;
    let n, r;
    return this.openElements.stackTop === 0 && this.fragmentContext ? (n = this.fragmentContext, r = this.fragmentContextID) : { current: n, currentTagId: r } = this.openElements, t.tagID === h.SVG && this.treeAdapter.getTagName(n) === X.ANNOTATION_XML && this.treeAdapter.getNamespaceURI(n) === ue.MATHML ? !1 : (
      // Check that `current` is not an integration point for HTML or MathML elements.
      this.tokenizer.inForeignNode || // If it _is_ an integration point, then we might have to check that it is not an HTML
      // integration point.
      (t.tagID === h.MGLYPH || t.tagID === h.MALIGNMARK) && r !== void 0 && !this._isIntegrationPoint(r, n, ue.HTML)
    );
  }
  /** @protected */
  _processToken(t) {
    switch (t.type) {
      case Ye.CHARACTER: {
        this.onCharacter(t);
        break;
      }
      case Ye.NULL_CHARACTER: {
        this.onNullCharacter(t);
        break;
      }
      case Ye.COMMENT: {
        this.onComment(t);
        break;
      }
      case Ye.DOCTYPE: {
        this.onDoctype(t);
        break;
      }
      case Ye.START_TAG: {
        this._processStartTag(t);
        break;
      }
      case Ye.END_TAG: {
        this.onEndTag(t);
        break;
      }
      case Ye.EOF: {
        this.onEof(t);
        break;
      }
      case Ye.WHITESPACE_CHARACTER: {
        this.onWhitespaceCharacter(t);
        break;
      }
    }
  }
  //Integration points
  /** @protected */
  _isIntegrationPoint(t, n, r) {
    const o = this.treeAdapter.getNamespaceURI(n), s = this.treeAdapter.getAttrList(n);
    return lG(t, o, s, r);
  }
  //Active formatting elements reconstruction
  /** @protected */
  _reconstructActiveFormattingElements() {
    const t = this.activeFormattingElements.entries.length;
    if (t) {
      const n = this.activeFormattingElements.entries.findIndex((o) => o.type === Nr.Marker || this.openElements.contains(o.element)), r = n === -1 ? t - 1 : n - 1;
      for (let o = r; o >= 0; o--) {
        const s = this.activeFormattingElements.entries[o];
        this._insertElement(s.token, this.treeAdapter.getNamespaceURI(s.element)), s.element = this.openElements.current;
      }
    }
  }
  //Close elements
  /** @protected */
  _closeTableCell() {
    this.openElements.generateImpliedEndTags(), this.openElements.popUntilTableCellPopped(), this.activeFormattingElements.clearToLastMarker(), this.insertionMode = U.IN_ROW;
  }
  /** @protected */
  _closePElement() {
    this.openElements.generateImpliedEndTagsWithExclusion(h.P), this.openElements.popUntilTagNamePopped(h.P);
  }
  //Insertion modes
  /** @protected */
  _resetInsertionMode() {
    for (let t = this.openElements.stackTop; t >= 0; t--)
      switch (t === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[t]) {
        case h.TR: {
          this.insertionMode = U.IN_ROW;
          return;
        }
        case h.TBODY:
        case h.THEAD:
        case h.TFOOT: {
          this.insertionMode = U.IN_TABLE_BODY;
          return;
        }
        case h.CAPTION: {
          this.insertionMode = U.IN_CAPTION;
          return;
        }
        case h.COLGROUP: {
          this.insertionMode = U.IN_COLUMN_GROUP;
          return;
        }
        case h.TABLE: {
          this.insertionMode = U.IN_TABLE;
          return;
        }
        case h.BODY: {
          this.insertionMode = U.IN_BODY;
          return;
        }
        case h.FRAMESET: {
          this.insertionMode = U.IN_FRAMESET;
          return;
        }
        case h.SELECT: {
          this._resetInsertionModeForSelect(t);
          return;
        }
        case h.TEMPLATE: {
          this.insertionMode = this.tmplInsertionModeStack[0];
          return;
        }
        case h.HTML: {
          this.insertionMode = this.headElement ? U.AFTER_HEAD : U.BEFORE_HEAD;
          return;
        }
        case h.TD:
        case h.TH: {
          if (t > 0) {
            this.insertionMode = U.IN_CELL;
            return;
          }
          break;
        }
        case h.HEAD: {
          if (t > 0) {
            this.insertionMode = U.IN_HEAD;
            return;
          }
          break;
        }
      }
    this.insertionMode = U.IN_BODY;
  }
  /** @protected */
  _resetInsertionModeForSelect(t) {
    if (t > 0)
      for (let n = t - 1; n > 0; n--) {
        const r = this.openElements.tagIDs[n];
        if (r === h.TEMPLATE)
          break;
        if (r === h.TABLE) {
          this.insertionMode = U.IN_SELECT_IN_TABLE;
          return;
        }
      }
    this.insertionMode = U.IN_SELECT;
  }
  //Foster parenting
  /** @protected */
  _isElementCausesFosterParenting(t) {
    return CN.has(t);
  }
  /** @protected */
  _shouldFosterParentOnInsertion() {
    return this.fosterParentingEnabled && this.openElements.currentTagId !== void 0 && this._isElementCausesFosterParenting(this.openElements.currentTagId);
  }
  /** @protected */
  _findFosterParentingLocation() {
    for (let t = this.openElements.stackTop; t >= 0; t--) {
      const n = this.openElements.items[t];
      switch (this.openElements.tagIDs[t]) {
        case h.TEMPLATE: {
          if (this.treeAdapter.getNamespaceURI(n) === ue.HTML)
            return { parent: this.treeAdapter.getTemplateContent(n), beforeElement: null };
          break;
        }
        case h.TABLE: {
          const r = this.treeAdapter.getParentNode(n);
          return r ? { parent: r, beforeElement: n } : { parent: this.openElements.items[t - 1], beforeElement: null };
        }
      }
    }
    return { parent: this.openElements.items[0], beforeElement: null };
  }
  /** @protected */
  _fosterParentElement(t) {
    const n = this._findFosterParentingLocation();
    n.beforeElement ? this.treeAdapter.insertBefore(n.parent, t, n.beforeElement) : this.treeAdapter.appendChild(n.parent, t);
  }
  //Special elements
  /** @protected */
  _isSpecialElement(t, n) {
    const r = this.treeAdapter.getNamespaceURI(t);
    return Oz[r].has(n);
  }
  /** @internal */
  onCharacter(t) {
    if (this.skipNextNewLine = !1, this.tokenizer.inForeignNode) {
      zq(this, t);
      return;
    }
    switch (this.insertionMode) {
      case U.INITIAL: {
        ms(this, t);
        break;
      }
      case U.BEFORE_HTML: {
        ws(this, t);
        break;
      }
      case U.BEFORE_HEAD: {
        Is(this, t);
        break;
      }
      case U.IN_HEAD: {
        Rs(this, t);
        break;
      }
      case U.IN_HEAD_NO_SCRIPT: {
        xs(this, t);
        break;
      }
      case U.AFTER_HEAD: {
        Ns(this, t);
        break;
      }
      case U.IN_BODY:
      case U.IN_CAPTION:
      case U.IN_CELL:
      case U.IN_TEMPLATE: {
        IN(this, t);
        break;
      }
      case U.TEXT:
      case U.IN_SELECT:
      case U.IN_SELECT_IN_TABLE: {
        this._insertCharacters(t);
        break;
      }
      case U.IN_TABLE:
      case U.IN_TABLE_BODY:
      case U.IN_ROW: {
        yb(this, t);
        break;
      }
      case U.IN_TABLE_TEXT: {
        DN(this, t);
        break;
      }
      case U.IN_COLUMN_GROUP: {
        Vu(this, t);
        break;
      }
      case U.AFTER_BODY: {
        Wu(this, t);
        break;
      }
      case U.AFTER_AFTER_BODY: {
        Ou(this, t);
        break;
      }
    }
  }
  /** @internal */
  onNullCharacter(t) {
    if (this.skipNextNewLine = !1, this.tokenizer.inForeignNode) {
      $q(this, t);
      return;
    }
    switch (this.insertionMode) {
      case U.INITIAL: {
        ms(this, t);
        break;
      }
      case U.BEFORE_HTML: {
        ws(this, t);
        break;
      }
      case U.BEFORE_HEAD: {
        Is(this, t);
        break;
      }
      case U.IN_HEAD: {
        Rs(this, t);
        break;
      }
      case U.IN_HEAD_NO_SCRIPT: {
        xs(this, t);
        break;
      }
      case U.AFTER_HEAD: {
        Ns(this, t);
        break;
      }
      case U.TEXT: {
        this._insertCharacters(t);
        break;
      }
      case U.IN_TABLE:
      case U.IN_TABLE_BODY:
      case U.IN_ROW: {
        yb(this, t);
        break;
      }
      case U.IN_COLUMN_GROUP: {
        Vu(this, t);
        break;
      }
      case U.AFTER_BODY: {
        Wu(this, t);
        break;
      }
      case U.AFTER_AFTER_BODY: {
        Ou(this, t);
        break;
      }
    }
  }
  /** @internal */
  onComment(t) {
    if (this.skipNextNewLine = !1, this.currentNotInHTML) {
      dE(this, t);
      return;
    }
    switch (this.insertionMode) {
      case U.INITIAL:
      case U.BEFORE_HTML:
      case U.BEFORE_HEAD:
      case U.IN_HEAD:
      case U.IN_HEAD_NO_SCRIPT:
      case U.AFTER_HEAD:
      case U.IN_BODY:
      case U.IN_TABLE:
      case U.IN_CAPTION:
      case U.IN_COLUMN_GROUP:
      case U.IN_TABLE_BODY:
      case U.IN_ROW:
      case U.IN_CELL:
      case U.IN_SELECT:
      case U.IN_SELECT_IN_TABLE:
      case U.IN_TEMPLATE:
      case U.IN_FRAMESET:
      case U.AFTER_FRAMESET: {
        dE(this, t);
        break;
      }
      case U.IN_TABLE_TEXT: {
        bs(this, t);
        break;
      }
      case U.AFTER_BODY: {
        yG(this, t);
        break;
      }
      case U.AFTER_AFTER_BODY:
      case U.AFTER_AFTER_FRAMESET: {
        TG(this, t);
        break;
      }
    }
  }
  /** @internal */
  onDoctype(t) {
    switch (this.skipNextNewLine = !1, this.insertionMode) {
      case U.INITIAL: {
        SG(this, t);
        break;
      }
      case U.BEFORE_HEAD:
      case U.IN_HEAD:
      case U.IN_HEAD_NO_SCRIPT:
      case U.AFTER_HEAD: {
        this._err(t, te.misplacedDoctype);
        break;
      }
      case U.IN_TABLE_TEXT: {
        bs(this, t);
        break;
      }
    }
  }
  /** @internal */
  onStartTag(t) {
    this.skipNextNewLine = !1, this.currentToken = t, this._processStartTag(t), t.selfClosing && !t.ackSelfClosing && this._err(t, te.nonVoidHtmlElementStartTagWithTrailingSolidus);
  }
  /**
   * Processes a given start tag.
   *
   * `onStartTag` checks if a self-closing tag was recognized. When a token
   * is moved inbetween multiple insertion modes, this check for self-closing
   * could lead to false positives. To avoid this, `_processStartTag` is used
   * for nested calls.
   *
   * @param token The token to process.
   * @protected
   */
  _processStartTag(t) {
    this.shouldProcessStartTagTokenInForeignContent(t) ? Gq(this, t) : this._startTagOutsideForeignContent(t);
  }
  /** @protected */
  _startTagOutsideForeignContent(t) {
    switch (this.insertionMode) {
      case U.INITIAL: {
        ms(this, t);
        break;
      }
      case U.BEFORE_HTML: {
        _G(this, t);
        break;
      }
      case U.BEFORE_HEAD: {
        AG(this, t);
        break;
      }
      case U.IN_HEAD: {
        yr(this, t);
        break;
      }
      case U.IN_HEAD_NO_SCRIPT: {
        wG(this, t);
        break;
      }
      case U.AFTER_HEAD: {
        RG(this, t);
        break;
      }
      case U.IN_BODY: {
        pn(this, t);
        break;
      }
      case U.IN_TABLE: {
        bo(this, t);
        break;
      }
      case U.IN_TABLE_TEXT: {
        bs(this, t);
        break;
      }
      case U.IN_CAPTION: {
        kq(this, t);
        break;
      }
      case U.IN_COLUMN_GROUP: {
        u1(this, t);
        break;
      }
      case U.IN_TABLE_BODY: {
        Ec(this, t);
        break;
      }
      case U.IN_ROW: {
        yc(this, t);
        break;
      }
      case U.IN_CELL: {
        Iq(this, t);
        break;
      }
      case U.IN_SELECT: {
        FN(this, t);
        break;
      }
      case U.IN_SELECT_IN_TABLE: {
        xq(this, t);
        break;
      }
      case U.IN_TEMPLATE: {
        Oq(this, t);
        break;
      }
      case U.AFTER_BODY: {
        Dq(this, t);
        break;
      }
      case U.IN_FRAMESET: {
        Mq(this, t);
        break;
      }
      case U.AFTER_FRAMESET: {
        Fq(this, t);
        break;
      }
      case U.AFTER_AFTER_BODY: {
        Uq(this, t);
        break;
      }
      case U.AFTER_AFTER_FRAMESET: {
        Hq(this, t);
        break;
      }
    }
  }
  /** @internal */
  onEndTag(t) {
    this.skipNextNewLine = !1, this.currentToken = t, this.currentNotInHTML ? qq(this, t) : this._endTagOutsideForeignContent(t);
  }
  /** @protected */
  _endTagOutsideForeignContent(t) {
    switch (this.insertionMode) {
      case U.INITIAL: {
        ms(this, t);
        break;
      }
      case U.BEFORE_HTML: {
        vG(this, t);
        break;
      }
      case U.BEFORE_HEAD: {
        kG(this, t);
        break;
      }
      case U.IN_HEAD: {
        CG(this, t);
        break;
      }
      case U.IN_HEAD_NO_SCRIPT: {
        IG(this, t);
        break;
      }
      case U.AFTER_HEAD: {
        xG(this, t);
        break;
      }
      case U.IN_BODY: {
        bc(this, t);
        break;
      }
      case U.TEXT: {
        gq(this, t);
        break;
      }
      case U.IN_TABLE: {
        Hs(this, t);
        break;
      }
      case U.IN_TABLE_TEXT: {
        bs(this, t);
        break;
      }
      case U.IN_CAPTION: {
        Cq(this, t);
        break;
      }
      case U.IN_COLUMN_GROUP: {
        wq(this, t);
        break;
      }
      case U.IN_TABLE_BODY: {
        pE(this, t);
        break;
      }
      case U.IN_ROW: {
        PN(this, t);
        break;
      }
      case U.IN_CELL: {
        Rq(this, t);
        break;
      }
      case U.IN_SELECT: {
        BN(this, t);
        break;
      }
      case U.IN_SELECT_IN_TABLE: {
        Nq(this, t);
        break;
      }
      case U.IN_TEMPLATE: {
        Lq(this, t);
        break;
      }
      case U.AFTER_BODY: {
        HN(this, t);
        break;
      }
      case U.IN_FRAMESET: {
        Pq(this, t);
        break;
      }
      case U.AFTER_FRAMESET: {
        Bq(this, t);
        break;
      }
      case U.AFTER_AFTER_BODY: {
        Ou(this, t);
        break;
      }
    }
  }
  /** @internal */
  onEof(t) {
    switch (this.insertionMode) {
      case U.INITIAL: {
        ms(this, t);
        break;
      }
      case U.BEFORE_HTML: {
        ws(this, t);
        break;
      }
      case U.BEFORE_HEAD: {
        Is(this, t);
        break;
      }
      case U.IN_HEAD: {
        Rs(this, t);
        break;
      }
      case U.IN_HEAD_NO_SCRIPT: {
        xs(this, t);
        break;
      }
      case U.AFTER_HEAD: {
        Ns(this, t);
        break;
      }
      case U.IN_BODY:
      case U.IN_TABLE:
      case U.IN_CAPTION:
      case U.IN_COLUMN_GROUP:
      case U.IN_TABLE_BODY:
      case U.IN_ROW:
      case U.IN_CELL:
      case U.IN_SELECT:
      case U.IN_SELECT_IN_TABLE: {
        ON(this, t);
        break;
      }
      case U.TEXT: {
        mq(this, t);
        break;
      }
      case U.IN_TABLE_TEXT: {
        bs(this, t);
        break;
      }
      case U.IN_TEMPLATE: {
        UN(this, t);
        break;
      }
      case U.AFTER_BODY:
      case U.IN_FRAMESET:
      case U.AFTER_FRAMESET:
      case U.AFTER_AFTER_BODY:
      case U.AFTER_AFTER_FRAMESET: {
        l1(this, t);
        break;
      }
    }
  }
  /** @internal */
  onWhitespaceCharacter(t) {
    if (this.skipNextNewLine && (this.skipNextNewLine = !1, t.chars.charCodeAt(0) === N.LINE_FEED)) {
      if (t.chars.length === 1)
        return;
      t.chars = t.chars.substr(1);
    }
    if (this.tokenizer.inForeignNode) {
      this._insertCharacters(t);
      return;
    }
    switch (this.insertionMode) {
      case U.IN_HEAD:
      case U.IN_HEAD_NO_SCRIPT:
      case U.AFTER_HEAD:
      case U.TEXT:
      case U.IN_COLUMN_GROUP:
      case U.IN_SELECT:
      case U.IN_SELECT_IN_TABLE:
      case U.IN_FRAMESET:
      case U.AFTER_FRAMESET: {
        this._insertCharacters(t);
        break;
      }
      case U.IN_BODY:
      case U.IN_CAPTION:
      case U.IN_CELL:
      case U.IN_TEMPLATE:
      case U.AFTER_BODY:
      case U.AFTER_AFTER_BODY:
      case U.AFTER_AFTER_FRAMESET: {
        wN(this, t);
        break;
      }
      case U.IN_TABLE:
      case U.IN_TABLE_BODY:
      case U.IN_ROW: {
        yb(this, t);
        break;
      }
      case U.IN_TABLE_TEXT: {
        LN(this, t);
        break;
      }
    }
  }
}
function fG(e, t) {
  let n = e.activeFormattingElements.getElementEntryInScopeWithTagName(t.tagName);
  return n ? e.openElements.contains(n.element) ? e.openElements.hasInScope(t.tagID) || (n = null) : (e.activeFormattingElements.removeEntry(n), n = null) : NN(e, t), n;
}
function hG(e, t) {
  let n = null, r = e.openElements.stackTop;
  for (; r >= 0; r--) {
    const o = e.openElements.items[r];
    if (o === t.element)
      break;
    e._isSpecialElement(o, e.openElements.tagIDs[r]) && (n = o);
  }
  return n || (e.openElements.shortenToLength(Math.max(r, 0)), e.activeFormattingElements.removeEntry(t)), n;
}
function gG(e, t, n) {
  let r = t, o = e.openElements.getCommonAncestor(t);
  for (let s = 0, u = o; u !== n; s++, u = o) {
    o = e.openElements.getCommonAncestor(u);
    const c = e.activeFormattingElements.getElementEntry(u), p = c && s >= dG;
    !c || p ? (p && e.activeFormattingElements.removeEntry(c), e.openElements.remove(u)) : (u = mG(e, c), r === t && (e.activeFormattingElements.bookmark = c), e.treeAdapter.detachNode(r), e.treeAdapter.appendChild(u, r), r = u);
  }
  return r;
}
function mG(e, t) {
  const n = e.treeAdapter.getNamespaceURI(t.element), r = e.treeAdapter.createElement(t.token.tagName, n, t.token.attrs);
  return e.openElements.replace(t.element, r), t.element = r, r;
}
function bG(e, t, n) {
  const r = e.treeAdapter.getTagName(t), o = Co(r);
  if (e._isElementCausesFosterParenting(o))
    e._fosterParentElement(n);
  else {
    const s = e.treeAdapter.getNamespaceURI(t);
    o === h.TEMPLATE && s === ue.HTML && (t = e.treeAdapter.getTemplateContent(t)), e.treeAdapter.appendChild(t, n);
  }
}
function EG(e, t, n) {
  const r = e.treeAdapter.getNamespaceURI(n.element), { token: o } = n, s = e.treeAdapter.createElement(o.tagName, r, o.attrs);
  e._adoptNodes(t, s), e.treeAdapter.appendChild(t, s), e.activeFormattingElements.insertElementAfterBookmark(s, o), e.activeFormattingElements.removeEntry(n), e.openElements.remove(n.element), e.openElements.insertAfter(t, s, o.tagID);
}
function s1(e, t) {
  for (let n = 0; n < cG; n++) {
    const r = fG(e, t);
    if (!r)
      break;
    const o = hG(e, r);
    if (!o)
      break;
    e.activeFormattingElements.bookmark = r;
    const s = gG(e, o, r.element), u = e.openElements.getCommonAncestor(r.element);
    e.treeAdapter.detachNode(s), u && bG(e, u, s), EG(e, o, r);
  }
}
function dE(e, t) {
  e._appendCommentNode(t, e.openElements.currentTmplContentOrNode);
}
function yG(e, t) {
  e._appendCommentNode(t, e.openElements.items[0]);
}
function TG(e, t) {
  e._appendCommentNode(t, e.document);
}
function l1(e, t) {
  if (e.stopped = !0, t.location) {
    const n = e.fragmentContext ? 0 : 2;
    for (let r = e.openElements.stackTop; r >= n; r--)
      e._setEndLocation(e.openElements.items[r], t);
    if (!e.fragmentContext && e.openElements.stackTop >= 0) {
      const r = e.openElements.items[0], o = e.treeAdapter.getNodeSourceCodeLocation(r);
      if (o && !o.endTag && (e._setEndLocation(r, t), e.openElements.stackTop >= 1)) {
        const s = e.openElements.items[1], u = e.treeAdapter.getNodeSourceCodeLocation(s);
        u && !u.endTag && e._setEndLocation(s, t);
      }
    }
  }
}
function SG(e, t) {
  e._setDocumentType(t);
  const n = t.forceQuirks ? Jn.QUIRKS : Qz(t);
  Xz(t) || e._err(t, te.nonConformingDoctype), e.treeAdapter.setDocumentMode(e.document, n), e.insertionMode = U.BEFORE_HTML;
}
function ms(e, t) {
  e._err(t, te.missingDoctype, !0), e.treeAdapter.setDocumentMode(e.document, Jn.QUIRKS), e.insertionMode = U.BEFORE_HTML, e._processToken(t);
}
function _G(e, t) {
  t.tagID === h.HTML ? (e._insertElement(t, ue.HTML), e.insertionMode = U.BEFORE_HEAD) : ws(e, t);
}
function vG(e, t) {
  const n = t.tagID;
  (n === h.HTML || n === h.HEAD || n === h.BODY || n === h.BR) && ws(e, t);
}
function ws(e, t) {
  e._insertFakeRootElement(), e.insertionMode = U.BEFORE_HEAD, e._processToken(t);
}
function AG(e, t) {
  switch (t.tagID) {
    case h.HTML: {
      pn(e, t);
      break;
    }
    case h.HEAD: {
      e._insertElement(t, ue.HTML), e.headElement = e.openElements.current, e.insertionMode = U.IN_HEAD;
      break;
    }
    default:
      Is(e, t);
  }
}
function kG(e, t) {
  const n = t.tagID;
  n === h.HEAD || n === h.BODY || n === h.HTML || n === h.BR ? Is(e, t) : e._err(t, te.endTagWithoutMatchingOpenElement);
}
function Is(e, t) {
  e._insertFakeElement(X.HEAD, h.HEAD), e.headElement = e.openElements.current, e.insertionMode = U.IN_HEAD, e._processToken(t);
}
function yr(e, t) {
  switch (t.tagID) {
    case h.HTML: {
      pn(e, t);
      break;
    }
    case h.BASE:
    case h.BASEFONT:
    case h.BGSOUND:
    case h.LINK:
    case h.META: {
      e._appendElement(t, ue.HTML), t.ackSelfClosing = !0;
      break;
    }
    case h.TITLE: {
      e._switchToTextParsing(t, xt.RCDATA);
      break;
    }
    case h.NOSCRIPT: {
      e.options.scriptingEnabled ? e._switchToTextParsing(t, xt.RAWTEXT) : (e._insertElement(t, ue.HTML), e.insertionMode = U.IN_HEAD_NO_SCRIPT);
      break;
    }
    case h.NOFRAMES:
    case h.STYLE: {
      e._switchToTextParsing(t, xt.RAWTEXT);
      break;
    }
    case h.SCRIPT: {
      e._switchToTextParsing(t, xt.SCRIPT_DATA);
      break;
    }
    case h.TEMPLATE: {
      e._insertTemplate(t), e.activeFormattingElements.insertMarker(), e.framesetOk = !1, e.insertionMode = U.IN_TEMPLATE, e.tmplInsertionModeStack.unshift(U.IN_TEMPLATE);
      break;
    }
    case h.HEAD: {
      e._err(t, te.misplacedStartTagForHeadElement);
      break;
    }
    default:
      Rs(e, t);
  }
}
function CG(e, t) {
  switch (t.tagID) {
    case h.HEAD: {
      e.openElements.pop(), e.insertionMode = U.AFTER_HEAD;
      break;
    }
    case h.BODY:
    case h.BR:
    case h.HTML: {
      Rs(e, t);
      break;
    }
    case h.TEMPLATE: {
      mi(e, t);
      break;
    }
    default:
      e._err(t, te.endTagWithoutMatchingOpenElement);
  }
}
function mi(e, t) {
  e.openElements.tmplCount > 0 ? (e.openElements.generateImpliedEndTagsThoroughly(), e.openElements.currentTagId !== h.TEMPLATE && e._err(t, te.closingOfElementWithOpenChildElements), e.openElements.popUntilTagNamePopped(h.TEMPLATE), e.activeFormattingElements.clearToLastMarker(), e.tmplInsertionModeStack.shift(), e._resetInsertionMode()) : e._err(t, te.endTagWithoutMatchingOpenElement);
}
function Rs(e, t) {
  e.openElements.pop(), e.insertionMode = U.AFTER_HEAD, e._processToken(t);
}
function wG(e, t) {
  switch (t.tagID) {
    case h.HTML: {
      pn(e, t);
      break;
    }
    case h.BASEFONT:
    case h.BGSOUND:
    case h.HEAD:
    case h.LINK:
    case h.META:
    case h.NOFRAMES:
    case h.STYLE: {
      yr(e, t);
      break;
    }
    case h.NOSCRIPT: {
      e._err(t, te.nestedNoscriptInHead);
      break;
    }
    default:
      xs(e, t);
  }
}
function IG(e, t) {
  switch (t.tagID) {
    case h.NOSCRIPT: {
      e.openElements.pop(), e.insertionMode = U.IN_HEAD;
      break;
    }
    case h.BR: {
      xs(e, t);
      break;
    }
    default:
      e._err(t, te.endTagWithoutMatchingOpenElement);
  }
}
function xs(e, t) {
  const n = t.type === Ye.EOF ? te.openElementsLeftAfterEof : te.disallowedContentInNoscriptInHead;
  e._err(t, n), e.openElements.pop(), e.insertionMode = U.IN_HEAD, e._processToken(t);
}
function RG(e, t) {
  switch (t.tagID) {
    case h.HTML: {
      pn(e, t);
      break;
    }
    case h.BODY: {
      e._insertElement(t, ue.HTML), e.framesetOk = !1, e.insertionMode = U.IN_BODY;
      break;
    }
    case h.FRAMESET: {
      e._insertElement(t, ue.HTML), e.insertionMode = U.IN_FRAMESET;
      break;
    }
    case h.BASE:
    case h.BASEFONT:
    case h.BGSOUND:
    case h.LINK:
    case h.META:
    case h.NOFRAMES:
    case h.SCRIPT:
    case h.STYLE:
    case h.TEMPLATE:
    case h.TITLE: {
      e._err(t, te.abandonedHeadElementChild), e.openElements.push(e.headElement, h.HEAD), yr(e, t), e.openElements.remove(e.headElement);
      break;
    }
    case h.HEAD: {
      e._err(t, te.misplacedStartTagForHeadElement);
      break;
    }
    default:
      Ns(e, t);
  }
}
function xG(e, t) {
  switch (t.tagID) {
    case h.BODY:
    case h.HTML:
    case h.BR: {
      Ns(e, t);
      break;
    }
    case h.TEMPLATE: {
      mi(e, t);
      break;
    }
    default:
      e._err(t, te.endTagWithoutMatchingOpenElement);
  }
}
function Ns(e, t) {
  e._insertFakeElement(X.BODY, h.BODY), e.insertionMode = U.IN_BODY, mc(e, t);
}
function mc(e, t) {
  switch (t.type) {
    case Ye.CHARACTER: {
      IN(e, t);
      break;
    }
    case Ye.WHITESPACE_CHARACTER: {
      wN(e, t);
      break;
    }
    case Ye.COMMENT: {
      dE(e, t);
      break;
    }
    case Ye.START_TAG: {
      pn(e, t);
      break;
    }
    case Ye.END_TAG: {
      bc(e, t);
      break;
    }
    case Ye.EOF: {
      ON(e, t);
      break;
    }
  }
}
function wN(e, t) {
  e._reconstructActiveFormattingElements(), e._insertCharacters(t);
}
function IN(e, t) {
  e._reconstructActiveFormattingElements(), e._insertCharacters(t), e.framesetOk = !1;
}
function NG(e, t) {
  e.openElements.tmplCount === 0 && e.treeAdapter.adoptAttributes(e.openElements.items[0], t.attrs);
}
function OG(e, t) {
  const n = e.openElements.tryPeekProperlyNestedBodyElement();
  n && e.openElements.tmplCount === 0 && (e.framesetOk = !1, e.treeAdapter.adoptAttributes(n, t.attrs));
}
function LG(e, t) {
  const n = e.openElements.tryPeekProperlyNestedBodyElement();
  e.framesetOk && n && (e.treeAdapter.detachNode(n), e.openElements.popAllUpToHtmlElement(), e._insertElement(t, ue.HTML), e.insertionMode = U.IN_FRAMESET);
}
function DG(e, t) {
  e.openElements.hasInButtonScope(h.P) && e._closePElement(), e._insertElement(t, ue.HTML);
}
function MG(e, t) {
  e.openElements.hasInButtonScope(h.P) && e._closePElement(), e.openElements.currentTagId !== void 0 && cE.has(e.openElements.currentTagId) && e.openElements.pop(), e._insertElement(t, ue.HTML);
}
function PG(e, t) {
  e.openElements.hasInButtonScope(h.P) && e._closePElement(), e._insertElement(t, ue.HTML), e.skipNextNewLine = !0, e.framesetOk = !1;
}
function FG(e, t) {
  const n = e.openElements.tmplCount > 0;
  (!e.formElement || n) && (e.openElements.hasInButtonScope(h.P) && e._closePElement(), e._insertElement(t, ue.HTML), n || (e.formElement = e.openElements.current));
}
function BG(e, t) {
  e.framesetOk = !1;
  const n = t.tagID;
  for (let r = e.openElements.stackTop; r >= 0; r--) {
    const o = e.openElements.tagIDs[r];
    if (n === h.LI && o === h.LI || (n === h.DD || n === h.DT) && (o === h.DD || o === h.DT)) {
      e.openElements.generateImpliedEndTagsWithExclusion(o), e.openElements.popUntilTagNamePopped(o);
      break;
    }
    if (o !== h.ADDRESS && o !== h.DIV && o !== h.P && e._isSpecialElement(e.openElements.items[r], o))
      break;
  }
  e.openElements.hasInButtonScope(h.P) && e._closePElement(), e._insertElement(t, ue.HTML);
}
function UG(e, t) {
  e.openElements.hasInButtonScope(h.P) && e._closePElement(), e._insertElement(t, ue.HTML), e.tokenizer.state = xt.PLAINTEXT;
}
function HG(e, t) {
  e.openElements.hasInScope(h.BUTTON) && (e.openElements.generateImpliedEndTags(), e.openElements.popUntilTagNamePopped(h.BUTTON)), e._reconstructActiveFormattingElements(), e._insertElement(t, ue.HTML), e.framesetOk = !1;
}
function $G(e, t) {
  const n = e.activeFormattingElements.getElementEntryInScopeWithTagName(X.A);
  n && (s1(e, t), e.openElements.remove(n.element), e.activeFormattingElements.removeEntry(n)), e._reconstructActiveFormattingElements(), e._insertElement(t, ue.HTML), e.activeFormattingElements.pushElement(e.openElements.current, t);
}
function zG(e, t) {
  e._reconstructActiveFormattingElements(), e._insertElement(t, ue.HTML), e.activeFormattingElements.pushElement(e.openElements.current, t);
}
function GG(e, t) {
  e._reconstructActiveFormattingElements(), e.openElements.hasInScope(h.NOBR) && (s1(e, t), e._reconstructActiveFormattingElements()), e._insertElement(t, ue.HTML), e.activeFormattingElements.pushElement(e.openElements.current, t);
}
function qG(e, t) {
  e._reconstructActiveFormattingElements(), e._insertElement(t, ue.HTML), e.activeFormattingElements.insertMarker(), e.framesetOk = !1;
}
function jG(e, t) {
  e.treeAdapter.getDocumentMode(e.document) !== Jn.QUIRKS && e.openElements.hasInButtonScope(h.P) && e._closePElement(), e._insertElement(t, ue.HTML), e.framesetOk = !1, e.insertionMode = U.IN_TABLE;
}
function RN(e, t) {
  e._reconstructActiveFormattingElements(), e._appendElement(t, ue.HTML), e.framesetOk = !1, t.ackSelfClosing = !0;
}
function xN(e) {
  const t = EN(e, li.TYPE);
  return t != null && t.toLowerCase() === uG;
}
function VG(e, t) {
  e._reconstructActiveFormattingElements(), e._appendElement(t, ue.HTML), xN(t) || (e.framesetOk = !1), t.ackSelfClosing = !0;
}
function WG(e, t) {
  e._appendElement(t, ue.HTML), t.ackSelfClosing = !0;
}
function YG(e, t) {
  e.openElements.hasInButtonScope(h.P) && e._closePElement(), e._appendElement(t, ue.HTML), e.framesetOk = !1, t.ackSelfClosing = !0;
}
function KG(e, t) {
  t.tagName = X.IMG, t.tagID = h.IMG, RN(e, t);
}
function XG(e, t) {
  e._insertElement(t, ue.HTML), e.skipNextNewLine = !0, e.tokenizer.state = xt.RCDATA, e.originalInsertionMode = e.insertionMode, e.framesetOk = !1, e.insertionMode = U.TEXT;
}
function QG(e, t) {
  e.openElements.hasInButtonScope(h.P) && e._closePElement(), e._reconstructActiveFormattingElements(), e.framesetOk = !1, e._switchToTextParsing(t, xt.RAWTEXT);
}
function ZG(e, t) {
  e.framesetOk = !1, e._switchToTextParsing(t, xt.RAWTEXT);
}
function xI(e, t) {
  e._switchToTextParsing(t, xt.RAWTEXT);
}
function JG(e, t) {
  e._reconstructActiveFormattingElements(), e._insertElement(t, ue.HTML), e.framesetOk = !1, e.insertionMode = e.insertionMode === U.IN_TABLE || e.insertionMode === U.IN_CAPTION || e.insertionMode === U.IN_TABLE_BODY || e.insertionMode === U.IN_ROW || e.insertionMode === U.IN_CELL ? U.IN_SELECT_IN_TABLE : U.IN_SELECT;
}
function eq(e, t) {
  e.openElements.currentTagId === h.OPTION && e.openElements.pop(), e._reconstructActiveFormattingElements(), e._insertElement(t, ue.HTML);
}
function tq(e, t) {
  e.openElements.hasInScope(h.RUBY) && e.openElements.generateImpliedEndTags(), e._insertElement(t, ue.HTML);
}
function nq(e, t) {
  e.openElements.hasInScope(h.RUBY) && e.openElements.generateImpliedEndTagsWithExclusion(h.RTC), e._insertElement(t, ue.HTML);
}
function rq(e, t) {
  e._reconstructActiveFormattingElements(), AN(t), o1(t), t.selfClosing ? e._appendElement(t, ue.MATHML) : e._insertElement(t, ue.MATHML), t.ackSelfClosing = !0;
}
function aq(e, t) {
  e._reconstructActiveFormattingElements(), kN(t), o1(t), t.selfClosing ? e._appendElement(t, ue.SVG) : e._insertElement(t, ue.SVG), t.ackSelfClosing = !0;
}
function NI(e, t) {
  e._reconstructActiveFormattingElements(), e._insertElement(t, ue.HTML);
}
function pn(e, t) {
  switch (t.tagID) {
    case h.I:
    case h.S:
    case h.B:
    case h.U:
    case h.EM:
    case h.TT:
    case h.BIG:
    case h.CODE:
    case h.FONT:
    case h.SMALL:
    case h.STRIKE:
    case h.STRONG: {
      zG(e, t);
      break;
    }
    case h.A: {
      $G(e, t);
      break;
    }
    case h.H1:
    case h.H2:
    case h.H3:
    case h.H4:
    case h.H5:
    case h.H6: {
      MG(e, t);
      break;
    }
    case h.P:
    case h.DL:
    case h.OL:
    case h.UL:
    case h.DIV:
    case h.DIR:
    case h.NAV:
    case h.MAIN:
    case h.MENU:
    case h.ASIDE:
    case h.CENTER:
    case h.FIGURE:
    case h.FOOTER:
    case h.HEADER:
    case h.HGROUP:
    case h.DIALOG:
    case h.DETAILS:
    case h.ADDRESS:
    case h.ARTICLE:
    case h.SEARCH:
    case h.SECTION:
    case h.SUMMARY:
    case h.FIELDSET:
    case h.BLOCKQUOTE:
    case h.FIGCAPTION: {
      DG(e, t);
      break;
    }
    case h.LI:
    case h.DD:
    case h.DT: {
      BG(e, t);
      break;
    }
    case h.BR:
    case h.IMG:
    case h.WBR:
    case h.AREA:
    case h.EMBED:
    case h.KEYGEN: {
      RN(e, t);
      break;
    }
    case h.HR: {
      YG(e, t);
      break;
    }
    case h.RB:
    case h.RTC: {
      tq(e, t);
      break;
    }
    case h.RT:
    case h.RP: {
      nq(e, t);
      break;
    }
    case h.PRE:
    case h.LISTING: {
      PG(e, t);
      break;
    }
    case h.XMP: {
      QG(e, t);
      break;
    }
    case h.SVG: {
      aq(e, t);
      break;
    }
    case h.HTML: {
      NG(e, t);
      break;
    }
    case h.BASE:
    case h.LINK:
    case h.META:
    case h.STYLE:
    case h.TITLE:
    case h.SCRIPT:
    case h.BGSOUND:
    case h.BASEFONT:
    case h.TEMPLATE: {
      yr(e, t);
      break;
    }
    case h.BODY: {
      OG(e, t);
      break;
    }
    case h.FORM: {
      FG(e, t);
      break;
    }
    case h.NOBR: {
      GG(e, t);
      break;
    }
    case h.MATH: {
      rq(e, t);
      break;
    }
    case h.TABLE: {
      jG(e, t);
      break;
    }
    case h.INPUT: {
      VG(e, t);
      break;
    }
    case h.PARAM:
    case h.TRACK:
    case h.SOURCE: {
      WG(e, t);
      break;
    }
    case h.IMAGE: {
      KG(e, t);
      break;
    }
    case h.BUTTON: {
      HG(e, t);
      break;
    }
    case h.APPLET:
    case h.OBJECT:
    case h.MARQUEE: {
      qG(e, t);
      break;
    }
    case h.IFRAME: {
      ZG(e, t);
      break;
    }
    case h.SELECT: {
      JG(e, t);
      break;
    }
    case h.OPTION:
    case h.OPTGROUP: {
      eq(e, t);
      break;
    }
    case h.NOEMBED:
    case h.NOFRAMES: {
      xI(e, t);
      break;
    }
    case h.FRAMESET: {
      LG(e, t);
      break;
    }
    case h.TEXTAREA: {
      XG(e, t);
      break;
    }
    case h.NOSCRIPT: {
      e.options.scriptingEnabled ? xI(e, t) : NI(e, t);
      break;
    }
    case h.PLAINTEXT: {
      UG(e, t);
      break;
    }
    case h.COL:
    case h.TH:
    case h.TD:
    case h.TR:
    case h.HEAD:
    case h.FRAME:
    case h.TBODY:
    case h.TFOOT:
    case h.THEAD:
    case h.CAPTION:
    case h.COLGROUP:
      break;
    default:
      NI(e, t);
  }
}
function iq(e, t) {
  if (e.openElements.hasInScope(h.BODY) && (e.insertionMode = U.AFTER_BODY, e.options.sourceCodeLocationInfo)) {
    const n = e.openElements.tryPeekProperlyNestedBodyElement();
    n && e._setEndLocation(n, t);
  }
}
function oq(e, t) {
  e.openElements.hasInScope(h.BODY) && (e.insertionMode = U.AFTER_BODY, HN(e, t));
}
function sq(e, t) {
  const n = t.tagID;
  e.openElements.hasInScope(n) && (e.openElements.generateImpliedEndTags(), e.openElements.popUntilTagNamePopped(n));
}
function lq(e) {
  const t = e.openElements.tmplCount > 0, { formElement: n } = e;
  t || (e.formElement = null), (n || t) && e.openElements.hasInScope(h.FORM) && (e.openElements.generateImpliedEndTags(), t ? e.openElements.popUntilTagNamePopped(h.FORM) : n && e.openElements.remove(n));
}
function uq(e) {
  e.openElements.hasInButtonScope(h.P) || e._insertFakeElement(X.P, h.P), e._closePElement();
}
function cq(e) {
  e.openElements.hasInListItemScope(h.LI) && (e.openElements.generateImpliedEndTagsWithExclusion(h.LI), e.openElements.popUntilTagNamePopped(h.LI));
}
function dq(e, t) {
  const n = t.tagID;
  e.openElements.hasInScope(n) && (e.openElements.generateImpliedEndTagsWithExclusion(n), e.openElements.popUntilTagNamePopped(n));
}
function pq(e) {
  e.openElements.hasNumberedHeaderInScope() && (e.openElements.generateImpliedEndTags(), e.openElements.popUntilNumberedHeaderPopped());
}
function fq(e, t) {
  const n = t.tagID;
  e.openElements.hasInScope(n) && (e.openElements.generateImpliedEndTags(), e.openElements.popUntilTagNamePopped(n), e.activeFormattingElements.clearToLastMarker());
}
function hq(e) {
  e._reconstructActiveFormattingElements(), e._insertFakeElement(X.BR, h.BR), e.openElements.pop(), e.framesetOk = !1;
}
function NN(e, t) {
  const n = t.tagName, r = t.tagID;
  for (let o = e.openElements.stackTop; o > 0; o--) {
    const s = e.openElements.items[o], u = e.openElements.tagIDs[o];
    if (r === u && (r !== h.UNKNOWN || e.treeAdapter.getTagName(s) === n)) {
      e.openElements.generateImpliedEndTagsWithExclusion(r), e.openElements.stackTop >= o && e.openElements.shortenToLength(o);
      break;
    }
    if (e._isSpecialElement(s, u))
      break;
  }
}
function bc(e, t) {
  switch (t.tagID) {
    case h.A:
    case h.B:
    case h.I:
    case h.S:
    case h.U:
    case h.EM:
    case h.TT:
    case h.BIG:
    case h.CODE:
    case h.FONT:
    case h.NOBR:
    case h.SMALL:
    case h.STRIKE:
    case h.STRONG: {
      s1(e, t);
      break;
    }
    case h.P: {
      uq(e);
      break;
    }
    case h.DL:
    case h.UL:
    case h.OL:
    case h.DIR:
    case h.DIV:
    case h.NAV:
    case h.PRE:
    case h.MAIN:
    case h.MENU:
    case h.ASIDE:
    case h.BUTTON:
    case h.CENTER:
    case h.FIGURE:
    case h.FOOTER:
    case h.HEADER:
    case h.HGROUP:
    case h.DIALOG:
    case h.ADDRESS:
    case h.ARTICLE:
    case h.DETAILS:
    case h.SEARCH:
    case h.SECTION:
    case h.SUMMARY:
    case h.LISTING:
    case h.FIELDSET:
    case h.BLOCKQUOTE:
    case h.FIGCAPTION: {
      sq(e, t);
      break;
    }
    case h.LI: {
      cq(e);
      break;
    }
    case h.DD:
    case h.DT: {
      dq(e, t);
      break;
    }
    case h.H1:
    case h.H2:
    case h.H3:
    case h.H4:
    case h.H5:
    case h.H6: {
      pq(e);
      break;
    }
    case h.BR: {
      hq(e);
      break;
    }
    case h.BODY: {
      iq(e, t);
      break;
    }
    case h.HTML: {
      oq(e, t);
      break;
    }
    case h.FORM: {
      lq(e);
      break;
    }
    case h.APPLET:
    case h.OBJECT:
    case h.MARQUEE: {
      fq(e, t);
      break;
    }
    case h.TEMPLATE: {
      mi(e, t);
      break;
    }
    default:
      NN(e, t);
  }
}
function ON(e, t) {
  e.tmplInsertionModeStack.length > 0 ? UN(e, t) : l1(e, t);
}
function gq(e, t) {
  var n;
  t.tagID === h.SCRIPT && ((n = e.scriptHandler) === null || n === void 0 || n.call(e, e.openElements.current)), e.openElements.pop(), e.insertionMode = e.originalInsertionMode;
}
function mq(e, t) {
  e._err(t, te.eofInElementThatCanContainOnlyText), e.openElements.pop(), e.insertionMode = e.originalInsertionMode, e.onEof(t);
}
function yb(e, t) {
  if (e.openElements.currentTagId !== void 0 && CN.has(e.openElements.currentTagId))
    switch (e.pendingCharacterTokens.length = 0, e.hasNonWhitespacePendingCharacterToken = !1, e.originalInsertionMode = e.insertionMode, e.insertionMode = U.IN_TABLE_TEXT, t.type) {
      case Ye.CHARACTER: {
        DN(e, t);
        break;
      }
      case Ye.WHITESPACE_CHARACTER: {
        LN(e, t);
        break;
      }
    }
  else
    Js(e, t);
}
function bq(e, t) {
  e.openElements.clearBackToTableContext(), e.activeFormattingElements.insertMarker(), e._insertElement(t, ue.HTML), e.insertionMode = U.IN_CAPTION;
}
function Eq(e, t) {
  e.openElements.clearBackToTableContext(), e._insertElement(t, ue.HTML), e.insertionMode = U.IN_COLUMN_GROUP;
}
function yq(e, t) {
  e.openElements.clearBackToTableContext(), e._insertFakeElement(X.COLGROUP, h.COLGROUP), e.insertionMode = U.IN_COLUMN_GROUP, u1(e, t);
}
function Tq(e, t) {
  e.openElements.clearBackToTableContext(), e._insertElement(t, ue.HTML), e.insertionMode = U.IN_TABLE_BODY;
}
function Sq(e, t) {
  e.openElements.clearBackToTableContext(), e._insertFakeElement(X.TBODY, h.TBODY), e.insertionMode = U.IN_TABLE_BODY, Ec(e, t);
}
function _q(e, t) {
  e.openElements.hasInTableScope(h.TABLE) && (e.openElements.popUntilTagNamePopped(h.TABLE), e._resetInsertionMode(), e._processStartTag(t));
}
function vq(e, t) {
  xN(t) ? e._appendElement(t, ue.HTML) : Js(e, t), t.ackSelfClosing = !0;
}
function Aq(e, t) {
  !e.formElement && e.openElements.tmplCount === 0 && (e._insertElement(t, ue.HTML), e.formElement = e.openElements.current, e.openElements.pop());
}
function bo(e, t) {
  switch (t.tagID) {
    case h.TD:
    case h.TH:
    case h.TR: {
      Sq(e, t);
      break;
    }
    case h.STYLE:
    case h.SCRIPT:
    case h.TEMPLATE: {
      yr(e, t);
      break;
    }
    case h.COL: {
      yq(e, t);
      break;
    }
    case h.FORM: {
      Aq(e, t);
      break;
    }
    case h.TABLE: {
      _q(e, t);
      break;
    }
    case h.TBODY:
    case h.TFOOT:
    case h.THEAD: {
      Tq(e, t);
      break;
    }
    case h.INPUT: {
      vq(e, t);
      break;
    }
    case h.CAPTION: {
      bq(e, t);
      break;
    }
    case h.COLGROUP: {
      Eq(e, t);
      break;
    }
    default:
      Js(e, t);
  }
}
function Hs(e, t) {
  switch (t.tagID) {
    case h.TABLE: {
      e.openElements.hasInTableScope(h.TABLE) && (e.openElements.popUntilTagNamePopped(h.TABLE), e._resetInsertionMode());
      break;
    }
    case h.TEMPLATE: {
      mi(e, t);
      break;
    }
    case h.BODY:
    case h.CAPTION:
    case h.COL:
    case h.COLGROUP:
    case h.HTML:
    case h.TBODY:
    case h.TD:
    case h.TFOOT:
    case h.TH:
    case h.THEAD:
    case h.TR:
      break;
    default:
      Js(e, t);
  }
}
function Js(e, t) {
  const n = e.fosterParentingEnabled;
  e.fosterParentingEnabled = !0, mc(e, t), e.fosterParentingEnabled = n;
}
function LN(e, t) {
  e.pendingCharacterTokens.push(t);
}
function DN(e, t) {
  e.pendingCharacterTokens.push(t), e.hasNonWhitespacePendingCharacterToken = !0;
}
function bs(e, t) {
  let n = 0;
  if (e.hasNonWhitespacePendingCharacterToken)
    for (; n < e.pendingCharacterTokens.length; n++)
      Js(e, e.pendingCharacterTokens[n]);
  else
    for (; n < e.pendingCharacterTokens.length; n++)
      e._insertCharacters(e.pendingCharacterTokens[n]);
  e.insertionMode = e.originalInsertionMode, e._processToken(t);
}
const MN = /* @__PURE__ */ new Set([h.CAPTION, h.COL, h.COLGROUP, h.TBODY, h.TD, h.TFOOT, h.TH, h.THEAD, h.TR]);
function kq(e, t) {
  const n = t.tagID;
  MN.has(n) ? e.openElements.hasInTableScope(h.CAPTION) && (e.openElements.generateImpliedEndTags(), e.openElements.popUntilTagNamePopped(h.CAPTION), e.activeFormattingElements.clearToLastMarker(), e.insertionMode = U.IN_TABLE, bo(e, t)) : pn(e, t);
}
function Cq(e, t) {
  const n = t.tagID;
  switch (n) {
    case h.CAPTION:
    case h.TABLE: {
      e.openElements.hasInTableScope(h.CAPTION) && (e.openElements.generateImpliedEndTags(), e.openElements.popUntilTagNamePopped(h.CAPTION), e.activeFormattingElements.clearToLastMarker(), e.insertionMode = U.IN_TABLE, n === h.TABLE && Hs(e, t));
      break;
    }
    case h.BODY:
    case h.COL:
    case h.COLGROUP:
    case h.HTML:
    case h.TBODY:
    case h.TD:
    case h.TFOOT:
    case h.TH:
    case h.THEAD:
    case h.TR:
      break;
    default:
      bc(e, t);
  }
}
function u1(e, t) {
  switch (t.tagID) {
    case h.HTML: {
      pn(e, t);
      break;
    }
    case h.COL: {
      e._appendElement(t, ue.HTML), t.ackSelfClosing = !0;
      break;
    }
    case h.TEMPLATE: {
      yr(e, t);
      break;
    }
    default:
      Vu(e, t);
  }
}
function wq(e, t) {
  switch (t.tagID) {
    case h.COLGROUP: {
      e.openElements.currentTagId === h.COLGROUP && (e.openElements.pop(), e.insertionMode = U.IN_TABLE);
      break;
    }
    case h.TEMPLATE: {
      mi(e, t);
      break;
    }
    case h.COL:
      break;
    default:
      Vu(e, t);
  }
}
function Vu(e, t) {
  e.openElements.currentTagId === h.COLGROUP && (e.openElements.pop(), e.insertionMode = U.IN_TABLE, e._processToken(t));
}
function Ec(e, t) {
  switch (t.tagID) {
    case h.TR: {
      e.openElements.clearBackToTableBodyContext(), e._insertElement(t, ue.HTML), e.insertionMode = U.IN_ROW;
      break;
    }
    case h.TH:
    case h.TD: {
      e.openElements.clearBackToTableBodyContext(), e._insertFakeElement(X.TR, h.TR), e.insertionMode = U.IN_ROW, yc(e, t);
      break;
    }
    case h.CAPTION:
    case h.COL:
    case h.COLGROUP:
    case h.TBODY:
    case h.TFOOT:
    case h.THEAD: {
      e.openElements.hasTableBodyContextInTableScope() && (e.openElements.clearBackToTableBodyContext(), e.openElements.pop(), e.insertionMode = U.IN_TABLE, bo(e, t));
      break;
    }
    default:
      bo(e, t);
  }
}
function pE(e, t) {
  const n = t.tagID;
  switch (t.tagID) {
    case h.TBODY:
    case h.TFOOT:
    case h.THEAD: {
      e.openElements.hasInTableScope(n) && (e.openElements.clearBackToTableBodyContext(), e.openElements.pop(), e.insertionMode = U.IN_TABLE);
      break;
    }
    case h.TABLE: {
      e.openElements.hasTableBodyContextInTableScope() && (e.openElements.clearBackToTableBodyContext(), e.openElements.pop(), e.insertionMode = U.IN_TABLE, Hs(e, t));
      break;
    }
    case h.BODY:
    case h.CAPTION:
    case h.COL:
    case h.COLGROUP:
    case h.HTML:
    case h.TD:
    case h.TH:
    case h.TR:
      break;
    default:
      Hs(e, t);
  }
}
function yc(e, t) {
  switch (t.tagID) {
    case h.TH:
    case h.TD: {
      e.openElements.clearBackToTableRowContext(), e._insertElement(t, ue.HTML), e.insertionMode = U.IN_CELL, e.activeFormattingElements.insertMarker();
      break;
    }
    case h.CAPTION:
    case h.COL:
    case h.COLGROUP:
    case h.TBODY:
    case h.TFOOT:
    case h.THEAD:
    case h.TR: {
      e.openElements.hasInTableScope(h.TR) && (e.openElements.clearBackToTableRowContext(), e.openElements.pop(), e.insertionMode = U.IN_TABLE_BODY, Ec(e, t));
      break;
    }
    default:
      bo(e, t);
  }
}
function PN(e, t) {
  switch (t.tagID) {
    case h.TR: {
      e.openElements.hasInTableScope(h.TR) && (e.openElements.clearBackToTableRowContext(), e.openElements.pop(), e.insertionMode = U.IN_TABLE_BODY);
      break;
    }
    case h.TABLE: {
      e.openElements.hasInTableScope(h.TR) && (e.openElements.clearBackToTableRowContext(), e.openElements.pop(), e.insertionMode = U.IN_TABLE_BODY, pE(e, t));
      break;
    }
    case h.TBODY:
    case h.TFOOT:
    case h.THEAD: {
      (e.openElements.hasInTableScope(t.tagID) || e.openElements.hasInTableScope(h.TR)) && (e.openElements.clearBackToTableRowContext(), e.openElements.pop(), e.insertionMode = U.IN_TABLE_BODY, pE(e, t));
      break;
    }
    case h.BODY:
    case h.CAPTION:
    case h.COL:
    case h.COLGROUP:
    case h.HTML:
    case h.TD:
    case h.TH:
      break;
    default:
      Hs(e, t);
  }
}
function Iq(e, t) {
  const n = t.tagID;
  MN.has(n) ? (e.openElements.hasInTableScope(h.TD) || e.openElements.hasInTableScope(h.TH)) && (e._closeTableCell(), yc(e, t)) : pn(e, t);
}
function Rq(e, t) {
  const n = t.tagID;
  switch (n) {
    case h.TD:
    case h.TH: {
      e.openElements.hasInTableScope(n) && (e.openElements.generateImpliedEndTags(), e.openElements.popUntilTagNamePopped(n), e.activeFormattingElements.clearToLastMarker(), e.insertionMode = U.IN_ROW);
      break;
    }
    case h.TABLE:
    case h.TBODY:
    case h.TFOOT:
    case h.THEAD:
    case h.TR: {
      e.openElements.hasInTableScope(n) && (e._closeTableCell(), PN(e, t));
      break;
    }
    case h.BODY:
    case h.CAPTION:
    case h.COL:
    case h.COLGROUP:
    case h.HTML:
      break;
    default:
      bc(e, t);
  }
}
function FN(e, t) {
  switch (t.tagID) {
    case h.HTML: {
      pn(e, t);
      break;
    }
    case h.OPTION: {
      e.openElements.currentTagId === h.OPTION && e.openElements.pop(), e._insertElement(t, ue.HTML);
      break;
    }
    case h.OPTGROUP: {
      e.openElements.currentTagId === h.OPTION && e.openElements.pop(), e.openElements.currentTagId === h.OPTGROUP && e.openElements.pop(), e._insertElement(t, ue.HTML);
      break;
    }
    case h.HR: {
      e.openElements.currentTagId === h.OPTION && e.openElements.pop(), e.openElements.currentTagId === h.OPTGROUP && e.openElements.pop(), e._appendElement(t, ue.HTML), t.ackSelfClosing = !0;
      break;
    }
    case h.INPUT:
    case h.KEYGEN:
    case h.TEXTAREA:
    case h.SELECT: {
      e.openElements.hasInSelectScope(h.SELECT) && (e.openElements.popUntilTagNamePopped(h.SELECT), e._resetInsertionMode(), t.tagID !== h.SELECT && e._processStartTag(t));
      break;
    }
    case h.SCRIPT:
    case h.TEMPLATE: {
      yr(e, t);
      break;
    }
  }
}
function BN(e, t) {
  switch (t.tagID) {
    case h.OPTGROUP: {
      e.openElements.stackTop > 0 && e.openElements.currentTagId === h.OPTION && e.openElements.tagIDs[e.openElements.stackTop - 1] === h.OPTGROUP && e.openElements.pop(), e.openElements.currentTagId === h.OPTGROUP && e.openElements.pop();
      break;
    }
    case h.OPTION: {
      e.openElements.currentTagId === h.OPTION && e.openElements.pop();
      break;
    }
    case h.SELECT: {
      e.openElements.hasInSelectScope(h.SELECT) && (e.openElements.popUntilTagNamePopped(h.SELECT), e._resetInsertionMode());
      break;
    }
    case h.TEMPLATE: {
      mi(e, t);
      break;
    }
  }
}
function xq(e, t) {
  const n = t.tagID;
  n === h.CAPTION || n === h.TABLE || n === h.TBODY || n === h.TFOOT || n === h.THEAD || n === h.TR || n === h.TD || n === h.TH ? (e.openElements.popUntilTagNamePopped(h.SELECT), e._resetInsertionMode(), e._processStartTag(t)) : FN(e, t);
}
function Nq(e, t) {
  const n = t.tagID;
  n === h.CAPTION || n === h.TABLE || n === h.TBODY || n === h.TFOOT || n === h.THEAD || n === h.TR || n === h.TD || n === h.TH ? e.openElements.hasInTableScope(n) && (e.openElements.popUntilTagNamePopped(h.SELECT), e._resetInsertionMode(), e.onEndTag(t)) : BN(e, t);
}
function Oq(e, t) {
  switch (t.tagID) {
    // First, handle tags that can start without a mode change
    case h.BASE:
    case h.BASEFONT:
    case h.BGSOUND:
    case h.LINK:
    case h.META:
    case h.NOFRAMES:
    case h.SCRIPT:
    case h.STYLE:
    case h.TEMPLATE:
    case h.TITLE: {
      yr(e, t);
      break;
    }
    // Re-process the token in the appropriate mode
    case h.CAPTION:
    case h.COLGROUP:
    case h.TBODY:
    case h.TFOOT:
    case h.THEAD: {
      e.tmplInsertionModeStack[0] = U.IN_TABLE, e.insertionMode = U.IN_TABLE, bo(e, t);
      break;
    }
    case h.COL: {
      e.tmplInsertionModeStack[0] = U.IN_COLUMN_GROUP, e.insertionMode = U.IN_COLUMN_GROUP, u1(e, t);
      break;
    }
    case h.TR: {
      e.tmplInsertionModeStack[0] = U.IN_TABLE_BODY, e.insertionMode = U.IN_TABLE_BODY, Ec(e, t);
      break;
    }
    case h.TD:
    case h.TH: {
      e.tmplInsertionModeStack[0] = U.IN_ROW, e.insertionMode = U.IN_ROW, yc(e, t);
      break;
    }
    default:
      e.tmplInsertionModeStack[0] = U.IN_BODY, e.insertionMode = U.IN_BODY, pn(e, t);
  }
}
function Lq(e, t) {
  t.tagID === h.TEMPLATE && mi(e, t);
}
function UN(e, t) {
  e.openElements.tmplCount > 0 ? (e.openElements.popUntilTagNamePopped(h.TEMPLATE), e.activeFormattingElements.clearToLastMarker(), e.tmplInsertionModeStack.shift(), e._resetInsertionMode(), e.onEof(t)) : l1(e, t);
}
function Dq(e, t) {
  t.tagID === h.HTML ? pn(e, t) : Wu(e, t);
}
function HN(e, t) {
  var n;
  if (t.tagID === h.HTML) {
    if (e.fragmentContext || (e.insertionMode = U.AFTER_AFTER_BODY), e.options.sourceCodeLocationInfo && e.openElements.tagIDs[0] === h.HTML) {
      e._setEndLocation(e.openElements.items[0], t);
      const r = e.openElements.items[1];
      r && !(!((n = e.treeAdapter.getNodeSourceCodeLocation(r)) === null || n === void 0) && n.endTag) && e._setEndLocation(r, t);
    }
  } else
    Wu(e, t);
}
function Wu(e, t) {
  e.insertionMode = U.IN_BODY, mc(e, t);
}
function Mq(e, t) {
  switch (t.tagID) {
    case h.HTML: {
      pn(e, t);
      break;
    }
    case h.FRAMESET: {
      e._insertElement(t, ue.HTML);
      break;
    }
    case h.FRAME: {
      e._appendElement(t, ue.HTML), t.ackSelfClosing = !0;
      break;
    }
    case h.NOFRAMES: {
      yr(e, t);
      break;
    }
  }
}
function Pq(e, t) {
  t.tagID === h.FRAMESET && !e.openElements.isRootHtmlElementCurrent() && (e.openElements.pop(), !e.fragmentContext && e.openElements.currentTagId !== h.FRAMESET && (e.insertionMode = U.AFTER_FRAMESET));
}
function Fq(e, t) {
  switch (t.tagID) {
    case h.HTML: {
      pn(e, t);
      break;
    }
    case h.NOFRAMES: {
      yr(e, t);
      break;
    }
  }
}
function Bq(e, t) {
  t.tagID === h.HTML && (e.insertionMode = U.AFTER_AFTER_FRAMESET);
}
function Uq(e, t) {
  t.tagID === h.HTML ? pn(e, t) : Ou(e, t);
}
function Ou(e, t) {
  e.insertionMode = U.IN_BODY, mc(e, t);
}
function Hq(e, t) {
  switch (t.tagID) {
    case h.HTML: {
      pn(e, t);
      break;
    }
    case h.NOFRAMES: {
      yr(e, t);
      break;
    }
  }
}
function $q(e, t) {
  t.chars = bt, e._insertCharacters(t);
}
function zq(e, t) {
  e._insertCharacters(t), e.framesetOk = !1;
}
function $N(e) {
  for (; e.treeAdapter.getNamespaceURI(e.openElements.current) !== ue.HTML && e.openElements.currentTagId !== void 0 && !e._isIntegrationPoint(e.openElements.currentTagId, e.openElements.current); )
    e.openElements.pop();
}
function Gq(e, t) {
  if (aG(t))
    $N(e), e._startTagOutsideForeignContent(t);
  else {
    const n = e._getAdjustedCurrentElement(), r = e.treeAdapter.getNamespaceURI(n);
    r === ue.MATHML ? AN(t) : r === ue.SVG && (iG(t), kN(t)), o1(t), t.selfClosing ? e._appendElement(t, r) : e._insertElement(t, r), t.ackSelfClosing = !0;
  }
}
function qq(e, t) {
  if (t.tagID === h.P || t.tagID === h.BR) {
    $N(e), e._endTagOutsideForeignContent(t);
    return;
  }
  for (let n = e.openElements.stackTop; n > 0; n--) {
    const r = e.openElements.items[n];
    if (e.treeAdapter.getNamespaceURI(r) === ue.HTML) {
      e._endTagOutsideForeignContent(t);
      break;
    }
    const o = e.treeAdapter.getTagName(r);
    if (o.toLowerCase() === t.tagName) {
      t.tagName = o, e.openElements.shortenToLength(n);
      break;
    }
  }
}
X.AREA, X.BASE, X.BASEFONT, X.BGSOUND, X.BR, X.COL, X.EMBED, X.FRAME, X.HR, X.IMG, X.INPUT, X.KEYGEN, X.LINK, X.META, X.PARAM, X.SOURCE, X.TRACK, X.WBR;
const jq = /<(\/?)(iframe|noembed|noframes|plaintext|script|style|textarea|title|xmp)(?=[\t\n\f\r />])/gi, Vq = /* @__PURE__ */ new Set([
  "mdxFlowExpression",
  "mdxJsxFlowElement",
  "mdxJsxTextElement",
  "mdxTextExpression",
  "mdxjsEsm"
]), OI = { sourceCodeLocationInfo: !0, scriptingEnabled: !1 };
function zN(e, t) {
  const n = nj(e), r = fN("type", {
    handlers: { root: Wq, element: Yq, text: Kq, comment: qN, doctype: Xq, raw: Zq },
    unknown: Jq
  }), o = {
    parser: n ? new RI(OI) : RI.getFragmentParser(void 0, OI),
    handle(c) {
      r(c, o);
    },
    stitches: !1,
    options: t || {}
  };
  r(e, o), wo(o, Or());
  const s = n ? o.parser.document : o.parser.getFragment(), u = rz(s, {
    // To do: support `space`?
    file: o.options.file
  });
  return o.stitches && dc(u, "comment", function(c, p, f) {
    const b = (
      /** @type {Stitch} */
      /** @type {unknown} */
      c
    );
    if (b.value.stitch && f && p !== void 0) {
      const g = f.children;
      return g[p] = b.value.stitch, p;
    }
  }), u.type === "root" && u.children.length === 1 && u.children[0].type === e.type ? u.children[0] : u;
}
function GN(e, t) {
  let n = -1;
  if (e)
    for (; ++n < e.length; )
      t.handle(e[n]);
}
function Wq(e, t) {
  GN(e.children, t);
}
function Yq(e, t) {
  ej(e, t), GN(e.children, t), tj(e, t);
}
function Kq(e, t) {
  t.parser.tokenizer.state > 4 && (t.parser.tokenizer.state = 0);
  const n = {
    type: Ye.CHARACTER,
    chars: e.value,
    location: el(e)
  };
  wo(t, Or(e)), t.parser.currentToken = n, t.parser._processToken(t.parser.currentToken);
}
function Xq(e, t) {
  const n = {
    type: Ye.DOCTYPE,
    name: "html",
    forceQuirks: !1,
    publicId: "",
    systemId: "",
    location: el(e)
  };
  wo(t, Or(e)), t.parser.currentToken = n, t.parser._processToken(t.parser.currentToken);
}
function Qq(e, t) {
  t.stitches = !0;
  const n = rj(e);
  if ("children" in e && "children" in n) {
    const r = (
      /** @type {Root} */
      zN({ type: "root", children: e.children }, t.options)
    );
    n.children = r.children;
  }
  qN({ type: "comment", value: { stitch: n } }, t);
}
function qN(e, t) {
  const n = e.value, r = {
    type: Ye.COMMENT,
    data: n,
    location: el(e)
  };
  wo(t, Or(e)), t.parser.currentToken = r, t.parser._processToken(t.parser.currentToken);
}
function Zq(e, t) {
  if (t.parser.tokenizer.preprocessor.html = "", t.parser.tokenizer.preprocessor.pos = -1, t.parser.tokenizer.preprocessor.lastGapPos = -2, t.parser.tokenizer.preprocessor.gapStack = [], t.parser.tokenizer.preprocessor.skipNextNewLine = !1, t.parser.tokenizer.preprocessor.lastChunkWritten = !1, t.parser.tokenizer.preprocessor.endOfChunkHit = !1, t.parser.tokenizer.preprocessor.isEol = !1, jN(t, Or(e)), t.parser.tokenizer.write(
    t.options.tagfilter ? e.value.replace(jq, "&lt;$1$2") : e.value,
    !1
  ), t.parser.tokenizer._runParsingLoop(), t.parser.tokenizer.state === 72 || // @ts-expect-error: removed.
  t.parser.tokenizer.state === 78) {
    t.parser.tokenizer.preprocessor.lastChunkWritten = !0;
    const n = t.parser.tokenizer._consume();
    t.parser.tokenizer._callState(n);
  }
}
function Jq(e, t) {
  const n = (
    /** @type {Nodes} */
    e
  );
  if (t.options.passThrough && t.options.passThrough.includes(n.type))
    Qq(n, t);
  else {
    let r = "";
    throw Vq.has(n.type) && (r = ". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax"), new Error("Cannot compile `" + n.type + "` node" + r);
  }
}
function wo(e, t) {
  jN(e, t);
  const n = e.parser.tokenizer.currentCharacterToken;
  n && n.location && (n.location.endLine = e.parser.tokenizer.preprocessor.line, n.location.endCol = e.parser.tokenizer.preprocessor.col + 1, n.location.endOffset = e.parser.tokenizer.preprocessor.offset + 1, e.parser.currentToken = n, e.parser._processToken(e.parser.currentToken)), e.parser.tokenizer.paused = !1, e.parser.tokenizer.inLoop = !1, e.parser.tokenizer.active = !1, e.parser.tokenizer.returnState = xt.DATA, e.parser.tokenizer.charRefCode = -1, e.parser.tokenizer.consumedAfterSnapshot = -1, e.parser.tokenizer.currentLocation = null, e.parser.tokenizer.currentCharacterToken = null, e.parser.tokenizer.currentToken = null, e.parser.tokenizer.currentAttr = { name: "", value: "" };
}
function jN(e, t) {
  if (t && t.offset !== void 0) {
    const n = {
      startLine: t.line,
      startCol: t.column,
      startOffset: t.offset,
      endLine: -1,
      endCol: -1,
      endOffset: -1
    };
    e.parser.tokenizer.preprocessor.lineStartPos = -t.column + 1, e.parser.tokenizer.preprocessor.droppedBufferSize = t.offset, e.parser.tokenizer.preprocessor.line = t.line, e.parser.tokenizer.currentLocation = n;
  }
}
function ej(e, t) {
  const n = e.tagName.toLowerCase();
  if (t.parser.tokenizer.state === xt.PLAINTEXT) return;
  wo(t, Or(e));
  const r = t.parser.openElements.current;
  let o = "namespaceURI" in r ? r.namespaceURI : Ja.html;
  o === Ja.html && n === "svg" && (o = Ja.svg);
  const s = lz(
    // Shallow clone to not delve into `children`: we only need the attributes.
    { ...e, children: [] },
    { space: o === Ja.svg ? "svg" : "html" }
  ), u = {
    type: Ye.START_TAG,
    tagName: n,
    tagID: Co(n),
    // We always send start and end tags.
    selfClosing: !1,
    ackSelfClosing: !1,
    // Always element.
    /* c8 ignore next */
    attrs: "attrs" in s ? s.attrs : [],
    location: el(e)
  };
  t.parser.currentToken = u, t.parser._processToken(t.parser.currentToken), t.parser.tokenizer.lastStartTagName = n;
}
function tj(e, t) {
  const n = e.tagName.toLowerCase();
  if (!t.parser.tokenizer.inForeignNode && mz.includes(n) || t.parser.tokenizer.state === xt.PLAINTEXT) return;
  wo(t, ic(e));
  const r = {
    type: Ye.END_TAG,
    tagName: n,
    tagID: Co(n),
    selfClosing: !1,
    ackSelfClosing: !1,
    attrs: [],
    location: el(e)
  };
  t.parser.currentToken = r, t.parser._processToken(t.parser.currentToken), // Current element is closed.
  n === t.parser.tokenizer.lastStartTagName && // `<textarea>` and `<title>`
  (t.parser.tokenizer.state === xt.RCDATA || // `<iframe>`, `<noembed>`, `<noframes>`, `<style>`, `<xmp>`
  t.parser.tokenizer.state === xt.RAWTEXT || // `<script>`
  t.parser.tokenizer.state === xt.SCRIPT_DATA) && (t.parser.tokenizer.state = xt.DATA);
}
function nj(e) {
  const t = e.type === "root" ? e.children[0] : e;
  return !!(t && (t.type === "doctype" || t.type === "element" && t.tagName.toLowerCase() === "html"));
}
function el(e) {
  const t = Or(e) || {
    line: void 0,
    column: void 0,
    offset: void 0
  }, n = ic(e) || {
    line: void 0,
    column: void 0,
    offset: void 0
  };
  return {
    startLine: t.line,
    startCol: t.column,
    startOffset: t.offset,
    endLine: n.line,
    endCol: n.column,
    endOffset: n.offset
  };
}
function rj(e) {
  return "children" in e ? mo({ ...e, children: [] }) : mo(e);
}
function aj(e) {
  return function(t, n) {
    return (
      /** @type {Root} */
      zN(t, { ...e, file: n })
    );
  };
}
function LI(e, t) {
  const n = String(e);
  if (typeof t != "string")
    throw new TypeError("Expected character");
  let r = 0, o = n.indexOf(t);
  for (; o !== -1; )
    r++, o = n.indexOf(t, o + t.length);
  return r;
}
function ij(e) {
  if (typeof e != "string")
    throw new TypeError("Expected a string");
  return e.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d");
}
function oj(e, t, n) {
  const o = uc((n || {}).ignore || []), s = sj(t);
  let u = -1;
  for (; ++u < s.length; )
    Mx(e, "text", c);
  function c(f, b) {
    let g = -1, T;
    for (; ++g < b.length; ) {
      const y = b[g], _ = T ? T.children : void 0;
      if (o(
        y,
        _ ? _.indexOf(y) : void 0,
        T
      ))
        return;
      T = y;
    }
    if (T)
      return p(f, b);
  }
  function p(f, b) {
    const g = b[b.length - 1], T = s[u][0], y = s[u][1];
    let _ = 0;
    const R = g.children.indexOf(f);
    let C = !1, w = [];
    T.lastIndex = 0;
    let k = T.exec(f.value);
    for (; k; ) {
      const O = k.index, F = {
        index: k.index,
        input: k.input,
        stack: [...b, f]
      };
      let v = y(...k, F);
      if (typeof v == "string" && (v = v.length > 0 ? { type: "text", value: v } : void 0), v === !1 ? T.lastIndex = O + 1 : (_ !== O && w.push({
        type: "text",
        value: f.value.slice(_, O)
      }), Array.isArray(v) ? w.push(...v) : v && w.push(v), _ = O + k[0].length, C = !0), !T.global)
        break;
      k = T.exec(f.value);
    }
    return C ? (_ < f.value.length && w.push({ type: "text", value: f.value.slice(_) }), g.children.splice(R, 1, ...w)) : w = [f], R + w.length;
  }
}
function sj(e) {
  const t = [];
  if (!Array.isArray(e))
    throw new TypeError("Expected find and replace tuple or list of tuples");
  const n = !e[0] || Array.isArray(e[0]) ? e : [e];
  let r = -1;
  for (; ++r < n.length; ) {
    const o = n[r];
    t.push([lj(o[0]), uj(o[1])]);
  }
  return t;
}
function lj(e) {
  return typeof e == "string" ? new RegExp(ij(e), "g") : e;
}
function uj(e) {
  return typeof e == "function" ? e : function() {
    return e;
  };
}
const Tb = "phrasing", Sb = ["autolink", "link", "image", "label"];
function cj() {
  return {
    transforms: [bj],
    enter: {
      literalAutolink: pj,
      literalAutolinkEmail: _b,
      literalAutolinkHttp: _b,
      literalAutolinkWww: _b
    },
    exit: {
      literalAutolink: mj,
      literalAutolinkEmail: gj,
      literalAutolinkHttp: fj,
      literalAutolinkWww: hj
    }
  };
}
function dj() {
  return {
    unsafe: [
      {
        character: "@",
        before: "[+\\-.\\w]",
        after: "[\\-.\\w]",
        inConstruct: Tb,
        notInConstruct: Sb
      },
      {
        character: ".",
        before: "[Ww]",
        after: "[\\-.\\w]",
        inConstruct: Tb,
        notInConstruct: Sb
      },
      {
        character: ":",
        before: "[ps]",
        after: "\\/",
        inConstruct: Tb,
        notInConstruct: Sb
      }
    ]
  };
}
function pj(e) {
  this.enter({ type: "link", title: null, url: "", children: [] }, e);
}
function _b(e) {
  this.config.enter.autolinkProtocol.call(this, e);
}
function fj(e) {
  this.config.exit.autolinkProtocol.call(this, e);
}
function hj(e) {
  this.config.exit.data.call(this, e);
  const t = this.stack[this.stack.length - 1];
  t.type, t.url = "http://" + this.sliceSerialize(e);
}
function gj(e) {
  this.config.exit.autolinkEmail.call(this, e);
}
function mj(e) {
  this.exit(e);
}
function bj(e) {
  oj(
    e,
    [
      [/(https?:\/\/|www(?=\.))([-.\w]+)([^ \t\r\n]*)/gi, Ej],
      [new RegExp("(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)", "gu"), yj]
    ],
    { ignore: ["link", "linkReference"] }
  );
}
function Ej(e, t, n, r, o) {
  let s = "";
  if (!VN(o) || (/^w/i.test(t) && (n = t + n, t = "", s = "http://"), !Tj(n)))
    return !1;
  const u = Sj(n + r);
  if (!u[0]) return !1;
  const c = {
    type: "link",
    title: null,
    url: s + t + u[0],
    children: [{ type: "text", value: t + u[0] }]
  };
  return u[1] ? [c, { type: "text", value: u[1] }] : c;
}
function yj(e, t, n, r) {
  return (
    // Not an expected previous character.
    !VN(r, !0) || // Label ends in not allowed character.
    /[-\d_]$/.test(n) ? !1 : {
      type: "link",
      title: null,
      url: "mailto:" + t + "@" + n,
      children: [{ type: "text", value: t + "@" + n }]
    }
  );
}
function Tj(e) {
  const t = e.split(".");
  return !(t.length < 2 || t[t.length - 1] && (/_/.test(t[t.length - 1]) || !/[a-zA-Z\d]/.test(t[t.length - 1])) || t[t.length - 2] && (/_/.test(t[t.length - 2]) || !/[a-zA-Z\d]/.test(t[t.length - 2])));
}
function Sj(e) {
  const t = /[!"&'),.:;<>?\]}]+$/.exec(e);
  if (!t)
    return [e, void 0];
  e = e.slice(0, t.index);
  let n = t[0], r = n.indexOf(")");
  const o = LI(e, "(");
  let s = LI(e, ")");
  for (; r !== -1 && o > s; )
    e += n.slice(0, r + 1), n = n.slice(r + 1), r = n.indexOf(")"), s++;
  return [e, n];
}
function VN(e, t) {
  const n = e.input.charCodeAt(e.index - 1);
  return (e.index === 0 || pi(n) || oc(n)) && // If it’s an email, the previous character should not be a slash.
  (!t || n !== 47);
}
WN.peek = Oj;
function _j() {
  return {
    enter: {
      gfmFootnoteDefinition: Aj,
      gfmFootnoteDefinitionLabelString: kj,
      gfmFootnoteCall: Ij,
      gfmFootnoteCallString: Rj
    },
    exit: {
      gfmFootnoteDefinition: wj,
      gfmFootnoteDefinitionLabelString: Cj,
      gfmFootnoteCall: Nj,
      gfmFootnoteCallString: xj
    }
  };
}
function vj() {
  return {
    // This is on by default already.
    unsafe: [{ character: "[", inConstruct: ["phrasing", "label", "reference"] }],
    handlers: { footnoteDefinition: Lj, footnoteReference: WN }
  };
}
function Aj(e) {
  this.enter(
    { type: "footnoteDefinition", identifier: "", label: "", children: [] },
    e
  );
}
function kj() {
  this.buffer();
}
function Cj(e) {
  const t = this.resume(), n = this.stack[this.stack.length - 1];
  n.type, n.label = t, n.identifier = Er(
    this.sliceSerialize(e)
  ).toLowerCase();
}
function wj(e) {
  this.exit(e);
}
function Ij(e) {
  this.enter({ type: "footnoteReference", identifier: "", label: "" }, e);
}
function Rj() {
  this.buffer();
}
function xj(e) {
  const t = this.resume(), n = this.stack[this.stack.length - 1];
  n.type, n.label = t, n.identifier = Er(
    this.sliceSerialize(e)
  ).toLowerCase();
}
function Nj(e) {
  this.exit(e);
}
function WN(e, t, n, r) {
  const o = n.createTracker(r);
  let s = o.move("[^");
  const u = n.enter("footnoteReference"), c = n.enter("reference");
  return s += o.move(
    n.safe(n.associationId(e), {
      ...o.current(),
      before: s,
      after: "]"
    })
  ), c(), u(), s += o.move("]"), s;
}
function Oj() {
  return "[";
}
function Lj(e, t, n, r) {
  const o = n.createTracker(r);
  let s = o.move("[^");
  const u = n.enter("footnoteDefinition"), c = n.enter("label");
  return s += o.move(
    n.safe(n.associationId(e), {
      ...o.current(),
      before: s,
      after: "]"
    })
  ), c(), s += o.move(
    "]:" + (e.children && e.children.length > 0 ? " " : "")
  ), o.shift(4), s += o.move(
    n.indentLines(n.containerFlow(e, o.current()), Dj)
  ), u(), s;
}
function Dj(e, t, n) {
  return t === 0 ? e : (n ? "" : "    ") + e;
}
const Mj = [
  "autolink",
  "destinationLiteral",
  "destinationRaw",
  "reference",
  "titleQuote",
  "titleApostrophe"
];
YN.peek = Hj;
function Pj() {
  return {
    canContainEols: ["delete"],
    enter: { strikethrough: Bj },
    exit: { strikethrough: Uj }
  };
}
function Fj() {
  return {
    unsafe: [
      {
        character: "~",
        inConstruct: "phrasing",
        notInConstruct: Mj
      }
    ],
    handlers: { delete: YN }
  };
}
function Bj(e) {
  this.enter({ type: "delete", children: [] }, e);
}
function Uj(e) {
  this.exit(e);
}
function YN(e, t, n, r) {
  const o = n.createTracker(r), s = n.enter("strikethrough");
  let u = o.move("~~");
  return u += n.containerPhrasing(e, {
    ...o.current(),
    before: u,
    after: "~"
  }), u += o.move("~~"), s(), u;
}
function Hj() {
  return "~";
}
function $j(e) {
  return e.length;
}
function zj(e, t) {
  const n = t || {}, r = (n.align || []).concat(), o = n.stringLength || $j, s = [], u = [], c = [], p = [];
  let f = 0, b = -1;
  for (; ++b < e.length; ) {
    const A = [], R = [];
    let C = -1;
    for (e[b].length > f && (f = e[b].length); ++C < e[b].length; ) {
      const w = Gj(e[b][C]);
      if (n.alignDelimiters !== !1) {
        const k = o(w);
        R[C] = k, (p[C] === void 0 || k > p[C]) && (p[C] = k);
      }
      A.push(w);
    }
    u[b] = A, c[b] = R;
  }
  let g = -1;
  if (typeof r == "object" && "length" in r)
    for (; ++g < f; )
      s[g] = DI(r[g]);
  else {
    const A = DI(r);
    for (; ++g < f; )
      s[g] = A;
  }
  g = -1;
  const T = [], y = [];
  for (; ++g < f; ) {
    const A = s[g];
    let R = "", C = "";
    A === 99 ? (R = ":", C = ":") : A === 108 ? R = ":" : A === 114 && (C = ":");
    let w = n.alignDelimiters === !1 ? 1 : Math.max(
      1,
      p[g] - R.length - C.length
    );
    const k = R + "-".repeat(w) + C;
    n.alignDelimiters !== !1 && (w = R.length + w + C.length, w > p[g] && (p[g] = w), y[g] = w), T[g] = k;
  }
  u.splice(1, 0, T), c.splice(1, 0, y), b = -1;
  const _ = [];
  for (; ++b < u.length; ) {
    const A = u[b], R = c[b];
    g = -1;
    const C = [];
    for (; ++g < f; ) {
      const w = A[g] || "";
      let k = "", O = "";
      if (n.alignDelimiters !== !1) {
        const F = p[g] - (R[g] || 0), v = s[g];
        v === 114 ? k = " ".repeat(F) : v === 99 ? F % 2 ? (k = " ".repeat(F / 2 + 0.5), O = " ".repeat(F / 2 - 0.5)) : (k = " ".repeat(F / 2), O = k) : O = " ".repeat(F);
      }
      n.delimiterStart !== !1 && !g && C.push("|"), n.padding !== !1 && // Don’t add the opening space if we’re not aligning and the cell is
      // empty: there will be a closing space.
      !(n.alignDelimiters === !1 && w === "") && (n.delimiterStart !== !1 || g) && C.push(" "), n.alignDelimiters !== !1 && C.push(k), C.push(w), n.alignDelimiters !== !1 && C.push(O), n.padding !== !1 && C.push(" "), (n.delimiterEnd !== !1 || g !== f - 1) && C.push("|");
    }
    _.push(
      n.delimiterEnd === !1 ? C.join("").replace(/ +$/, "") : C.join("")
    );
  }
  return _.join(`
`);
}
function Gj(e) {
  return e == null ? "" : String(e);
}
function DI(e) {
  const t = typeof e == "string" ? e.codePointAt(0) : 0;
  return t === 67 || t === 99 ? 99 : t === 76 || t === 108 ? 108 : t === 82 || t === 114 ? 114 : 0;
}
function qj(e, t, n, r) {
  const o = n.enter("blockquote"), s = n.createTracker(r);
  s.move("> "), s.shift(2);
  const u = n.indentLines(
    n.containerFlow(e, s.current()),
    jj
  );
  return o(), u;
}
function jj(e, t, n) {
  return ">" + (n ? "" : " ") + e;
}
function Vj(e, t) {
  return MI(e, t.inConstruct, !0) && !MI(e, t.notInConstruct, !1);
}
function MI(e, t, n) {
  if (typeof t == "string" && (t = [t]), !t || t.length === 0)
    return n;
  let r = -1;
  for (; ++r < t.length; )
    if (e.includes(t[r]))
      return !0;
  return !1;
}
function PI(e, t, n, r) {
  let o = -1;
  for (; ++o < n.unsafe.length; )
    if (n.unsafe[o].character === `
` && Vj(n.stack, n.unsafe[o]))
      return /[ \t]/.test(r.before) ? "" : " ";
  return `\\
`;
}
function Wj(e, t) {
  const n = String(e);
  let r = n.indexOf(t), o = r, s = 0, u = 0;
  if (typeof t != "string")
    throw new TypeError("Expected substring");
  for (; r !== -1; )
    r === o ? ++s > u && (u = s) : s = 1, o = r + t.length, r = n.indexOf(t, o);
  return u;
}
function Yj(e, t) {
  return !!(t.options.fences === !1 && e.value && // If there’s no info…
  !e.lang && // And there’s a non-whitespace character…
  /[^ \r\n]/.test(e.value) && // And the value doesn’t start or end in a blank…
  !/^[\t ]*(?:[\r\n]|$)|(?:^|[\r\n])[\t ]*$/.test(e.value));
}
function Kj(e) {
  const t = e.options.fence || "`";
  if (t !== "`" && t !== "~")
    throw new Error(
      "Cannot serialize code with `" + t + "` for `options.fence`, expected `` ` `` or `~`"
    );
  return t;
}
function Xj(e, t, n, r) {
  const o = Kj(n), s = e.value || "", u = o === "`" ? "GraveAccent" : "Tilde";
  if (Yj(e, n)) {
    const g = n.enter("codeIndented"), T = n.indentLines(s, Qj);
    return g(), T;
  }
  const c = n.createTracker(r), p = o.repeat(Math.max(Wj(s, o) + 1, 3)), f = n.enter("codeFenced");
  let b = c.move(p);
  if (e.lang) {
    const g = n.enter(`codeFencedLang${u}`);
    b += c.move(
      n.safe(e.lang, {
        before: b,
        after: " ",
        encode: ["`"],
        ...c.current()
      })
    ), g();
  }
  if (e.lang && e.meta) {
    const g = n.enter(`codeFencedMeta${u}`);
    b += c.move(" "), b += c.move(
      n.safe(e.meta, {
        before: b,
        after: `
`,
        encode: ["`"],
        ...c.current()
      })
    ), g();
  }
  return b += c.move(`
`), s && (b += c.move(s + `
`)), b += c.move(p), f(), b;
}
function Qj(e, t, n) {
  return (n ? "" : "    ") + e;
}
function c1(e) {
  const t = e.options.quote || '"';
  if (t !== '"' && t !== "'")
    throw new Error(
      "Cannot serialize title with `" + t + "` for `options.quote`, expected `\"`, or `'`"
    );
  return t;
}
function Zj(e, t, n, r) {
  const o = c1(n), s = o === '"' ? "Quote" : "Apostrophe", u = n.enter("definition");
  let c = n.enter("label");
  const p = n.createTracker(r);
  let f = p.move("[");
  return f += p.move(
    n.safe(n.associationId(e), {
      before: f,
      after: "]",
      ...p.current()
    })
  ), f += p.move("]: "), c(), // If there’s no url, or…
  !e.url || // If there are control characters or whitespace.
  /[\0- \u007F]/.test(e.url) ? (c = n.enter("destinationLiteral"), f += p.move("<"), f += p.move(
    n.safe(e.url, { before: f, after: ">", ...p.current() })
  ), f += p.move(">")) : (c = n.enter("destinationRaw"), f += p.move(
    n.safe(e.url, {
      before: f,
      after: e.title ? " " : `
`,
      ...p.current()
    })
  )), c(), e.title && (c = n.enter(`title${s}`), f += p.move(" " + o), f += p.move(
    n.safe(e.title, {
      before: f,
      after: o,
      ...p.current()
    })
  ), f += p.move(o), c()), u(), f;
}
function Jj(e) {
  const t = e.options.emphasis || "*";
  if (t !== "*" && t !== "_")
    throw new Error(
      "Cannot serialize emphasis with `" + t + "` for `options.emphasis`, expected `*`, or `_`"
    );
  return t;
}
function $s(e) {
  return "&#x" + e.toString(16).toUpperCase() + ";";
}
function Yu(e, t, n) {
  const r = go(e), o = go(t);
  return r === void 0 ? o === void 0 ? (
    // Letter inside:
    // we have to encode *both* letters for `_` as it is looser.
    // it already forms for `*` (and GFMs `~`).
    n === "_" ? { inside: !0, outside: !0 } : { inside: !1, outside: !1 }
  ) : o === 1 ? (
    // Whitespace inside: encode both (letter, whitespace).
    { inside: !0, outside: !0 }
  ) : (
    // Punctuation inside: encode outer (letter)
    { inside: !1, outside: !0 }
  ) : r === 1 ? o === void 0 ? (
    // Letter inside: already forms.
    { inside: !1, outside: !1 }
  ) : o === 1 ? (
    // Whitespace inside: encode both (whitespace).
    { inside: !0, outside: !0 }
  ) : (
    // Punctuation inside: already forms.
    { inside: !1, outside: !1 }
  ) : o === void 0 ? (
    // Letter inside: already forms.
    { inside: !1, outside: !1 }
  ) : o === 1 ? (
    // Whitespace inside: encode inner (whitespace).
    { inside: !0, outside: !1 }
  ) : (
    // Punctuation inside: already forms.
    { inside: !1, outside: !1 }
  );
}
KN.peek = eV;
function KN(e, t, n, r) {
  const o = Jj(n), s = n.enter("emphasis"), u = n.createTracker(r), c = u.move(o);
  let p = u.move(
    n.containerPhrasing(e, {
      after: o,
      before: c,
      ...u.current()
    })
  );
  const f = p.charCodeAt(0), b = Yu(
    r.before.charCodeAt(r.before.length - 1),
    f,
    o
  );
  b.inside && (p = $s(f) + p.slice(1));
  const g = p.charCodeAt(p.length - 1), T = Yu(r.after.charCodeAt(0), g, o);
  T.inside && (p = p.slice(0, -1) + $s(g));
  const y = u.move(o);
  return s(), n.attentionEncodeSurroundingInfo = {
    after: T.outside,
    before: b.outside
  }, c + p + y;
}
function eV(e, t, n) {
  return n.options.emphasis || "*";
}
function tV(e, t) {
  let n = !1;
  return dc(e, function(r) {
    if ("value" in r && /\r?\n|\r/.test(r.value) || r.type === "break")
      return n = !0, Jb;
  }), !!((!e.depth || e.depth < 3) && FE(e) && (t.options.setext || n));
}
function nV(e, t, n, r) {
  const o = Math.max(Math.min(6, e.depth || 1), 1), s = n.createTracker(r);
  if (tV(e, n)) {
    const b = n.enter("headingSetext"), g = n.enter("phrasing"), T = n.containerPhrasing(e, {
      ...s.current(),
      before: `
`,
      after: `
`
    });
    return g(), b(), T + `
` + (o === 1 ? "=" : "-").repeat(
      // The whole size…
      T.length - // Minus the position of the character after the last EOL (or
      // 0 if there is none)…
      (Math.max(T.lastIndexOf("\r"), T.lastIndexOf(`
`)) + 1)
    );
  }
  const u = "#".repeat(o), c = n.enter("headingAtx"), p = n.enter("phrasing");
  s.move(u + " ");
  let f = n.containerPhrasing(e, {
    before: "# ",
    after: `
`,
    ...s.current()
  });
  return /^[\t ]/.test(f) && (f = $s(f.charCodeAt(0)) + f.slice(1)), f = f ? u + " " + f : u, n.options.closeAtx && (f += " " + u), p(), c(), f;
}
XN.peek = rV;
function XN(e) {
  return e.value || "";
}
function rV() {
  return "<";
}
QN.peek = aV;
function QN(e, t, n, r) {
  const o = c1(n), s = o === '"' ? "Quote" : "Apostrophe", u = n.enter("image");
  let c = n.enter("label");
  const p = n.createTracker(r);
  let f = p.move("![");
  return f += p.move(
    n.safe(e.alt, { before: f, after: "]", ...p.current() })
  ), f += p.move("]("), c(), // If there’s no url but there is a title…
  !e.url && e.title || // If there are control characters or whitespace.
  /[\0- \u007F]/.test(e.url) ? (c = n.enter("destinationLiteral"), f += p.move("<"), f += p.move(
    n.safe(e.url, { before: f, after: ">", ...p.current() })
  ), f += p.move(">")) : (c = n.enter("destinationRaw"), f += p.move(
    n.safe(e.url, {
      before: f,
      after: e.title ? " " : ")",
      ...p.current()
    })
  )), c(), e.title && (c = n.enter(`title${s}`), f += p.move(" " + o), f += p.move(
    n.safe(e.title, {
      before: f,
      after: o,
      ...p.current()
    })
  ), f += p.move(o), c()), f += p.move(")"), u(), f;
}
function aV() {
  return "!";
}
ZN.peek = iV;
function ZN(e, t, n, r) {
  const o = e.referenceType, s = n.enter("imageReference");
  let u = n.enter("label");
  const c = n.createTracker(r);
  let p = c.move("![");
  const f = n.safe(e.alt, {
    before: p,
    after: "]",
    ...c.current()
  });
  p += c.move(f + "]["), u();
  const b = n.stack;
  n.stack = [], u = n.enter("reference");
  const g = n.safe(n.associationId(e), {
    before: p,
    after: "]",
    ...c.current()
  });
  return u(), n.stack = b, s(), o === "full" || !f || f !== g ? p += c.move(g + "]") : o === "shortcut" ? p = p.slice(0, -1) : p += c.move("]"), p;
}
function iV() {
  return "!";
}
JN.peek = oV;
function JN(e, t, n) {
  let r = e.value || "", o = "`", s = -1;
  for (; new RegExp("(^|[^`])" + o + "([^`]|$)").test(r); )
    o += "`";
  for (/[^ \r\n]/.test(r) && (/^[ \r\n]/.test(r) && /[ \r\n]$/.test(r) || /^`|`$/.test(r)) && (r = " " + r + " "); ++s < n.unsafe.length; ) {
    const u = n.unsafe[s], c = n.compilePattern(u);
    let p;
    if (u.atBreak)
      for (; p = c.exec(r); ) {
        let f = p.index;
        r.charCodeAt(f) === 10 && r.charCodeAt(f - 1) === 13 && f--, r = r.slice(0, f) + " " + r.slice(p.index + 1);
      }
  }
  return o + r + o;
}
function oV() {
  return "`";
}
function e2(e, t) {
  const n = FE(e);
  return !!(!t.options.resourceLink && // If there’s a url…
  e.url && // And there’s a no title…
  !e.title && // And the content of `node` is a single text node…
  e.children && e.children.length === 1 && e.children[0].type === "text" && // And if the url is the same as the content…
  (n === e.url || "mailto:" + n === e.url) && // And that starts w/ a protocol…
  /^[a-z][a-z+.-]+:/i.test(e.url) && // And that doesn’t contain ASCII control codes (character escapes and
  // references don’t work), space, or angle brackets…
  !/[\0- <>\u007F]/.test(e.url));
}
t2.peek = sV;
function t2(e, t, n, r) {
  const o = c1(n), s = o === '"' ? "Quote" : "Apostrophe", u = n.createTracker(r);
  let c, p;
  if (e2(e, n)) {
    const b = n.stack;
    n.stack = [], c = n.enter("autolink");
    let g = u.move("<");
    return g += u.move(
      n.containerPhrasing(e, {
        before: g,
        after: ">",
        ...u.current()
      })
    ), g += u.move(">"), c(), n.stack = b, g;
  }
  c = n.enter("link"), p = n.enter("label");
  let f = u.move("[");
  return f += u.move(
    n.containerPhrasing(e, {
      before: f,
      after: "](",
      ...u.current()
    })
  ), f += u.move("]("), p(), // If there’s no url but there is a title…
  !e.url && e.title || // If there are control characters or whitespace.
  /[\0- \u007F]/.test(e.url) ? (p = n.enter("destinationLiteral"), f += u.move("<"), f += u.move(
    n.safe(e.url, { before: f, after: ">", ...u.current() })
  ), f += u.move(">")) : (p = n.enter("destinationRaw"), f += u.move(
    n.safe(e.url, {
      before: f,
      after: e.title ? " " : ")",
      ...u.current()
    })
  )), p(), e.title && (p = n.enter(`title${s}`), f += u.move(" " + o), f += u.move(
    n.safe(e.title, {
      before: f,
      after: o,
      ...u.current()
    })
  ), f += u.move(o), p()), f += u.move(")"), c(), f;
}
function sV(e, t, n) {
  return e2(e, n) ? "<" : "[";
}
n2.peek = lV;
function n2(e, t, n, r) {
  const o = e.referenceType, s = n.enter("linkReference");
  let u = n.enter("label");
  const c = n.createTracker(r);
  let p = c.move("[");
  const f = n.containerPhrasing(e, {
    before: p,
    after: "]",
    ...c.current()
  });
  p += c.move(f + "]["), u();
  const b = n.stack;
  n.stack = [], u = n.enter("reference");
  const g = n.safe(n.associationId(e), {
    before: p,
    after: "]",
    ...c.current()
  });
  return u(), n.stack = b, s(), o === "full" || !f || f !== g ? p += c.move(g + "]") : o === "shortcut" ? p = p.slice(0, -1) : p += c.move("]"), p;
}
function lV() {
  return "[";
}
function d1(e) {
  const t = e.options.bullet || "*";
  if (t !== "*" && t !== "+" && t !== "-")
    throw new Error(
      "Cannot serialize items with `" + t + "` for `options.bullet`, expected `*`, `+`, or `-`"
    );
  return t;
}
function uV(e) {
  const t = d1(e), n = e.options.bulletOther;
  if (!n)
    return t === "*" ? "-" : "*";
  if (n !== "*" && n !== "+" && n !== "-")
    throw new Error(
      "Cannot serialize items with `" + n + "` for `options.bulletOther`, expected `*`, `+`, or `-`"
    );
  if (n === t)
    throw new Error(
      "Expected `bullet` (`" + t + "`) and `bulletOther` (`" + n + "`) to be different"
    );
  return n;
}
function cV(e) {
  const t = e.options.bulletOrdered || ".";
  if (t !== "." && t !== ")")
    throw new Error(
      "Cannot serialize items with `" + t + "` for `options.bulletOrdered`, expected `.` or `)`"
    );
  return t;
}
function r2(e) {
  const t = e.options.rule || "*";
  if (t !== "*" && t !== "-" && t !== "_")
    throw new Error(
      "Cannot serialize rules with `" + t + "` for `options.rule`, expected `*`, `-`, or `_`"
    );
  return t;
}
function dV(e, t, n, r) {
  const o = n.enter("list"), s = n.bulletCurrent;
  let u = e.ordered ? cV(n) : d1(n);
  const c = e.ordered ? u === "." ? ")" : "." : uV(n);
  let p = t && n.bulletLastUsed ? u === n.bulletLastUsed : !1;
  if (!e.ordered) {
    const b = e.children ? e.children[0] : void 0;
    if (
      // Bullet could be used as a thematic break marker:
      (u === "*" || u === "-") && // Empty first list item:
      b && (!b.children || !b.children[0]) && // Directly in two other list items:
      n.stack[n.stack.length - 1] === "list" && n.stack[n.stack.length - 2] === "listItem" && n.stack[n.stack.length - 3] === "list" && n.stack[n.stack.length - 4] === "listItem" && // That are each the first child.
      n.indexStack[n.indexStack.length - 1] === 0 && n.indexStack[n.indexStack.length - 2] === 0 && n.indexStack[n.indexStack.length - 3] === 0 && (p = !0), r2(n) === u && b
    ) {
      let g = -1;
      for (; ++g < e.children.length; ) {
        const T = e.children[g];
        if (T && T.type === "listItem" && T.children && T.children[0] && T.children[0].type === "thematicBreak") {
          p = !0;
          break;
        }
      }
    }
  }
  p && (u = c), n.bulletCurrent = u;
  const f = n.containerFlow(e, r);
  return n.bulletLastUsed = u, n.bulletCurrent = s, o(), f;
}
function pV(e) {
  const t = e.options.listItemIndent || "one";
  if (t !== "tab" && t !== "one" && t !== "mixed")
    throw new Error(
      "Cannot serialize items with `" + t + "` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`"
    );
  return t;
}
function fV(e, t, n, r) {
  const o = pV(n);
  let s = n.bulletCurrent || d1(n);
  t && t.type === "list" && t.ordered && (s = (typeof t.start == "number" && t.start > -1 ? t.start : 1) + (n.options.incrementListMarker === !1 ? 0 : t.children.indexOf(e)) + s);
  let u = s.length + 1;
  (o === "tab" || o === "mixed" && (t && t.type === "list" && t.spread || e.spread)) && (u = Math.ceil(u / 4) * 4);
  const c = n.createTracker(r);
  c.move(s + " ".repeat(u - s.length)), c.shift(u);
  const p = n.enter("listItem"), f = n.indentLines(
    n.containerFlow(e, c.current()),
    b
  );
  return p(), f;
  function b(g, T, y) {
    return T ? (y ? "" : " ".repeat(u)) + g : (y ? s : s + " ".repeat(u - s.length)) + g;
  }
}
function hV(e, t, n, r) {
  const o = n.enter("paragraph"), s = n.enter("phrasing"), u = n.containerPhrasing(e, r);
  return s(), o(), u;
}
const gV = (
  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */
  uc([
    "break",
    "delete",
    "emphasis",
    // To do: next major: removed since footnotes were added to GFM.
    "footnote",
    "footnoteReference",
    "image",
    "imageReference",
    "inlineCode",
    // Enabled by `mdast-util-math`:
    "inlineMath",
    "link",
    "linkReference",
    // Enabled by `mdast-util-mdx`:
    "mdxJsxTextElement",
    // Enabled by `mdast-util-mdx`:
    "mdxTextExpression",
    "strong",
    "text",
    // Enabled by `mdast-util-directive`:
    "textDirective"
  ])
);
function mV(e, t, n, r) {
  return (e.children.some(function(u) {
    return gV(u);
  }) ? n.containerPhrasing : n.containerFlow).call(n, e, r);
}
function bV(e) {
  const t = e.options.strong || "*";
  if (t !== "*" && t !== "_")
    throw new Error(
      "Cannot serialize strong with `" + t + "` for `options.strong`, expected `*`, or `_`"
    );
  return t;
}
a2.peek = EV;
function a2(e, t, n, r) {
  const o = bV(n), s = n.enter("strong"), u = n.createTracker(r), c = u.move(o + o);
  let p = u.move(
    n.containerPhrasing(e, {
      after: o,
      before: c,
      ...u.current()
    })
  );
  const f = p.charCodeAt(0), b = Yu(
    r.before.charCodeAt(r.before.length - 1),
    f,
    o
  );
  b.inside && (p = $s(f) + p.slice(1));
  const g = p.charCodeAt(p.length - 1), T = Yu(r.after.charCodeAt(0), g, o);
  T.inside && (p = p.slice(0, -1) + $s(g));
  const y = u.move(o + o);
  return s(), n.attentionEncodeSurroundingInfo = {
    after: T.outside,
    before: b.outside
  }, c + p + y;
}
function EV(e, t, n) {
  return n.options.strong || "*";
}
function yV(e, t, n, r) {
  return n.safe(e.value, r);
}
function TV(e) {
  const t = e.options.ruleRepetition || 3;
  if (t < 3)
    throw new Error(
      "Cannot serialize rules with repetition `" + t + "` for `options.ruleRepetition`, expected `3` or more"
    );
  return t;
}
function SV(e, t, n) {
  const r = (r2(n) + (n.options.ruleSpaces ? " " : "")).repeat(TV(n));
  return n.options.ruleSpaces ? r.slice(0, -1) : r;
}
const i2 = {
  blockquote: qj,
  break: PI,
  code: Xj,
  definition: Zj,
  emphasis: KN,
  hardBreak: PI,
  heading: nV,
  html: XN,
  image: QN,
  imageReference: ZN,
  inlineCode: JN,
  link: t2,
  linkReference: n2,
  list: dV,
  listItem: fV,
  paragraph: hV,
  root: mV,
  strong: a2,
  text: yV,
  thematicBreak: SV
};
function _V() {
  return {
    enter: {
      table: vV,
      tableData: FI,
      tableHeader: FI,
      tableRow: kV
    },
    exit: {
      codeText: CV,
      table: AV,
      tableData: vb,
      tableHeader: vb,
      tableRow: vb
    }
  };
}
function vV(e) {
  const t = e._align;
  this.enter(
    {
      type: "table",
      align: t.map(function(n) {
        return n === "none" ? null : n;
      }),
      children: []
    },
    e
  ), this.data.inTable = !0;
}
function AV(e) {
  this.exit(e), this.data.inTable = void 0;
}
function kV(e) {
  this.enter({ type: "tableRow", children: [] }, e);
}
function vb(e) {
  this.exit(e);
}
function FI(e) {
  this.enter({ type: "tableCell", children: [] }, e);
}
function CV(e) {
  let t = this.resume();
  this.data.inTable && (t = t.replace(/\\([\\|])/g, wV));
  const n = this.stack[this.stack.length - 1];
  n.type, n.value = t, this.exit(e);
}
function wV(e, t) {
  return t === "|" ? t : e;
}
function IV(e) {
  const t = e || {}, n = t.tableCellPadding, r = t.tablePipeAlign, o = t.stringLength, s = n ? " " : "|";
  return {
    unsafe: [
      { character: "\r", inConstruct: "tableCell" },
      { character: `
`, inConstruct: "tableCell" },
      // A pipe, when followed by a tab or space (padding), or a dash or colon
      // (unpadded delimiter row), could result in a table.
      { atBreak: !0, character: "|", after: "[	 :-]" },
      // A pipe in a cell must be encoded.
      { character: "|", inConstruct: "tableCell" },
      // A colon must be followed by a dash, in which case it could start a
      // delimiter row.
      { atBreak: !0, character: ":", after: "-" },
      // A delimiter row can also start with a dash, when followed by more
      // dashes, a colon, or a pipe.
      // This is a stricter version than the built in check for lists, thematic
      // breaks, and setex heading underlines though:
      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>
      { atBreak: !0, character: "-", after: "[:|-]" }
    ],
    handlers: {
      inlineCode: T,
      table: u,
      tableCell: p,
      tableRow: c
    }
  };
  function u(y, _, A, R) {
    return f(b(y, A, R), y.align);
  }
  function c(y, _, A, R) {
    const C = g(y, A, R), w = f([C]);
    return w.slice(0, w.indexOf(`
`));
  }
  function p(y, _, A, R) {
    const C = A.enter("tableCell"), w = A.enter("phrasing"), k = A.containerPhrasing(y, {
      ...R,
      before: s,
      after: s
    });
    return w(), C(), k;
  }
  function f(y, _) {
    return zj(y, {
      align: _,
      // @ts-expect-error: `markdown-table` types should support `null`.
      alignDelimiters: r,
      // @ts-expect-error: `markdown-table` types should support `null`.
      padding: n,
      // @ts-expect-error: `markdown-table` types should support `null`.
      stringLength: o
    });
  }
  function b(y, _, A) {
    const R = y.children;
    let C = -1;
    const w = [], k = _.enter("table");
    for (; ++C < R.length; )
      w[C] = g(R[C], _, A);
    return k(), w;
  }
  function g(y, _, A) {
    const R = y.children;
    let C = -1;
    const w = [], k = _.enter("tableRow");
    for (; ++C < R.length; )
      w[C] = p(R[C], y, _, A);
    return k(), w;
  }
  function T(y, _, A) {
    let R = i2.inlineCode(y, _, A);
    return A.stack.includes("tableCell") && (R = R.replace(/\|/g, "\\$&")), R;
  }
}
function RV() {
  return {
    exit: {
      taskListCheckValueChecked: BI,
      taskListCheckValueUnchecked: BI,
      paragraph: NV
    }
  };
}
function xV() {
  return {
    unsafe: [{ atBreak: !0, character: "-", after: "[:|-]" }],
    handlers: { listItem: OV }
  };
}
function BI(e) {
  const t = this.stack[this.stack.length - 2];
  t.type, t.checked = e.type === "taskListCheckValueChecked";
}
function NV(e) {
  const t = this.stack[this.stack.length - 2];
  if (t && t.type === "listItem" && typeof t.checked == "boolean") {
    const n = this.stack[this.stack.length - 1];
    n.type;
    const r = n.children[0];
    if (r && r.type === "text") {
      const o = t.children;
      let s = -1, u;
      for (; ++s < o.length; ) {
        const c = o[s];
        if (c.type === "paragraph") {
          u = c;
          break;
        }
      }
      u === n && (r.value = r.value.slice(1), r.value.length === 0 ? n.children.shift() : n.position && r.position && typeof r.position.start.offset == "number" && (r.position.start.column++, r.position.start.offset++, n.position.start = Object.assign({}, r.position.start)));
    }
  }
  this.exit(e);
}
function OV(e, t, n, r) {
  const o = e.children[0], s = typeof e.checked == "boolean" && o && o.type === "paragraph", u = "[" + (e.checked ? "x" : " ") + "] ", c = n.createTracker(r);
  s && c.move(u);
  let p = i2.listItem(e, t, n, {
    ...r,
    ...c.current()
  });
  return s && (p = p.replace(/^(?:[*+-]|\d+\.)([\r\n]| {1,3})/, f)), p;
  function f(b) {
    return b + u;
  }
}
function LV() {
  return [
    cj(),
    _j(),
    Pj(),
    _V(),
    RV()
  ];
}
function DV(e) {
  return {
    extensions: [
      dj(),
      vj(),
      Fj(),
      IV(e),
      xV()
    ]
  };
}
const MV = {
  tokenize: $V,
  partial: !0
}, o2 = {
  tokenize: zV,
  partial: !0
}, s2 = {
  tokenize: GV,
  partial: !0
}, l2 = {
  tokenize: qV,
  partial: !0
}, PV = {
  tokenize: jV,
  partial: !0
}, u2 = {
  name: "wwwAutolink",
  tokenize: UV,
  previous: d2
}, c2 = {
  name: "protocolAutolink",
  tokenize: HV,
  previous: p2
}, Qr = {
  name: "emailAutolink",
  tokenize: BV,
  previous: f2
}, Lr = {};
function FV() {
  return {
    text: Lr
  };
}
let Xa = 48;
for (; Xa < 123; )
  Lr[Xa] = Qr, Xa++, Xa === 58 ? Xa = 65 : Xa === 91 && (Xa = 97);
Lr[43] = Qr;
Lr[45] = Qr;
Lr[46] = Qr;
Lr[95] = Qr;
Lr[72] = [Qr, c2];
Lr[104] = [Qr, c2];
Lr[87] = [Qr, u2];
Lr[119] = [Qr, u2];
function BV(e, t, n) {
  const r = this;
  let o, s;
  return u;
  function u(g) {
    return !fE(g) || !f2.call(r, r.previous) || p1(r.events) ? n(g) : (e.enter("literalAutolink"), e.enter("literalAutolinkEmail"), c(g));
  }
  function c(g) {
    return fE(g) ? (e.consume(g), c) : g === 64 ? (e.consume(g), p) : n(g);
  }
  function p(g) {
    return g === 46 ? e.check(PV, b, f)(g) : g === 45 || g === 95 || cn(g) ? (s = !0, e.consume(g), p) : b(g);
  }
  function f(g) {
    return e.consume(g), o = !0, p;
  }
  function b(g) {
    return s && o && bn(r.previous) ? (e.exit("literalAutolinkEmail"), e.exit("literalAutolink"), t(g)) : n(g);
  }
}
function UV(e, t, n) {
  const r = this;
  return o;
  function o(u) {
    return u !== 87 && u !== 119 || !d2.call(r, r.previous) || p1(r.events) ? n(u) : (e.enter("literalAutolink"), e.enter("literalAutolinkWww"), e.check(MV, e.attempt(o2, e.attempt(s2, s), n), n)(u));
  }
  function s(u) {
    return e.exit("literalAutolinkWww"), e.exit("literalAutolink"), t(u);
  }
}
function HV(e, t, n) {
  const r = this;
  let o = "", s = !1;
  return u;
  function u(g) {
    return (g === 72 || g === 104) && p2.call(r, r.previous) && !p1(r.events) ? (e.enter("literalAutolink"), e.enter("literalAutolinkHttp"), o += String.fromCodePoint(g), e.consume(g), c) : n(g);
  }
  function c(g) {
    if (bn(g) && o.length < 5)
      return o += String.fromCodePoint(g), e.consume(g), c;
    if (g === 58) {
      const T = o.toLowerCase();
      if (T === "http" || T === "https")
        return e.consume(g), p;
    }
    return n(g);
  }
  function p(g) {
    return g === 47 ? (e.consume(g), s ? f : (s = !0, p)) : n(g);
  }
  function f(g) {
    return g === null || zu(g) || st(g) || pi(g) || oc(g) ? n(g) : e.attempt(o2, e.attempt(s2, b), n)(g);
  }
  function b(g) {
    return e.exit("literalAutolinkHttp"), e.exit("literalAutolink"), t(g);
  }
}
function $V(e, t, n) {
  let r = 0;
  return o;
  function o(u) {
    return (u === 87 || u === 119) && r < 3 ? (r++, e.consume(u), o) : u === 46 && r === 3 ? (e.consume(u), s) : n(u);
  }
  function s(u) {
    return u === null ? n(u) : t(u);
  }
}
function zV(e, t, n) {
  let r, o, s;
  return u;
  function u(f) {
    return f === 46 || f === 95 ? e.check(l2, p, c)(f) : f === null || st(f) || pi(f) || f !== 45 && oc(f) ? p(f) : (s = !0, e.consume(f), u);
  }
  function c(f) {
    return f === 95 ? r = !0 : (o = r, r = void 0), e.consume(f), u;
  }
  function p(f) {
    return o || r || !s ? n(f) : t(f);
  }
}
function GV(e, t) {
  let n = 0, r = 0;
  return o;
  function o(u) {
    return u === 40 ? (n++, e.consume(u), o) : u === 41 && r < n ? s(u) : u === 33 || u === 34 || u === 38 || u === 39 || u === 41 || u === 42 || u === 44 || u === 46 || u === 58 || u === 59 || u === 60 || u === 63 || u === 93 || u === 95 || u === 126 ? e.check(l2, t, s)(u) : u === null || st(u) || pi(u) ? t(u) : (e.consume(u), o);
  }
  function s(u) {
    return u === 41 && r++, e.consume(u), o;
  }
}
function qV(e, t, n) {
  return r;
  function r(c) {
    return c === 33 || c === 34 || c === 39 || c === 41 || c === 42 || c === 44 || c === 46 || c === 58 || c === 59 || c === 63 || c === 95 || c === 126 ? (e.consume(c), r) : c === 38 ? (e.consume(c), s) : c === 93 ? (e.consume(c), o) : (
      // `<` is an end.
      c === 60 || // So is whitespace.
      c === null || st(c) || pi(c) ? t(c) : n(c)
    );
  }
  function o(c) {
    return c === null || c === 40 || c === 91 || st(c) || pi(c) ? t(c) : r(c);
  }
  function s(c) {
    return bn(c) ? u(c) : n(c);
  }
  function u(c) {
    return c === 59 ? (e.consume(c), r) : bn(c) ? (e.consume(c), u) : n(c);
  }
}
function jV(e, t, n) {
  return r;
  function r(s) {
    return e.consume(s), o;
  }
  function o(s) {
    return cn(s) ? n(s) : t(s);
  }
}
function d2(e) {
  return e === null || e === 40 || e === 42 || e === 95 || e === 91 || e === 93 || e === 126 || st(e);
}
function p2(e) {
  return !bn(e);
}
function f2(e) {
  return !(e === 47 || fE(e));
}
function fE(e) {
  return e === 43 || e === 45 || e === 46 || e === 95 || cn(e);
}
function p1(e) {
  let t = e.length, n = !1;
  for (; t--; ) {
    const r = e[t][1];
    if ((r.type === "labelLink" || r.type === "labelImage") && !r._balanced) {
      n = !0;
      break;
    }
    if (r._gfmAutolinkLiteralWalkedInto) {
      n = !1;
      break;
    }
  }
  return e.length > 0 && !n && (e[e.length - 1][1]._gfmAutolinkLiteralWalkedInto = !0), n;
}
const VV = {
  tokenize: eW,
  partial: !0
};
function WV() {
  return {
    document: {
      91: {
        name: "gfmFootnoteDefinition",
        tokenize: QV,
        continuation: {
          tokenize: ZV
        },
        exit: JV
      }
    },
    text: {
      91: {
        name: "gfmFootnoteCall",
        tokenize: XV
      },
      93: {
        name: "gfmPotentialFootnoteCall",
        add: "after",
        tokenize: YV,
        resolveTo: KV
      }
    }
  };
}
function YV(e, t, n) {
  const r = this;
  let o = r.events.length;
  const s = r.parser.gfmFootnotes || (r.parser.gfmFootnotes = []);
  let u;
  for (; o--; ) {
    const p = r.events[o][1];
    if (p.type === "labelImage") {
      u = p;
      break;
    }
    if (p.type === "gfmFootnoteCall" || p.type === "labelLink" || p.type === "label" || p.type === "image" || p.type === "link")
      break;
  }
  return c;
  function c(p) {
    if (!u || !u._balanced)
      return n(p);
    const f = Er(r.sliceSerialize({
      start: u.end,
      end: r.now()
    }));
    return f.codePointAt(0) !== 94 || !s.includes(f.slice(1)) ? n(p) : (e.enter("gfmFootnoteCallLabelMarker"), e.consume(p), e.exit("gfmFootnoteCallLabelMarker"), t(p));
  }
}
function KV(e, t) {
  let n = e.length;
  for (; n--; )
    if (e[n][1].type === "labelImage" && e[n][0] === "enter") {
      e[n][1];
      break;
    }
  e[n + 1][1].type = "data", e[n + 3][1].type = "gfmFootnoteCallLabelMarker";
  const r = {
    type: "gfmFootnoteCall",
    start: Object.assign({}, e[n + 3][1].start),
    end: Object.assign({}, e[e.length - 1][1].end)
  }, o = {
    type: "gfmFootnoteCallMarker",
    start: Object.assign({}, e[n + 3][1].end),
    end: Object.assign({}, e[n + 3][1].end)
  };
  o.end.column++, o.end.offset++, o.end._bufferIndex++;
  const s = {
    type: "gfmFootnoteCallString",
    start: Object.assign({}, o.end),
    end: Object.assign({}, e[e.length - 1][1].start)
  }, u = {
    type: "chunkString",
    contentType: "string",
    start: Object.assign({}, s.start),
    end: Object.assign({}, s.end)
  }, c = [
    // Take the `labelImageMarker` (now `data`, the `!`)
    e[n + 1],
    e[n + 2],
    ["enter", r, t],
    // The `[`
    e[n + 3],
    e[n + 4],
    // The `^`.
    ["enter", o, t],
    ["exit", o, t],
    // Everything in between.
    ["enter", s, t],
    ["enter", u, t],
    ["exit", u, t],
    ["exit", s, t],
    // The ending (`]`, properly parsed and labelled).
    e[e.length - 2],
    e[e.length - 1],
    ["exit", r, t]
  ];
  return e.splice(n, e.length - n + 1, ...c), e;
}
function XV(e, t, n) {
  const r = this, o = r.parser.gfmFootnotes || (r.parser.gfmFootnotes = []);
  let s = 0, u;
  return c;
  function c(g) {
    return e.enter("gfmFootnoteCall"), e.enter("gfmFootnoteCallLabelMarker"), e.consume(g), e.exit("gfmFootnoteCallLabelMarker"), p;
  }
  function p(g) {
    return g !== 94 ? n(g) : (e.enter("gfmFootnoteCallMarker"), e.consume(g), e.exit("gfmFootnoteCallMarker"), e.enter("gfmFootnoteCallString"), e.enter("chunkString").contentType = "string", f);
  }
  function f(g) {
    if (
      // Too long.
      s > 999 || // Closing brace with nothing.
      g === 93 && !u || // Space or tab is not supported by GFM for some reason.
      // `\n` and `[` not being supported makes sense.
      g === null || g === 91 || st(g)
    )
      return n(g);
    if (g === 93) {
      e.exit("chunkString");
      const T = e.exit("gfmFootnoteCallString");
      return o.includes(Er(r.sliceSerialize(T))) ? (e.enter("gfmFootnoteCallLabelMarker"), e.consume(g), e.exit("gfmFootnoteCallLabelMarker"), e.exit("gfmFootnoteCall"), t) : n(g);
    }
    return st(g) || (u = !0), s++, e.consume(g), g === 92 ? b : f;
  }
  function b(g) {
    return g === 91 || g === 92 || g === 93 ? (e.consume(g), s++, f) : f(g);
  }
}
function QV(e, t, n) {
  const r = this, o = r.parser.gfmFootnotes || (r.parser.gfmFootnotes = []);
  let s, u = 0, c;
  return p;
  function p(_) {
    return e.enter("gfmFootnoteDefinition")._container = !0, e.enter("gfmFootnoteDefinitionLabel"), e.enter("gfmFootnoteDefinitionLabelMarker"), e.consume(_), e.exit("gfmFootnoteDefinitionLabelMarker"), f;
  }
  function f(_) {
    return _ === 94 ? (e.enter("gfmFootnoteDefinitionMarker"), e.consume(_), e.exit("gfmFootnoteDefinitionMarker"), e.enter("gfmFootnoteDefinitionLabelString"), e.enter("chunkString").contentType = "string", b) : n(_);
  }
  function b(_) {
    if (
      // Too long.
      u > 999 || // Closing brace with nothing.
      _ === 93 && !c || // Space or tab is not supported by GFM for some reason.
      // `\n` and `[` not being supported makes sense.
      _ === null || _ === 91 || st(_)
    )
      return n(_);
    if (_ === 93) {
      e.exit("chunkString");
      const A = e.exit("gfmFootnoteDefinitionLabelString");
      return s = Er(r.sliceSerialize(A)), e.enter("gfmFootnoteDefinitionLabelMarker"), e.consume(_), e.exit("gfmFootnoteDefinitionLabelMarker"), e.exit("gfmFootnoteDefinitionLabel"), T;
    }
    return st(_) || (c = !0), u++, e.consume(_), _ === 92 ? g : b;
  }
  function g(_) {
    return _ === 91 || _ === 92 || _ === 93 ? (e.consume(_), u++, b) : b(_);
  }
  function T(_) {
    return _ === 58 ? (e.enter("definitionMarker"), e.consume(_), e.exit("definitionMarker"), o.includes(s) || o.push(s), et(e, y, "gfmFootnoteDefinitionWhitespace")) : n(_);
  }
  function y(_) {
    return t(_);
  }
}
function ZV(e, t, n) {
  return e.check(Ks, t, e.attempt(VV, t, n));
}
function JV(e) {
  e.exit("gfmFootnoteDefinition");
}
function eW(e, t, n) {
  const r = this;
  return et(e, o, "gfmFootnoteDefinitionIndent", 5);
  function o(s) {
    const u = r.events[r.events.length - 1];
    return u && u[1].type === "gfmFootnoteDefinitionIndent" && u[2].sliceSerialize(u[1], !0).length === 4 ? t(s) : n(s);
  }
}
function tW(e) {
  let n = (e || {}).singleTilde;
  const r = {
    name: "strikethrough",
    tokenize: s,
    resolveAll: o
  };
  return n == null && (n = !0), {
    text: {
      126: r
    },
    insideSpan: {
      null: [r]
    },
    attentionMarkers: {
      null: [126]
    }
  };
  function o(u, c) {
    let p = -1;
    for (; ++p < u.length; )
      if (u[p][0] === "enter" && u[p][1].type === "strikethroughSequenceTemporary" && u[p][1]._close) {
        let f = p;
        for (; f--; )
          if (u[f][0] === "exit" && u[f][1].type === "strikethroughSequenceTemporary" && u[f][1]._open && // If the sizes are the same:
          u[p][1].end.offset - u[p][1].start.offset === u[f][1].end.offset - u[f][1].start.offset) {
            u[p][1].type = "strikethroughSequence", u[f][1].type = "strikethroughSequence";
            const b = {
              type: "strikethrough",
              start: Object.assign({}, u[f][1].start),
              end: Object.assign({}, u[p][1].end)
            }, g = {
              type: "strikethroughText",
              start: Object.assign({}, u[f][1].end),
              end: Object.assign({}, u[p][1].start)
            }, T = [["enter", b, c], ["enter", u[f][1], c], ["exit", u[f][1], c], ["enter", g, c]], y = c.parser.constructs.insideSpan.null;
            y && $n(T, T.length, 0, sc(y, u.slice(f + 1, p), c)), $n(T, T.length, 0, [["exit", g, c], ["enter", u[p][1], c], ["exit", u[p][1], c], ["exit", b, c]]), $n(u, f - 1, p - f + 3, T), p = f + T.length - 2;
            break;
          }
      }
    for (p = -1; ++p < u.length; )
      u[p][1].type === "strikethroughSequenceTemporary" && (u[p][1].type = "data");
    return u;
  }
  function s(u, c, p) {
    const f = this.previous, b = this.events;
    let g = 0;
    return T;
    function T(_) {
      return f === 126 && b[b.length - 1][1].type !== "characterEscape" ? p(_) : (u.enter("strikethroughSequenceTemporary"), y(_));
    }
    function y(_) {
      const A = go(f);
      if (_ === 126)
        return g > 1 ? p(_) : (u.consume(_), g++, y);
      if (g < 2 && !n) return p(_);
      const R = u.exit("strikethroughSequenceTemporary"), C = go(_);
      return R._open = !C || C === 2 && !!A, R._close = !A || A === 2 && !!C, c(_);
    }
  }
}
class nW {
  /**
   * Create a new edit map.
   */
  constructor() {
    this.map = [];
  }
  /**
   * Create an edit: a remove and/or add at a certain place.
   *
   * @param {number} index
   * @param {number} remove
   * @param {Array<Event>} add
   * @returns {undefined}
   */
  add(t, n, r) {
    rW(this, t, n, r);
  }
  // To do: add this when moving to `micromark`.
  // /**
  //  * Create an edit: but insert `add` before existing additions.
  //  *
  //  * @param {number} index
  //  * @param {number} remove
  //  * @param {Array<Event>} add
  //  * @returns {undefined}
  //  */
  // addBefore(index, remove, add) {
  //   addImplementation(this, index, remove, add, true)
  // }
  /**
   * Done, change the events.
   *
   * @param {Array<Event>} events
   * @returns {undefined}
   */
  consume(t) {
    if (this.map.sort(function(s, u) {
      return s[0] - u[0];
    }), this.map.length === 0)
      return;
    let n = this.map.length;
    const r = [];
    for (; n > 0; )
      n -= 1, r.push(t.slice(this.map[n][0] + this.map[n][1]), this.map[n][2]), t.length = this.map[n][0];
    r.push([...t]), t.length = 0;
    let o = r.pop();
    for (; o; )
      t.push(...o), o = r.pop();
    this.map.length = 0;
  }
}
function rW(e, t, n, r) {
  let o = 0;
  if (!(n === 0 && r.length === 0)) {
    for (; o < e.map.length; ) {
      if (e.map[o][0] === t) {
        e.map[o][1] += n, e.map[o][2].push(...r);
        return;
      }
      o += 1;
    }
    e.map.push([t, n, r]);
  }
}
function aW(e, t) {
  let n = !1;
  const r = [];
  for (; t < e.length; ) {
    const o = e[t];
    if (n) {
      if (o[0] === "enter")
        o[1].type === "tableContent" && r.push(e[t + 1][1].type === "tableDelimiterMarker" ? "left" : "none");
      else if (o[1].type === "tableContent") {
        if (e[t - 1][1].type === "tableDelimiterMarker") {
          const s = r.length - 1;
          r[s] = r[s] === "left" ? "center" : "right";
        }
      } else if (o[1].type === "tableDelimiterRow")
        break;
    } else o[0] === "enter" && o[1].type === "tableDelimiterRow" && (n = !0);
    t += 1;
  }
  return r;
}
function iW() {
  return {
    flow: {
      null: {
        name: "table",
        tokenize: oW,
        resolveAll: sW
      }
    }
  };
}
function oW(e, t, n) {
  const r = this;
  let o = 0, s = 0, u;
  return c;
  function c(M) {
    let V = r.events.length - 1;
    for (; V > -1; ) {
      const de = r.events[V][1].type;
      if (de === "lineEnding" || // Note: markdown-rs uses `whitespace` instead of `linePrefix`
      de === "linePrefix") V--;
      else break;
    }
    const ne = V > -1 ? r.events[V][1].type : null, se = ne === "tableHead" || ne === "tableRow" ? v : p;
    return se === v && r.parser.lazy[r.now().line] ? n(M) : se(M);
  }
  function p(M) {
    return e.enter("tableHead"), e.enter("tableRow"), f(M);
  }
  function f(M) {
    return M === 124 || (u = !0, s += 1), b(M);
  }
  function b(M) {
    return M === null ? n(M) : Ue(M) ? s > 1 ? (s = 0, r.interrupt = !0, e.exit("tableRow"), e.enter("lineEnding"), e.consume(M), e.exit("lineEnding"), y) : n(M) : Ke(M) ? et(e, b, "whitespace")(M) : (s += 1, u && (u = !1, o += 1), M === 124 ? (e.enter("tableCellDivider"), e.consume(M), e.exit("tableCellDivider"), u = !0, b) : (e.enter("data"), g(M)));
  }
  function g(M) {
    return M === null || M === 124 || st(M) ? (e.exit("data"), b(M)) : (e.consume(M), M === 92 ? T : g);
  }
  function T(M) {
    return M === 92 || M === 124 ? (e.consume(M), g) : g(M);
  }
  function y(M) {
    return r.interrupt = !1, r.parser.lazy[r.now().line] ? n(M) : (e.enter("tableDelimiterRow"), u = !1, Ke(M) ? et(e, _, "linePrefix", r.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4)(M) : _(M));
  }
  function _(M) {
    return M === 45 || M === 58 ? R(M) : M === 124 ? (u = !0, e.enter("tableCellDivider"), e.consume(M), e.exit("tableCellDivider"), A) : F(M);
  }
  function A(M) {
    return Ke(M) ? et(e, R, "whitespace")(M) : R(M);
  }
  function R(M) {
    return M === 58 ? (s += 1, u = !0, e.enter("tableDelimiterMarker"), e.consume(M), e.exit("tableDelimiterMarker"), C) : M === 45 ? (s += 1, C(M)) : M === null || Ue(M) ? O(M) : F(M);
  }
  function C(M) {
    return M === 45 ? (e.enter("tableDelimiterFiller"), w(M)) : F(M);
  }
  function w(M) {
    return M === 45 ? (e.consume(M), w) : M === 58 ? (u = !0, e.exit("tableDelimiterFiller"), e.enter("tableDelimiterMarker"), e.consume(M), e.exit("tableDelimiterMarker"), k) : (e.exit("tableDelimiterFiller"), k(M));
  }
  function k(M) {
    return Ke(M) ? et(e, O, "whitespace")(M) : O(M);
  }
  function O(M) {
    return M === 124 ? _(M) : M === null || Ue(M) ? !u || o !== s ? F(M) : (e.exit("tableDelimiterRow"), e.exit("tableHead"), t(M)) : F(M);
  }
  function F(M) {
    return n(M);
  }
  function v(M) {
    return e.enter("tableRow"), B(M);
  }
  function B(M) {
    return M === 124 ? (e.enter("tableCellDivider"), e.consume(M), e.exit("tableCellDivider"), B) : M === null || Ue(M) ? (e.exit("tableRow"), t(M)) : Ke(M) ? et(e, B, "whitespace")(M) : (e.enter("data"), Y(M));
  }
  function Y(M) {
    return M === null || M === 124 || st(M) ? (e.exit("data"), B(M)) : (e.consume(M), M === 92 ? $ : Y);
  }
  function $(M) {
    return M === 92 || M === 124 ? (e.consume(M), Y) : Y(M);
  }
}
function sW(e, t) {
  let n = -1, r = !0, o = 0, s = [0, 0, 0, 0], u = [0, 0, 0, 0], c = !1, p = 0, f, b, g;
  const T = new nW();
  for (; ++n < e.length; ) {
    const y = e[n], _ = y[1];
    y[0] === "enter" ? _.type === "tableHead" ? (c = !1, p !== 0 && (UI(T, t, p, f, b), b = void 0, p = 0), f = {
      type: "table",
      start: Object.assign({}, _.start),
      // Note: correct end is set later.
      end: Object.assign({}, _.end)
    }, T.add(n, 0, [["enter", f, t]])) : _.type === "tableRow" || _.type === "tableDelimiterRow" ? (r = !0, g = void 0, s = [0, 0, 0, 0], u = [0, n + 1, 0, 0], c && (c = !1, b = {
      type: "tableBody",
      start: Object.assign({}, _.start),
      // Note: correct end is set later.
      end: Object.assign({}, _.end)
    }, T.add(n, 0, [["enter", b, t]])), o = _.type === "tableDelimiterRow" ? 2 : b ? 3 : 1) : o && (_.type === "data" || _.type === "tableDelimiterMarker" || _.type === "tableDelimiterFiller") ? (r = !1, u[2] === 0 && (s[1] !== 0 && (u[0] = u[1], g = yu(T, t, s, o, void 0, g), s = [0, 0, 0, 0]), u[2] = n)) : _.type === "tableCellDivider" && (r ? r = !1 : (s[1] !== 0 && (u[0] = u[1], g = yu(T, t, s, o, void 0, g)), s = u, u = [s[1], n, 0, 0])) : _.type === "tableHead" ? (c = !0, p = n) : _.type === "tableRow" || _.type === "tableDelimiterRow" ? (p = n, s[1] !== 0 ? (u[0] = u[1], g = yu(T, t, s, o, n, g)) : u[1] !== 0 && (g = yu(T, t, u, o, n, g)), o = 0) : o && (_.type === "data" || _.type === "tableDelimiterMarker" || _.type === "tableDelimiterFiller") && (u[3] = n);
  }
  for (p !== 0 && UI(T, t, p, f, b), T.consume(t.events), n = -1; ++n < t.events.length; ) {
    const y = t.events[n];
    y[0] === "enter" && y[1].type === "table" && (y[1]._align = aW(t.events, n));
  }
  return e;
}
function yu(e, t, n, r, o, s) {
  const u = r === 1 ? "tableHeader" : r === 2 ? "tableDelimiter" : "tableData", c = "tableContent";
  n[0] !== 0 && (s.end = Object.assign({}, Gi(t.events, n[0])), e.add(n[0], 0, [["exit", s, t]]));
  const p = Gi(t.events, n[1]);
  if (s = {
    type: u,
    start: Object.assign({}, p),
    // Note: correct end is set later.
    end: Object.assign({}, p)
  }, e.add(n[1], 0, [["enter", s, t]]), n[2] !== 0) {
    const f = Gi(t.events, n[2]), b = Gi(t.events, n[3]), g = {
      type: c,
      start: Object.assign({}, f),
      end: Object.assign({}, b)
    };
    if (e.add(n[2], 0, [["enter", g, t]]), r !== 2) {
      const T = t.events[n[2]], y = t.events[n[3]];
      if (T[1].end = Object.assign({}, y[1].end), T[1].type = "chunkText", T[1].contentType = "text", n[3] > n[2] + 1) {
        const _ = n[2] + 1, A = n[3] - n[2] - 1;
        e.add(_, A, []);
      }
    }
    e.add(n[3] + 1, 0, [["exit", g, t]]);
  }
  return o !== void 0 && (s.end = Object.assign({}, Gi(t.events, o)), e.add(o, 0, [["exit", s, t]]), s = void 0), s;
}
function UI(e, t, n, r, o) {
  const s = [], u = Gi(t.events, n);
  o && (o.end = Object.assign({}, u), s.push(["exit", o, t])), r.end = Object.assign({}, u), s.push(["exit", r, t]), e.add(n + 1, 0, s);
}
function Gi(e, t) {
  const n = e[t], r = n[0] === "enter" ? "start" : "end";
  return n[1][r];
}
const lW = {
  name: "tasklistCheck",
  tokenize: cW
};
function uW() {
  return {
    text: {
      91: lW
    }
  };
}
function cW(e, t, n) {
  const r = this;
  return o;
  function o(p) {
    return (
      // Exit if there’s stuff before.
      r.previous !== null || // Exit if not in the first content that is the first child of a list
      // item.
      !r._gfmTasklistFirstContentOfListItem ? n(p) : (e.enter("taskListCheck"), e.enter("taskListCheckMarker"), e.consume(p), e.exit("taskListCheckMarker"), s)
    );
  }
  function s(p) {
    return st(p) ? (e.enter("taskListCheckValueUnchecked"), e.consume(p), e.exit("taskListCheckValueUnchecked"), u) : p === 88 || p === 120 ? (e.enter("taskListCheckValueChecked"), e.consume(p), e.exit("taskListCheckValueChecked"), u) : n(p);
  }
  function u(p) {
    return p === 93 ? (e.enter("taskListCheckMarker"), e.consume(p), e.exit("taskListCheckMarker"), e.exit("taskListCheck"), c) : n(p);
  }
  function c(p) {
    return Ue(p) ? t(p) : Ke(p) ? e.check({
      tokenize: dW
    }, t, n)(p) : n(p);
  }
}
function dW(e, t, n) {
  return et(e, r, "whitespace");
  function r(o) {
    return o === null ? n(o) : t(o);
  }
}
function pW(e) {
  return gx([
    FV(),
    WV(),
    tW(e),
    iW(),
    uW()
  ]);
}
const fW = {};
function hW(e) {
  const t = (
    /** @type {Processor} */
    this
  ), n = e || fW, r = t.data(), o = r.micromarkExtensions || (r.micromarkExtensions = []), s = r.fromMarkdownExtensions || (r.fromMarkdownExtensions = []), u = r.toMarkdownExtensions || (r.toMarkdownExtensions = []);
  o.push(pW(n)), s.push(LV()), u.push(DV(n));
}
function gW({
  $file: e,
  $isDownload: t
}) {
  return e.type === "image" ? /* @__PURE__ */ L.jsx(mW, { src: e.url, alt: e.original_filename }) : /* @__PURE__ */ L.jsxs(bW, { $isDownload: t, children: [
    (e.type === "document" || e.type === "download") && /* @__PURE__ */ L.jsx(GR, {}),
    e.type === "sheet" && /* @__PURE__ */ L.jsx(jR, {}),
    e.type === "audio" && /* @__PURE__ */ L.jsx(qR, {}),
    /* @__PURE__ */ L.jsxs(EW, { children: [
      /* @__PURE__ */ L.jsx(yW, { children: e.original_filename }),
      /* @__PURE__ */ L.jsx(TW, { children: e.type })
    ] })
  ] });
}
const mW = Se.img`
  max-width: 100%;
`, bW = Se.span`
  display: flex;
  align-items: center;
  ${Nn(1, "Grayscale/Gray 100", 8)}
  padding: ${ie(4)} ${ie(8)} ${ie(4)} ${ie(4)};
  gap: ${ie(8)};
  max-width: 200px;
  width: 100%;
  overflow: hidden;
  ${St("Grayscale/White")}
  & > svg {
    width: ${ie(40)};
    height: ${ie(40)};
    flex-shrink: 0;
  }
  ${({ $isDownload: e }) => e && Re`
      cursor: pointer;
    `}
`, EW = Se.span`
  display: flex;
  flex-direction: column;
  flex: 1;
  max-width: 100%;
  width: 100%;
  min-width: 0;
  gap: ${ie(0)};
`, yW = Se.span`
  ${$t("Grayscale/Black", "Body/12px/12px.500")}
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
`, TW = Se.span`
  ${$t("Grayscale/Gray 300", "Body/12px/12px.400")}
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
`, Tu = {
  image: 10 * 1024 * 1024,
  // 10MB
  document: 10 * 1024 * 1024,
  // 10MB
  sheet: 10 * 1024 * 1024,
  // 10MB
  audio: 25 * 1024 * 1024
  // 25MB
}, f1 = [
  "jpg",
  "jpeg",
  "png",
  "webp",
  "gif",
  "heif",
  "bmp"
], h1 = ["csv", "xlsx", "xls"], g1 = [
  "flac",
  "m4a",
  "mp3",
  "mp4",
  "mpeg",
  "mpga",
  "oga",
  "ogg",
  "wav",
  "webm"
], m1 = [
  "pdf",
  "docx",
  "doc",
  "hwp",
  "pptx",
  "json",
  "txt",
  "ttf"
], SW = (e) => e === "image" ? f1.map((t) => `.${t}`).join(", ") : e === "sheet" ? h1.map((t) => `.${t}`).join(", ") : e === "audio" ? g1.map((t) => `.${t}`).join(", ") : m1.map((t) => `.${t}`).join(", "), _W = (e) => {
  var n;
  const t = (n = e.split(".").pop()) == null ? void 0 : n.toLowerCase();
  return f1.includes(t) ? "image" : h1.includes(t) ? "sheet" : g1.includes(t) ? "audio" : m1.includes(t) ? "document" : "link";
}, vW = (e, t) => {
  var s;
  const n = (s = e.split(".").pop()) == null ? void 0 : s.toLowerCase();
  let r, o;
  if (f1.includes(n))
    r = Tu.image, o = "image";
  else if (m1.includes(n))
    r = Tu.document, o = "document";
  else if (h1.includes(n))
    r = Tu.sheet, o = "sheet";
  else if (g1.includes(n))
    r = Tu.audio, o = "audio";
  else
    throw new Error("지원하지 않는 파일 형식입니다.");
  if (t > r) {
    const u = Math.round(r / 1024 / 1024);
    throw new Error(`파일 크기는 ${u}MB 이하여야 합니다.`);
  }
  return { imageType: o };
}, AW = ot.memo(
  ({ src: e, alt: t, ...n }) => /* @__PURE__ */ L.jsx(
    "img",
    {
      src: e,
      alt: t,
      style: {
        maxWidth: "100%"
      },
      ...n,
      loading: "lazy"
    }
  )
), kW = (e) => e !== "link", HI = ot.memo(gW), h2 = G.forwardRef(({ children: e }, t) => /* @__PURE__ */ L.jsx("div", { ref: t, className: "notranslate prose prose-base", children: /* @__PURE__ */ L.jsx(
  e5,
  {
    remarkPlugins: [hW, Ix],
    rehypePlugins: [aj],
    components: {
      code(n) {
        const { children: r, className: o, node: s, ...u } = n, c = /language-(\w+)/.exec(o || "");
        return c ? /* @__PURE__ */ L.jsx(
          tN,
          {
            PreTag: "div",
            ...u,
            children: String(r).replace(/\n$/, ""),
            language: c[1],
            style: U$
          }
        ) : /* @__PURE__ */ L.jsx("code", { ...u, className: o, children: r });
      },
      a: ({ node: n, ...r }) => {
        var y;
        const o = ((y = r.children) == null ? void 0 : y.toString()) || "", s = o.startsWith("attachment:"), u = o.split(":")[o.split(":").length - 1], c = r.href ?? "", p = _W(c), f = kW(p) ? p : void 0;
        if (s && c && f) {
          const _ = r.href, A = _.split("/").pop(), R = (A == null ? void 0 : A.split("?")[0]) || "";
          return /* @__PURE__ */ L.jsx(
            HI,
            {
              $file: {
                type: f,
                filename: R,
                url: _,
                original_filename: u
              }
            }
          );
        }
        if (c && f) {
          const _ = o.includes(":") ? o.split(":")[1] : c.split("/").pop(), A = c.split("/").pop();
          let R = (A == null ? void 0 : A.split("?")[0]) || "";
          const C = A == null ? void 0 : A.split(".").pop();
          return C && (_ != null && _.endsWith(C)) && (R = _), /* @__PURE__ */ L.jsx(L.Fragment, { children: /* @__PURE__ */ L.jsx(
            "a",
            {
              href: c,
              style: {
                display: "block"
              },
              onClick: (w) => {
                w.preventDefault(), fetch(c).then((k) => k.blob()).then((k) => {
                  const O = window.URL.createObjectURL(k), F = document.createElement("a");
                  F.style.display = "none", F.href = O, F.download = R || "", document.body.appendChild(F), F.click(), window.URL.revokeObjectURL(O), document.body.removeChild(F);
                });
              },
              children: /* @__PURE__ */ L.jsx(
                HI,
                {
                  $file: {
                    type: f,
                    url: c,
                    filename: R || "",
                    original_filename: R || ""
                  }
                }
              )
            }
          ) });
        }
        const { className: b, children: g, ...T } = r;
        return /* @__PURE__ */ L.jsx(
          "a",
          {
            ...T,
            target: "_blank",
            rel: "noopener",
            style: {
              color: br.colors["Blue/Blue 500"]
            },
            children: g
          }
        );
      },
      img: AW
    },
    children: e
  }
) }));
h2.displayName = "MarkdownRenderer";
const b1 = ot.memo(h2, (e, t) => e.children === t.children), CW = nc`
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
`, $I = Se.div`
  width: ${({ $width: e }) => e ?? "100%"};
  height: ${ie(16)};
  border-radius: ${ie(8)};
  ${({ theme: e }) => Re`
    background: linear-gradient(
      90deg,
      ${e.colors["Primary/Primary 100"]} 25%,
      ${e.colors["Primary/Primary 50"]} 50%,
      ${e.colors["Primary/Primary 100"]} 75%
    );
  `}
  background-size: 200% 100%;
  animation: ${CW} 3s infinite linear;
`, wW = Se.div`
  display: flex;
  flex-direction: column;
  gap: ${ie(8)};
  width: 100%;
`;
function g2({
  lines: e = 2,
  firstLineWidth: t = "100%",
  secondLineWidth: n = "80%"
}) {
  return /* @__PURE__ */ L.jsxs(wW, { children: [
    /* @__PURE__ */ L.jsx($I, { $width: t }),
    e > 1 && /* @__PURE__ */ L.jsx($I, { $width: n })
  ] });
}
const IW = nc`
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
`, RW = Se.div`
  width: 100%;
  height: 100%;
  max-width: 280px;
  max-height: 280px;
  border-radius: 8px;
  background: linear-gradient(
    90deg,
    ${En("Primary/Primary 100")} 33%,
    color-mix(in srgb, ${En("Primary/Primary 100")} 60%, transparent) 66%,
    ${En("Primary/Primary 100")} 99%
  );
  background-size: 400% 100%;
  animation: ${IW} 3s infinite linear;
`, xW = Se.div`
  display: flex;
  flex-direction: column;
  gap: ${ie(8)};
  width: 100%;
`;
Se.div`
  display: flex;
  flex-direction: column;
  justify-content: center;
  height: 100%;
  gap: 0.5rem;
  padding: ${ie(8)} ${ie(32)};
  ${({ $css: e }) => e ?? ""}
`;
const NW = Se.div`
  display: flex;
  flex-direction: column-reverse;
  flex: 1;
  width: 100%;
  overflow-y: auto;

  &::-webkit-scrollbar {
    width: 6px;
  }

  &::-webkit-scrollbar-track {
    background: color-mix(
      in srgb,
      ${En("Grayscale/Gray 50")} 90%,
      transparent
    );
  }

  &::-webkit-scrollbar-thumb {
    background: color-mix(
      in srgb,
      ${En("Grayscale/Gray 200")} 50%,
      transparent
    );
    cursor: pointer;
    transition: all 0.2s ease-in-out;
  }

  &::-webkit-scrollbar-thumb:hover {
    background: color-mix(
      in srgb,
      ${En("Grayscale/Gray 200")} 90%,
      transparent
    );
  }

  &::-webkit-scrollbar-corner {
    background: transparent;
  }
`, OW = Se.div`
  display: flex;
  flex-direction: column-reverse;
  flex: 1;
  width: 100%;
  gap: ${ie(24)};
  padding-bottom: ${ie(42)};
`, E1 = Se.div`
  display: flex;
  width: 100%;
  flex-direction: column;
  gap: ${ie(4)};
`, LW = Se.div`
  display: flex;
  justify-content: flex-start;
  align-items: center;
  gap: ${ie(4)};
  ${$t("Grayscale/Black", "Body/14px/14px.500")}
`, DW = Se.span`
  ${$t("Grayscale/Gray 500", "Body/12px/12px.400")};
`, y1 = Se.div`
  display: flex;
  max-width: 100%;
  flex-direction: column;
  padding: ${ie(16)};
  gap: ${ie(8)};
  border-radius: ${ie(8)};
  align-items: flex-start;
  align-self: stretch;
  ${({ $isAssistant: e }) => e ? `
    ${St("Primary/Primary 50")};
  ` : `
    ${St("Grayscale/Gray 50")};
  `}
`, MW = Se(E1)``, PW = Se(y1)``;
Se(E1)``;
Se(y1)``;
Se.form`
  display: flex;
  flex-direction: column;
  gap: ${ie(8)};
  width: 100%;
  padding: ${ie(16)};
  ${Nn(1, "Grayscale/Gray 100", 8)}
  box-sizing: border-box;
  ${({ $css: e }) => e ?? ""}
`;
const FW = Se.div`
  display: flex;
  align-items: center;
  gap: ${ie(8)};
  & > button {
    width: ${ie(20)};
    height: ${ie(20)};
    border-radius: ${ie(4)};
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: transparent;
    & > svg {
      width: ${ie(16)};
      height: ${ie(16)};
    }
  }
`, T1 = {
  MessageBox: NW,
  MessageList: OW,
  MessageWrapper: E1,
  MessageContent: y1,
  MessageControlBox: FW,
  LastMessage: MW,
  LastMessageContent: PW,
  MessageHeader: LW,
  MessageHeaderSub: DW,
  ImageSkeletonWrapper: xW,
  ImageSkeletonBox: RW
}, BW = {
  "tool:extract_to_markdown": "문서 추출",
  "tool:web_search_by_google": "웹 검색",
  "tool:transcribe_audio": "음성 텍스트 변환",
  "tool:get_memory": "메모리 설정",
  "tool:set_memory": "메모리 설정",
  "tool:image_vision": "이미지 비전",
  "tool:text_splitter": "텍스트 분리",
  "tool:visit_url_and_summary": "URL 방문 및 요약",
  "tool:file_generator": "코드 실행",
  "tool:draw_with_dalle": "이미지 생성",
  assistant: "AI",
  content: "",
  summary: "요약",
  error: "오류"
}, m2 = {
  call: "호출",
  done: "완료",
  error: "오류",
  processing: "처리중...",
  processing_done: "처리 완료",
  retry: "다시 시도",
  token_shortage: "토큰 부족 알림",
  summary: "제목 생성",
  generating: "생성중..."
}, {
  LastMessage: UW,
  LastMessageContent: HW,
  MessageHeader: $W,
  ImageSkeletonWrapper: zW,
  ImageSkeletonBox: GW
} = T1;
function qW({
  width: e = "280px",
  height: t = "280px"
}) {
  return /* @__PURE__ */ L.jsx(zW, { children: /* @__PURE__ */ L.jsx(GW, { style: { width: e, height: t } }) });
}
const b2 = G.forwardRef(({ lastMessage: e, toolNames: t = {}, currentStatus: n }, r) => {
  const o = Ku((u) => u.config), s = G.useMemo(() => {
    let u = {
      toolName: "",
      process: "",
      toolsText: "답변을 찾고 있어요."
    };
    const c = {
      process: (n == null ? void 0 : n.state) ?? "",
      type: (n == null ? void 0 : n.type) ?? ""
    }, p = t[c == null ? void 0 : c.type] ?? "";
    let f = `${p} ${m2[n == null ? void 0 : n.state] ?? ""}`;
    return f.trim() === "" && (f = "답변을 찾고 있어요."), u = {
      toolName: p,
      process: c == null ? void 0 : c.process,
      toolsText: f
    }, u;
  }, [n, t]);
  return /* @__PURE__ */ L.jsxs(UW, { id: "last-message", children: [
    /* @__PURE__ */ L.jsxs($W, { children: [
      /* @__PURE__ */ L.jsx(NE, {}),
      /* @__PURE__ */ L.jsx("span", { children: o.name })
    ] }),
    /* @__PURE__ */ L.jsxs(HW, { $isAssistant: !0, children: [
      /* @__PURE__ */ L.jsxs(
        Rt,
        {
          $css: Re`
            display: flex;
            align-items: center;
            gap: ${ie(16)};
            margin-bottom: ${ie(8)};
          `,
          children: [
            /* @__PURE__ */ L.jsx(XR, {}),
            /* @__PURE__ */ L.jsx("div", { children: s.toolsText || "답변을 찾고 있어요." })
          ]
        }
      ),
      /* @__PURE__ */ L.jsx(b1, { ref: r, children: e }),
      /* @__PURE__ */ L.jsx(L.Fragment, { children: s.toolName === "tool:draw_with_dalle" ? /* @__PURE__ */ L.jsx(qW, {}) : /* @__PURE__ */ L.jsx(
        g2,
        {
          lines: 2,
          firstLineWidth: "100%",
          secondLineWidth: "80%"
        }
      ) })
    ] })
  ] });
});
G.forwardRef(({ currentStatus: e, statusType: t }, n) => {
  const r = G.useMemo(() => {
    let o = {
      toolName: "",
      process: "",
      toolsText: "답변을 찾고 있어요."
    };
    const s = {
      process: (e == null ? void 0 : e.state) ?? "",
      type: (e == null ? void 0 : e.type) ?? ""
    }, u = BW[s == null ? void 0 : s.type] ?? "";
    let c = `${u} ${m2[e == null ? void 0 : e.state] ?? ""}`;
    return c.trim() === "" && (c = "답변을 찾고 있어요."), o = {
      toolName: u,
      process: s == null ? void 0 : s.process,
      toolsText: c
    }, o;
  }, [e]);
  return t === "loader" ? /* @__PURE__ */ L.jsxs(
    Rt,
    {
      $css: Re`
          display: flex;
          align-items: center;
          gap: ${ie(16)};
          margin-bottom: ${ie(8)};
        `,
      children: [
        /* @__PURE__ */ L.jsx(XR, {}),
        /* @__PURE__ */ L.jsx("div", { children: r.toolsText || "답변을 찾고 있어요." })
      ]
    }
  ) : t === "skeleton" ? /* @__PURE__ */ L.jsx(g2, { lines: 2, firstLineWidth: "100%", secondLineWidth: "80%" }) : null;
});
const S1 = G.forwardRef(
  ({ $css: e, $maxHeight: t = 200, onKeyDown: n, onSubmit: r, ...o }, s) => {
    const u = G.useRef(!1);
    return /* @__PURE__ */ L.jsx(
      jW,
      {
        rows: 1,
        ref: s,
        $css: e,
        $maxHeight: t,
        onCompositionStart: () => {
          u.current = !0;
        },
        onCompositionUpdate: () => {
        },
        onCompositionEnd: () => {
          u.current = !1;
        },
        onKeyDown: (c) => {
          if (c.key === "Enter" && !c.shiftKey && u.current) {
            c.preventDefault();
            return;
          } else
            n == null || n(c);
        },
        onSubmit: (c) => {
          if (u.current) {
            c.preventDefault();
            return;
          }
          r == null || r(c);
        },
        onInput: (c) => {
          const p = c.currentTarget;
          p.style.height = "auto", p.style.height = p.scrollHeight + "px", p.style.maxHeight = t + "px";
        },
        ...o
      }
    );
  }
);
S1.displayName = "Textarea";
const jW = Se.textarea`
  width: 100%;
  padding: 0;
  border: none;
  outline: none;
  background-color: transparent;
  resize: none;
  overflow-y: auto;
  ${_s("Body/16px/16px.400")}
  ${Kr("Grayscale/Black")}
  &::placeholder {
    ${Kr("Grayscale/Gray 300")}
  }
  ${({ $maxHeight: e }) => e && `max-height: ${e}px;`}
  ${({ $css: e }) => e ?? ""}
`, VW = (e) => /* @__PURE__ */ G.createElement("svg", { width: 48, height: 48, viewBox: "0 0 48 48", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("g", { id: "Ic-Loading-Lg" }, /* @__PURE__ */ G.createElement("path", { id: "Ellipse 16", d: "M48 24C48 37.2548 37.2548 48 24 48C10.7452 48 0 37.2548 0 24C0 10.7452 10.7452 0 24 0C37.2548 0 48 10.7452 48 24ZM4.8 24C4.8 34.6039 13.3961 43.2 24 43.2C34.6039 43.2 43.2 34.6039 43.2 24C43.2 13.3961 34.6039 4.8 24 4.8C13.3961 4.8 4.8 13.3961 4.8 24Z", fill: "#EFEFEF" }), /* @__PURE__ */ G.createElement("path", { id: "Ellipse 15", d: "M2.4 24C1.07452 24 -0.0124355 25.0772 0.119891 26.3961C0.51121 30.2962 1.85352 34.0543 4.04473 37.3337C6.68188 41.2805 10.4302 44.3566 14.8156 46.1731C19.201 47.9896 24.0266 48.4649 28.6822 47.5388C33.3377 46.6128 37.6141 44.327 40.9706 40.9706C44.327 37.6141 46.6128 33.3377 47.5388 28.6822C48.4649 24.0266 47.9896 19.201 46.1731 14.8156C44.3566 10.4302 41.2805 6.68188 37.3337 4.04473C34.0543 1.85353 30.2963 0.511211 26.3961 0.119892C25.0772 -0.0124353 24 1.07452 24 2.4C24 3.72548 25.0787 4.78454 26.3938 4.9498C29.343 5.32038 32.1774 6.37231 34.667 8.03578C37.8244 10.1455 40.2853 13.1441 41.7385 16.6525C43.1917 20.1608 43.5719 24.0213 42.8311 27.7457C42.0902 31.4702 40.2616 34.8913 37.5765 37.5765C34.8913 40.2616 31.4702 42.0902 27.7457 42.8311C24.0213 43.5719 20.1608 43.1917 16.6525 41.7385C13.1441 40.2853 10.1455 37.8244 8.03578 34.6669C6.37231 32.1774 5.32038 29.343 4.9498 26.3938C4.78454 25.0787 3.72548 24 2.4 24Z", fill: "#C8ACFF" }))), WW = (e) => /* @__PURE__ */ G.createElement("svg", { width: 24, height: 24, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("g", { id: "Ic-Loading-Md" }, /* @__PURE__ */ G.createElement("path", { id: "Ellipse 16", d: "M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM2.4 12C2.4 17.3019 6.69807 21.6 12 21.6C17.3019 21.6 21.6 17.3019 21.6 12C21.6 6.69807 17.3019 2.4 12 2.4C6.69807 2.4 2.4 6.69807 2.4 12Z", fill: "#EFEFEF" }), /* @__PURE__ */ G.createElement("path", { id: "Ellipse 15", d: "M1.2 12C0.537258 12 -0.00621774 12.5386 0.0599455 13.198C0.255605 15.1481 0.926762 17.0272 2.02236 18.6668C3.34094 20.6402 5.21508 22.1783 7.4078 23.0866C9.60051 23.9948 12.0133 24.2324 14.3411 23.7694C16.6689 23.3064 18.8071 22.1635 20.4853 20.4853C22.1635 18.8071 23.3064 16.6689 23.7694 14.3411C24.2324 12.0133 23.9948 9.60051 23.0866 7.4078C22.1783 5.21509 20.6402 3.34094 18.6668 2.02237C17.0272 0.926763 15.1481 0.255606 13.198 0.0599458C12.5386 -0.00621763 12 0.537258 12 1.2C12 1.86274 12.5393 2.39227 13.1969 2.4749C14.6715 2.66019 16.0887 3.18616 17.3335 4.01789C18.9122 5.07275 20.1426 6.57207 20.8692 8.32624C21.5958 10.0804 21.786 12.0107 21.4155 13.8729C21.0451 15.7351 20.1308 17.4456 18.7882 18.7882C17.4456 20.1308 15.7351 21.0451 13.8729 21.4155C12.0106 21.786 10.0804 21.5958 8.32624 20.8692C6.57207 20.1426 5.07275 18.9122 4.01789 17.3335C3.18616 16.0887 2.66019 14.6715 2.4749 13.1969C2.39227 12.5393 1.86274 12 1.2 12Z", fill: "#C8ACFF" }))), YW = (e) => /* @__PURE__ */ G.createElement("svg", { width: 16, height: 16, viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...e }, /* @__PURE__ */ G.createElement("g", { id: "Ic-Loading-Sm" }, /* @__PURE__ */ G.createElement("path", { id: "Ellipse 16", d: "M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM1.6 8C1.6 11.5346 4.46538 14.4 8 14.4C11.5346 14.4 14.4 11.5346 14.4 8C14.4 4.46538 11.5346 1.6 8 1.6C4.46538 1.6 1.6 4.46538 1.6 8Z", fill: "#EFEFEF" }), /* @__PURE__ */ G.createElement("path", { id: "Ellipse 15", d: "M0.8 8C0.358172 8 -0.00414516 8.35907 0.0399637 8.79869C0.170403 10.0987 0.617841 11.3514 1.34824 12.4446C2.22729 13.7602 3.47672 14.7855 4.93853 15.391C6.40034 15.9965 8.00887 16.155 9.56072 15.8463C11.1126 15.5376 12.538 14.7757 13.6569 13.6569C14.7757 12.538 15.5376 11.1126 15.8463 9.56072C16.155 8.00887 15.9965 6.40034 15.391 4.93853C14.7855 3.47672 13.7602 2.22729 12.4446 1.34824C11.3514 0.617842 10.0988 0.170403 8.79869 0.0399637C8.35907 -0.00414512 8 0.358172 8 0.8C8 1.24183 8.35956 1.59485 8.79794 1.64993C9.78099 1.77346 10.7258 2.1241 11.5556 2.67859C12.6081 3.38184 13.4284 4.38138 13.9128 5.55083C14.3972 6.72027 14.524 8.0071 14.277 9.24858C14.0301 10.4901 13.4205 11.6304 12.5255 12.5255C11.6304 13.4205 10.4901 14.0301 9.24858 14.277C8.0071 14.524 6.72027 14.3972 5.55083 13.9128C4.38138 13.4284 3.38183 12.6081 2.67859 11.5556C2.1241 10.7258 1.77346 9.78099 1.64993 8.79794C1.59485 8.35956 1.24183 8 0.8 8Z", fill: "#C8ACFF" }))), KW = nc({
  from: {
    transform: "rotate(0deg)"
  },
  to: {
    transform: "rotate(360deg)"
  }
}), XW = {
  Sm: YW,
  Md: WW,
  Lg: VW
}, QW = Se.div`
  width: 100%;
  flex: 1;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  svg {
    animation: ${KW} 1s linear infinite;
  }
`;
function E2({ size: e = "Lg" }) {
  const t = XW[e];
  return /* @__PURE__ */ L.jsx(QW, { children: /* @__PURE__ */ L.jsx(t, {}) });
}
function ZW({
  $css: e,
  $file: t,
  $onRemove: n,
  $pending: r
}) {
  return /* @__PURE__ */ L.jsxs(eY, { $css: e, $type: t.type, children: [
    /* @__PURE__ */ L.jsx(
      La,
      {
        $directionY: "top",
        $css: Re`
          min-width: 0px;
          max-width: 120px;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
          top: -8px;
        `,
        children: t.original_filename
      }
    ),
    r && /* @__PURE__ */ L.jsx(E2, {}),
    !r && /* @__PURE__ */ L.jsxs(L.Fragment, { children: [
      t.type === "image" && /* @__PURE__ */ L.jsx("img", { src: t.url, alt: "uploaded image" }),
      t.type === "document" && /* @__PURE__ */ L.jsx(GR, {}),
      t.type === "sheet" && /* @__PURE__ */ L.jsx(jR, {}),
      t.type === "audio" && /* @__PURE__ */ L.jsx(qR, {})
    ] }),
    /* @__PURE__ */ L.jsx(JW, { type: "button", onClick: () => n(t), children: /* @__PURE__ */ L.jsx(T3, {}) })
  ] });
}
const JW = Se.button`
  position: absolute;
  top: 0;
  right: 0;
  transform: translate(50%, -50%);
  cursor: pointer;
  width: ${ie(16)};
  height: ${ie(16)};
  border-radius: ${ie(8)};
`, eY = Se.div`
  position: relative;
  width: ${ie(40)};
  height: ${ie(40)};
  border-radius: ${ie(8)};
  & > img,
  & > svg {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: ${ie(8)};
  }
  ${({ $css: e }) => e};
`, hE = new zL();
function tY(e) {
  try {
    const n = new URL(e).pathname.split("/");
    if (n.length >= 4) {
      const r = n[1], o = n[2], s = n[3];
      return { containerName: r, chatId: o, filename: s };
    } else
      return null;
  } catch (t) {
    return console.error("URL 파싱 오류:", t), null;
  }
}
const nY = Se.div`
  display: flex;
  flex-direction: column;
  justify-content: center;
  height: 100%;
  gap: 0.5rem;
  padding: ${ie(8)} ${ie(32)};
  ${({ $css: e }) => e ?? ""}
`, rY = Se.form`
  display: flex;
  flex-direction: column;
  gap: ${ie(8)};
  width: 100%;
  padding: ${ie(16)};
  ${Nn(1, "Grayscale/Gray 100", 8)}
  box-sizing: border-box;
  ${({ $css: e }) => e ?? ""}
`, aY = {
  Container: nY,
  ChatInputBox: rY
}, iY = async (e) => {
  const t = yo();
  return t ? !!(await fetch(
    `${Eo}/credit/check?target=user&credit=1`,
    {
      headers: {
        Authorization: `Bearer ${t}`,
        "Content-Type": "application/json"
      },
      signal: e.signal
    }
  )).ok : !1;
}, oY = async (e) => {
  const { spaceId: t, userId: n, token: r, name: o } = JI.getState().userValues;
  if (!t || !n || !r)
    throw new Error("Space ID or User ID or Token is not set");
  const s = await fetch(`${Eo}/transaction-reqs`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${r}`
    },
    body: JSON.stringify({
      spaceId: t,
      requesterId: n,
      type: "SPACE_TO_USER",
      requestReason: "크레딧 전량 소진됨",
      requestedCredit: e.toString()
    })
  });
  if (!s.ok)
    throw new Error("Failed to request credits");
  return s.json();
}, sY = Se("h1")`
  ${({ $css: e }) => e ?? ""}
`, lY = Se("h2")`
  ${({ $css: e }) => e ?? ""}
`, uY = Se("h3")`
  ${({ $css: e }) => e ?? ""}
`, cY = Se("h4")`
  ${({ $css: e }) => e ?? ""}
`, dY = Se("h5")`
  ${({ $css: e }) => e ?? ""}
`, pY = Se("h6")`
  ${({ $css: e }) => e ?? ""}
`;
Se("p")`
  ${({ $css: e }) => e ?? ""}
`;
const fY = Se("span")`
  ${({ $css: e }) => e ?? ""}
`, zI = G.forwardRef(
  ({ $css: e, $as: t = "span", ...n }, r) => {
    switch (t) {
      case "h1":
        return /* @__PURE__ */ L.jsx(
          sY,
          {
            ref: r,
            $css: e,
            ...n
          }
        );
      case "h2":
        return /* @__PURE__ */ L.jsx(
          lY,
          {
            ref: r,
            $css: e,
            ...n
          }
        );
      case "h3":
        return /* @__PURE__ */ L.jsx(
          uY,
          {
            ref: r,
            $css: e,
            ...n
          }
        );
      case "h4":
        return /* @__PURE__ */ L.jsx(
          cY,
          {
            ref: r,
            $css: e,
            ...n
          }
        );
      case "h5":
        return /* @__PURE__ */ L.jsx(
          dY,
          {
            ref: r,
            $css: e,
            ...n
          }
        );
      case "h6":
        return /* @__PURE__ */ L.jsx(
          pY,
          {
            ref: r,
            $css: e,
            ...n
          }
        );
      default:
        return /* @__PURE__ */ L.jsx(
          fY,
          {
            ref: r,
            $css: e,
            ...n
          }
        );
    }
  }
);
function hY({
  $onRequestTokens: e
}) {
  return /* @__PURE__ */ L.jsxs(
    Rt,
    {
      $css: Re`
        display: flex;
        gap: ${ie(8)};
        align-items: center;
        justify-content: space-between;
        padding: ${ie(16)};
        width: 100%;
        ${Nn(1, "Grayscale/Gray 500", 8)}
        ${St("Grayscale/White")}
      `,
      children: [
        /* @__PURE__ */ L.jsxs(
          Rt,
          {
            $css: Re`
          display: flex;
          gap: ${ie(4)};
          flex-direction: column;
          h1 {
            ${$t("Grayscale/Black", "Title/18px/18px.600")}
          }
          p {
            ${$t("Grayscale/Gray 500", "Body/14px/14px.400")}
          }
          max-width: ${ie(305)};
        `,
            children: [
              /* @__PURE__ */ L.jsx(zI, { $as: "h1", children: "토큰 사용 제한" }),
              /* @__PURE__ */ L.jsx(zI, { $as: "p", children: `현재 사용 가능한 토큰이 모두 소진되었습니다.
추가 토큰이 필요하시면 관리자에게 요청해 주세요.` })
            ]
          }
        ),
        /* @__PURE__ */ L.jsx(
          rc,
          {
            $variant: "primary-filled",
            $css: Re`
          flex-shrink: 0;
          white-space: nowrap;
        `,
            onClick: async (t) => {
              t.preventDefault(), t.stopPropagation(), await oY(1e4), e();
            },
            children: "요청하기"
          }
        )
      ]
    }
  );
}
const gY = (e) => {
  try {
    return JSON.parse(e);
  } catch {
    return e;
  }
}, mY = async (e) => {
  let t = null;
  const {
    collection_id: n,
    uploadedFile: r,
    onError: o,
    // 오류 발생
    onChangeState: s,
    // 상태 변경
    onSuccess: u,
    // stream 종료
    onEnd: c
    // 전체 종료
  } = e;
  try {
    const p = yo();
    t = e.abort ?? new AbortController();
    const f = await fetch(
      `${gE}/api-ai/qdrant/vector-store/${n}/upload/stream`,
      {
        method: "POST",
        body: JSON.stringify({
          files: [r]
        }),
        signal: t.signal,
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${p}`
        }
      }
    );
    if (!f.ok) {
      o == null || o(f.statusText);
      return;
    }
    const b = f.body.getReader(), g = new TextDecoder();
    for (; ; ) {
      const { value: T, done: y } = await b.read();
      if (y) break;
      const A = g.decode(T).split(`
`).filter((R) => R.trim());
      for (const R of A)
        try {
          const C = gY(R);
          if (typeof C == "string")
            continue;
          if (C.success) {
            if (C.data.state) {
              const w = C.data.state;
              if (s == null || s(w), w.type === "upload_to_vector_store" && C.data.sources) {
                const k = C.data.sources;
                "filename" in k && (u == null || u(k));
              }
            }
          } else if (!C.success) {
            const k = C.data.state.message ?? C.data.content ?? "오류가 발생했어요. 다시 시도해주세요.";
            o == null || o(k);
          }
        } catch (C) {
          console.error("Failed to parse chunk:", C);
        }
    }
  } catch (p) {
    o == null || o(p instanceof Error ? p.message : "Unknown error");
  } finally {
    t = null, c == null || c();
  }
}, bY = Se.div`
  display: flex;
  align-items: center;
  border-radius: ${ie(4)};
  padding: ${ie(2)} ${ie(8)};
  gap: ${ie(4)};
  ${$t("Grayscale/Gray 500", "Body/12px/12px.500")};
  ${St("Grayscale/White")};
`;
function EY({ model: e, modelList: t }) {
  const n = G.useMemo(() => {
    var r;
    return (r = t.find((o) => o.value === e)) == null ? void 0 : r.label;
  }, [e, t]);
  return n ? /* @__PURE__ */ L.jsx(bY, { children: /* @__PURE__ */ L.jsx("span", { children: n }) }) : null;
}
const {
  MessageBox: yY,
  MessageList: TY,
  MessageWrapper: SY,
  MessageHeader: _Y,
  MessageContent: vY,
  MessageControlBox: AY,
  MessageHeaderSub: kY
} = T1, { Container: CY, ChatInputBox: wY } = aY, IY = [
  {
    label: /* @__PURE__ */ L.jsxs(L.Fragment, { children: [
      /* @__PURE__ */ L.jsx(_3, {}),
      "이미지 업로드"
    ] }),
    value: "image"
  },
  {
    label: /* @__PURE__ */ L.jsxs(L.Fragment, { children: [
      /* @__PURE__ */ L.jsx(w3, {}),
      "문서 업로드"
    ] }),
    value: "document"
  },
  {
    label: /* @__PURE__ */ L.jsxs(L.Fragment, { children: [
      /* @__PURE__ */ L.jsx(S3, {}),
      "엑셀 업로드"
    ] }),
    value: "sheet"
  },
  {
    label: /* @__PURE__ */ L.jsxs(L.Fragment, { children: [
      /* @__PURE__ */ L.jsx(v3, {}),
      "음성 업로드"
    ] }),
    value: "audio"
  }
];
function RY(e) {
  return `${e.type === "image" ? "!" : ""}[attachment:${e.original_filename}](${e.url})`;
}
async function xY(e, t, n, r) {
  try {
    return r = r ?? "next", await Qn(
      "get:/api-ai/chat/{chat_id}/messages",
      e
    )({
      params: { limit: t, cursor: n, direction: r }
    });
  } catch (o) {
    throw console.error("Failed to fetch chat messages:", o), o;
  }
}
function NY({
  chatId: e,
  refId: t,
  name: n,
  historyLimit: r,
  model: o
}) {
  const [s, u] = G.useState(!1), c = Ku((re) => re.config), [p, f] = G.useState(!1), b = G.useRef(!1);
  G.useEffect(() => {
    const re = new AbortController();
    return iY(re).then((Le) => {
      b.current || (b.current = !0, f(!Le));
    }), () => {
      b.current && re.abort("aborted");
    };
  }, []);
  const { data: g } = Su({
    queryKey: ["userInfo"],
    queryFn: async () => await bE()
  }), { data: T, fetchNextPage: y, hasNextPage: _, isFetchingNextPage: A } = iD({
    queryKey: ["chatMessages", e],
    queryFn: ({ pageParam: re = null }) => xY(e, 10, re, re ? "next" : null),
    getNextPageParam: (re) => re.data.page_info.next_cursor || void 0,
    getPreviousPageParam: (re) => re.data.page_info.previous_cursor || void 0,
    initialPageParam: null
  }), { data: R } = Su({
    queryKey: ["chatModels"],
    queryFn: async () => await Qn("get:/api-ai/chat/models")()
  }), { data: C } = Su({
    queryKey: ["chatTools"],
    queryFn: async () => await Qn("get:/api-ai/chat/tools")()
  }), w = G.useRef(""), k = G.useRef(!0), O = G.useRef(null), F = G.useRef(null), v = G.useRef(null), [B, Y] = G.useState(""), [$, M] = G.useState([]), [V, ne] = G.useState(""), [se, de] = G.useState(null), [, be] = G.useState(null), [Ne, ve] = G.useState(!1), [J, oe] = G.useState([]), [I, H] = G.useState(null), [W, x] = G.useState(null), [Ee, _e] = G.useState(!1), Te = G.useMemo(() => {
    if (!(R != null && R.data)) return [];
    const re = R.data, Le = o.length > 0 ? re.filter((Pe) => o.includes(Pe.value)) : re;
    return H((Le == null ? void 0 : Le[0]) ?? null), Le;
  }, [R, o]), Oe = () => {
    var re;
    (re = kt.current) == null || re.scrollTo({
      top: kt.current.scrollHeight,
      behavior: "smooth"
    });
  };
  G.useEffect(() => {
    p && ve(!0);
  }, [p]), G.useEffect(() => {
    var re, Le, Pe;
    (Pe = (Le = (re = T == null ? void 0 : T.pages) == null ? void 0 : re[0]) == null ? void 0 : Le.data) != null && Pe.list && T.pages[0].data.list.length > 0 && M(T.pages.flatMap((Z) => Z.data.list));
  }, [T]);
  const Me = () => {
    const re = F.current;
    re && (re.style.height = "auto", re.style.overflowY = "", re.value = "");
  }, He = async (re, Le) => {
    const Pe = tY(re.url);
    Pe ? (await Qn(
      "delete:/api-ai/file/delete-by-blob/{chat_id}",
      Pe.chatId
    )({
      params: {
        url: re.url
      }
    }), oe((Z) => Z.filter((ae) => ae.url !== re.url)), await Qn(
      "delete:/api-ai/qdrant/vector-store/{collection_id}/file/{filename}",
      Le,
      re.filename
    )()) : (console.log("파일 구조를 추출하는데 실패했습니다."), oe((Z) => Z.filter((ae) => ae.url !== re.url)));
  }, Ze = async (re, Le) => {
    var Ge;
    const Pe = re.slice(0, r ?? 12).map((Je) => ({
      role: Je.role,
      content: Je.content
    })).reverse(), Z = v.current, ae = Le ?? Z.prompt.value, De = `${J.map((Je) => RY(Je)).join(`

`)}

${ae}`;
    M((Je) => [
      {
        id: As(),
        role: "user",
        content: De,
        model: (I == null ? void 0 : I.value) ?? "gpt-4o-mini",
        files: J.length > 0 ? J : void 0
      },
      ...Je
    ]), de({
      type: "",
      state: "processing",
      message: ""
    }), w.current = "";
    try {
      Me(), console.log("historyMessageList", Pe);
      const Je = await Qn("post:/api-ai/chat/stream")({
        body: {
          chat_id: e,
          prompt: De,
          history: Pe,
          model: (I == null ? void 0 : I.value) ?? "gpt-4o-mini",
          files: J.length > 0 ? J : void 0
        },
        responseType: "original"
      });
      if (Oe(), !Je.ok) throw new Error("Stream request failed");
      oe([]);
      const Ft = Je.body.getReader(), Nt = new TextDecoder();
      for (; ; ) {
        const { value: Ot, done: Bt } = await Ft.read();
        if (Bt) break;
        const jt = Nt.decode(Ot).split(`
`).filter((_t) => _t.trim());
        for (const _t of jt)
          try {
            const dt = JSON.parse(_t);
            dt.success ? (dt.data.content && (w.current += dt.data.content, w.current.length % 2 === 0 && (ne(w.current), k.current && Oe())), dt.data.state && de(dt.data.state)) : dt.success || ((((Ge = dt.data.status) == null ? void 0 : Ge.split(":")[1]) ?? "unknown error") === "token_shortage" && ve(!0), w.current = dt.data.content ?? "오류가 발생했어요. 다시 시도해주세요.", ne(w.current));
          } catch (dt) {
            console.error("Failed to parse chunk:", dt);
          }
      }
      ne(""), M((Ot) => [
        {
          id: As(),
          role: "assistant",
          content: w.current,
          model: (I == null ? void 0 : I.value) ?? "gpt-4o-mini"
        },
        ...Ot
      ]);
    } catch (Je) {
      be(Je instanceof Error ? Je.message : "Unknown error");
    } finally {
      ne(""), de(null), hE.invalidateQueries({
        queryKey: ["chatMessages", e]
      }), hE.invalidateQueries({
        queryKey: ["userInfo"]
      });
    }
  }, gt = async (re) => {
    if (re > $.length)
      return;
    const Le = $[re];
    if (Le.role !== "user") return gt(re + 1);
    Ze($, Le.content);
  }, kt = G.useRef(null), zt = G.useMemo(
    () => $ && $.length > 0,
    [$]
  ), Dr = (re) => {
    const Le = new Blob([re], { type: "text/markdown" }), Pe = URL.createObjectURL(Le), Z = document.createElement("a");
    Z.href = Pe, Z.download = "result.md", document.body.appendChild(Z), Z.click(), document.body.removeChild(Z), URL.revokeObjectURL(Pe);
  }, nr = async (re) => {
    u(!0);
    const Le = yo(), Z = await (await fetch(
      `${gE}/api-ai/file/download/${re}`,
      {
        method: "GET",
        headers: {
          Authorization: `Bearer ${Le}`
        }
      }
    )).blob(), ae = URL.createObjectURL(Z), ye = document.createElement("a");
    ye.href = ae, ye.download = `chat_${re}.zip`, document.body.appendChild(ye), ye.click(), u(!1);
  }, Gt = async (re) => {
    const Le = As();
    console.log(Le);
    try {
      const { imageType: Pe } = vW(re.name, re.size), Z = re.name.split(".").pop();
      oe((De) => [
        ...De,
        {
          url: Le,
          type: Pe,
          mime_type: re.type,
          extension: Z ?? "",
          filename: re.name,
          original_filename: re.name,
          size: re.size,
          pending: !0
        }
      ]);
      const ae = new FormData();
      ae.append("file", re), ae.append("chat_id", e);
      const ye = await Qn("post:/api-ai/file/upload")({
        body: ae
      });
      if (!ye.success)
        throw new Error(ye.message);
      x(null), ye.data && (Pe !== "image" && Z !== "ttf" && await mY({
        collection_id: e,
        uploadedFile: ye.data
      }), oe(
        (De) => De.map(
          (Ge) => Ge.url === Le ? { ...ye.data, pending: !1 } : Ge
        )
      ));
    } catch (Pe) {
      Pe instanceof Error && alert(Pe.message), O.current && (O.current.value = ""), oe(
        (Z) => Z.filter((ae) => ae.url !== Le)
      );
    }
  };
  G.useEffect(() => {
    var re;
    W && ((re = O.current) == null || re.click(), x(null));
  }, [W]), G.useEffect(() => {
    k.current && Oe();
  }, [V, se, $]);
  const rr = G.useMemo(() => {
    const re = Number(g == null ? void 0 : g.credit);
    return re > 1e7 ? "9,999,999+" : Intl.NumberFormat("ko-KR").format(re);
  }, [g]), yn = G.useMemo(() => J.some((re) => re.pending), [J]), ar = (re) => {
    re.preventDefault(), re.stopPropagation(), _e(!0);
  }, qt = (re) => {
    re.preventDefault(), re.stopPropagation(), _e(!1);
  }, Tn = async (re) => {
    re.preventDefault(), re.stopPropagation(), _e(!1);
    const Le = Array.from(re.dataTransfer.files);
    for (const Pe of Le)
      await Gt(Pe);
  }, Sn = async (re) => {
    const Le = re.clipboardData;
    if (Le && Le.items) {
      const Pe = Array.from(Le.items);
      for (const Z of Pe)
        if (Z.kind === "file") {
          re.preventDefault();
          const ae = Z.getAsFile();
          ae && await Gt(ae);
        }
    }
  };
  return !T || !g ? /* @__PURE__ */ L.jsx(E2, {}) : /* @__PURE__ */ L.jsxs(CY, { style: zt ? { paddingBottom: ie(16) } : {}, children: [
    !zt && /* @__PURE__ */ L.jsx(
      Rt,
      {
        $css: Re`
            margin-bottom: 76px;
            text-align: center;
            ${$t("Grayscale/Black", "Title/24px/24px.600")}
          `,
        children: "AI Chat에게 질문해 보세요!"
      }
    ),
    zt && /* @__PURE__ */ L.jsx(L.Fragment, { children: /* @__PURE__ */ L.jsx(
      yY,
      {
        ref: kt,
        onScroll: (re) => {
          const Le = re.currentTarget;
          if (Le.scrollTop - 10 <= Le.clientHeight - Le.scrollHeight && _ && !A) {
            re.preventDefault(), y();
            return;
          }
          Le.scrollTop + Le.clientHeight >= Le.scrollHeight - 200 ? k.current = !0 : k.current = !1;
        },
        children: /* @__PURE__ */ L.jsxs(TY, { children: [
          (V || se) && /* @__PURE__ */ L.jsx(L.Fragment, { children: /* @__PURE__ */ L.jsx(
            b2,
            {
              lastMessage: V,
              toolNames: (C == null ? void 0 : C.data) ?? {},
              currentStatus: se
            }
          ) }),
          $.map((re, Le) => /* @__PURE__ */ L.jsxs(
            SY,
            {
              $isUser: re.role === "user",
              children: [
                /* @__PURE__ */ L.jsx(_Y, { children: re.role === "user" ? /* @__PURE__ */ L.jsxs(L.Fragment, { children: [
                  /* @__PURE__ */ L.jsx("span", { children: "나" }),
                  re.role === "user" && /* @__PURE__ */ L.jsx(kY, { children: n })
                ] }) : /* @__PURE__ */ L.jsxs(L.Fragment, { children: [
                  /* @__PURE__ */ L.jsx(NE, {}),
                  /* @__PURE__ */ L.jsx("span", { children: c.name })
                ] }) }),
                /* @__PURE__ */ L.jsxs(vY, { $isAssistant: re.role === "assistant", children: [
                  /* @__PURE__ */ L.jsx(b1, { children: re.content }),
                  re.role === "assistant" && /* @__PURE__ */ L.jsxs(AY, { children: [
                    /* @__PURE__ */ L.jsxs(
                      gr,
                      {
                        onClick: (Pe) => {
                          Pe.stopPropagation(), Dr(re.content);
                        },
                        children: [
                          /* @__PURE__ */ L.jsx(
                            La,
                            {
                              $css: Re`
                              left: 0;
                            `,
                              children: "다운로드"
                            }
                          ),
                          /* @__PURE__ */ L.jsx(k3, {})
                        ]
                      }
                    ),
                    /* @__PURE__ */ L.jsxs(
                      gr,
                      {
                        onClick: (Pe) => {
                          Pe.preventDefault(), Pe.stopPropagation(), navigator.clipboard.writeText(re.content);
                        },
                        children: [
                          /* @__PURE__ */ L.jsx(La, { children: "복사" }),
                          /* @__PURE__ */ L.jsx(A3, {})
                        ]
                      }
                    ),
                    /* @__PURE__ */ L.jsxs(
                      gr,
                      {
                        onClick: (Pe) => {
                          Pe.preventDefault(), Pe.stopPropagation(), gt(Le + 1);
                        },
                        children: [
                          /* @__PURE__ */ L.jsx(La, { children: "다시 생성" }),
                          /* @__PURE__ */ L.jsx(y3, {})
                        ]
                      }
                    ),
                    /* @__PURE__ */ L.jsx(
                      EY,
                      {
                        model: re.model,
                        modelList: Te
                      }
                    )
                  ] })
                ] })
              ]
            },
            re.id
          ))
        ] })
      }
    ) }),
    /* @__PURE__ */ L.jsxs(
      wY,
      {
        onSubmit: (re) => {
          re.preventDefault(), Ze($);
        },
        ref: v,
        onDragOver: ar,
        onDragLeave: qt,
        onDrop: Tn,
        onPaste: Sn,
        $css: Re`
          position: relative;
          ${Ee && Re`
            border: 2px dashed #007bff;
            background-color: rgba(0, 123, 255, 0.1);
          `}
        `,
        children: [
          /* @__PURE__ */ L.jsxs(
            Rt,
            {
              $css: Re`
            position: absolute;
            bottom: 100%;
            left: 0;
            transform: translateY(-4px);
            display: flex;
            flex-direction: column;
            width: 100%;
            gap: ${ie(4)};
          `,
              children: [
                Ne && /* @__PURE__ */ L.jsx(
                  hY,
                  {
                    $onRequestTokens: () => {
                      ve(!1);
                    }
                  }
                ),
                /* @__PURE__ */ L.jsxs(
                  Rt,
                  {
                    $css: Re`
              display: flex;
              align-items: center;
              justify-content: space-between;
              gap: ${ie(8)};
            `,
                    children: [
                      /* @__PURE__ */ L.jsx(
                        Wb,
                        {
                          name: "model",
                          $directionY: "top",
                          $value: I,
                          $list: Te,
                          $onChange: (re) => {
                            H(re);
                          }
                        }
                      ),
                      /* @__PURE__ */ L.jsx(
                        Rt,
                        {
                          $css: Re`
                display: flex;
                align-items: center;
                justify-content: center;
                gap: ${ie(8)};
              `,
                          children: /* @__PURE__ */ L.jsxs(
                            gr,
                            {
                              disabled: s,
                              onClick: (re) => {
                                re.preventDefault(), re.stopPropagation(), nr(e);
                              },
                              $css: Re`
                  white-space: nowrap;
                  padding: 10px 8px;
                  gap: 4px;
                  margin-right: 8px;
                  background-color: white;
                  ${Nn(1, "Grayscale/Gray 100", 8)}
                `,
                              children: [
                                /* @__PURE__ */ L.jsx(C3, {}),
                                "다운로드"
                              ]
                            }
                          )
                        }
                      )
                    ]
                  }
                )
              ]
            }
          ),
          /* @__PURE__ */ L.jsx(
            Rt,
            {
              $css: Re`
            display: flex;
            flex-direction: row;
            gap: ${ie(8)};
          `,
              children: J.map((re) => /* @__PURE__ */ L.jsx(
                ZW,
                {
                  $file: re,
                  $onRemove: (Le) => {
                    He(Le, e);
                  },
                  $pending: re.pending
                },
                re.url
              ))
            }
          ),
          /* @__PURE__ */ L.jsx(
            Rt,
            {
              $css: Re`
            display: flex;
            align-items: center;
            justify-content: space-between;
            gap: ${ie(8)};
          `,
              children: /* @__PURE__ */ L.jsx(
                S1,
                {
                  disabled: p,
                  $css: Re`
              flex: 1;
            `,
                  placeholder: "대화하듯 질문 해주세요.",
                  $maxHeight: 128,
                  ref: F,
                  name: "prompt",
                  onKeyDown: (re) => {
                    re.key === "Enter" && !re.shiftKey && (re.preventDefault(), Ze($));
                  },
                  onChange: (re) => {
                    Y(re.target.value);
                  }
                }
              )
            }
          ),
          /* @__PURE__ */ L.jsxs(
            Rt,
            {
              $css: Re`
            display: flex;
            align-items: center;
            justify-content: space-between;
            gap: ${ie(8)};
          `,
              children: [
                /* @__PURE__ */ L.jsx(
                  "input",
                  {
                    type: "file",
                    name: "file",
                    disabled: p,
                    ref: O,
                    style: { display: "none" },
                    accept: SW(
                      (W == null ? void 0 : W.value) ?? null
                    ),
                    onChange: async (re) => {
                      var Pe;
                      const Le = (Pe = re.target.files) == null ? void 0 : Pe[0];
                      Le && (await Gt(Le), re.target.value = "");
                    }
                  }
                ),
                /* @__PURE__ */ L.jsx("div", { children: /* @__PURE__ */ L.jsx(
                  Wb,
                  {
                    $value: W,
                    $list: IY,
                    $onChange: (re) => {
                      x(re);
                    },
                    $directionY: "top",
                    $Label: ({ toggleDropdown: re }) => /* @__PURE__ */ L.jsx(
                      gr,
                      {
                        type: "button",
                        $css: Re`
                    padding: ${ie(4)};
                  `,
                        $variant: null,
                        disabled: !(I != null && I.properties.multimodal) || p,
                        onClick: re,
                        children: I != null && I.properties.multimodal ? /* @__PURE__ */ L.jsx(O3, {}) : /* @__PURE__ */ L.jsx(N3, {})
                      }
                    )
                  }
                ) }),
                /* @__PURE__ */ L.jsxs(
                  Rt,
                  {
                    $css: Re`
              display: flex;
              align-items: center;
              justify-content: center;
              gap: ${ie(8)};
            `,
                    children: [
                      /* @__PURE__ */ L.jsxs(
                        Rt,
                        {
                          $css: Re`
                ${$t("Grayscale/Black", "Body/12px/12px.400")}
                display: flex;
                align-items: center;
                justify-content: center;
                gap: ${ie(8)};
                border-radius: 8px;
                padding: 4px 8px;
                ${St("Grayscale/Gray 50")};
              `,
                          children: [
                            "토큰 잔량 ",
                            rr
                          ]
                        }
                      ),
                      /* @__PURE__ */ L.jsxs(
                        gr,
                        {
                          disabled: B.length === 0 || p || yn,
                          $css: Re`
                background-color: transparent;
                border-radius: 99px;
                border: none;
              `,
                          children: [
                            B.length > 0 && /* @__PURE__ */ L.jsx(zR, {}),
                            B.length === 0 && /* @__PURE__ */ L.jsx($R, {})
                          ]
                        }
                      )
                    ]
                  }
                )
              ]
            }
          )
        ]
      }
    )
  ] });
}
const OY = Se.div`
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: ${ie(8)};
  height: ${ie(44)};
  padding: ${ie(8)} ${ie(8)} ${ie(4)};
  user-select: none;
`, LY = Se.div`
  display: flex;
  gap: 0.5rem;
`, DY = Se.div`
  flex: 1;
  padding: 0;
  display: flex;
  flex-direction: column;
  overflow: hidden;
`, MY = Se.div`
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  ${Nn(1, "Grayscale/Gray 100", 0)}
  ${St("Primary/Primary 50")}
  ${({ $step: e }) => e === "main" ? Re`
          ${St("Primary/Primary 50")}
        ` : Re`
          ${St("Grayscale/White")}
        `}
`, PY = Se.div`
  display: flex;
  flex-direction: column;
  flex: 1;
  width: 100%;
  overflow: hidden;
  padding: ${ie(8)} ${ie(24)} ${ie(32)};
`, FY = Se.form`
  display: flex;
  flex-direction: column;
  gap: ${ie(8)};
  width: 100%;
  padding: ${ie(16)};
  ${Nn(1, "Grayscale/Gray 100", 8)}
  box-sizing: border-box;
  ${({ $css: e }) => e ?? ""}
`, BY = {
  Header: OY,
  Controls: LY,
  Content: DY,
  Wrapper: MY,
  ChatWrapper: PY,
  ChatInputBox: FY
}, {
  MessageBox: UY,
  MessageList: HY,
  MessageWrapper: $Y,
  MessageHeader: zY,
  MessageContent: GY
} = T1, { Header: qY, Controls: jY, Content: VY, Wrapper: WY, ChatWrapper: YY, ChatInputBox: KY } = BY;
function XY({ botId: e }) {
  var B, Y, $;
  const { minimizeDialog: t } = Xr(), n = G.useRef(""), r = G.useRef(!0), o = G.useRef(null), s = G.useRef(null), u = G.useRef(null), [c, p] = G.useState(null), [f, b] = G.useState(""), [g, T] = G.useState(""), y = Ku((M) => M.config), [_, A] = G.useState([]), [R, C] = G.useState("main"), w = G.useMemo(() => _.length > 0, [_]), { data: k } = Su({
    queryKey: ["chatTools"],
    queryFn: async () => await Qn("get:/api-ai/chat/tools")()
  }), O = () => {
    var M;
    (M = o.current) == null || M.scrollTo({
      top: o.current.scrollHeight,
      behavior: "smooth"
    });
  }, F = () => {
    const M = u.current;
    M && (M.style.height = "auto", M.style.overflowY = "", M.value = "");
  }, v = async (M, V) => {
    const de = s.current.prompt.value;
    T(""), A((be) => [
      {
        id: As(),
        role: "user",
        content: de,
        model: ""
      },
      ...be
    ]), p({
      type: "content",
      state: "generating",
      message: ""
    }), n.current = "";
    try {
      F();
      const be = await Qn("post:/api-ai/chat/stream")({
        body: {
          chat_id: e,
          prompt: de,
          history: [],
          model: "gpt-4o-mini",
          type: "CHATBOT",
          options: {
            rag: {
              rag_instructions: "너는 문서 기반으로 검색하고 그에 관한 답변을 해주는 챗봇이야. (필수)검색된 문서에 대한 질문만 답변해주고, 저장된 문서에 대한 질문이 아니면 응답이 불가능하다고 답변해줘."
            }
          }
        },
        responseType: "original"
      });
      if (O(), !be.ok) throw new Error("Stream request failed");
      const Ne = be.body.getReader(), ve = new TextDecoder();
      for (; ; ) {
        const { value: J, done: oe } = await Ne.read();
        if (oe) break;
        const H = ve.decode(J).split(`
`).filter((W) => W.trim());
        for (const W of H)
          try {
            const x = JSON.parse(W);
            x.success ? (x.data.content && (n.current += x.data.content, n.current.length % 2 === 0 && (b(n.current), r.current && O())), x.data.state && p({
              type: "content",
              state: "generating",
              message: ""
            })) : x.success || (n.current = x.data.content ?? "오류가 발생했어요. 다시 시도해주세요.", b(n.current));
          } catch (x) {
            console.error("Failed to parse chunk:", x);
          }
      }
      b(""), A((J) => [
        {
          id: As(),
          role: "assistant",
          content: n.current,
          model: ""
        },
        ...J
      ]);
    } catch (be) {
      console.error("Failed to submit:", be);
    } finally {
      p(null);
    }
  };
  return G.useEffect(() => {
    r.current && O();
  }, [f, c, _]), /* @__PURE__ */ L.jsx(L.Fragment, { children: /* @__PURE__ */ L.jsxs(WY, { $step: R, children: [
    /* @__PURE__ */ L.jsxs(qY, { children: [
      R === "chat" && /* @__PURE__ */ L.jsx(L.Fragment, { children: /* @__PURE__ */ L.jsx(
        gr,
        {
          onClick: () => {
            C("main");
          },
          children: /* @__PURE__ */ L.jsx(I3, {})
        }
      ) }),
      R === "main" && /* @__PURE__ */ L.jsx("div", {}),
      /* @__PURE__ */ L.jsx(jY, { children: /* @__PURE__ */ L.jsx(
        gr,
        {
          $css: Re`
                padding: 0px;
                border-radius: 4px;
              `,
          onClick: () => t("chatbot-window-1"),
          children: /* @__PURE__ */ L.jsx(
            "svg",
            {
              width: "20",
              height: "20",
              viewBox: "0 0 20 20",
              fill: "none",
              xmlns: "http://www.w3.org/2000/svg",
              children: /* @__PURE__ */ L.jsx(
                "path",
                {
                  d: "M17.9999 17.9999L10 10M10 10L2 2M10 10L18 2M10 10L2 18",
                  stroke: "#4D5053",
                  strokeWidth: "1.5",
                  strokeLinecap: "round",
                  strokeLinejoin: "round"
                }
              )
            }
          )
        }
      ) })
    ] }),
    /* @__PURE__ */ L.jsxs(VY, { children: [
      R === "main" && /* @__PURE__ */ L.jsxs(L.Fragment, { children: [
        /* @__PURE__ */ L.jsxs(
          Rt,
          {
            $css: Re`
                  display: flex;
                  flex-direction: column;
                  gap: ${ie(4)};
                  padding: ${ie(16)} ${ie(0)};
                  align-items: center;
                `,
            children: [
              y.icons.chatbot ? /* @__PURE__ */ L.jsx("img", { src: y.icons.chatbot }) : /* @__PURE__ */ L.jsx(VR, {}),
              /* @__PURE__ */ L.jsx(
                Rt,
                {
                  $css: Re`
                    ${$t("Grayscale/Black", "Title/24px/24px.600")}
                  `,
                  children: "문의하기"
                }
              )
            ]
          }
        ),
        /* @__PURE__ */ L.jsxs(
          Rt,
          {
            $css: Re`
                  display: flex;
                  flex-direction: column;
                  gap: ${ie(8)};
                  padding: ${ie(8)} ${ie(20)} ${ie(24)};
                  align-items: center;
                `,
            children: [
              /* @__PURE__ */ L.jsxs(
                Rt,
                {
                  $css: Re`
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                    gap: ${ie(8)};
                    width: 100%;
                    padding: ${ie(16)};
                    border-radius: ${ie(8)};
                    ${$t("Grayscale/Black", "Body/16px/16px.600")}
                    ${St("Grayscale/White")}
                  `,
                  children: [
                    "궁금한 점을 질문하세요.",
                    /* @__PURE__ */ L.jsx(
                      rc,
                      {
                        $variant: "primary-filled",
                        $size: "small",
                        onClick: () => {
                          C("chat");
                        },
                        children: "채팅 문의"
                      }
                    )
                  ]
                }
              ),
              ((B = y.chatbot) == null ? void 0 : B.faq) && ((Y = y.chatbot) == null ? void 0 : Y.faq.length) > 0 && /* @__PURE__ */ L.jsx(L.Fragment, { children: /* @__PURE__ */ L.jsxs(
                Rt,
                {
                  $css: Re`
                        display: flex;
                        flex-direction: column;
                        gap: ${ie(8)};
                        width: 100%;
                        padding: ${ie(16)};
                        border-radius: ${ie(8)};
                        ${St("Grayscale/White")}

                        & > h1 {
                          ${$t(
                    "Grayscale/Black",
                    "Body/16px/16px.600"
                  )}
                        }
                        & > ul {
                          display: flex;
                          flex-direction: column;
                          gap: ${ie(8)};
                        }
                        & > ul > li {
                          ${$t(
                    "Grayscale/Gray 500",
                    "Body/14px/14px.400"
                  )}
                          list-style: disc;
                          margin-left: ${ie(24)};
                        }
                      `,
                  children: [
                    /* @__PURE__ */ L.jsx("h1", { children: "자주 묻는 질문" }),
                    /* @__PURE__ */ L.jsx("ul", { children: ($ = y.chatbot) == null ? void 0 : $.faq.map((M, V) => /* @__PURE__ */ L.jsx(
                      "li",
                      {
                        onClick: (ne) => {
                          ne.preventDefault(), T(M), C("chat");
                        },
                        children: M
                      },
                      V
                    )) })
                  ]
                }
              ) })
            ]
          }
        )
      ] }),
      R === "chat" && /* @__PURE__ */ L.jsxs(YY, { children: [
        !w && /* @__PURE__ */ L.jsx(
          Rt,
          {
            $css: Re`
                    display: flex;
                    flex-direction: column;
                    gap: ${ie(8)};
                    align-items: center;
                    justify-content: center;
                    height: 100%;
                  `,
            children: /* @__PURE__ */ L.jsx(
              Rt,
              {
                $css: Re`
                      ${$t(
                  "Grayscale/Gray 500",
                  "Body/16px/16px.400"
                )}
                    `,
                children: "궁금한 점을 질문하세요."
              }
            )
          }
        ),
        w && /* @__PURE__ */ L.jsx(L.Fragment, { children: /* @__PURE__ */ L.jsx(
          UY,
          {
            ref: o,
            onScroll: (M) => {
              const V = M.currentTarget;
              V.scrollTop + V.clientHeight >= V.scrollHeight - 100 ? r.current = !0 : r.current = !1;
            },
            children: /* @__PURE__ */ L.jsxs(HY, { children: [
              f && /* @__PURE__ */ L.jsx(
                b2,
                {
                  toolNames: (k == null ? void 0 : k.data) ?? {},
                  lastMessage: f,
                  currentStatus: c
                }
              ),
              _.map((M) => /* @__PURE__ */ L.jsxs(
                $Y,
                {
                  $isUser: M.role === "user",
                  children: [
                    /* @__PURE__ */ L.jsx(zY, { children: M.role === "user" ? /* @__PURE__ */ L.jsx(L.Fragment, { children: /* @__PURE__ */ L.jsx("span", { children: "나" }) }) : /* @__PURE__ */ L.jsxs(L.Fragment, { children: [
                      /* @__PURE__ */ L.jsx(NE, {}),
                      /* @__PURE__ */ L.jsx("span", { children: y.name })
                    ] }) }),
                    /* @__PURE__ */ L.jsx(
                      GY,
                      {
                        $isAssistant: M.role === "assistant",
                        children: /* @__PURE__ */ L.jsx(b1, { children: M.content })
                      }
                    )
                  ]
                },
                M.id
              ))
            ] })
          }
        ) }),
        /* @__PURE__ */ L.jsx(
          KY,
          {
            onSubmit: (M) => {
              M.preventDefault(), v();
            },
            ref: s,
            $css: Re`
                  position: relative;
                `,
            children: /* @__PURE__ */ L.jsxs(
              Rt,
              {
                $css: Re`
                    display: flex;
                    align-items: center;
                    justify-content: space-between;
                    gap: ${ie(8)};
                  `,
                children: [
                  /* @__PURE__ */ L.jsx(
                    S1,
                    {
                      $css: Re`
                      flex: 1;
                    `,
                      placeholder: "대화하듯 질문 해주세요.",
                      $maxHeight: 128,
                      ref: u,
                      name: "prompt",
                      onKeyDown: (M) => {
                        M.key === "Enter" && !M.shiftKey && (M.preventDefault(), v());
                      },
                      value: g,
                      onChange: (M) => {
                        T(M.target.value);
                      }
                    }
                  ),
                  /* @__PURE__ */ L.jsxs(
                    gr,
                    {
                      disabled: g.length === 0,
                      $css: Re`
                      background-color: transparent;
                      border-radius: 99px;
                      border: none;
                    `,
                      children: [
                        g.length > 0 && /* @__PURE__ */ L.jsx(zR, {}),
                        g.length === 0 && /* @__PURE__ */ L.jsx($R, {})
                      ]
                    }
                  )
                ]
              }
            )
          }
        )
      ] })
    ] })
  ] }) });
}
const QY = Se.div(
  ({ $isMinimized: e, $isMaximized: t, $isBehind: n, theme: r }) => Re`
    position: fixed;
    right: 32px;
    bottom: 92px;
    width: 579px;
    height: 648px;
    color: ${r.colors["Grayscale/Black"]};
    ${r.typography["Body/16px/16px.400"]}
    border-radius: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    box-sizing: border-box;
    transition: all 0.2s;
    box-shadow: 0px 12px 16px -4px rgba(51, 51, 51, 0.08),
      0px 4px 6px -2px rgba(51, 51, 51, 0.03);
    @media screen and (max-width: 611px), (max-height: 740px) {
      right: 0;
      bottom: 0;
      width: 100%;
      height: 100%;
      border-radius: 0;
    }
    ${e && Re`
      display: none;
    `}
    ${t && Re`
      top: 0 !important;
      left: 0 !important;
      width: 100vw !important;
      height: calc(100vh - 32px) !important;
      transform: none !important;
    `}

  ${n && Re`
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15), 0 3px 6px rgba(0, 0, 0, 0.1),
        0 0 1px rgba(0, 0, 0, 0.05);

      .inner-dialog-content {
        opacity: 1;
      }
    `}

  &::-webkit-scrollbar {
      width: 6px;
    }

    &::-webkit-scrollbar-track {
      background: color-mix(
        in srgb,
        ${En("Grayscale/Gray 50")} 90%,
        transparent
      );
    }

    &::-webkit-scrollbar-thumb {
      background: color-mix(
        in srgb,
        ${En("Grayscale/Gray 200")} 50%,
        transparent
      );
      cursor: pointer;
      transition: all 0.2s ease-in-out;
    }

    &::-webkit-scrollbar-thumb:hover {
      background: color-mix(
        in srgb,
        ${En("Grayscale/Gray 200")} 90%,
        transparent
      );
    }

    &::-webkit-scrollbar-corner {
      background: transparent;
    }
  `
), ZY = {
  Wrapper: QY
}, { Wrapper: JY } = ZY;
function eK({
  id: e,
  children: t
}) {
  const n = G.useRef(null), r = Xr((u) => u.dialogs.get(e)), o = Xr((u) => u.activeDialogId), { setActiveDialog: s } = Xr();
  return !r || !r.isOpen ? null : /* @__PURE__ */ L.jsx(
    JY,
    {
      ref: n,
      $isMinimized: r.isMinimized,
      $isMaximized: r.isMaximized,
      $isBehind: r.id !== o,
      style: {
        position: "fixed",
        zIndex: r.zIndex
      },
      onClick: () => s(e),
      children: typeof t == "function" ? t(r) : t
    }
  );
}
function tK() {
  return O4(), /* @__PURE__ */ L.jsxs("div", { id: "gu-app", children: [
    /* @__PURE__ */ L.jsx(L4, {}),
    /* @__PURE__ */ L.jsx(y4, { id: "chat-window-1", children: ({ data: e }) => e.chatId ? /* @__PURE__ */ L.jsx(NY, { ...e }) : null }),
    /* @__PURE__ */ L.jsx(eK, { id: "chatbot-window-1", children: ({ data: e }) => e.botId ? /* @__PURE__ */ L.jsx(XY, { botId: e.botId }) : null }),
    /* @__PURE__ */ L.jsx(k4, {})
  ] });
}
const nK = `

:host {
  --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
    "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  --font-serif: ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
  --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
    "Liberation Mono", "Courier New", monospace;
  --color-red-50: oklch(0.971 0.013 17.38);
  --color-red-100: oklch(0.936 0.032 17.717);
  --color-red-200: oklch(0.885 0.062 18.334);
  --color-red-300: oklch(0.808 0.114 19.571);
  --color-red-400: oklch(0.704 0.191 22.216);
  --color-red-500: oklch(0.637 0.237 25.331);
  --color-red-600: oklch(0.577 0.245 27.325);
  --color-red-700: oklch(0.505 0.213 27.518);
  --color-red-800: oklch(0.444 0.177 26.899);
  --color-red-900: oklch(0.396 0.141 25.723);
  --color-red-950: oklch(0.258 0.092 26.042);
  --color-orange-50: oklch(0.98 0.016 73.684);
  --color-orange-100: oklch(0.954 0.038 75.164);
  --color-orange-200: oklch(0.901 0.076 70.697);
  --color-orange-300: oklch(0.837 0.128 66.29);
  --color-orange-400: oklch(0.75 0.183 55.934);
  --color-orange-500: oklch(0.705 0.213 47.604);
  --color-orange-600: oklch(0.646 0.222 41.116);
  --color-orange-700: oklch(0.553 0.195 38.402);
  --color-orange-800: oklch(0.47 0.157 37.304);
  --color-orange-900: oklch(0.408 0.123 38.172);
  --color-orange-950: oklch(0.266 0.079 36.259);
  --color-amber-50: oklch(0.987 0.022 95.277);
  --color-amber-100: oklch(0.962 0.059 95.617);
  --color-amber-200: oklch(0.924 0.12 95.746);
  --color-amber-300: oklch(0.879 0.169 91.605);
  --color-amber-400: oklch(0.828 0.189 84.429);
  --color-amber-500: oklch(0.769 0.188 70.08);
  --color-amber-600: oklch(0.666 0.179 58.318);
  --color-amber-700: oklch(0.555 0.163 48.998);
  --color-amber-800: oklch(0.473 0.137 46.201);
  --color-amber-900: oklch(0.414 0.112 45.904);
  --color-amber-950: oklch(0.279 0.077 45.635);
  --color-yellow-50: oklch(0.987 0.026 102.212);
  --color-yellow-100: oklch(0.973 0.071 103.193);
  --color-yellow-200: oklch(0.945 0.129 101.54);
  --color-yellow-300: oklch(0.905 0.182 98.111);
  --color-yellow-400: oklch(0.852 0.199 91.936);
  --color-yellow-500: oklch(0.795 0.184 86.047);
  --color-yellow-600: oklch(0.681 0.162 75.834);
  --color-yellow-700: oklch(0.554 0.135 66.442);
  --color-yellow-800: oklch(0.476 0.114 61.907);
  --color-yellow-900: oklch(0.421 0.095 57.708);
  --color-yellow-950: oklch(0.286 0.066 53.813);
  --color-lime-50: oklch(0.986 0.031 120.757);
  --color-lime-100: oklch(0.967 0.067 122.328);
  --color-lime-200: oklch(0.938 0.127 124.321);
  --color-lime-300: oklch(0.897 0.196 126.665);
  --color-lime-400: oklch(0.841 0.238 128.85);
  --color-lime-500: oklch(0.768 0.233 130.85);
  --color-lime-600: oklch(0.648 0.2 131.684);
  --color-lime-700: oklch(0.532 0.157 131.589);
  --color-lime-800: oklch(0.453 0.124 130.933);
  --color-lime-900: oklch(0.405 0.101 131.063);
  --color-lime-950: oklch(0.274 0.072 132.109);
  --color-green-50: oklch(0.982 0.018 155.826);
  --color-green-100: oklch(0.962 0.044 156.743);
  --color-green-200: oklch(0.925 0.084 155.995);
  --color-green-300: oklch(0.871 0.15 154.449);
  --color-green-400: oklch(0.792 0.209 151.711);
  --color-green-500: oklch(0.723 0.219 149.579);
  --color-green-600: oklch(0.627 0.194 149.214);
  --color-green-700: oklch(0.527 0.154 150.069);
  --color-green-800: oklch(0.448 0.119 151.328);
  --color-green-900: oklch(0.393 0.095 152.535);
  --color-green-950: oklch(0.266 0.065 152.934);
  --color-emerald-50: oklch(0.979 0.021 166.113);
  --color-emerald-100: oklch(0.95 0.052 163.051);
  --color-emerald-200: oklch(0.905 0.093 164.15);
  --color-emerald-300: oklch(0.845 0.143 164.978);
  --color-emerald-400: oklch(0.765 0.177 163.223);
  --color-emerald-500: oklch(0.696 0.17 162.48);
  --color-emerald-600: oklch(0.596 0.145 163.225);
  --color-emerald-700: oklch(0.508 0.118 165.612);
  --color-emerald-800: oklch(0.432 0.095 166.913);
  --color-emerald-900: oklch(0.378 0.077 168.94);
  --color-emerald-950: oklch(0.262 0.051 172.552);
  --color-teal-50: oklch(0.984 0.014 180.72);
  --color-teal-100: oklch(0.953 0.051 180.801);
  --color-teal-200: oklch(0.91 0.096 180.426);
  --color-teal-300: oklch(0.855 0.138 181.071);
  --color-teal-400: oklch(0.777 0.152 181.912);
  --color-teal-500: oklch(0.704 0.14 182.503);
  --color-teal-600: oklch(0.6 0.118 184.704);
  --color-teal-700: oklch(0.511 0.096 186.391);
  --color-teal-800: oklch(0.437 0.078 188.216);
  --color-teal-900: oklch(0.386 0.063 188.416);
  --color-teal-950: oklch(0.277 0.046 192.524);
  --color-cyan-50: oklch(0.984 0.019 200.873);
  --color-cyan-100: oklch(0.956 0.045 203.388);
  --color-cyan-200: oklch(0.917 0.08 205.041);
  --color-cyan-300: oklch(0.865 0.127 207.078);
  --color-cyan-400: oklch(0.789 0.154 211.53);
  --color-cyan-500: oklch(0.715 0.143 215.221);
  --color-cyan-600: oklch(0.609 0.126 221.723);
  --color-cyan-700: oklch(0.52 0.105 223.128);
  --color-cyan-800: oklch(0.45 0.085 224.283);
  --color-cyan-900: oklch(0.398 0.07 227.392);
  --color-cyan-950: oklch(0.302 0.056 229.695);
  --color-sky-50: oklch(0.977 0.013 236.62);
  --color-sky-100: oklch(0.951 0.026 236.824);
  --color-sky-200: oklch(0.901 0.058 230.902);
  --color-sky-300: oklch(0.828 0.111 230.318);
  --color-sky-400: oklch(0.746 0.16 232.661);
  --color-sky-500: oklch(0.685 0.169 237.323);
  --color-sky-600: oklch(0.588 0.158 241.966);
  --color-sky-700: oklch(0.5 0.134 242.749);
  --color-sky-800: oklch(0.443 0.11 240.79);
  --color-sky-900: oklch(0.391 0.09 240.876);
  --color-sky-950: oklch(0.293 0.066 243.157);
  --color-blue-50: oklch(0.97 0.014 254.604);
  --color-blue-100: oklch(0.932 0.032 255.585);
  --color-blue-200: oklch(0.882 0.059 254.128);
  --color-blue-300: oklch(0.809 0.105 251.813);
  --color-blue-400: oklch(0.707 0.165 254.624);
  --color-blue-500: oklch(0.623 0.214 259.815);
  --color-blue-600: oklch(0.546 0.245 262.881);
  --color-blue-700: oklch(0.488 0.243 264.376);
  --color-blue-800: oklch(0.424 0.199 265.638);
  --color-blue-900: oklch(0.379 0.146 265.522);
  --color-blue-950: oklch(0.282 0.091 267.935);
  --color-indigo-50: oklch(0.962 0.018 272.314);
  --color-indigo-100: oklch(0.93 0.034 272.788);
  --color-indigo-200: oklch(0.87 0.065 274.039);
  --color-indigo-300: oklch(0.785 0.115 274.713);
  --color-indigo-400: oklch(0.673 0.182 276.935);
  --color-indigo-500: oklch(0.585 0.233 277.117);
  --color-indigo-600: oklch(0.511 0.262 276.966);
  --color-indigo-700: oklch(0.457 0.24 277.023);
  --color-indigo-800: oklch(0.398 0.195 277.366);
  --color-indigo-900: oklch(0.359 0.144 278.697);
  --color-indigo-950: oklch(0.257 0.09 281.288);
  --color-violet-50: oklch(0.969 0.016 293.756);
  --color-violet-100: oklch(0.943 0.029 294.588);
  --color-violet-200: oklch(0.894 0.057 293.283);
  --color-violet-300: oklch(0.811 0.111 293.571);
  --color-violet-400: oklch(0.702 0.183 293.541);
  --color-violet-500: oklch(0.606 0.25 292.717);
  --color-violet-600: oklch(0.541 0.281 293.009);
  --color-violet-700: oklch(0.491 0.27 292.581);
  --color-violet-800: oklch(0.432 0.232 292.759);
  --color-violet-900: oklch(0.38 0.189 293.745);
  --color-violet-950: oklch(0.283 0.141 291.089);
  --color-purple-50: oklch(0.977 0.014 308.299);
  --color-purple-100: oklch(0.946 0.033 307.174);
  --color-purple-200: oklch(0.902 0.063 306.703);
  --color-purple-300: oklch(0.827 0.119 306.383);
  --color-purple-400: oklch(0.714 0.203 305.504);
  --color-purple-500: oklch(0.627 0.265 303.9);
  --color-purple-600: oklch(0.558 0.288 302.321);
  --color-purple-700: oklch(0.496 0.265 301.924);
  --color-purple-800: oklch(0.438 0.218 303.724);
  --color-purple-900: oklch(0.381 0.176 304.987);
  --color-purple-950: oklch(0.291 0.149 302.717);
  --color-fuchsia-50: oklch(0.977 0.017 320.058);
  --color-fuchsia-100: oklch(0.952 0.037 318.852);
  --color-fuchsia-200: oklch(0.903 0.076 319.62);
  --color-fuchsia-300: oklch(0.833 0.145 321.434);
  --color-fuchsia-400: oklch(0.74 0.238 322.16);
  --color-fuchsia-500: oklch(0.667 0.295 322.15);
  --color-fuchsia-600: oklch(0.591 0.293 322.896);
  --color-fuchsia-700: oklch(0.518 0.253 323.949);
  --color-fuchsia-800: oklch(0.452 0.211 324.591);
  --color-fuchsia-900: oklch(0.401 0.17 325.612);
  --color-fuchsia-950: oklch(0.293 0.136 325.661);
  --color-pink-50: oklch(0.971 0.014 343.198);
  --color-pink-100: oklch(0.948 0.028 342.258);
  --color-pink-200: oklch(0.899 0.061 343.231);
  --color-pink-300: oklch(0.823 0.12 346.018);
  --color-pink-400: oklch(0.718 0.202 349.761);
  --color-pink-500: oklch(0.656 0.241 354.308);
  --color-pink-600: oklch(0.592 0.249 0.584);
  --color-pink-700: oklch(0.525 0.223 3.958);
  --color-pink-800: oklch(0.459 0.187 3.815);
  --color-pink-900: oklch(0.408 0.153 2.432);
  --color-pink-950: oklch(0.284 0.109 3.907);
  --color-rose-50: oklch(0.969 0.015 12.422);
  --color-rose-100: oklch(0.941 0.03 12.58);
  --color-rose-200: oklch(0.892 0.058 10.001);
  --color-rose-300: oklch(0.81 0.117 11.638);
  --color-rose-400: oklch(0.712 0.194 13.428);
  --color-rose-500: oklch(0.645 0.246 16.439);
  --color-rose-600: oklch(0.586 0.253 17.585);
  --color-rose-700: oklch(0.514 0.222 16.935);
  --color-rose-800: oklch(0.455 0.188 13.697);
  --color-rose-900: oklch(0.41 0.159 10.272);
  --color-rose-950: oklch(0.271 0.105 12.094);
  --color-slate-50: oklch(0.984 0.003 247.858);
  --color-slate-100: oklch(0.968 0.007 247.896);
  --color-slate-200: oklch(0.929 0.013 255.508);
  --color-slate-300: oklch(0.869 0.022 252.894);
  --color-slate-400: oklch(0.704 0.04 256.788);
  --color-slate-500: oklch(0.554 0.046 257.417);
  --color-slate-600: oklch(0.446 0.043 257.281);
  --color-slate-700: oklch(0.372 0.044 257.287);
  --color-slate-800: oklch(0.279 0.041 260.031);
  --color-slate-900: oklch(0.208 0.042 265.755);
  --color-slate-950: oklch(0.129 0.042 264.695);
  --color-gray-50: oklch(0.985 0.002 247.839);
  --color-gray-100: oklch(0.967 0.003 264.542);
  --color-gray-200: oklch(0.928 0.006 264.531);
  --color-gray-300: oklch(0.872 0.01 258.338);
  --color-gray-400: oklch(0.707 0.022 261.325);
  --color-gray-500: oklch(0.551 0.027 264.364);
  --color-gray-600: oklch(0.446 0.03 256.802);
  --color-gray-700: oklch(0.373 0.034 259.733);
  --color-gray-800: oklch(0.278 0.033 256.848);
  --color-gray-900: oklch(0.21 0.034 264.665);
  --color-gray-950: oklch(0.13 0.028 261.692);
  --color-zinc-50: oklch(0.985 0 0);
  --color-zinc-100: oklch(0.967 0.001 286.375);
  --color-zinc-200: oklch(0.92 0.004 286.32);
  --color-zinc-300: oklch(0.871 0.006 286.286);
  --color-zinc-400: oklch(0.705 0.015 286.067);
  --color-zinc-500: oklch(0.552 0.016 285.938);
  --color-zinc-600: oklch(0.442 0.017 285.786);
  --color-zinc-700: oklch(0.37 0.013 285.805);
  --color-zinc-800: oklch(0.274 0.006 286.033);
  --color-zinc-900: oklch(0.21 0.006 285.885);
  --color-zinc-950: oklch(0.141 0.005 285.823);
  --color-neutral-50: oklch(0.985 0 0);
  --color-neutral-100: oklch(0.97 0 0);
  --color-neutral-200: oklch(0.922 0 0);
  --color-neutral-300: oklch(0.87 0 0);
  --color-neutral-400: oklch(0.708 0 0);
  --color-neutral-500: oklch(0.556 0 0);
  --color-neutral-600: oklch(0.439 0 0);
  --color-neutral-700: oklch(0.371 0 0);
  --color-neutral-800: oklch(0.269 0 0);
  --color-neutral-900: oklch(0.205 0 0);
  --color-neutral-950: oklch(0.145 0 0);
  --color-stone-50: oklch(0.985 0.001 106.423);
  --color-stone-100: oklch(0.97 0.001 106.424);
  --color-stone-200: oklch(0.923 0.003 48.717);
  --color-stone-300: oklch(0.869 0.005 56.366);
  --color-stone-400: oklch(0.709 0.01 56.259);
  --color-stone-500: oklch(0.553 0.013 58.071);
  --color-stone-600: oklch(0.444 0.011 73.639);
  --color-stone-700: oklch(0.374 0.01 67.558);
  --color-stone-800: oklch(0.268 0.007 34.298);
  --color-stone-900: oklch(0.216 0.006 56.043);
  --color-stone-950: oklch(0.147 0.004 49.25);
  --color-black: #000;
  --color-white: #fff;
  --spacing: 0.25rem;
  --breakpoint-sm: 40rem;
  --breakpoint-md: 48rem;
  --breakpoint-lg: 64rem;
  --breakpoint-xl: 80rem;
  --breakpoint-2xl: 96rem;
  --container-3xs: 16rem;
  --container-2xs: 18rem;
  --container-xs: 20rem;
  --container-sm: 24rem;
  --container-md: 28rem;
  --container-lg: 32rem;
  --container-xl: 36rem;
  --container-2xl: 42rem;
  --container-3xl: 48rem;
  --container-4xl: 56rem;
  --container-5xl: 64rem;
  --container-6xl: 72rem;
  --container-7xl: 80rem;
  --text-xs: 0.75rem;
  --text-xs--line-height: calc(1 / 0.75);
  --text-sm: 0.875rem;
  --text-sm--line-height: calc(1.25 / 0.875);
  --text-base: 1rem;
  --text-base--line-height: 1.5;
  --text-lg: 1.125rem;
  --text-lg--line-height: calc(1.75 / 1.125);
  --text-xl: 1.25rem;
  --text-xl--line-height: calc(1.75 / 1.25);
  --text-2xl: 1.5rem;
  --text-2xl--line-height: calc(2 / 1.5);
  --text-3xl: 1.875rem;
  --text-3xl--line-height: 1.2;
  --text-4xl: 2.25rem;
  --text-4xl--line-height: calc(2.5 / 2.25);
  --text-5xl: 3rem;
  --text-5xl--line-height: 1;
  --text-6xl: 3.75rem;
  --text-6xl--line-height: 1;
  --text-7xl: 4.5rem;
  --text-7xl--line-height: 1;
  --text-8xl: 6rem;
  --text-8xl--line-height: 1;
  --text-9xl: 8rem;
  --text-9xl--line-height: 1;
  --font-weight-thin: 100;
  --font-weight-extralight: 200;
  --font-weight-light: 300;
  --font-weight-normal: 400;
  --font-weight-medium: 500;
  --font-weight-semibold: 600;
  --font-weight-bold: 700;
  --font-weight-extrabold: 800;
  --font-weight-black: 900;
  --tracking-tighter: -0.05em;
  --tracking-tight: -0.025em;
  --tracking-normal: 0em;
  --tracking-wide: 0.025em;
  --tracking-wider: 0.05em;
  --tracking-widest: 0.1em;
  --leading-tight: 1.25;
  --leading-snug: 1.375;
  --leading-normal: 1.5;
  --leading-relaxed: 1.625;
  --leading-loose: 2;
  --radius-xs: 0.125rem;
  --radius-sm: 0.25rem;
  --radius-md: 0.375rem;
  --radius-lg: 0.5rem;
  --radius-xl: 0.75rem;
  --radius-2xl: 1rem;
  --radius-3xl: 1.5rem;
  --radius-4xl: 2rem;
  --shadow-2xs: 0 1px #0000000d;
  --shadow-xs: 0 1px 2px 0 #0000000d;
  --shadow-sm: 0 1px 3px 0 #0000001a, 0 1px 2px -1px #0000001a;
  --shadow-md: 0 4px 6px -1px #0000001a, 0 2px 4px -2px #0000001a;
  --shadow-lg: 0 10px 15px -3px #0000001a, 0 4px 6px -4px #0000001a;
  --shadow-xl: 0 20px 25px -5px #0000001a, 0 8px 10px -6px #0000001a;
  --shadow-2xl: 0 25px 50px -12px #00000040;
  --inset-shadow-2xs: inset 0 1px #0000000d;
  --inset-shadow-xs: inset 0 1px 1px #0000000d;
  --inset-shadow-sm: inset 0 2px 4px #0000000d;
  --drop-shadow-xs: 0 1px 1px #0000000d;
  --drop-shadow-sm: 0 1px 2px #00000026;
  --drop-shadow-md: 0 3px 3px #0000001f;
  --drop-shadow-lg: 0 4px 4px #00000026;
  --drop-shadow-xl: 0 9px 7px #0000001a;
  --drop-shadow-2xl: 0 25px 25px #00000026;
  --ease-in: cubic-bezier(0.4, 0, 1, 1);
  --ease-out: cubic-bezier(0, 0, 0.2, 1);
  --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
  --animate-spin: spin 1s linear infinite;
  --animate-ping: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
  --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  --animate-bounce: bounce 1s infinite;
  --blur-xs: 4px;
  --blur-sm: 8px;
  --blur-md: 12px;
  --blur-lg: 16px;
  --blur-xl: 24px;
  --blur-2xl: 40px;
  --blur-3xl: 64px;
  --perspective-dramatic: 100px;
  --perspective-near: 300px;
  --perspective-normal: 500px;
  --perspective-midrange: 800px;
  --perspective-distant: 1200px;
  --aspect-video: 16/9;
  --default-transition-duration: 0.15s;
  --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  --default-font-family: var(--font-sans);
  --default-font-feature-settings: var(--font-sans--font-feature-settings);
  --default-font-variation-settings: var(
    --font-sans--font-variation-settings
  );
  --default-mono-font-family: var(--font-mono);
  --default-mono-font-feature-settings: var(
    --font-mono--font-feature-settings
  );
  --default-mono-font-variation-settings: var(
    --font-mono--font-variation-settings
  );
}
*,
:after,
:before,
::backdrop {
  box-sizing: border-box;
  border: 0 solid;
  margin: 0;
  padding: 0;
}
::file-selector-button {
  box-sizing: border-box;
  border: 0 solid;
  margin: 0;
  padding: 0;
}
:host {
  -webkit-text-size-adjust: 100%;
  -moz-tab-size: 4;
  tab-size: 4;
  line-height: 1.5;
  font-family: var(
    --default-font-family,
    ui-sans-serif,
    system-ui,
    sans-serif,
    "Apple Color Emoji",
    "Segoe UI Emoji",
    "Segoe UI Symbol",
    "Noto Color Emoji"
  );
  font-feature-settings: var(--default-font-feature-settings, normal);
  font-variation-settings: var(--default-font-variation-settings, normal);
  -webkit-tap-highlight-color: transparent;
}
hr {
  height: 0;
  color: inherit;
  border-top-width: 1px;
}
abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}
a {
  color: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}
b,
strong {
  font-weight: bolder;
}
code,
kbd,
samp,
pre {
  font-family: var(
    --default-mono-font-family,
    ui-monospace,
    SFMono-Regular,
    Menlo,
    Monaco,
    Consolas,
    "Liberation Mono",
    "Courier New",
    monospace
  );
  font-feature-settings: var(--default-mono-font-feature-settings, normal);
  font-variation-settings: var(
    --default-mono-font-variation-settings,
    normal
  );
  font-size: 1em;
}
small {
  font-size: 80%;
}
sub,
sup {
  vertical-align: baseline;
  font-size: 75%;
  line-height: 0;
  position: relative;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
table {
  text-indent: 0;
  border-color: inherit;
  border-collapse: collapse;
}
:-moz-focusring {
  outline: auto;
}
progress {
  vertical-align: baseline;
}
summary {
  display: list-item;
}
ol,
ul,
menu {
  list-style: none;
}
img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  vertical-align: middle;
  display: block;
}
img,
video {
  max-width: 100%;
  height: auto;
}
button,
input,
select,
optgroup,
textarea {
  font: inherit;
  font-feature-settings: inherit;
  font-variation-settings: inherit;
  letter-spacing: inherit;
  color: inherit;
  opacity: 1;
  background-color: #0000;
  border-radius: 0;
}
::file-selector-button {
  font: inherit;
  font-feature-settings: inherit;
  font-variation-settings: inherit;
  letter-spacing: inherit;
  color: inherit;
  opacity: 1;
  background-color: #0000;
  border-radius: 0;
}
:where(select:is([multiple], [size])) optgroup {
  font-weight: bolder;
}
:where(select:is([multiple], [size])) optgroup option {
  padding-inline-start: 20px;
}
::file-selector-button {
  margin-inline-end: 4px;
}
::placeholder {
  opacity: 1;
  color: color-mix(in oklab, currentColor 50%, transparent);
}
textarea {
  resize: vertical;
}
::-webkit-search-decoration {
  -webkit-appearance: none;
}
::-webkit-date-and-time-value {
  min-height: 1lh;
  text-align: inherit;
}
::-webkit-datetime-edit {
  display: inline-flex;
}
::-webkit-datetime-edit-fields-wrapper {
  padding: 0;
}
::-webkit-datetime-edit {
  padding-block: 0;
}
::-webkit-datetime-edit-year-field {
  padding-block: 0;
}
::-webkit-datetime-edit-month-field {
  padding-block: 0;
}
::-webkit-datetime-edit-day-field {
  padding-block: 0;
}
::-webkit-datetime-edit-hour-field {
  padding-block: 0;
}
::-webkit-datetime-edit-minute-field {
  padding-block: 0;
}
::-webkit-datetime-edit-second-field {
  padding-block: 0;
}
::-webkit-datetime-edit-millisecond-field {
  padding-block: 0;
}
::-webkit-datetime-edit-meridiem-field {
  padding-block: 0;
}
:-moz-ui-invalid {
  box-shadow: none;
}
button,
input:where([type="button"], [type="reset"], [type="submit"]) {
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
}
::file-selector-button {
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
}
::-webkit-inner-spin-button {
  height: auto;
}
::-webkit-outer-spin-button {
  height: auto;
}
[hidden]:where(:not([hidden="until-found"])) {
  display: none !important;
}
  
.prose {
color: #1a202c;
max-width: 65ch;
max-width: 100%;
}

.prose [class~="lead"] {
color: #1a202c;
font-size: 1.25em;
line-height: 1.6;
margin-top: 1.2em;
margin-bottom: 1.2em;
}

.prose a {
position: relative;
}

.prose a::before {
content: "";
position: absolute;
bottom: -0.3em;
left: 0;
right: 0;
height: 3px;
width: 100%;
/* @apply bg-gradient-to-r bg-gradient-teal transition-transform duration-200 transform; */
pointer-events: none;
}

.prose a:hover::before,
.prose a:focus::before {
transform: scaleX(0.95);
}

.prose strong {
font-weight: 600;
}

.prose ol {
counter-reset: list-counter;
margin-top: 1.25em;
margin-bottom: 1.25em;
}

.prose ol > li {
position: relative;
counter-increment: list-counter;
padding-left: 1.75em;
}

.prose ol > li::before {
content: counter(list-counter) ".";
position: absolute;
font-weight: 400;
color: #3d4043;
}

.prose ul > li {
position: relative;
padding-left: 1.75em;
}

.prose ul > li::before {
content: "";
position: absolute;
background-color: #e8ebed;
border-radius: 50%;
width: 0.375em;
height: 0.375em;
top: calc(0.875em - 0.1875em);
left: 0.25em;
}

.prose hr {
border-color: #9ea4aa;
border-top-width: 1px;
margin-top: 3em;
margin-bottom: 3em;
}

.prose blockquote {
font-weight: 500;
font-style: italic;
color: #1a202c;
border-left-width: 0.25rem;
border-left-color: #9ea4aa;
quotes: "“""”""‘""’";
margin-top: 1.6em;
margin-bottom: 1.6em;
padding-left: 1em;
}

.prose blockquote p:first-of-type::before {
content: open-quote;
}

.prose blockquote p:last-of-type::after {
content: close-quote;
}

.prose h1 {
font-weight: 800;
font-size: 2.25em;
margin-top: 0;
margin-bottom: 0.8888889em;
line-height: 1.1111111;
}

.prose h2 {
font-weight: 700;
font-size: 1.5em;
margin-top: 2em;
margin-bottom: 1em;
line-height: 1.3333333;
}

.prose h3 {
font-weight: 600;
font-size: 1.25em;
margin-top: 1.6em;
margin-bottom: 0.6em;
line-height: 1.6;
}

.prose h4 {
font-weight: 600;
margin-top: 1.5em;
margin-bottom: 0.5em;
line-height: 1.5;
}

.prose figure figcaption {
color: #3d4043;
font-size: 0.875em;
line-height: 1.4285714;
margin-top: 0.8571429em;
}

.prose code {
color: #72787f;
font-weight: 600;
font-size: 0.875em;
}

.prose code::before {
content: "\`";
}

.prose code::after {
content: "\`";
}

.prose pre {
color: #1b1d1f;
background-color: #f7f8f9;
overflow-x: auto;
font-size: 0.875em;
line-height: 1.7142857;
margin-top: 1.7142857em;
margin-bottom: 1.7142857em;
border-radius: 0.375rem;
padding-top: 0.8571429em;
padding-right: 1.1428571em;
padding-bottom: 0.8571429em;
padding-left: 1.1428571em;
}

.prose pre code {
background-color: transparent;
border-width: 0;
border-radius: 0;
padding: 0;
font-weight: 400;
color: inherit;
font-size: inherit;
font-family: inherit;
line-height: inherit;
}

.prose pre code::before {
content: "";
}

.prose pre code::after {
content: "";
}

.prose table {
width: 100%;
table-layout: auto;
text-align: left;
margin-top: 2em;
margin-bottom: 2em;
font-size: 0.875em;
line-height: 1.7142857;
}

.prose thead {
color: #1a202c;
font-weight: 600;
border-bottom-width: 1px;
border-bottom-color: #9ea4aa;
}

.prose thead th {
vertical-align: bottom;
padding-right: 0.5714286em;
padding-bottom: 0.5714286em;
padding-left: 0.5714286em;
}

.prose tbody tr {
border-bottom-width: 1px;
border-bottom-color: #9ea4aa;
}

.prose tbody tr:last-child {
border-bottom-width: 0;
}

.prose tbody td {
vertical-align: top;
padding-top: 0.5714286em;
padding-right: 0.5714286em;
padding-bottom: 0.5714286em;
padding-left: 0.5714286em;
}

.prose {
font-size: 1rem;
line-height: 1.75;
}

.prose p {
margin-top: 1.25em;
margin-bottom: 1.25em;
}

.prose img {
margin-top: 2em;
margin-bottom: 2em;
max-width: 100%;
width: auto;
height: auto;
}

.prose video {
margin-top: 2em;
margin-bottom: 2em;
}

.prose figure {
margin-top: 2em;
margin-bottom: 2em;
}

.prose figure > * {
margin-top: 0;
margin-bottom: 0;
}

.prose h2 code {
font-size: 0.875em;
}

.prose h3 code {
font-size: 0.9em;
}

.prose ul {
margin-top: 1.25em;
margin-bottom: 1.25em;
}

.prose li {
margin-top: 0.5em;
margin-bottom: 0.5em;
}

.prose ol > li:before {
left: 0;
}

.prose > ul > li p {
margin-top: 0.75em;
margin-bottom: 0.75em;
}

.prose > ul > li > *:first-child {
margin-top: 1.25em;
}

.prose > ul > li > *:last-child {
margin-bottom: 1.25em;
}

.prose > ol > li > *:first-child {
margin-top: 1.25em;
}

.prose > ol > li > *:last-child {
margin-bottom: 1.25em;
}

.prose ul ul,
.prose ul ol,
.prose ol ul,
.prose ol ol {
margin-top: 0.75em;
margin-bottom: 0.75em;
}

.prose hr + * {
margin-top: 0;
}

.prose h2 + * {
margin-top: 0;
}

.prose h3 + * {
margin-top: 0;
}

.prose h4 + * {
margin-top: 0;
}

.prose thead th:first-child {
padding-left: 0;
}

.prose thead th:last-child {
padding-right: 0;
}

.prose tbody td:first-child {
padding-left: 0;
}

.prose tbody td:last-child {
padding-right: 0;
}

.prose > :first-child {
margin-top: 0;
}

.prose > :last-child {
margin-bottom: 0;
}

a.custom-link {
display: inline-flex;
height: 24px;
font-size: 12px;
margin: 0;
margin-bottom: 0px !important;
margin-top: 0px !important;
margin-left: 4px;
line-height: 16px;
letter-spacing: -0.4px;
vertical-align: baseline;
}
span.custom-link-inner {
transition: background-color 0.2s ease-in-out;
border-radius: 999px;
display: inline-flex;
color: #4d5053;
align-items: center;
gap: 4px;
padding: 2px;
}
a.custom-link:hover span.custom-link-inner {
background-color: #b8cfff;
}
img.favicon {
width: 12px;
height: 12px;
margin: 0;
margin-bottom: 0px !important;
margin-top: 0px !important;
}
#gu-app {
position: inherit;
width: inherit;
height: inherit;
}
`, { typography: rK, colors: aK } = br, iK = {
  typography: {
    ...rK
  },
  colors: {
    ...aK
  }
};
class oK extends HTMLElement {
  constructor() {
    super();
    tn(this, "shadow");
    tn(this, "root", null);
    this.shadow = this.attachShadow({ mode: "open" });
  }
  connectedCallback() {
    this.mount();
  }
  disconnectedCallback() {
    this.unmount();
  }
  setStyles() {
    const n = document.createElement("style"), r = document.createElement("link");
    r.href = "https://cdn.jsdelivr.net/gh/orioncactus/pretendard@v1.3.9/dist/web/variable/pretendardvariable-dynamic-subset.min.css", r.rel = "stylesheet", this.shadow.appendChild(r), n.textContent = nK, this.shadow.appendChild(n);
  }
  isMounted() {
    return this.root !== null;
  }
  mount() {
    this.setStyles(), this.root = pD.createRoot(this.shadow), this.root.render(
      /* @__PURE__ */ L.jsx(ot.StrictMode, { children: /* @__PURE__ */ L.jsx(WL, { client: hE, children: /* @__PURE__ */ L.jsx(c3, { target: this.shadow, children: /* @__PURE__ */ L.jsx(h3, { theme: iK, children: /* @__PURE__ */ L.jsx(tK, {}) }) }) }) })
    );
  }
  unmount() {
    this.root && (this.root.unmount(), this.root = null), this.shadow.innerHTML = "";
  }
  toggleMount() {
    this.isMounted() ? this.unmount() : this.mount();
  }
  toggleVisibility() {
    this.hidden = !this.hidden;
  }
  show() {
    this.hidden = !1;
  }
  hide() {
    this.hidden = !0;
  }
}
customElements.define("gu-app", oK);
window.TimelyChat = tR;
const dK = tR;
export {
  dK as default
};
